{"index.css":"/* css */","theme-color.js":"export let themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2dark', 'fluent2highcontrast'];\nexport let borderColor = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449'];\nexport let loadChartTheme = (args, isGradient) => {\n    let selectedTheme = location.hash.split('/')[1] || 'Tailwind3';\n    let theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1))\n        .replace(/-dark/i, 'Dark')\n        .replace(/contrast/i, 'Contrast')\n        .replace(/-highContrast/i, 'HighContrast');\n    if (args) {\n        args.chart.theme = theme;\n        return isGradient ? selectedTheme : args.chart.theme;\n    }\n    if (isGradient && !args) {\n        return selectedTheme;\n    }\n};\nexport let loadAccumulationChartTheme = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (args) {\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/light/i, \"Light\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        return args.chart.theme;\n    }\n    else {\n        return selectedTheme;\n    }\n};\nexport let layoutColor;\nexport let accPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    let layoutColor;\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n            layoutColor = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n            layoutColor = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n            layoutColor = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n            layoutColor = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n            layoutColor = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n            layoutColor = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n            layoutColor = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n            layoutColor = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n        layoutColor = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n        layoutColor = '#FFFFFF';\n    }\n    if (selectedTheme.indexOf('highcontrast') > -1 || selectedTheme.indexOf('dark') > -1) {\n        let columnHeaderElement = document.querySelector('#header1');\n        columnHeaderElement.style.color = '#F3F2F1';\n        let pieHeaderElement = document.querySelector('#header2');\n        pieHeaderElement.style.color = '#F3F2F1';\n        let splineHeaderElement = document.querySelector('#header3');\n        splineHeaderElement.style.color = '#F3F2F1';\n    }\n    let columnLayoutTemplate = document.querySelector('#layout_0template');\n    columnLayoutTemplate.style.background = layoutColor;\n    let columnLayout = document.querySelector('#layout_0_body');\n    columnLayout.style.background = layoutColor;\n    let pieLayoutTemplate = document.querySelector('#layout_1template');\n    pieLayoutTemplate.style.background = layoutColor;\n    let pieLayout = document.querySelector('#layout_1_body');\n    pieLayout.style.background = layoutColor;\n    let splineLayoutTemplate = document.querySelector('#layout_2template');\n    splineLayoutTemplate.style.background = layoutColor;\n    let splineLayout = document.querySelector('#layout_2_body');\n    splineLayout.style.background = layoutColor;\n};\nexport let accpatternPointRender = (args) => {\n    if (args.point.index == 0) {\n        args.pattern = 'DiagonalBackward';\n    }\n    else if (args.point.index == 1) {\n        args.pattern = 'DiagonalForward';\n    }\n    else if (args.point.index == 2) {\n        args.pattern = 'HorizontalStripe';\n    }\n    else if (args.point.index == 3) {\n        args.pattern = 'VerticalStripe';\n    }\n    else if (args.point.index == 4) {\n        args.pattern = 'HorizontalDash';\n    }\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nlet seriesColor = ['#FFE066', \"#FAB666\", \"#F68F6A\", \"#F3646A\", \"#CC555A\", \"#9C4649\"];\nexport let donutPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme === 'fluent') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else if (selectedTheme.indexOf('fluent2') > -1) {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexport let roundedCornnerPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexport let pointRenderEvent = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[args.point.index % pointBootstrap5DarkColors.length];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[args.point.index % pointBootstrap5Colors.length];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    }\n    ;\n};\nexport let bubblePointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = bubbleFabricColors[args.point.index % 10];\n        args.border.color = pointFabricColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = bubbleMaterialDarkColors[args.point.index % 10];\n        args.border.color = pointMaterialDarkColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = bubbleMaterialColors[args.point.index % 10];\n        args.border.color = pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = bubbleBootstrap5DarkColors[args.point.index % 10];\n        args.border.color = pointBootstrap5DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = bubbleBootstrap5Colors[args.point.index % 10];\n        args.border.color = pointBootstrap5Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = bubbleHighContrastColors[args.point.index % 10];\n        args.border.color = pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = bubbleFluentDarkColors[args.point.index % 10];\n        args.border.color = pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = bubbleFluentColors[args.point.index % 10];\n        args.border.color = pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = bubbleTailwindDarkColors[args.point.index % 10];\n        args.border.color = pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = bubbleTailwindColors[args.point.index % 10];\n        args.border.color = pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = bubbleMaterial3Colors[args.point.index % 10];\n        args.border.color = pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = bubbleMaterial3DarkColors[args.point.index % 10];\n        args.border.color = pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = bubbleFluent2Colors[args.point.index % 10];\n        args.border.color = pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast') {\n        args.fill = bubbleFluent2HighContrastColors[args.point.index % 10];\n        args.border.color = pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-dark') {\n        args.fill = bubbleFluent2DarkColors[args.point.index % 10];\n        args.border.color = pointFluent2DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = bubbleTailwind3DarkColors[args.point.index % 10];\n        args.border.color = pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = bubbleTailwind3Colors[args.point.index % 10];\n        args.border.color = pointTailwind3Colors[args.point.index % 10];\n    }\n};\nexport let roundedPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'highcontrast') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent2') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n};\nexport let funnelPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[0];\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[0];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[0];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[0];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[0];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[0];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[0];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[0];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[0];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[0];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[0];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[0];\n    }\n    ;\n};\nexport let materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nexport let fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nexport let bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexport let highContrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\nexport let fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let bootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\nexport let bootstrap5DarkColors = ['#8F80F4', '#FFD46D', '#6CBDFF', '#FF7F71', '#FF6DB3', '#63F5D2', '#FCAA65', '#ECFF77', '#EF8EFF',\n    '#5F82FD'];\nexport let bubbleMaterialColors = [\"rgba(0, 189, 174, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n    \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\nexport let bubbleFabricColors = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n    \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\nexport let bubbleBootstrapColors = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n    \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\nexport let bubbleHighContrastColors = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n    \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\nexport let bubbleFluentColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleMaterialDarkColors = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n    \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\nexport let bubbleFluentDarkColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleTailwindColors = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\nexport let bubbleTailwindDarkColors = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\nexport let bubbleTailwind3Colors = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\nexport let bubbleTailwind3DarkColors = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\nexport let bubbleBootstrap5Colors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleBootstrap5DarkColors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleMaterial3Colors = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\",\n    \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\nexport let bubbleMaterial3DarkColors = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\",\n    \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\nexport let bubbleFluent2DarkColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let keyFabricDark = [\"#4472C4\", \"#ED7D31\", \"#FFC000\", \"#70AD47\"];\nexport let keyBootstrap4Colors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6', '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexport let keyBootstrapdarkColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nexport let pointMaterialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let pointFabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n    \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let pointBootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n    \"#b91c52\"];\nexport let pointHighContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n    \"#D8BC6E\"];\nexport let pointFluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let pointMaterialDarkColors = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n    \"#F7C928\"];\nexport let pointFluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\nexport let pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nexport let pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nexport let pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nexport let pointBootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0'];\nexport let pointBootstrap5DarkColors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0'];\nexport let pointMaterial3Colors = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\nexport let pointMaterial3DarkColors = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\nexport let fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let fluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let bubbleFluent2Colors = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n    \"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2HighContrastColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let pointFluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let pointFluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let pointFluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\", \"#0B6A0B\", \"#C19C00\"];\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Area series with empty points\n */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Tooltip, DateTime, MultiColoredLineSeries, Highlight } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\nimport { loadChartTheme } from './theme-color';\nexport let multiColoredLineData = [\n    { x: new Date(1895, 0, 1), y: 26.69 },\n    { x: new Date(1896, 0, 1), y: 31.48 },\n    { x: new Date(1897, 0, 1), y: 28.17 },\n    { x: new Date(1898, 0, 1), y: 30.67 },\n    { x: new Date(1899, 0, 1), y: 29.68 },\n    { x: new Date(1900, 0, 1), y: 34.11 },\n    { x: new Date(1901, 0, 1), y: 31.62 },\n    { x: new Date(1902, 0, 1), y: 30.06 },\n    { x: new Date(1903, 0, 1), y: 30.88 },\n    { x: new Date(1904, 0, 1), y: 27.55 },\n    { x: new Date(1905, 0, 1), y: 27.12 },\n    { x: new Date(1906, 0, 1), y: 32.88 },\n    { x: new Date(1907, 0, 1), y: 30.7 },\n    { x: new Date(1908, 0, 1), y: 32.45 },\n    { x: new Date(1909, 0, 1), y: 32.31 },\n    { x: new Date(1910, 0, 1), y: 29.61 },\n    { x: new Date(1911, 0, 1), y: 32.9 },\n    { x: new Date(1912, 0, 1), y: 24.76 },\n    { x: new Date(1913, 0, 1), y: 30.47 },\n    { x: new Date(1914, 0, 1), y: 34.5 },\n    { x: new Date(1915, 0, 1), y: 28.44 },\n    { x: new Date(1916, 0, 1), y: 28.22 },\n    { x: new Date(1917, 0, 1), y: 28.27 },\n    { x: new Date(1918, 0, 1), y: 23.88 },\n    { x: new Date(1919, 0, 1), y: 31.82 },\n    { x: new Date(1920, 0, 1), y: 29.23 },\n    { x: new Date(1921, 0, 1), y: 34.36 },\n    { x: new Date(1922, 0, 1), y: 26.8 },\n    { x: new Date(1923, 0, 1), y: 34.59 },\n    { x: new Date(1924, 0, 1), y: 26.26 },\n    { x: new Date(1925, 0, 1), y: 29.1 },\n    { x: new Date(1926, 0, 1), y: 30.33 },\n    { x: new Date(1927, 0, 1), y: 31.55 },\n    { x: new Date(1928, 0, 1), y: 31.98 },\n    { x: new Date(1929, 0, 1), y: 26.33 },\n    { x: new Date(1930, 0, 1), y: 23.56 },\n    { x: new Date(1931, 0, 1), y: 32.99 },\n    { x: new Date(1932, 0, 1), y: 31.55 },\n    { x: new Date(1933, 0, 1), y: 34.3 },\n    { x: new Date(1934, 0, 1), y: 35.08 },\n    { x: new Date(1935, 0, 1), y: 31.51 },\n    { x: new Date(1936, 0, 1), y: 27.36 },\n    { x: new Date(1937, 0, 1), y: 24.84 },\n    { x: new Date(1938, 0, 1), y: 32.14 },\n    { x: new Date(1939, 0, 1), y: 33.91 },\n    { x: new Date(1940, 0, 1), y: 23.83 },\n    { x: new Date(1941, 0, 1), y: 32.2 },\n    { x: new Date(1942, 0, 1), y: 29.84 },\n    { x: new Date(1943, 0, 1), y: 29.41 },\n    { x: new Date(1944, 0, 1), y: 32.02 },\n    { x: new Date(1945, 0, 1), y: 30.49 },\n    { x: new Date(1946, 0, 1), y: 31.39 },\n    { x: new Date(1947, 0, 1), y: 31.78 },\n    { x: new Date(1948, 0, 1), y: 27.88 },\n    { x: new Date(1949, 0, 1), y: 25.92 },\n    { x: new Date(1950, 0, 1), y: 30.43 },\n    { x: new Date(1951, 0, 1), y: 30.2 },\n    { x: new Date(1952, 0, 1), y: 32.0 },\n    { x: new Date(1953, 0, 1), y: 36.43 },\n    { x: new Date(1954, 0, 1), y: 30.9 },\n    { x: new Date(1955, 0, 1), y: 29.35 },\n    { x: new Date(1956, 0, 1), y: 31.01 },\n    { x: new Date(1957, 0, 1), y: 27.07 },\n    { x: new Date(1958, 0, 1), y: 31.6 },\n    { x: new Date(1959, 0, 1), y: 29.5 },\n    { x: new Date(1960, 0, 1), y: 29.46 },\n    { x: new Date(1961, 0, 1), y: 29.71 },\n    { x: new Date(1962, 0, 1), y: 26.96 },\n    { x: new Date(1963, 0, 1), y: 24.44 },\n    { x: new Date(1964, 0, 1), y: 31.53 },\n    { x: new Date(1965, 0, 1), y: 31.8 },\n    { x: new Date(1966, 0, 1), y: 26.38 },\n    { x: new Date(1967, 0, 1), y: 33.1 },\n    { x: new Date(1968, 0, 1), y: 28.94 },\n    { x: new Date(1969, 0, 1), y: 29.37 },\n    { x: new Date(1970, 0, 1), y: 27.16 },\n    { x: new Date(1971, 0, 1), y: 29.41 },\n    { x: new Date(1972, 0, 1), y: 29.93 },\n    { x: new Date(1973, 0, 1), y: 29.59 },\n    { x: new Date(1974, 0, 1), y: 31.01 },\n    { x: new Date(1975, 0, 1), y: 32.34 },\n    { x: new Date(1976, 0, 1), y: 29.93 },\n    { x: new Date(1977, 0, 1), y: 23.09 },\n    { x: new Date(1978, 0, 1), y: 25.86 },\n    { x: new Date(1979, 0, 1), y: 21.92 },\n    { x: new Date(1980, 0, 1), y: 31.12 },\n    { x: new Date(1981, 0, 1), y: 32.41 },\n    { x: new Date(1982, 0, 1), y: 26.22 },\n    { x: new Date(1983, 0, 1), y: 33.12 },\n    { x: new Date(1984, 0, 1), y: 28.83 },\n    { x: new Date(1985, 0, 1), y: 26.31 },\n    { x: new Date(1986, 0, 1), y: 34.68 },\n    { x: new Date(1987, 0, 1), y: 31.44 },\n    { x: new Date(1988, 0, 1), y: 27.79 },\n    { x: new Date(1989, 0, 1), y: 34.09 },\n    { x: new Date(1990, 0, 1), y: 36.48 },\n    { x: new Date(1991, 0, 1), y: 29.5 },\n    { x: new Date(1992, 0, 1), y: 33.62 },\n    { x: new Date(1993, 0, 1), y: 30.47 },\n    { x: new Date(1994, 0, 1), y: 29.34 },\n    { x: new Date(1995, 0, 1), y: 33.08 },\n    { x: new Date(1996, 0, 1), y: 29.7 },\n    { x: new Date(1997, 0, 1), y: 29.97 },\n    { x: new Date(1998, 0, 1), y: 34.99 },\n    { x: new Date(1999, 0, 1), y: 33.78 },\n    { x: new Date(2000, 0, 1), y: 33.57 },\n    { x: new Date(2001, 0, 1), y: 31.37 },\n    { x: new Date(2002, 0, 1), y: 34.48 },\n    { x: new Date(2003, 0, 1), y: 32.81 },\n    { x: new Date(2004, 0, 1), y: 30.36 },\n    { x: new Date(2005, 0, 1), y: 33.39 },\n    { x: new Date(2006, 0, 1), y: 38.93 },\n    { x: new Date(2007, 0, 1), y: 31.35 },\n    { x: new Date(2008, 0, 1), y: 30.27 },\n    { x: new Date(2009, 0, 1), y: 31.05 },\n    { x: new Date(2010, 0, 1), y: 30.67 },\n    { x: new Date(2011, 0, 1), y: 29.71 },\n    { x: new Date(2012, 0, 1), y: 36.12 },\n    { x: new Date(2013, 0, 1), y: 32.25 },\n    { x: new Date(2014, 0, 1), y: 30.56 },\n    { x: new Date(2015, 0, 1), y: 33.08 },\n    { x: new Date(2016, 0, 1), y: 32.22 },\n    { x: new Date(2017, 0, 1), y: 33.57 },\n    { x: new Date(2018, 0, 1), y: 32.16 },\n    { x: new Date(2019, 0, 1), y: 32.56 },\n    { x: new Date(2020, 0, 1), y: 35.53 },\n    { x: new Date(2021, 0, 1), y: 34.59 },\n    { x: new Date(2022, 0, 1), y: 31.17 },\n    { x: new Date(2023, 0, 1), y: 35.08 },\n    { x: new Date(2024, 0, 1), y: 31.89 },\n    { x: new Date(2025, 0, 1), y: 29.23 }\n];\nlet colors = ['red', 'green', '#ff0097', 'crimson', 'blue', 'darkorange', 'deepskyblue', 'mediumvioletred', 'violet', 'peru', 'gray', 'deeppink', 'navy'];\nmultiColoredLineData = multiColoredLineData.map((value, index) => ({\n    ...value,\n    color: colors[Math.floor(index / 10)]\n}));\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\n/**\n * Area empty sample\n */\nconst LineMultiLine = () => {\n    const onChartLoad = (args) => {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    };\n    const load = (args) => {\n        loadChartTheme(args);\n    };\n    return (<div className=\"control-pane\">\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <ChartComponent id=\"charts\" style={{ textAlign: 'center' }} primaryXAxis={{ valueType: 'DateTime', labelFormat: 'y', intervalType: 'Years', minimum: new Date(1895, 0, 1), maximum: new Date(2025, 0, 1), edgeLabelPlacement: 'Shift', majorGridLines: { width: 0 } }} primaryYAxis={{ labelFormat: '{value}°F', minimum: 20, maximum: 40, interval: 4, title: 'Mean Temperature (°F)', lineStyle: { width: 0 }, majorTickLines: { width: 0 }, minorTickLines: { width: 0 } }} tooltip={{ enable: true, showNearestTooltip: true, enableAnimation: false, header: '<b>Year: ${point.x}</b>', format: 'Avg Temp : <b>${point.y}</b>', enableHighlight: true }} legendSettings={{ visible: false }} chartArea={{ border: { width: 0 } }} load={load.bind(this)} width={Browser.isDevice ? '100%' : '75%'} title=\"U.S. Historical Average Temperature (1895–2025)\" subTitle='Source: ncei.noaa.gov' loaded={onChartLoad.bind(this)}>\n                    <Inject services={[MultiColoredLineSeries, DateTime, Tooltip, Highlight]}/>\n                    <SeriesCollectionDirective>\n                        <SeriesDirective dataSource={multiColoredLineData} width={1.5} xName=\"x\" yName=\"y\" type=\"MultiColoredLine\" pointColorMapping=\"color\"></SeriesDirective>\n                    </SeriesCollectionDirective>\n                </ChartComponent>\n            </div>\n        </div>);\n};\nexport default LineMultiLine;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<LineMultiLine />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}