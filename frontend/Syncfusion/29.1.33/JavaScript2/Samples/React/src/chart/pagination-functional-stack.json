{"index.css":"/* css */","theme-color.js":"export let themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2dark', 'fluent2highcontrast'];\nexport let borderColor = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449'];\nexport let loadChartTheme = (args, isGradient) => {\n    let selectedTheme = location.hash.split('/')[1] || 'Tailwind3';\n    let theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1))\n        .replace(/-dark/i, 'Dark')\n        .replace(/contrast/i, 'Contrast')\n        .replace(/-highContrast/i, 'HighContrast');\n    if (args) {\n        args.chart.theme = theme;\n        return isGradient ? selectedTheme : args.chart.theme;\n    }\n    if (isGradient && !args) {\n        return selectedTheme;\n    }\n};\nexport let loadAccumulationChartTheme = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (args) {\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/light/i, \"Light\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        return args.chart.theme;\n    }\n    else {\n        return selectedTheme;\n    }\n};\nexport let layoutColor;\nexport let accPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    let layoutColor;\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n            layoutColor = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n            layoutColor = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n            layoutColor = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n            layoutColor = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n            layoutColor = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n            layoutColor = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n            layoutColor = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n            layoutColor = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n        layoutColor = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n        layoutColor = '#FFFFFF';\n    }\n    if (selectedTheme.indexOf('highcontrast') > -1 || selectedTheme.indexOf('dark') > -1) {\n        let columnHeaderElement = document.querySelector('#header1');\n        columnHeaderElement.style.color = '#F3F2F1';\n        let pieHeaderElement = document.querySelector('#header2');\n        pieHeaderElement.style.color = '#F3F2F1';\n        let splineHeaderElement = document.querySelector('#header3');\n        splineHeaderElement.style.color = '#F3F2F1';\n    }\n    let columnLayoutTemplate = document.querySelector('#layout_0template');\n    columnLayoutTemplate.style.background = layoutColor;\n    let columnLayout = document.querySelector('#layout_0_body');\n    columnLayout.style.background = layoutColor;\n    let pieLayoutTemplate = document.querySelector('#layout_1template');\n    pieLayoutTemplate.style.background = layoutColor;\n    let pieLayout = document.querySelector('#layout_1_body');\n    pieLayout.style.background = layoutColor;\n    let splineLayoutTemplate = document.querySelector('#layout_2template');\n    splineLayoutTemplate.style.background = layoutColor;\n    let splineLayout = document.querySelector('#layout_2_body');\n    splineLayout.style.background = layoutColor;\n};\nexport let accpatternPointRender = (args) => {\n    if (args.point.index == 0) {\n        args.pattern = 'DiagonalBackward';\n    }\n    else if (args.point.index == 1) {\n        args.pattern = 'DiagonalForward';\n    }\n    else if (args.point.index == 2) {\n        args.pattern = 'HorizontalStripe';\n    }\n    else if (args.point.index == 3) {\n        args.pattern = 'VerticalStripe';\n    }\n    else if (args.point.index == 4) {\n        args.pattern = 'HorizontalDash';\n    }\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nlet seriesColor = ['#FFE066', \"#FAB666\", \"#F68F6A\", \"#F3646A\", \"#CC555A\", \"#9C4649\"];\nexport let donutPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme === 'fluent') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else if (selectedTheme.indexOf('fluent2') > -1) {\n        args.fill = seriesColor[args.point.index % 10];\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexport let roundedCornnerPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme.indexOf('dark') > -1) {\n        if (selectedTheme.indexOf('material') > -1) {\n            args.border.color = '#303030';\n        }\n        else if (selectedTheme.indexOf('bootstrap5') > -1) {\n            args.border.color = '#212529';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('fabric') > -1) {\n            args.border.color = '#201f1f';\n        }\n        else if (selectedTheme.indexOf('fluent') > -1) {\n            args.border.color = '#252423';\n        }\n        else if (selectedTheme.indexOf('bootstrap') > -1) {\n            args.border.color = '#1A1A1A';\n        }\n        else if (selectedTheme.indexOf('tailwind') > -1) {\n            args.border.color = '#1F2937';\n        }\n        else {\n            args.border.color = '#222222';\n        }\n    }\n    else if (selectedTheme.indexOf('highcontrast') > -1) {\n        args.border.color = '#000000';\n    }\n    else {\n        args.border.color = '#FFFFFF';\n    }\n};\nexport let pointRenderEvent = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[args.point.index % pointBootstrap5DarkColors.length];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[args.point.index % pointBootstrap5Colors.length];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[args.point.index % pointBootstrapColors.length];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    }\n    ;\n};\nexport let bubblePointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = bubbleFabricColors[args.point.index % 10];\n        args.border.color = pointFabricColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = bubbleMaterialDarkColors[args.point.index % 10];\n        args.border.color = pointMaterialDarkColors[args.point.index % 10];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = bubbleMaterialColors[args.point.index % 10];\n        args.border.color = pointMaterialColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = bubbleBootstrap5DarkColors[args.point.index % 10];\n        args.border.color = pointBootstrap5DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = bubbleBootstrap5Colors[args.point.index % 10];\n        args.border.color = pointBootstrap5Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = bubbleBootstrapColors[args.point.index % 10];\n        args.border.color = pointBootstrapColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = bubbleHighContrastColors[args.point.index % 10];\n        args.border.color = pointHighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = bubbleFluentDarkColors[args.point.index % 10];\n        args.border.color = pointFluentDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = bubbleFluentColors[args.point.index % 10];\n        args.border.color = pointFluentColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = bubbleTailwindDarkColors[args.point.index % 10];\n        args.border.color = pointTailwindDarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = bubbleTailwindColors[args.point.index % 10];\n        args.border.color = pointTailwindColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = bubbleMaterial3Colors[args.point.index % 10];\n        args.border.color = pointMaterial3Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = bubbleMaterial3DarkColors[args.point.index % 10];\n        args.border.color = pointMaterial3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = bubbleFluent2Colors[args.point.index % 10];\n        args.border.color = pointFluent2Colors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast') {\n        args.fill = bubbleFluent2HighContrastColors[args.point.index % 10];\n        args.border.color = pointFluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'fluent2-dark') {\n        args.fill = bubbleFluent2DarkColors[args.point.index % 10];\n        args.border.color = pointFluent2DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = bubbleTailwind3DarkColors[args.point.index % 10];\n        args.border.color = pointTailwind3DarkColors[args.point.index % 10];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = bubbleTailwind3Colors[args.point.index % 10];\n        args.border.color = pointTailwind3Colors[args.point.index % 10];\n    }\n};\nexport let roundedPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'bootstrap') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'highcontrast') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'material3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"f9fafb\";\n    }\n    else if (selectedTheme === 'material3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'fluent2') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"#f9fafb\";\n    }\n    else if (selectedTheme === 'tailwind3') {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n    else {\n        if (args.series.yName == \"Rate\")\n            args.fill = \"grey\";\n    }\n};\nexport let funnelPointRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = pointFabricColors[0];\n    }\n    else if (selectedTheme === 'material-dark') {\n        args.fill = pointMaterialDarkColors[0];\n        ;\n    }\n    else if (selectedTheme === 'material') {\n        args.fill = pointMaterialColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5-dark') {\n        args.fill = pointBootstrap5DarkColors[0];\n    }\n    else if (selectedTheme === 'bootstrap5') {\n        args.fill = pointBootstrap5Colors[0];\n    }\n    else if (selectedTheme === 'bootstrap') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap4') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'bootstrap-dark') {\n        args.fill = pointBootstrapColors[0];\n    }\n    else if (selectedTheme === 'highcontrast') {\n        args.fill = pointHighContrastColors[0];\n    }\n    else if (selectedTheme === 'fluent-dark') {\n        args.fill = pointFluentDarkColors[0];\n    }\n    else if (selectedTheme === 'fluent') {\n        args.fill = pointFluentColors[0];\n    }\n    else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[0];\n    }\n    else if (selectedTheme === 'material3-dark') {\n        args.fill = pointMaterial3DarkColors[0];\n    }\n    else if (selectedTheme === 'material3') {\n        args.fill = pointMaterial3Colors[0];\n    }\n    else if (selectedTheme === 'fluent2') {\n        args.fill = pointFluent2Colors[0];\n    }\n    else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = pointFluent2HighContrastColors[0];\n    }\n    else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[0];\n    }\n    else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[0];\n    }\n    ;\n};\nexport let materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nexport let fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nexport let bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexport let highContrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\nexport let fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let bootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0', '#FD7E14', '#6610F2'];\nexport let bootstrap5DarkColors = ['#8F80F4', '#FFD46D', '#6CBDFF', '#FF7F71', '#FF6DB3', '#63F5D2', '#FCAA65', '#ECFF77', '#EF8EFF',\n    '#5F82FD'];\nexport let bubbleMaterialColors = [\"rgba(0, 189, 174, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(53, 124, 210, 0.5)\", \"rgba(229, 101, 144, 0.5)\", \"rgba(248, 184, 131, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(221, 138, 189, 0.5)\",\n    \"rgba(127, 132, 232, 0.5)\", \"rgba(123, 180, 235, 0.5)\", \"rgba(234, 122, 87, 0.5)\", \"rgba(64, 64, 65, 0.5)\", \"rgba(0, 189, 174, 0.5)\"];\nexport let bubbleFabricColors = [\"rgba(68, 114, 196, 0.5)\", \"rgba(237, 125, 49, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(91, 155, 213, 0.5)\", \"rgba(193, 193, 193, 0.5)\", \"rgba(111, 111, 226, 0.5)\",\n    \"rgba(226, 105, 174, 0.5)\", \"rgba(158, 72, 14, 0.5)\", \"rgba(153, 115, 0, 0.5)\", \"rgba(68, 114, 196, 0.5)\", \"rgba(112, 173, 71, 0.5)\", \"rgba(255, 192, 0, 0.5)\", \"rgba(237, 125, 49, 0.5)\"];\nexport let bubbleBootstrapColors = [\"rgba(161, 110, 229, 0.5)\", \"rgba(247, 206, 105, 0.5)\", \"rgba(85, 165, 194, 0.5)\", \"rgba(125, 223, 30, 0.5)\", \"rgba(255, 110, 166, 0.5)\", \"rgba(121, 83, 172, 0.5)\",\n    \"rgba(185, 155, 79, 0.5)\", \"rgba(64, 124, 146, 0.5)\", \"rgba(94, 167, 22, 0.5)\", \"rgba(185, 28, 82, 0.5)\"];\nexport let bubbleHighContrastColors = [\"rgba(121, 236, 228, 0.5)\", \"rgba(233, 130, 114, 0.5)\", \"rgba(223, 230, 182, 0.5)\", \"rgba(198, 231, 115, 0.5)\", \"rgba(186, 152, 255, 0.5)\", \"rgba(250, 131, 195, 0.5)\", \"rgba(0, 194, 122, 0.5)\",\n    \"rgba(67, 172, 239, 0.5)\", \"rgba(214, 129, 239, 0.5)\", \"rgba(216, 188, 110, 0.5)\"];\nexport let bubbleFluentColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleMaterialDarkColors = [\"rgba(158, 203, 8, 0.5)\", \"rgba(86, 174, 255, 0.5)\", \"rgba(197, 122, 255, 0.5)\", \"rgba(97, 234, 169, 0.5)\", \"rgba(235, 187, 62, 0.5)\", \"rgba(244, 92, 92, 0.5)\", \"rgba(138, 119, 255, 0.5)\",\n    \"rgba(99, 199, 255, 0.5)\", \"rgba(255, 132, 176, 0.5)\", \"rgba(247, 201, 40, 0.5)\"];\nexport let bubbleFluentDarkColors = [\"rgba(26, 201, 230, 0.5)\", \"rgba(218, 76, 178, 0.5)\", \"rgba(237, 187, 64, 0.5)\", \"rgba(175, 75, 207, 0.5)\", \"rgba(255, 114, 102, 0.5)\", \"rgba(27, 213, 101, 0.5)\", \"rgba(238, 153, 61, 0.5)\",\n    \"rgba(88, 135, 255, 0.5)\", \"rgba(236, 84, 141, 0.5)\", \"rgba(125, 57, 192, 0.5)\"];\nexport let bubbleTailwindColors = [\"rgba(90, 97, 246, 0.5)\", \"rgba(101, 163, 13, 0.5)\", \"rgba(51, 65, 85, 0.5)\", \"rgba(20, 184, 166, 0.5)\", \"rgba(139, 92, 246, 0.5)\", \"rgba(3, 105, 161, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(147, 51, 234, 0.5)\", \"rgba(245, 158, 11, 0.5)\", \"rgba(21, 128, 61, 0.5)\"];\nexport let bubbleTailwindDarkColors = [\"rgba(139, 92, 246, 0.5)\", \"rgba(34, 211, 238, 0.5)\", \"rgba(248, 113, 113, 0.5)\", \"rgba(74, 222, 128, 0.5)\", \"rgba(232, 121, 249, 0.5)\", \"rgba(252, 211, 77, 0.5)\", \"rgba(249, 115, 22, 0.5)\",\n    \"rgba(45, 212, 191, 0.5)\", \"rgba(244, 114, 182, 0.5)\", \"rgba(16, 185, 129, 0.5)\"];\nexport let bubbleTailwind3Colors = [\"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(47, 64, 116, 0.5)\", \"rgba(3, 180, 180, 0.5)\"];\nexport let bubbleTailwind3DarkColors = [\"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\", \"rgba(13, 114, 222, 0.5)\", \"rgba(255, 87, 51, 0.5)\", \"rgba(214, 51, 132, 0.5)\", \"rgba(243, 156, 18, 0.5)\", \"rgba(239, 41, 31, 0.5)\", \"rgba(145, 200, 34, 0.5)\", \"rgba(128, 41, 241, 0.5)\", \"rgba(26, 188, 156, 0.5)\"];\nexport let bubbleBootstrap5Colors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleBootstrap5DarkColors = ['rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)', 'rgba(255, 193, 7, 0.5)', 'rgba(25, 135, 84, 0.5)', 'rgba(13, 202, 240, 0.5)', 'rgba(253, 126, 20, 0.5)', 'rgba(102, 16, 242, 0.5)', 'rgba(111, 66, 193, 0.5)', 'rgba(214, 51, 132, 0.5)', 'rgba(220, 53, 69, 0.5)'];\nexport let bubbleMaterial3Colors = [\"rgba(99, 85, 199, 0.5)\", \"rgba(0, 174, 224, 0.5)\", \"rgba(255, 180, 0, 0.5)\", \"rgba(247, 82, 63, 0.5)\", \"rgba(150, 60, 112, 0.5)\", \"rgba(253, 116, 0, 0.5)\", \"rgba(75, 224, 188, 0.5)\",\n    \"rgba(33, 150, 245, 0.5)\", \"rgba(222, 61, 138, 0.5)\", \"rgba(22, 47, 136, 0.5)\"];\nexport let bubbleMaterial3DarkColors = [\"rgba(78, 170, 255, 0.5)\", \"rgba(250, 78, 171, 0.5)\", \"rgba(255, 245, 0, 0.5)\", \"rgba(23, 234, 88, 0.5)\", \"rgba(56, 255, 231, 0.5)\", \"rgba(255, 158, 69, 0.5)\", \"rgba(179, 243, 47, 0.5)\",\n    \"rgba(185, 60, 228, 0.5)\", \"rgba(252, 86, 100, 0.5)\", \"rgba(155, 85, 255, 0.5)\"];\nexport let bubbleFluent2DarkColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let keyFabricDark = [\"#4472C4\", \"#ED7D31\", \"#FFC000\", \"#70AD47\"];\nexport let keyBootstrap4Colors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6', '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexport let keyBootstrapdarkColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nexport let pointMaterialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nexport let pointFabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\", \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\",\n    \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nexport let pointBootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\", \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\",\n    \"#b91c52\"];\nexport let pointHighContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\", \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\",\n    \"#D8BC6E\"];\nexport let pointFluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let pointMaterialDarkColors = [\"#9ECB08\", \"#56AEFF\", \"#C57AFF\", \"#61EAA9\", \"#EBBB3E\", \"#F45C5C\", \"#8A77FF\", \"#63C7FF\", \"#FF84B0\",\n    \"#F7C928\"];\nexport let pointFluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',\n    '#7D39C0'];\nexport let pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\nexport let pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nexport let pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nexport let pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nexport let pointBootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0'];\nexport let pointBootstrap5DarkColors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545', '#FFC107', '#198754', '#0DCAF0'];\nexport let pointMaterial3Colors = [\"#6355C7\", \"#00AEE0\", \"#FFB400\", \"#F7523F\", \"#963C70\", \"#FD7400\", \"#4BE0BC\", \"#2196F5\", \"#DE3D8A\", \"#162F88\"];\nexport let pointMaterial3DarkColors = [\"#4EAAFF\", \"#FA4EAB\", \"#FFF500\", \"#17EA58\", \"#38FFE7\", \"#FF9E45\", \"#B3F32F\", \"#B93CE4\", \"#FC5664\", \"#9B55FF\"];\nexport let fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let fluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let bubbleFluent2Colors = [\"rgba(98, 0, 238, 0.5)\", \"rgba(9, 175, 116, 0.5)\", \"rgba(0, 118, 229, 0.5)\", \"rgba(203, 53, 135, 0.5)\", \"rgba(231, 145, 15, 0.5)\", \"rgba(3, 100, 222, 0.5)\", \"rgba(102, 205, 21, 0.5)\", \"rgba(243, 169, 60, 0.5)\",\n    \"rgba(16, 124, 16, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let bubbleFluent2HighContrastColors = [\"rgba(155, 180, 73, 0.5)\", \"rgba(42, 114, 213, 0.5)\", \"rgba(67, 183, 134, 0.5)\", \"rgba(63, 87, 154, 0.5)\", \"rgba(88, 78, 198, 0.5)\", \"rgba(232, 95, 156, 0.5)\", \"rgba(110, 122, 137, 0.5)\", \"rgba(234, 98, 102, 0.5)\",\n    \"rgba(11, 106, 11, 0.5)\", \"rgba(193, 156, 0, 0.5)\"];\nexport let pointFluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nexport let pointFluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nexport let pointFluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\", \"#0B6A0B\", \"#C19C00\"];\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect, useRef } from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, SplineAreaSeries, Tooltip, Zoom, DataLabel, ChartAnnotation, AnnotationsDirective, AnnotationDirective, Category } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\nimport { loadChartTheme } from './theme-color';\nconst SAMPLE_CSS = `\n#control-container {\n    padding: 0px !important;\n}\n#chart-button-container {\n    padding: 5px;\n    width: 75%;\n    background-color: rgb(237, 236, 236);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 10px;\n    margin: auto;\n}\n.chart-custom-button {\n    flex-grow: 1;\n    flex-basis: 0;\n    height: 35%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: none;\n    border-radius: 5px;\n    justify-content: center;\n    background-color: rgb(237, 236, 236);\n    cursor: pointer;\n    transition: background-color 0.3s, box-shadow 0.3s;\n    position: relative;\n}\n.chart-custom-button:not(:last-child):not(.active)::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n    width: 2px;\n    height: 80%;\n    background-color: rgba(0, 0, 0, 0.2);\n}\n.chart-custom-button.no-line::after {\n    display: none;\n}\n.chart-custom-button img {\n    width: 30px;\n    height: 30px;\n}\n\n.day,\n.temp {\n    font-size: 13px;\n}\n.light-theme-bg {\n  background-color: rgb(237, 236, 236) !important;\n}\n\n.light-theme-bg.active {\n  background-color: white !important;\n}\n\n.light-theme-bg:hover {\n  background-color: #dbdada !important;\n}\n\n.dark-theme-bg {\n  background-color: #333 !important;\n}\n\n.dark-theme-bg.active {\n  background-color: #7b7b7b !important;\n  box-shadow: 0 0 0 2px #7b7b7b !important;\n}\n\n.dark-theme-bg:hover {\n  background-color: #7b7b7b !important;\n}\n.chart-custom-button.active {\n    box-shadow: 0 0 0 2px rgb(237, 236, 236);\n    z-index: 2;\n}\n  \n#material-gradient-chart stop {\n    stop-color: #00bdae;\n}\n\n#fabric-gradient-chart stop {\n    stop-color: #4472c4;\n}\n\n#bootstrap-gradient-chart stop {\n    stop-color: #a16ee5;\n}\n\n#bootstrap4-gradient-chart stop {\n    stop-color: #a16ee5;\n}\n\n#fluent-gradient-chart stop {\n    stop-color: #1AC9E6;\n}\n\n#fluentdark-gradient-chart stop {\n    stop-color: #1AC9E6;\n}\n\n#highcontrast-gradient-chart stop {\n    stop-color: #79ECE4;\n}\n\n#tailwind-gradient-chart stop {\n    stop-color: #5A61F6;\n}\n\n#tailwind3-gradient-chart stop {\n    stop-color: #2F4074;\n}\n\n#bootstrap5-gradient-chart stop {\n    stop-color: #FD7E14;\n}\n\n#materialdark-gradient-chart stop {\n    stop-color: #9ECB08;\n}\n\n#fabricdark-gradient-chart stop {\n    stop-color: #4472c4;\n}\n\n#bootstrapdark-gradient-chart stop {\n    stop-color: #a16ee5;\n}\n\n#tailwinddark-gradient-chart stop {\n    stop-color: #8B5CF6;\n}\n\n#tailwind3dark-gradient-chart stop {\n    stop-color: #8029F1;\n}\n\n#bootstrap5dark-gradient-chart stop {\n    stop-color: #FD7E14;\n}\n\n#material3-gradient-chart stop {\n    stop-color: #6355C7;\n}\n\n#material3dark-gradient-chart stop {\n    stop-color: #4EAAFF;\n}\n\n#fluent2-gradient-chart stop {\n    stop-color: #6200EE;\n}\n\n#fluent2highcontrast-gradient-chart stop {\n    stop-color: #9BB449;\n}\n\n#fluent2dark-gradient-chart stop {\n    stop-color: #9BB449;\n}\n\n.chart-gradient stop[offset=\"0\"] {\n    stop-opacity: 0.9;\n}\n\n.chart-gradient stop[offset=\"1\"] {\n    stop-opacity: 0.3;\n}\n\n#days, #weather {\n  font-size: 15px;\n  opacity: 0.7;\n  position: relative;\n  right: 0;\n  width: 85px;\n}\n;`;\nlet themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nlet borderColor = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nconst chartData = [\n    { x: 1, xValue: '1 am', y: 6, datalabel: '6', datalabel1: '43' },\n    { x: 2, xValue: '4 am', y: 4, datalabel: '4', datalabel1: '39' },\n    { x: 3, xValue: '7 am', y: 2, datalabel: '2', datalabel1: '36' },\n    { x: 4, xValue: '10 am', y: 8, datalabel: '8', datalabel1: '46' },\n    { x: 5, xValue: '1 pm', y: 12, datalabel: '12', datalabel1: '54' },\n    { x: 6, xValue: '4 pm', y: 11, datalabel: '11', datalabel1: '52' },\n    { x: 7, xValue: '1 am', y: 6, datalabel: '6', datalabel1: '43' },\n    { x: 8, xValue: '4 am', y: 7, datalabel: '7', datalabel1: '45' },\n    { x: 9, xValue: '7 am', y: 9, datalabel: '9', datalabel1: '48' },\n    { x: 10, xValue: '10 am', y: 14, datalabel: '14', datalabel1: '57' },\n    { x: 11, xValue: '1 pm', y: 16, datalabel: '16', datalabel1: '61' },\n    { x: 12, xValue: '4 pm', y: 15, datalabel: '15', datalabel1: '59' },\n    { x: 13, xValue: '1 am', y: 15, datalabel: '15', datalabel1: '59' },\n    { x: 14, xValue: '4 am', y: 16, datalabel: '16', datalabel1: '61' },\n    { x: 15, xValue: '7 am', y: 17, datalabel: '17', datalabel1: '63' },\n    { x: 16, xValue: '10 am', y: 18, datalabel: '18', datalabel1: '64' },\n    { x: 17, xValue: '1 pm', y: 18, datalabel: '18', datalabel1: '64' },\n    { x: 18, xValue: '4 pm', y: 15, datalabel: '15', datalabel1: '59' },\n    { x: 19, xValue: '1 am', y: 14, datalabel: '14', datalabel1: '57' },\n    { x: 20, xValue: '4 am', y: 13, datalabel: '13', datalabel1: '55' },\n    { x: 21, xValue: '7 am', y: 12, datalabel: '12', datalabel1: '54' },\n    { x: 22, xValue: '10 am', y: 14, datalabel: '14', datalabel1: '57' },\n    { x: 23, xValue: '1 pm', y: 16, datalabel: '16', datalabel1: '61' },\n    { x: 24, xValue: '4 pm', y: 15, datalabel: '15', datalabel1: '59' },\n    { x: 25, xValue: '1 am', y: 15, datalabel: '15', datalabel1: '59' },\n    { x: 26, xValue: '4 am', y: 14, datalabel: '14', datalabel1: '57' },\n    { x: 27, xValue: '7 am', y: 16, datalabel: '16', datalabel1: '61' },\n    { x: 28, xValue: '10 am', y: 18, datalabel: '18', datalabel1: '64' },\n    { x: 29, xValue: '1 pm', y: 16, datalabel: '16', datalabel1: '61' },\n    { x: 30, xValue: '4 pm', y: 17, datalabel: '17', datalabel1: '63' },\n];\n;\nlet buttonIndex = 0;\nconst Pagination = () => {\n    let chartInstance = useRef(null);\n    let image = 'sunny_image';\n    let count = 12;\n    let day = 'Friday';\n    let rainfalls = 0;\n    let moistureLevels = 30;\n    let breezeSpeeds = 5;\n    let weather = 'Sunny';\n    let isFahrenheit = false;\n    const updateChart = (buttonId, img, tempCount, chartDay, zoomPos, zoomFactor, rainfall, moistureLevel, breezeSpeed, weatherCondition) => {\n        image = img;\n        count = tempCount;\n        day = chartDay;\n        rainfalls = rainfall;\n        moistureLevels = moistureLevel;\n        breezeSpeeds = breezeSpeed;\n        weather = weatherCondition;\n        chartInstance.current.primaryXAxis.zoomPosition = zoomPos;\n        chartInstance.current.primaryXAxis.zoomFactor = zoomFactor;\n        chartInstance.current.duration = 600;\n        const buttons = document.querySelectorAll('.chart-custom-button');\n        buttons.forEach(button => button.classList.remove('active'));\n        const selectedButton = document.getElementById(buttonId);\n        selectedButton.classList.add('active');\n    };\n    const load = (args) => {\n        let selectedTheme = loadChartTheme(args);\n        args.chart.series[0].fill = 'url(#' + selectedTheme.toLowerCase() + '-gradient-chart)';\n        args.chart.series[0].border = { width: 4, color: borderColor[themes.indexOf(args.chart.theme.toLowerCase())] };\n        args.chart.series[0].marker = { fill: borderColor[themes.indexOf(args.chart.theme.toLowerCase())] };\n        args.chart.annotations[3].x = selectedTheme.indexOf('Tailwind') !== -1 ? 167 : 163;\n        const isDarkTheme = /dark/i.test(selectedTheme) || /contrast/i.test(selectedTheme);\n        const buttons = document.querySelectorAll('.chart-custom-button');\n        const buttonContainer = document.getElementById('chart-button-container');\n        buttons.forEach(button => {\n            if (isDarkTheme) {\n                button.classList.add('dark-theme-bg');\n                button.classList.remove('light-theme-bg');\n                buttonContainer.style.backgroundColor = '#333';\n            }\n            else {\n                button.classList.add('light-theme-bg');\n                button.classList.remove('dark-theme-bg');\n                buttonContainer.style.backgroundColor = 'rgb(237, 236, 236)';\n            }\n        });\n        if (Browser.isDevice) {\n            buttonContainer.style.width = '97%';\n        }\n        else {\n            buttonContainer.style.width = '75%';\n        }\n    };\n    const temperatureData = [\n        { celsius: 12, fahrenheit: 54 },\n        { celsius: 16, fahrenheit: 61 },\n        { celsius: 18, fahrenheit: 64 },\n        { celsius: 16, fahrenheit: 61 },\n        { celsius: 18, fahrenheit: 64 }\n    ];\n    const buttonRanges = {\n        celsius: [\n            { min: 2, max: 12 },\n            { min: 6, max: 16 },\n            { min: 15, max: 18 },\n            { min: 12, max: 16 },\n            { min: 14, max: 18 }\n        ],\n        fahrenheit: [\n            { min: 36, max: 54 },\n            { min: 43, max: 61 },\n            { min: 59, max: 64 },\n            { min: 54, max: 61 },\n            { min: 57, max: 64 }\n        ]\n    };\n    const chartMouseClick = (args) => {\n        if (chartInstance.current) {\n            const activeButton = document.querySelector('.chart-custom-button.active');\n            const index = Array.from(document.querySelectorAll('.chart-custom-button')).indexOf(activeButton);\n            if (index !== -1 && temperatureData[index]) {\n                const { celsius, fahrenheit } = temperatureData[index];\n                const temperatureElement = document.getElementById('temperature');\n                const celsiusElement = document.getElementById('celsius');\n                const fahrenheitElement = document.getElementById('fahrenheit');\n                if (args.target === 'celsius' && temperatureElement) {\n                    temperatureElement.innerHTML = `<b style=\"font-size: 50px\">${celsius}</b>`;\n                    isFahrenheit = false;\n                    if (celsiusElement) {\n                        celsiusElement.style.opacity = '1';\n                    }\n                    if (fahrenheitElement) {\n                        fahrenheitElement.style.opacity = '0.5';\n                    }\n                    chartInstance.current.series[0].marker.dataLabel.name = 'datalabel';\n                }\n                else if (args.target === 'fahrenheit' && temperatureElement) {\n                    temperatureElement.innerHTML = `<b style=\"font-size: 50px\">${fahrenheit}</b>`;\n                    isFahrenheit = true;\n                    if (celsiusElement) {\n                        celsiusElement.style.opacity = '0.5';\n                    }\n                    if (fahrenheitElement) {\n                        fahrenheitElement.style.opacity = '1';\n                    }\n                    chartInstance.current.series[0].marker.dataLabel.name = 'datalabel1';\n                }\n            }\n            const buttons = document.querySelectorAll('.chart-custom-button .temp');\n            buttons.forEach((buttonTempElement, idx) => {\n                let minTemp;\n                let maxTemp;\n                if (args.target === 'fahrenheit') {\n                    minTemp = buttonRanges.fahrenheit[idx].min;\n                    maxTemp = buttonRanges.fahrenheit[idx].max;\n                    buttonTempElement.textContent = `${minTemp}°F - ${maxTemp}°F`;\n                }\n                else {\n                    minTemp = buttonRanges.celsius[idx].min;\n                    maxTemp = buttonRanges.celsius[idx].max;\n                    buttonTempElement.textContent = `${minTemp}°C - ${maxTemp}°C`;\n                }\n            });\n        }\n    };\n    const annotationRender = (args) => {\n        if (args.content.id === 'container_Annotation_0') {\n            args.content.innerHTML = '<div id=\"chart_cloud\" align=\"center\"><img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/' + image + '.png\" alt=\"Cloud Picture\" style=\"width: 70px; height: 70px; margin-right: 10px;\"/></div>';\n        }\n        else if (args.content.id === 'container_Annotation_1') {\n            const tempDisplay = isFahrenheit ? temperatureData[buttonIndex].fahrenheit : temperatureData[buttonIndex].celsius;\n            args.content.innerHTML = '<div id=\"temperature\"><b align=\"center\" style=\"font-size: 50px\">' + tempDisplay + '<b></div>';\n        }\n        else if (args.content.id === 'container_Annotation_2') {\n            args.content.innerHTML = '<div id=\"celsius\" style=\"font-size: 17px; vertical-align: super; cursor: pointer; opacity: 1;\">°C | </div>';\n        }\n        else if (args.content.id === 'container_Annotation_3') {\n            args.content.innerHTML = '<div id=\"fahrenheit\" style=\"font-size: 17px; vertical-align: super; cursor: pointer; opacity: 0.5;\">°F</div>';\n        }\n        else if (args.content.id === 'container_Annotation_4') {\n            args.content.innerHTML = Browser.isDevice ? '<div id=\"days\" style=\"text-align: right; font-size: 9px; opacity: 0.7;\">' + day + '</div>' : '<div id=\"days\" style=\"text-align: right; font-size: 15px; opacity: 0.7;\">' + day + '</div>';\n        }\n        else if (args.content.id === 'container_Annotation_5') {\n            args.content.innerHTML = '<div id=\"weather\" style=\"text-align: right; font-size: 15px; opacity: 0.7;\">' + weather + '</div>';\n        }\n        else if (args.content.id === 'container_Annotation_6') {\n            args.content.innerHTML = Browser.isDevice ? `<div id=\"title\" style=\"font-size: 16px; font-weight: 600\">USA, Texas</div>` : `<div id=\"title\" style=\"font-size: 20px; font-weight: 600\">USA, Texas</div>`;\n        }\n        else {\n            args.content.innerHTML = '<div style=\"text-align:left; opacity: 0.7;\">' + 'Rainfall: ' + rainfalls + ' mm/hr<br>' + 'Moisture: ' + moistureLevels + '%<br>' + 'Breeze: ' + breezeSpeeds + ' km/hr' + '</div>';\n        }\n    };\n    const resize = (args) => {\n        const maxAnnotationX = args.chart.availableSize.width;\n        args.chart.annotations[4].x = maxAnnotationX - 50;\n        args.chart.annotations[5].x = maxAnnotationX - 50;\n        args.chart.annotations[6].x = maxAnnotationX - 50;\n    };\n    return (<div className='control-pane' style={{ textAlign: \"center\" }}>\n      <style>\n        {SAMPLE_CSS}\n      </style>\n      <div className='control-section' style={{ textAlign: \"center\" }}>\n        <ChartComponent id='container' style={{ textAlign: \"center\" }} ref={chartInstance} primaryXAxis={{\n            interval: 1,\n            zoomFactor: 0.175,\n            zoomPosition: 0,\n            majorTickLines: { width: 0 },\n            majorGridLines: { width: 0 },\n            enableAutoIntervalOnZooming: false,\n            labelPlacement: 'OnTicks',\n            labelRotation: Browser.isDevice ? -90 : 0,\n            valueType: 'Category',\n            edgeLabelPlacement: 'Shift',\n            isIndexed: true\n        }} primaryYAxis={{\n            majorGridLines: { width: 0 },\n            visible: false,\n            maximum: 30\n        }} zoomSettings={{\n            enableSelectionZooming: true,\n            toolbarItems: [],\n            mode: 'X',\n            enablePan: true,\n            enableAnimation: true\n        }} height='70%' width={Browser.isDevice ? '100%' : '75%'} chartArea={{ border: { width: 0 } }} annotationRender={annotationRender.bind(this)} chartMouseClick={chartMouseClick.bind(this)} load={load.bind(this)} resized={resize.bind(this)}>\n          <Inject services={[SplineAreaSeries, Category, Tooltip, Zoom, DataLabel, ChartAnnotation]}/>\n          <SeriesCollectionDirective>\n            <SeriesDirective dataSource={chartData} xName='xValue' yName='y' opacity={0.3} width={2} type='SplineArea' marker={{ visible: true, isFilled: true, width: 8, height: 8, dataLabel: { visible: true, name: 'datalabel', position: 'Top', font: { fontWeight: 'Bold' } } }}/>\n          </SeriesCollectionDirective>\n          <AnnotationsDirective>\n            <AnnotationDirective content='<div id=\"chart_image\"><img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/cloudy.png\" alt=\"Cloud Picture\" style=\"width: 70px; height: 70px\"/></div>' coordinateUnits='Pixel' region='Chart' x={20} y={40}/>\n            <AnnotationDirective content='<div id=\"temperature\" style=\"font-size: 50px;\">12</div>' coordinateUnits='Pixel' region='Chart' x={90} y={30}/>\n            <AnnotationDirective content='<div id=\"celsius\" style=\"font-size: 17px; vertical-align: super; opacity: 1;\">°C | </div>' coordinateUnits='Pixel' region='Chart' x={140} y={20}/>\n            <AnnotationDirective content='<div id=\"fahrenheit\" style=\"font-size: 17px; vertical-align: super; opacity: 0.5;\">°F</div>' coordinateUnits='Pixel' region='Chart' y={20}/>\n            <AnnotationDirective content='<div id=\"days\" style=\"font-size: 15px; text-align:right;\">Friday</div>' coordinateUnits='Pixel' region='Chart' x={800} y={34}/>\n            <AnnotationDirective content='<div id=\"weather\" style=\"font-size: 15px; text-align:right;\">Sunny</div>' coordinateUnits='Pixel' region='Chart' x={800} y={53}/>\n            <AnnotationDirective content='<div id=\"title\" style=\"font-size: 20px; font-weight: 600\">USA, Texas</div>' coordinateUnits='Pixel' region='Chart' x={800} y={12}/>\n            <AnnotationDirective content='<div id=\"text\" style=\"font-size: 11px;></div>' coordinateUnits='Pixel' region='Chart' x={190} y={14}/>\n          </AnnotationsDirective>\n        </ChartComponent>\n        <div id=\"chart-button-container\">\n          <button id=\"friday\" className=\"chart-custom-button active\" onClick={() => { buttonIndex = 0; updateChart('friday', 'sunny_image', 12, 'Friday', 0, 0.175, 0, 30, 5, 'Sunny'); }}>\n            <img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/sunny_image.png\" alt=\"Friday\"/>\n            <div className=\"day\">Friday</div>\n            <div className=\"temp\">2°C - 12°C</div>\n          </button>\n          <button id=\"saturday\" className=\"chart-custom-button\" onClick={() => { buttonIndex = 1; updateChart('saturday', 'sunny_image', 16, 'Saturday', 0.206, 0.175, 0, 35, 6, 'Sunny'); }}>\n            <img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/sunny_image.png\" alt=\"Saturday\"/>\n            <div className=\"day\">Saturday</div>\n            <div className=\"temp\">6°C - 16°C</div>\n          </button>\n          <button id=\"sunday\" className=\"chart-custom-button\" onClick={() => { buttonIndex = 2; updateChart('sunday', 'cloudy', 18, 'Sunday', 0.413, 0.175, 1, 40, 4, 'Cloudy'); }}>\n            <img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/cloudy.png\" alt=\"Sunday\"/>\n            <div className=\"day\">Sunday</div>\n            <div className=\"temp\">15°C - 18°C</div>\n          </button>\n          <button id=\"monday\" className=\"chart-custom-button\" onClick={() => { buttonIndex = 3; updateChart('monday', 'cloudy', 16, 'Monday', 0.620, 0.175, 2, 45, 5, 'Cloudy'); }}>\n            <img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/cloudy.png\" alt=\"Monday\"/>\n            <div className=\"day\">Monday</div>\n            <div className=\"temp\">12°C - 16°C</div>\n          </button>\n          <button id=\"tuesday\" className=\"chart-custom-button\" onClick={() => { buttonIndex = 4; updateChart('tuesday', 'rainy', 18, 'Tuesday', 0.827, 0.175, 5, 50, 6, 'Rainy'); }}>\n            <img src=\"https://ej2.syncfusion.com/react/demos/src/chart/images/rainy.png\" alt=\"Tuesday\"/>\n            <div className=\"day\">Tuesday</div>\n            <div className=\"temp\">14°C - 18°C</div>\n          </button>\n        </div>\n        <svg style={{ height: '0' }}>\n          <defs>\n            <linearGradient id=\"material-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fabric-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"bootstrap-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"bootstrap4-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"highcontrast-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"tailwind-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"bootstrap5-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"materialdark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fabricdark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"bootstrapdark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"tailwinddark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"tailwind3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"tailwind3dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"bootstrap5dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fluent-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fluentdark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"material3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"material3dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fluent2-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fluent2highcontrast-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n            <linearGradient id=\"fluent2dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n              <stop offset=\"0\"></stop>\n              <stop offset=\"1\"></stop>\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n\n    </div>);\n};\nexport default Pagination;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Pagination />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}