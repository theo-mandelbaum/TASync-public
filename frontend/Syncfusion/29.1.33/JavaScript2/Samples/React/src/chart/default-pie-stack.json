{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Pie chart\n */\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, Inject, AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2/base';\nexport let data1 = Browser.isDevice ?\n    [{ 'x': 'Chrome', y: 59.28, text: 'Chrome: 59.28%' },\n        { 'x': 'Safari', y: 4.73, text: Browser.isDevice ? 'Safari <br> 4.73%' : 'Safari: 4.73%' },\n        { 'x': 'Opera', y: 6.12, text: 'Opera: 6.12%' },\n        { 'x': 'Edge', y: 7.48, text: 'Edge: 7.48%' },\n        { 'x': 'Others', y: 22.39, text: 'Others: 22.39%' }] :\n    [\n        { 'x': 'Chrome', y: 59.28, text: 'Chrome: 59.28%' },\n        { 'x': 'UC Browser', y: 4.37, text: 'UC Browser: 4.37%' },\n        { 'x': 'Opera', y: 3.12, text: 'Opera: 3.12%' },\n        { 'x': 'Sogou Explorer', y: 1.73, text: 'Sogou Explorer: 1.73%' },\n        { 'x': 'QQ', y: 3.96, text: 'QQ: 3.96%' },\n        { 'x': 'Safari', y: 4.73, text: 'Safari: 4.73%' },\n        { 'x': 'Internet Explorer', y: 6.12, text: 'Internet Explorer: 6.12%' },\n        { 'x': 'Edge', y: 7.48, text: 'Edge: 7.48%' },\n        { 'x': 'Others', y: 9.57, text: 'Others: 9.57%' }\n    ];\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }\n        .pie-chart {\n            align :center\n        }`;\nexport class Pie extends SampleBase {\n    pie;\n    slider;\n    render() {\n        return (<div className='control-pane'>\n            <style>\n                    {SAMPLE_CSS}\n                </style>\n        <div className='control-section row'>\n        <AccumulationChartComponent id='pie-chart' title='Browser Market Share' load={this.load.bind(this)} legendSettings={{ visible: false }} enableSmartLabels={true} enableAnimation={true} center={{ x: '50%', y: '50%' }} enableBorderOnMouseMove={false} tooltip={{ enable: true, format: '<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>', header: \"\", enableHighlight: true }} loaded={this.onChartLoad.bind(this)}>\n                    <Inject services={[AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel]}/>\n                    <AccumulationSeriesCollectionDirective>\n                        <AccumulationSeriesDirective dataSource={data1} name='Browser' xName='x' yName='y' explode={true} explodeOffset='10%' explodeIndex={0} startAngle={Browser.isDevice ? 55 : 35} dataLabel={{ visible: true, position: 'Outside', name: 'text', font: { fontWeight: '600' }, connectorStyle: { length: '20px', type: 'Curve' } }} radius={Browser.isDevice ? '40%' : '70%'}/>\n                    </AccumulationSeriesCollectionDirective>\n                </AccumulationChartComponent>\n        </div>\n        </div>);\n    }\n    onChartLoad(args) {\n        document.getElementById('pie-chart').setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").\n            replace(/light/i, \"Light\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Pie />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}