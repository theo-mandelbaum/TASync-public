{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for 100 percent Stacked Area series\n */\nimport * as React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Tooltip, DateTime, Highlight, StackingAreaSeries, Legend, } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data = [\n    { x: new Date(2000, 0, 1), y: 0.61, y1: 0.03, y2: 0.48, y3: 0.23 },\n    { x: new Date(2001, 0, 1), y: 0.81, y1: 0.05, y2: 0.53, y3: 0.17 },\n    { x: new Date(2002, 0, 1), y: 0.91, y1: 0.06, y2: 0.57, y3: 0.17 },\n    { x: new Date(2003, 0, 1), y: 1, y1: 0.09, y2: 0.61, y3: 0.2 },\n    { x: new Date(2004, 0, 1), y: 1.19, y1: 0.14, y2: 0.63, y3: 0.23 },\n    { x: new Date(2005, 0, 1), y: 1.47, y1: 0.2, y2: 0.64, y3: 0.36 },\n    { x: new Date(2006, 0, 1), y: 1.74, y1: 0.29, y2: 0.66, y3: 0.43 },\n    { x: new Date(2007, 0, 1), y: 1.98, y1: 0.46, y2: 0.76, y3: 0.52 },\n    { x: new Date(2008, 0, 1), y: 1.99, y1: 0.64, y2: 0.77, y3: 0.72 },\n    { x: new Date(2009, 0, 1), y: 1.7, y1: 0.75, y2: 0.55, y3: 1.29 },\n    { x: new Date(2010, 0, 1), y: 1.48, y1: 1.06, y2: 0.54, y3: 1.38 },\n    { x: new Date(2011, 0, 1), y: 1.38, y1: 1.25, y2: 0.57, y3: 1.82 },\n    { x: new Date(2012, 0, 1), y: 1.66, y1: 1.55, y2: 0.61, y3: 2.16 },\n    { x: new Date(2013, 0, 1), y: 1.66, y1: 1.55, y2: 0.67, y3: 2.51 },\n    { x: new Date(2014, 0, 1), y: 1.67, y1: 1.65, y2: 0.67, y3: 2.61 },\n];\nconst SAMPLE_CSS = `\n     .control-fluid {\n         padding: 0px !important;\n     }`;\nexport class StackedArea100 extends SampleBase {\n    render() {\n        return (<div className=\"control-pane\">\n        <style>{SAMPLE_CSS}</style>\n        <div className=\"control-section\">\n          <ChartComponent id=\"charts\" style={{ textAlign: 'center' }} primaryXAxis={{ valueType: 'DateTime', majorGridLines: { width: 0 }, minimum: new Date(1999, 0, 1), maximum: new Date(2015, 0, 1), interval: 1, labelFormat: 'y', edgeLabelPlacement: 'Shift' }} width={Browser.isDevice ? '100%' : '75%'} legendSettings={{ enableHighlight: true }} chartArea={{ border: { width: 0 } }} load={this.load.bind(this)} primaryYAxis={{ title: 'Amount of sales in â‚¬', majorGridLines: { width: 0 }, rangePadding: 'None', interval: 20 }} title=\"Sales by Payment Mode\" loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, enableHighlight: true, showNearestTooltip: true }}>\n            <Inject services={[StackingAreaSeries, DateTime, Tooltip, Legend, Highlight]}/>\n            <SeriesCollectionDirective>\n              <SeriesDirective dataSource={data} xName=\"x\" yName=\"y\" name=\"Bank-Transfer\" opacity={1} type=\"StackingArea100\" border={{ width: 0.5, color: '#ffffff' }}></SeriesDirective>\n              <SeriesDirective dataSource={data} xName=\"x\" yName=\"y1\" name=\"Credit Card\" opacity={1} type=\"StackingArea100\" border={{ width: 0.5, color: '#ffffff' }}></SeriesDirective>\n              <SeriesDirective dataSource={data} xName=\"x\" yName=\"y2\" name=\"Debit Card\" opacity={1} type=\"StackingArea100\" border={{ width: 0.5, color: '#ffffff' }}></SeriesDirective>\n              <SeriesDirective dataSource={data} xName=\"x\" yName=\"y3\" name=\"Cash\" type=\"StackingArea100\" opacity={1} border={{ width: 0.5, color: '#ffffff' }}></SeriesDirective>\n            </SeriesCollectionDirective>\n          </ChartComponent>\n                    <div style={{ float: 'right', marginRight: '10px' }}>Source: &nbsp;\n                         <a href=\"https://www.gov.uk/\" target='_blank' aria-label=\"Navigate to the documentation for gov\">www.gov.uk</a>\n                    </div>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<StackedArea100 />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}