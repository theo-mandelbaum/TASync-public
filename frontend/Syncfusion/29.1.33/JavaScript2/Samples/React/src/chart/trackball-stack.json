{"index.css":"/* css */","trackball-data.js":"/**\n * Sample for Trackball in chart\n */\nexport let john = [{ x: new Date(2000, 2, 11), y: 15 }, { x: new Date(2000, 9, 14), y: 20 },\n    { x: new Date(2001, 2, 11), y: 25 }, { x: new Date(2001, 9, 16), y: 21 },\n    { x: new Date(2002, 2, 7), y: 13 }, { x: new Date(2002, 9, 7), y: 18 },\n    { x: new Date(2003, 2, 11), y: 24 }, { x: new Date(2003, 9, 14), y: 23 },\n    { x: new Date(2004, 2, 6), y: 19 }, { x: new Date(2004, 9, 6), y: 31 },\n    { x: new Date(2005, 2, 11), y: 39 }, { x: new Date(2005, 9, 11), y: 50 },\n    { x: new Date(2006, 2, 11), y: 24 }];\nexport let andrew = [{ x: new Date(2000, 2, 11), y: 39 }, { x: new Date(2000, 9, 14), y: 30 },\n    { x: new Date(2001, 2, 11), y: 28 }, { x: new Date(2001, 9, 16), y: 35 },\n    { x: new Date(2002, 2, 7), y: 39 }, { x: new Date(2002, 9, 7), y: 41 },\n    { x: new Date(2003, 2, 11), y: 45 }, { x: new Date(2003, 9, 14), y: 48 },\n    { x: new Date(2004, 2, 6), y: 54 }, { x: new Date(2004, 9, 6), y: 55 },\n    { x: new Date(2005, 2, 11), y: 57 }, { x: new Date(2005, 9, 11), y: 60 },\n    { x: new Date(2006, 2, 11), y: 60 }];\nexport let thomas = [{ x: new Date(2000, 2, 11), y: 60 }, { x: new Date(2000, 9, 14), y: 55 },\n    { x: new Date(2001, 2, 11), y: 48 }, { x: new Date(2001, 9, 16), y: 57 },\n    { x: new Date(2002, 2, 7), y: 62 }, { x: new Date(2002, 9, 7), y: 64 },\n    { x: new Date(2003, 2, 11), y: 57 }, { x: new Date(2003, 9, 14), y: 53 },\n    { x: new Date(2004, 2, 6), y: 63 }, { x: new Date(2004, 9, 6), y: 50 },\n    { x: new Date(2005, 2, 11), y: 66 }, { x: new Date(2005, 9, 11), y: 65 },\n    { x: new Date(2006, 2, 11), y: 79 }];\nexport let mark = [{ x: new Date(2000, 2, 11), y: 75 }, { x: new Date(2000, 9, 14), y: 75 },\n    { x: new Date(2001, 2, 11), y: 68 }, { x: new Date(2001, 9, 16), y: 75 },\n    { x: new Date(2002, 2, 7), y: 71 }, { x: new Date(2002, 9, 7), y: 69 },\n    { x: new Date(2003, 2, 11), y: 81 }, { x: new Date(2003, 9, 14), y: 84 },\n    { x: new Date(2004, 2, 6), y: 85 }, { x: new Date(2004, 9, 6), y: 87 },\n    { x: new Date(2005, 2, 11), y: 75 }, { x: new Date(2005, 9, 11), y: 70 },\n    { x: new Date(2006, 2, 11), y: 85 }];\nexport let william = [{ x: new Date(2000, 2, 11), y: 85 }, { x: new Date(2000, 9, 14), y: 83 },\n    { x: new Date(2001, 2, 11), y: 85 }, { x: new Date(2001, 9, 16), y: 87 },\n    { x: new Date(2002, 2, 7), y: 82 }, { x: new Date(2002, 9, 7), y: 74 },\n    { x: new Date(2003, 2, 11), y: 73 }, { x: new Date(2003, 9, 14), y: 75 },\n    { x: new Date(2004, 2, 6), y: 73 }, { x: new Date(2004, 9, 6), y: 60 },\n    { x: new Date(2005, 2, 11), y: 48 }, { x: new Date(2005, 9, 11), y: 55 },\n    { x: new Date(2006, 2, 11), y: 40 }];\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Trackball in chart\n */\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, LineSeries, DateTime, Tooltip, Crosshair, Legend } from '@syncfusion/ej2-react-charts';\nimport { john, andrew, thomas } from './trackball-data';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport class TrackballChart extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section'>\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\n                minimum: new Date(2000, 1, 1), maximum: new Date(2006, 2, 11),\n                valueType: 'DateTime',\n                skeleton: 'y',\n                lineStyle: { width: 0 },\n                majorGridLines: { width: 0 },\n                edgeLabelPlacement: 'Shift'\n            }} width={Browser.isDevice ? '100%' : '75%'} chartArea={{ border: { width: 0 } }} load={this.load.bind(this)} primaryYAxis={{\n                title: 'Revenue',\n                labelFormat: '{value}M',\n                majorTickLines: { width: 0 },\n                minimum: 10, maximum: 80,\n                lineStyle: { width: 0 },\n            }} title='Average Sales per Person' loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, shared: true }} crosshair={{ enable: true, lineType: 'Vertical' }}>\n                        <Inject services={[LineSeries, DateTime, Tooltip, Crosshair, Legend]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={john} xName='x' yName='y' width={2} name='John' type='Line' marker={{ visible: true }}>\n                            </SeriesDirective>\n                            <SeriesDirective dataSource={andrew} xName='x' yName='y' width={2} name='Andrew' type='Line' marker={{ visible: true }}>\n                            </SeriesDirective>\n                            <SeriesDirective dataSource={thomas} xName='x' yName='y' width={2} name='Thomas' type='Line' marker={{ visible: true }}>\n                            </SeriesDirective>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<TrackballChart />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}