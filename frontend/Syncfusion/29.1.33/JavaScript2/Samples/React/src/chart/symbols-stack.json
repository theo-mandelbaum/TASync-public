{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Chart symbols\n */\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, Tooltip, DataLabel, LineSeries, Highlight } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data = [\n    { x: 'WW', y: 12, y1: 22, y2: 38.3, y3: 50, text: 'World Wide' },\n    { x: 'EU', y: 9.9, y1: 26, y2: 45.2, y3: 63.6, text: 'Europe' },\n    { x: 'APAC', y: 4.4, y1: 9.3, y2: 18.2, y3: 20.9, text: 'Asia Pacific' },\n    { x: 'LATAM', y: 6.4, y1: 28, y2: 46.7, y3: 65.1, text: 'Latin America' },\n    { x: 'MEA', y: 30, y1: 45.7, y2: 61.5, y3: 73, text: 'Middle East Africa' },\n    { x: 'NA', y: 25.3, y1: 35.9, y2: 64, y3: 81.4, text: 'North America' }\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class Symbols extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <style>{SAMPLE_CSS}</style>\n                <div className='control-section'>\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{ valueType: 'Category', interval: 1, labelIntersectAction: Browser.isDevice ? 'None' : 'Trim', majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, minorTickLines: { width: 0 }, labelRotation: Browser.isDevice ? -45 : 0 }} load={this.load.bind(this)} primaryYAxis={{ title: 'Penetration', rangePadding: 'None', labelFormat: '{value}%', minimum: 0, lineStyle: { width: 0 }, maximum: 75, interval: 15, majorTickLines: { width: 0 } }} width={Browser.isDevice ? '100%' : '75%'} chartArea={{ border: { width: 0 } }} title='FB Penetration of Internet Audience' loaded={this.onChartLoad.bind(this)} legendSettings={{ visible: true, enableHighlight: true }} tooltip={{ enable: true, header: \"\", format: \"<b>${point.text}</b> <br> ${series.name} : <b>${point.y}</b>\", enableHighlight: true, showNearestTooltip: true }}>\n                        <Inject services={[LineSeries, Legend, Tooltip, DataLabel, Category, Highlight]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={data} xName='x' yName='y' width={2} name='2007' type='Line' marker={{ visible: true, dataLabel: { name: 'text' }, width: 8, height: 8, shape: 'Diamond', isFilled: true }}>\n                            </SeriesDirective>\n                            <SeriesDirective dataSource={data} xName='x' yName='y1' width={2} name='2008' type='Line' marker={{ visible: true, dataLabel: { name: 'text' }, width: 8, height: 8, shape: 'Pentagon', isFilled: true }}>\n                            </SeriesDirective>\n                            <SeriesDirective dataSource={data} xName='x' yName='y2' width={2} name='2009' type='Line' marker={{ visible: true, dataLabel: { name: 'text' }, width: 8, height: 8, shape: 'Triangle', isFilled: true }}>\n                            </SeriesDirective>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                    <div style={{ float: 'right', marginRight: '10px' }}>Source: &nbsp;\n                        <a href=\"http://www.marketingprofs.com/charts/2012/7064/facebook-stats-five-years-of-worldwide-growth\" target=\"_blank\" aria-label=\"Navigate to the documentation for marketing profs\">www.marketingprofs.com</a>\n                    </div>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Symbols />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}