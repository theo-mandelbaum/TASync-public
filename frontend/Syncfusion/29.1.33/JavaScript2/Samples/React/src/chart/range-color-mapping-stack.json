{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for RangeColumn series\n */\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, ColumnSeries, Category, Highlight, DataLabel, Tooltip, Legend, RangeColorSettingsDirective, RangeColorSettingDirective } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data = [\n    { x: \"Jan\", y: 6.96 },\n    { x: \"Feb\", y: 8.9 },\n    { x: \"Mar\", y: 12 },\n    { x: \"Apr\", y: 17.5 },\n    { x: \"May\", y: 22.1 },\n    { x: \"June\", y: 25 },\n    { x: \"July\", y: 29.4 },\n    { x: \"Aug\", y: 29.6 },\n    { x: \"Sep\", y: 25.8 },\n    { x: \"Oct\", y: 21.1 },\n    { x: \"Nov\", y: 15.5 },\n    { x: \"Dec\", y: 9.9 }\n];\nexport const color1 = ['#F9D422'];\nexport const color2 = ['#F28F3F'];\nexport const color3 = ['#E94F53'];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n\t}`;\nexport class RangeColorMapping extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} highlightMode='Point' highlightPattern='DiagonalForward' primaryXAxis={{ valueType: 'Category', majorGridLines: { width: 0 } }} primaryYAxis={{ lineStyle: { width: 0 },\n                majorTickLines: { width: 0 },\n                minorTickLines: { width: 0 },\n                labelFormat: '{value}°C' }} title=\"USA CLIMATE - WEATHER BY MONTH\" loaded={this.onChartLoad.bind(this)} load={this.load.bind(this)} chartArea={{ border: { width: 0 } }} width={Browser.isDevice ? '100%' : '75%'} legendSettings={{\n                mode: 'Range',\n                visible: true,\n                toggleVisibility: false\n            }}>\n                        <Inject services={[ColumnSeries, Highlight, DataLabel, Tooltip, Category, Legend]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={data} name='USA' xName='x' yName='y' type='Column' animation={{ enable: false }} cornerRadius={{\n                topLeft: 10, topRight: 10\n            }} marker={{ dataLabel: { visible: true, position: \"Outer\" } }}>\n                            </SeriesDirective>\n                        </SeriesCollectionDirective>\n                        <RangeColorSettingsDirective>\n                            <RangeColorSettingDirective label=\"1°C to 10°C\" start={1} end={10} colors={color1}></RangeColorSettingDirective>\n                            <RangeColorSettingDirective label=\"11°C to 20°C\" start={11} end={20} colors={color2}></RangeColorSettingDirective>\n                            <RangeColorSettingDirective label=\"21°C to 30°C\" start={21} end={30} colors={color3}></RangeColorSettingDirective>\n                        </RangeColorSettingsDirective>\n                    </ChartComponent>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RangeColorMapping />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}