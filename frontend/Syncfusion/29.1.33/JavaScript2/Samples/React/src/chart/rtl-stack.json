{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for rtl series\n */\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, Tooltip, ColumnSeries, DataLabel } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\nexport let data1 = [\n    { x: 2016, y: 1000 },\n    { x: 2017, y: 1170 },\n    { x: 2018, y: 660 },\n    { x: 2019, y: 1030 },\n];\nexport let data2 = [\n    { x: 2016, y: 400 },\n    { x: 2017, y: 460 },\n    { x: 2018, y: 1120 },\n    { x: 2019, y: 540 },\n];\nexport let data3 = [\n    { x: 2016, y: 200 },\n    { x: 2017, y: 250 },\n    { x: 2018, y: 300 },\n    { x: 2019, y: 350 },\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class RTL extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                <ChartComponent id=\"charts\" style={{ textAlign: 'center' }} load={this.load.bind(this)} enableRtl={true} primaryXAxis={{\n                valueType: 'Double',\n                majorGridLines: { width: 0 },\n                minimum: 2015,\n                maximum: 2020,\n                interval: 1,\n            }} primaryYAxis={{\n                valueType: 'Double',\n                minimum: 0,\n                maximum: 1200,\n                interval: 200,\n                labelFormat: '{value}B',\n                lineStyle: { width: 0 },\n                majorTickLines: { width: 0 }\n            }} chartArea={{ border: { width: 0 } }} tooltip={{ enable: true, enableHighlight: true }} width={Browser.isDevice ? '100%' : '75%'} title=\"Company Performance\" loaded={this.onChartLoad.bind(this)} axisLabelRender={this.labelRender.bind(this)}>\n            <Inject services={[ColumnSeries, Legend, Tooltip, Category, DataLabel]}/>\n            <SeriesCollectionDirective>\n              <SeriesDirective dataSource={data1} xName=\"x\" yName=\"y\" name=\"Sales\" type=\"Column\"></SeriesDirective>\n              <SeriesDirective dataSource={data2} xName=\"x\" yName=\"y\" name=\"Expense\" type=\"Column\"></SeriesDirective>\n              <SeriesDirective dataSource={data3} xName=\"x\" yName=\"y\" name=\"Profit\" type=\"Column\"></SeriesDirective>\n            </SeriesCollectionDirective>\n          </ChartComponent>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n    labelRender(args) {\n        if (args.axis.orientation === 'Horizontal') {\n            args.cancel = args.value === 2015 || args.value === 2020;\n        }\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RTL />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}