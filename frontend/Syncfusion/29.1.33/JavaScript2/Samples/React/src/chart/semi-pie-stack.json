{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, AccumulationDataLabel, PieSeries, Inject, AccumulationAnnotationsDirective, AccumulationAnnotationDirective, ChartAnnotation, AccumulationAnnotation, AccumulationTooltip } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2/base';\nexport let data1 = [\n    { x: 'Chrome', y: 100, text: 'Chrome (100M)<br>40%', tooltipMappingName: '40%' },\n    { x: 'UC Browser', y: 40, text: 'UC Browser (40M)<br>16%', tooltipMappingName: '16%' },\n    { x: 'Opera', y: 30, text: 'Opera (30M)<br>12%', tooltipMappingName: '12%' },\n    { x: 'Safari', y: 30, text: 'Safari (30M)<br>12%', tooltipMappingName: '12%' },\n    { x: 'Firefox', y: 25, text: 'Firefox (25M)<br>10%', tooltipMappingName: '10%' },\n    { x: 'Others', y: 25, text: 'Others (25M)<br>10%', tooltipMappingName: '10%' }\n];\nlet content = Browser.isDevice ? \"<div style='font-Weight:700; font-size:11px;'>Browser<br>Market<br>Shares</div>\" : \"<div style='font-Weight:600; font-size:14px;'>Browser<br>Market<br>Shares</div>\";\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }\n        .pie-chart {\n            align :center\n        }`;\nexport class SemiPie extends SampleBase {\n    pie;\n    slider;\n    render() {\n        return (<div className='control-pane'>\n      <style>{SAMPLE_CSS}</style>\n      <div className='control-section row'>\n          <AccumulationChartComponent id='pie-chart' ref={pie => pie = pie} legendSettings={{ visible: false }} enableBorderOnMouseMove={false} load={this.load.bind(this)} loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, format: \"<b>${point.x}</b><br>Browser Share: <b>${point.tooltip}</b>\", header: '', enableHighlight: true }}>\n              <Inject services={[AccumulationDataLabel, PieSeries, AccumulationTooltip, ChartAnnotation, AccumulationAnnotation]}/>\n              <AccumulationSeriesCollectionDirective>\n                  <AccumulationSeriesDirective dataSource={data1} tooltipMappingName='tooltipMappingName' xName='x' yName='y' startAngle={270} endAngle={90} explode={false} radius={Browser.isDevice ? '85%' : '100%'} innerRadius='40%' dataLabel={{ visible: true, position: 'Inside', enableRotation: true, connectorStyle: { length: '10%' }, name: 'text', font: { fontWeight: '600', size: Browser.isDevice ? '8px' : '11px', color: '#ffffff' } }}/>\n              </AccumulationSeriesCollectionDirective>\n              <AccumulationAnnotationsDirective>\n                  <AccumulationAnnotationDirective content={content} region=\"Series\" x={Browser.isDevice ? \"52%\" : \"50%\"} y={Browser.isDevice ? \"82%\" : \"85%\"}/>\n              </AccumulationAnnotationsDirective>\n          </AccumulationChartComponent>\n      </div>\n  </div>);\n    }\n    onChartLoad(args) {\n        document.getElementById('pie-chart').setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<SemiPie />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}