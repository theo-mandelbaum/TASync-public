{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, DateTime, StepAreaSeries, Tooltip, Highlight, Legend } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * StepArea Series\n */\nexport let data1 = [\n    { x: new Date(1980, 0, 1), y: 23 },\n    { x: new Date(1981, 0, 1), y: 89 },\n    { x: new Date(1982, 0, 1), y: 45 },\n    { x: new Date(1983, 0, 1), y: 67 },\n    { x: new Date(1984, 0, 1), y: 76 },\n    { x: new Date(1985, 0, 1), y: 34 },\n    { x: new Date(1986, 0, 1), y: 90 },\n    { x: new Date(1987, 0, 1), y: 65 },\n    { x: new Date(1988, 0, 1), y: 77 },\n    { x: new Date(1989, 0, 1), y: 43 },\n    { x: new Date(1990, 0, 1), y: 92 },\n    { x: new Date(1991, 0, 1), y: 81 },\n    { x: new Date(1992, 0, 1), y: 65 },\n    { x: new Date(1993, 0, 1), y: 87 },\n    { x: new Date(1994, 0, 1), y: 50 },\n    { x: new Date(1995, 0, 1), y: 98 },\n    { x: new Date(1996, 0, 1), y: 62 },\n    { x: new Date(1997, 0, 1), y: 75 },\n    { x: new Date(1998, 0, 1), y: 64 },\n    { x: new Date(1999, 0, 1), y: 88 },\n    { x: new Date(2000, 0, 1), y: 99 },\n    { x: new Date(2001, 0, 1), y: 77 },\n    { x: new Date(2002, 0, 1), y: 65 },\n    { x: new Date(2003, 0, 1), y: 89 },\n    { x: new Date(2004, 0, 1), y: 45 },\n    { x: new Date(2005, 0, 1), y: 67 },\n    { x: new Date(2006, 0, 1), y: 56 },\n    { x: new Date(2007, 0, 1), y: 78 },\n    { x: new Date(2008, 0, 1), y: 82 },\n    { x: new Date(2009, 0, 1), y: 90 },\n    { x: new Date(2010, 0, 1), y: 55 },\n    { x: new Date(2011, 0, 1), y: 65 },\n    { x: new Date(2012, 0, 1), y: 87 },\n    { x: new Date(2013, 0, 1), y: 76 },\n    { x: new Date(2014, 0, 1), y: 45 },\n    { x: new Date(2015, 0, 1), y: 67 },\n    { x: new Date(2016, 0, 1), y: 89 },\n    { x: new Date(2017, 0, 1), y: 76 },\n    { x: new Date(2018, 0, 1), y: 45 },\n    { x: new Date(2019, 0, 1), y: 67 },\n    { x: new Date(2020, 0, 1), y: 89 }\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nexport class StepLineWithoutRiser extends SampleBase {\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\n                valueType: 'DateTime',\n                labelFormat: 'yyyy',\n                intervalType: 'Years',\n                edgeLabelPlacement: 'Shift',\n                minimum: new Date(1980, 0, 1),\n                maximum: new Date(2020, 0, 1),\n                majorGridLines: { width: 0 },\n                minorTickLines: { width: 0 },\n                interval: 4,\n                labelIntersectAction: 'Rotate90'\n            }} load={this.load.bind(this)} loaded={this.onChartLoad.bind(this)} primaryYAxis={{\n                title: 'Sales in Units',\n                labelFormat: '{value}',\n                lineStyle: { width: 0 },\n                minimum: 0,\n                maximum: 100,\n                interval: 20,\n                majorTickLines: { width: 0 }\n            }} width={Browser.isDevice ? '100%' : '75%'} chartArea={{ border: { width: 0 } }} tooltip={{ enable: true, showNearestTooltip: true }} legendSettings={{ visible: false }} title='Sales of Product Over Time'>\n                        <Inject services={[StepAreaSeries, DateTime, Tooltip, Highlight, Legend]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' type='StepArea' name='Product Sales' opacity={0.1} border={{ width: 2.5 }} noRisers={true} step='Center'>\n                            </SeriesDirective>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<StepLineWithoutRiser />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}