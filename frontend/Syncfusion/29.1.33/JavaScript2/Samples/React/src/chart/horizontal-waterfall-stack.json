{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, DateTime, Logarithmic, Tooltip, WaterfallSeries, DataLabel, Category, Crosshair, Zoom } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data = [\n    { x: 'JAN', y: 55 },\n    { x: 'MAR', y: 42 },\n    { x: 'JUNE', y: -12 },\n    { x: 'AUG', y: 40 },\n    { x: 'OCT', y: -26 },\n    { x: 'DEC', y: 45 },\n    { x: '2023' }\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }\n`;\nexport class HorizontalWaterfall extends SampleBase {\n    onChartLoad = (args) => {\n        let chart = document.getElementById('charts');\n        if (chart) {\n            chart.setAttribute('title', '');\n        }\n    };\n    load = (args) => {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n    legendRender = (args) => {\n        if (args.text === 'JAN') {\n            args.text = 'Increase';\n        }\n        else if (args.text === 'OCT') {\n            args.text = 'Decrease';\n            args.fill = '#e56590';\n        }\n        else if (args.text === '2023') {\n            args.text = 'Total';\n            args.fill = '#4E81BC';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    render() {\n        return (<div className='control-pane'>\n                <style>{SAMPLE_CSS}</style>\n                <div className='control-section'>\n                    <ChartComponent id='charts' load={this.load} style={{ textAlign: \"center\" }} primaryXAxis={{\n                valueType: 'Category',\n                edgeLabelPlacement: 'Shift',\n                majorGridLines: { width: 1 },\n                majorTickLines: { width: 0 },\n                isInversed: true\n            }} primaryYAxis={{\n                minimum: 0, maximum: 150, interval: 25,\n                labelFormat: '{value}K',\n                edgeLabelPlacement: 'Shift',\n                majorGridLines: { width: 0 },\n                majorTickLines: { width: 0 },\n                lineStyle: { width: 0 }\n            }} tooltip={{\n                enable: true,\n                format: '<b>${point.x}</b> <br> Product Revenue : <b>${point.y}</b>',\n                header: \" \"\n            }} width={Browser.isDevice ? '100%' : '75%'} legendSettings={{ mode: 'Point', toggleVisibility: false }} title='Revenue Variation' loaded={this.onChartLoad} legendRender={this.legendRender} isTransposed={true}>\n                        <Inject services={[WaterfallSeries, Category, Tooltip, DateTime, Zoom, Logarithmic, Crosshair, Legend, DataLabel]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={data} border={{ color: 'black', width: 0.2 }} xName='x' yName='y' type='Waterfall' name=\"Increases\" marker={{ dataLabel: { visible: true, position: 'Middle' } }} columnWidth={0.5} connector={{ color: '#5F6A6A', width: 0.8, dashArray: '1,2' }} cornerRadius={{ topLeft: 3, bottomLeft: 3, bottomRight: 3, topRight: 3 }} negativeFillColor='#e56590' sumIndexes={[6]}/>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<HorizontalWaterfall />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}