{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, AccumulationLegend, PieSeries, AccumulationDataLabel, AccumulationTooltip, AccumulationSelection, Inject, Selection, AccumulationAnnotationsDirective, AccumulationAnnotationDirective, ChartAnnotation, AccumulationAnnotation } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data1 = [\n    { 'x': 'Chrome', y: 57.28, text: '57.28%' },\n    { 'x': 'UC Browser', y: 4.37, text: '4.37%' },\n    { 'x': 'Internet Explorer', y: 6.12, text: '6.12%' },\n    { 'x': 'QQ', y: 5.96, text: '5.96%' },\n    { 'x': 'Edge', y: 7.48, text: '7.48%' },\n    { 'x': 'Others', y: 14.06, text: '18.76%' },\n];\nlet content = Browser.isDevice ? \" \" : \"<div style='font-Weight:600;font-size:14px'>Browser<br>Market<br>Share</div>\";\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }\n        .pie-chart2 {\n            align :center\n        }`;\nlet count = 0;\nlet fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nlet labelRender = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    if (selectedTheme === 'fluent2') {\n        args.fill = fluent2Colors[args.point.index % 10];\n    }\n};\nexport class Doughnut extends SampleBase {\n    pie;\n    render() {\n        return (<div className='control-pane'>\n      <style>{SAMPLE_CSS}</style>\n      <div className='control-section'>\n          <AccumulationChartComponent id='pie-chart2' title={Browser.isDevice ? \"Browser Market Share\" : ''} load={this.load.bind(this)} legendSettings={{ visible: true, toggleVisibility: false, position: 'Bottom', maximumColumns: Browser.isDevice ? 2 : 3 }} enableSmartLabels={true} enableAnimation={false} center={{ x: '50%', y: '50%' }} enableBorderOnMouseMove={false} tooltip={{ enable: true, format: '<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>', header: \"\", enableHighlight: true }} pointRender={labelRender.bind(this)}>\n              <Inject services={[AccumulationLegend, PieSeries, AccumulationDataLabel, AccumulationTooltip, AccumulationSelection, Selection, ChartAnnotation, AccumulationAnnotation]}/>\n              <AccumulationSeriesCollectionDirective>\n              <AccumulationSeriesDirective dataSource={data1} xName='x' yName='y' explode={false} explodeOffset='10%' explodeIndex={0} startAngle={30} innerRadius='50%' dataLabel={{\n                visible: true, position: 'Inside',\n                font: { fontWeight: '600', color: '#ffffff' }, name: 'text', connectorStyle: { length: '20px', type: 'Curve' }\n            }} radius={Browser.isDevice ? '80%' : '85%'}/>\n              </AccumulationSeriesCollectionDirective>\n              <AccumulationAnnotationsDirective>\n                  <AccumulationAnnotationDirective content={content} region=\"Series\" x=\"52%\" y=\"50%\"/>\n              </AccumulationAnnotationsDirective>\n          </AccumulationChartComponent>\n      </div>\n  </div>);\n    }\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").\n            replace(/light/i, \"Light\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Doughnut />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}