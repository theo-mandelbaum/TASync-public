{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Chart performance\n */\nimport * as React from \"react\";\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, AreaSeries, DateTime, Legend } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n         #material-gradient-chart stop {\n             stop-color: #00bdae;\n         }\n \n         #fabric-gradient-chart stop {\n             stop-color: #4472c4;\n         }\n \n         #bootstrap-gradient-chart stop {\n             stop-color: #a16ee5;\n         }\n \n         #bootstrap4-gradient-chart stop {\n             stop-color: #a16ee5;\n         }\n \n         #highcontrast-gradient-chart stop {\n             stop-color: #79ECE4;\n         }\n \n        #tailwind-gradient-chart stop {\n            stop-color: #5A61F6;\n        }\n\n        #tailwind3-gradient-chart stop {\n            stop-color: #2F4074;\n        }\n \n         #bootstrap5-gradient-chart stop {\n             stop-color: #FD7E14;\n         }\n \n         #material-dark-gradient-chart stop {\n             stop-color: #9ECB08;\n         }\n \n         #fabric-dark-gradient-chart stop {\n             stop-color: #4472c4;\n         }\n \n         #bootstrap-dark-gradient-chart stop {\n             stop-color: #a16ee5;\n         }\n \n\n        #tailwind-dark-gradient-chart stop {\n            stop-color: #8B5CF6;\n        }\n    \n        #tailwind3-dark-gradient-chart stop {\n            stop-color: #8029F1;\n        }\n \n         #bootstrap5-dark-gradient-chart stop {\n             stop-color: #FD7E14;\n         }\n \n         #fluent-gradient-chart stop {\n             stop-color: #614570;\n         }\n \n         #fluent-dark-gradient-chart stop {\n             stop-color: #8AB113;\n         }\n\n        #material3-gradient-chart stop {\n            stop-color: #6355C7;\n        }\n    \n        #material3-dark-gradient-chart stop {\n            stop-color: #4EAAFF;\n        }\n \n         .chart-gradient stop[offset=\"0\"] {\n             stop-opacity: 0.75;\n         }\n \n         .chart-gradient stop[offset=\"1\"] {\n             stop-opacity: 0;\n         }\n         `;\nlet themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nlet borderColor = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport class Performance extends SampleBase {\n    chart;\n    loaded;\n    dt1 = 0;\n    change() {\n        let series1 = [];\n        let point1;\n        let value = 0;\n        let i;\n        for (i = 0; i < 100000; i++) {\n            value += (Math.random() * 10 - 5);\n            point1 = { x: i, y: value };\n            series1.push(point1);\n        }\n        this.dt1 = new Date().getTime();\n        this.chart.series[0].animation.enable = false;\n        this.chart.series[0].dataSource = series1;\n        this.chart.series[0].xName = 'x';\n        this.chart.series[0].yName = 'y';\n        this.chart.legendSettings.visible = false;\n        this.chart.refresh();\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let series1 = [];\n        let point1;\n        let pts;\n        let value = 0;\n        for (pts = 0; pts < 100000; pts++) {\n            if (pts % 3 == 0) {\n                value -= (Math.random() * (100) / 3) * 4;\n            }\n            else if (pts % 2 == 0) {\n                value += (Math.random() * (100) / 3) * 4;\n            }\n            if (value < 0) {\n                value = value * -1;\n            }\n            if (value >= 12000) {\n                value = Math.floor(Math.random() * 11000) + 1000;\n            }\n            point1 = { x: new Date(2005, 1, 1).setHours(pts), y: value };\n            series1.push(point1);\n        }\n        args.chart.series[0].dataSource = series1;\n        args.chart.series[0].xName = 'x';\n        args.chart.series[0].yName = 'y';\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        args.chart.series[0].border.color = borderColor[themes.indexOf(args.chart.theme.toLowerCase())];\n        args.chart.series[0].fill = 'url(#' + selectedTheme.toLowerCase() + '-gradient-chart)';\n        args.chart.series[0].border = { width: 2, color: borderColor[themes.indexOf(args.chart.theme.toLowerCase())] };\n    }\n    ;\n    render() {\n        return (<div className='control-pane'>\n                <style>{SAMPLE_CSS}</style>\n                <div className='control-section'>\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{ intervalType: 'Years', valueType: 'DateTime', edgeLabelPlacement: 'Shift', title: 'Years', majorGridLines: { width: 0 } }} primaryYAxis={{ interval: 2000, minimum: 0, maximum: 12000, title: 'Values', lineStyle: { width: 0 }, majorTickLines: { width: 0 } }} chartArea={{ border: { width: 0 } }} legendSettings={{ visible: false }} title=\"Chart with 100k points\" width={Browser.isDevice ? '100%' : '75%'} loaded={this.onChartLoad.bind(this)} load={this.load.bind(this)}>\n                        <Inject services={[AreaSeries, DateTime, Legend]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective name='Series1' type='Area'/>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                    <svg style={{ height: '0' }}>\n                        <defs>\n                            <linearGradient id=\"material-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"fabric-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"bootstrap-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"bootstrap4-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"highcontrast-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"tailwind-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"tailwind3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"tailwind3-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"bootstrap5-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"material-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"fabric-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"bootstrap-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"tailwind-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"bootstrap5-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"fluent-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"fluent-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"material3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                            <linearGradient id=\"material3-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                <stop offset=\"0\"></stop>\n                                <stop offset=\"1\"></stop>\n                            </linearGradient>\n                        </defs>\n                    </svg>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Performance />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}