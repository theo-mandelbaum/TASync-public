{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Area series\n */\nimport * as React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, Highlight, SeriesDirective, ChartAnnotation, AnnotationsDirective, AnnotationDirective, Inject, DateTime, AreaSeries, Legend } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\nexport let OTHERS = [\n    { x: new Date(1988, 0, 1), y: -0.16 }, { x: new Date(1989, 0, 1), y: -0.17 }, { x: new Date(1990, 0, 1), y: -0.08 },\n    { x: new Date(1992, 0, 1), y: 0.08 }, { x: new Date(1996, 0, 1), y: 0.161 }, { x: new Date(1998, 0, 1), y: 0.48 },\n    { x: new Date(1999, 0, 1), y: 0.16 }, { x: new Date(2001, 0, 1), y: 0.4 }, { x: new Date(2002, 0, 1), y: 0.32 },\n    { x: new Date(2003, 0, 1), y: 0.807 }, { x: new Date(2005, 0, 1), y: 1.12 }, { x: new Date(2006, 0, 1), y: 1.614 },\n    { x: new Date(2008, 0, 1), y: 1.21 }, { x: new Date(2009, 0, 1), y: 1.12 }, { x: new Date(2011, 0, 1), y: 0.64 },\n    { x: new Date(2013, 0, 1), y: 0.161 }, { x: new Date(2018, 0, 1), y: -0.08 }\n];\nexport let TRACK = [\n    { x: new Date(1973, 0, 1), y: 2.58 }, { x: new Date(1975, 0, 1), y: 2.25 }, { x: new Date(1977, 0, 1), y: 3.55 },\n    { x: new Date(1978, 0, 1), y: 2.42 }, { x: new Date(1981, 0, 1), y: -0.24 }, { x: new Date(1982, 0, 1), y: -0 }\n];\nexport let STREAMING = [\n    { x: new Date(2011, 0, 1), y: 0.48 }, { x: new Date(2013, 0, 1), y: 1.61 }, { x: new Date(2015, 0, 1), y: 2.12 },\n    { x: new Date(2017, 0, 1), y: 7.18 }\n];\nexport let DOWNLOADS = [\n    { x: new Date(2004, 0, 1), y: 0.48 }, { x: new Date(2007, 0, 1), y: 1.45 }, { x: new Date(2012, 0, 1), y: 2.82 },\n    { x: new Date(2013, 0, 1), y: 2.58 }, { x: new Date(2015, 0, 1), y: 2.01 }, { x: new Date(2016, 0, 1), y: 1.61 },\n    { x: new Date(2017, 0, 1), y: 0.8 }\n];\nexport let COMPACT = [\n    { x: new Date(1990, 0, 1), y: 0.69 }, { x: new Date(1992, 0, 1), y: 2.86 }, { x: new Date(1995, 0, 1), y: 10.2 },\n    { x: new Date(1996, 0, 1), y: 13.0 }, { x: new Date(1997, 0, 1), y: 14.35 }, { x: new Date(1998, 0, 1), y: 15.17 },\n    { x: new Date(1999, 0, 1), y: 14.89 }, { x: new Date(2000, 0, 1), y: 18.96 }, { x: new Date(2001, 0, 1), y: 18.78 },\n    { x: new Date(2004, 0, 1), y: 14.25 }, { x: new Date(2005, 0, 1), y: 14.24 }, { x: new Date(2006, 0, 1), y: 12.34 },\n    { x: new Date(2007, 0, 1), y: 9.34 }, { x: new Date(2008, 0, 1), y: 4.45 }, { x: new Date(2010, 0, 1), y: 1.46 },\n    { x: new Date(2011, 1, 1), y: 0.64 }\n];\nexport let CASSETTE = [\n    { x: new Date(1976, 0, 1), y: 0.08 }, { x: new Date(1979, 0, 1), y: 1.85 }, { x: new Date(1980, 0, 1), y: 2.0 },\n    { x: new Date(1982, 0, 1), y: 3.55 }, { x: new Date(1984, 0, 1), y: 5.4 }, { x: new Date(1985, 0, 1), y: 5.24 },\n    { x: new Date(1988, 0, 1), y: 6.94 }, { x: new Date(1989, 0, 1), y: 6.85 }, { x: new Date(1990, 0, 1), y: 7.02 },\n    { x: new Date(1992, 0, 1), y: 5.81 }, { x: new Date(1993, 0, 1), y: 5.32 }, { x: new Date(1994, 0, 1), y: 4.03 },\n    { x: new Date(1997, 0, 1), y: 2.25 }, { x: new Date(1998, 0, 1), y: 2.01 }, { x: new Date(1999, 0, 1), y: 0.8 },\n    { x: new Date(2001, 0, 1), y: 0.4 }\n];\nexport let VINYL = [\n    { x: new Date(1973, 0, 1), y: 7.74 }, { x: new Date(1974, 0, 1), y: 7.58 }, { x: new Date(1976, 0, 1), y: 8.23 },\n    { x: new Date(1977, 0, 1), y: 9.68 }, { x: new Date(1978, 0, 1), y: 10.16 }, { x: new Date(1979, 0, 1), y: 8.15 },\n    { x: new Date(1981, 0, 1), y: 6.77 }, { x: new Date(1982, 0, 1), y: 5.64 }, { x: new Date(1984, 0, 1), y: 4.35 },\n    { x: new Date(1985, 0, 1), y: 2.5 }, { x: new Date(1989, 0, 1), y: 0.64 }, { x: new Date(1990, 0, 1), y: 0 }\n];\nlet content = '<div style=\"font-weight: bold; color: white; font-size: 11px;\">8-TRACK</div>';\nlet content1 = '<div style=\"font-weight: bold; color: white;font-size: 11px;\">VINYL</div>';\nlet content2 = '<div style=\"font-weight: bold; color: white;font-size: 11px;\">CASSETTE</div>';\nlet content3 = '<div style=\"font-weight: bold; color: white;font-size: 11px;\">COMPACT DISC</div>';\nlet content4 = '<div style=\"font-weight: bold; color: white;font-size: 11px;\">OTHERS</div>';\nlet content5 = '<div style=\"font-weight: bold; color: white; font-size: 9px;\">DOWNLOAD</div>';\nlet content6 = '<div style=\"font-weight: bold; color: white;font-size: 11px;\">STREAMING</div>';\nconst SAMPLE_CSS = `\n      .control-fluid {\n          padding: 0px !important;\n      }`;\n/**\n * Area sampleuiz\n */\nexport class Area extends SampleBase {\n    render() {\n        return (<div className=\"control-pane\">\n                 <style>{SAMPLE_CSS}</style>\n                 <div className=\"control-section\">\n                     <ChartComponent id=\"charts\" style={{ textAlign: 'center' }} primaryXAxis={{ valueType: 'DateTime', minimum: new Date(1973, 1, 1), maximum: new Date(2018, 1, 1), interval: 5, labelFormat: 'y', majorGridLines: { width: 0 }, edgeLabelPlacement: 'Shift' }} primaryYAxis={{ title: 'In Billions (USD)', labelFormat: '{value}M', interval: 5, minimum: 0, maximum: 25, lineStyle: { width: 0 }, majorTickLines: { width: 0 }, minorTickLines: { width: 0 } }} load={this.load.bind(this)} width={Browser.isDevice ? '100%' : '75%'} chartArea={{ border: { width: 0 } }} title=\"US Music Sales By Format\" loaded={this.onChartLoad.bind(this)}>\n                         <Inject services={[AreaSeries, DateTime, ChartAnnotation, Legend, Highlight]}/>\n                         <AnnotationsDirective>\n                             <AnnotationDirective content={content} region=\"Series\" x=\"8%\" y=\"95%\"></AnnotationDirective>\n                             <AnnotationDirective content={content1} region=\"Series\" x=\"12%\" y=\"80%\"></AnnotationDirective>\n                             <AnnotationDirective content={content2} region=\"Series\" x=\"35%\" y=\"87%\"></AnnotationDirective>\n                             <AnnotationDirective content={content3} region=\"Series\" x=\"63%\" y=\"70%\"></AnnotationDirective>\n                             <AnnotationDirective content={content4} region=\"Series\" x=\"75%\" y=\"98%\"></AnnotationDirective>\n                             <AnnotationDirective content={content5} region=\"Series\" x=\"85%\" y=\"93%\"></AnnotationDirective>\n                             <AnnotationDirective content={content6} region=\"Series\" x=\"93%\" y=\"96%\"></AnnotationDirective>\n                         </AnnotationsDirective>\n                         <SeriesCollectionDirective>\n                             <SeriesDirective dataSource={COMPACT} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={DOWNLOADS} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={STREAMING} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={CASSETTE} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={VINYL} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={TRACK} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                             <SeriesDirective dataSource={OTHERS} xName=\"x\" yName=\"y\" opacity={1} type=\"Area\" width={2} border={{ width: 1.5, color: 'white' }}></SeriesDirective>\n                         </SeriesCollectionDirective>\n                     </ChartComponent>\n                 </div>\n             </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Area />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}