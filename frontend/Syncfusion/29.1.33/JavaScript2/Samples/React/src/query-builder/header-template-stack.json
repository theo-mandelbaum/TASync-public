{"index.css":"    .e-query-builder {\n        margin: 0 auto;\n    }\n    .e-query-builder .query-template-control .cndtnbtn.e-control.e-dropdownlist.e-lib.e-input {\n        padding-left: 10px;\n    }\n    .e-query-builder .query-template-control span.e-custom-group-btn {\n        max-width: 100px;\n        border-radius: 5px !important;\n        border-width: 1px !important; \n    }\n    .e-query-builder .query-template-control .e-custom-group-btn.e-input-focus::before, .e-custom-group-btn.e-input-focus::after {\n        background: transparent !important;\n        }\n    \n    .e-query-builder .query-template-control .e-custom-group-btn{\n        padding-left: 10px;\n        height: 32px;\n    }\n    .e-bigger .e-query-builder .e-custom-group-btn {\n        padding-left: 10px;\n        height: 36px;\n    }\n    .e-query-builder .query-template-control .e-header {\n        display: inline-block;\n        float: right;\n    }\n    .e-query-builder .query-template-control .e-qb-hdr-content {\n        display: inline-block;\n        padding: 5px;\n    }\n    .e-query-builder .query-template-control .e-grp-btn {\n        background-color: #6c757d !important;\n    }\n    .e-query-builder .query-template-control .e-cond-btn {\n        background-color: #6c757d !important;\n    }\n    .e-query-builder .query-template-control .e-grp-btn:hover {\n        background-color: #545c63 !important;\n    }\n    .e-query-builder .query-template-control .e-cond-btn:hover {\n        background-color: #545c63 !important;\n    }\n    @media only screen and (max-width: 700px) {\n        .e-query-builder .e-header {\n            float: none !important;\n        }\n        .e-query-builder .e-qb-hdr-content {\n            padding-left: 0px !important;\n            padding-right: 10px !important;\n            padding-top: 10px !important;\n        }\n    }","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { QueryBuilderComponent } from '@syncfusion/ej2-react-querybuilder';\nimport { getComponent, closest } from '@syncfusion/ej2-base';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from './sample-base';\n\nexport class HeaderTemplate extends SampleBase {\n    qryBldrObj;\n    columnData;\n    importRules;\n    constructor(args) {\n        super(args);\n        this.columnData = [\n            { field: 'EmployeeID', label: 'EmployeeID', type: 'number' },\n            { field: 'FirstName', label: 'FirstName', type: 'string' },\n            { field: 'LastName', label: 'LastName', type: 'string' },\n            { field: 'HireDate', label: 'HireDate', type: 'date', format: 'dd/MM/yyyy' },\n            { field: 'Country', label: 'Country', type: 'string' },\n        ];\n        this.importRules = {\n            'condition': 'and',\n            'rules': [{\n                    'label': 'First Name',\n                    'field': 'FirstName',\n                    'type': 'string',\n                    'operator': 'equal',\n                    'value': 'Nancy'\n                },\n                {\n                    'label': 'Country',\n                    'field': 'Country',\n                    'type': 'string',\n                    'operator': 'equal',\n                    'value': \"USA\"\n                }\n            ]\n        };\n    }\n    headerTemplate(props) {\n        return (<HeaderFormTemplate {...props}/>);\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section'>\n                        <div className='col-lg-12 control-section'>\n                            <QueryBuilderComponent id=\"querybuilder\" columns={this.columnData} rule={this.importRules} headerTemplate={this.headerTemplate} ref={(scope) => { this.qryBldrObj = scope; }}>\n                            </QueryBuilderComponent>\n                        </div>\n                </div>\n            </div>);\n    }\n}\nexport class HeaderFormTemplate extends React.Component {\n    items;\n    fields;\n    qryBldrObj;\n    constructor(props) {\n        super(props);\n        this.items = [{ 'key': 'AND', 'value': 'and' }, { 'key': 'OR', 'value': 'or' }];\n        this.fields = { text: 'key', value: 'value' };\n        this.state = Object.assign({}, props);\n        this.qryBldrObj = getComponent(document.getElementById('querybuilder'), 'query-builder');\n    }\n    conditionChange(args) {\n        this.qryBldrObj.notifyChange(args.value, args.element, 'condition');\n    }\n    addGroupClick(args) {\n        let addbtn = args.currentTarget.offsetParent.id;\n        let ddb = addbtn.split('_');\n        this.qryBldrObj.addGroups([{ condition: 'and', 'rules': [{}] }], ddb[1]);\n    }\n    addRuleClick(args) {\n        let addbtn = args.currentTarget.offsetParent.id;\n        let ddb = addbtn.split('_');\n        this.qryBldrObj.addRules([{}], ddb[1]);\n    }\n    onClick(args) {\n        this.qryBldrObj.deleteGroup(closest(args.target.offsetParent, '.e-group-container'));\n    }\n    render() {\n        const args = this.state;\n        return (<div className=\"query-template-control\">\n        <div className=\"e-groupheader\">\n            <DropDownListComponent id={args.ruleID + \"_cndtn\"} cssClass='e-custom-group-btn' width=\"100px\" dataSource={this.items} fields={this.fields} value={args.condition} change={this.conditionChange.bind(this)}/>\n            <div className=\"e-header\">\n                <div className=\"e-qb-hdr-content\">\n                    <ButtonComponent className=\"e-grp-btn\" cssClass='e-primary' onClick={this.addGroupClick.bind(this)}>Add Group</ButtonComponent>\n                </div>\n                <div className=\"e-qb-hdr-content\">\n                    <ButtonComponent className=\"e-cond-btn\" cssClass='e-primary' onClick={this.addRuleClick.bind(this)}>Add Condition</ButtonComponent>\n                </div>\n            {(() => {\n                if (args.ruleID !== \"querybuilder_group0\") {\n                    return (<div className=\"e-qb-hdr-content\">\n                <ButtonComponent id={args.ruleID + \"_dltbtn\"} cssClass='e-danger' onClick={this.onClick.bind(this)}>Remove</ButtonComponent>\n                </div>);\n                }\n            })()}\n            </div>\n        </div>\n        </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<HeaderTemplate />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-querybuilder\":\"*\",\"@syncfusion/ej2-react-querybuilder\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}