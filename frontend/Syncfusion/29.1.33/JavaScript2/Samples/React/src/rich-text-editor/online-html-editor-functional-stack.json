{"index.css":"   .onlineEditor #defaultRTE {\n      overflow: hidden;\n      border: none;\n    }\n    .onlineEditor .e-splitter .CodeMirror {\n        height: 405px;\n      }\n      .onlineEditor .heading {\n      float: left;\n      width: 100%;\n      position: relative;\n      box-sizing: border-box;\n      padding: 0px;\n      padding-left:0px;\n      padding-right:0px;\n    }\n\n    .onlineEditor .title {\n      color: #333333;\n      letter-spacing: 1px;\n      padding-left: 10px;\n      text-align: center;\n      font-size: 12px !important;\n      margin: 10px 0;\n    }\n\n    .onlineEditor .e-control.e-splitter .e-split-bar.e-split-bar-horizontal.e-last-bar {\n      margin: 0;\n    }\n    .onlineEditor .sb-content-section {\n     border-bottom: none;\n     border-right: none;  \n    }\n\n    .onlineEditor .sample-head {\n      height: 48px;\n      background: #ffffff;\n      box-shadow: 0 8px 11px -6px rgba(0, 0, 0, 0.12);\n      z-index: 1001;\n      opacity: 100;\n      display: none;\n    }\n\n    .onlineEditor .head-content {\n      padding: 15px 0 0 35px;\n      font-weight: 499;\n      line-height: 18px;\n      font-size: 15px;\n      color: #000000;\n      font-family: sans-serif;\n    }\n\n    .onlineEditor table {\n      width: 100%;\n    }\n\n    .onlineEditor table,\n    .onlineEditor th,\n    .onlineEditor td {\n      border: 1px solid black;\n      border-collapse: collapse;\n    }\n\n    .onlineEditor .container-fluid {\n      padding-right: 0px; \n      padding-left: 0px;\n    }\n    .onlineEditor .e-splitter.e-splitter-horizontal, .onlineEditor .e-splitter.e-splitter-vertical {\n    border-left: none;\n    }\n    .onlineEditor .control-section {\n      padding-top: 0px;\n      padding-bottom: 0px;\n    }\n    .onlineEditor .e-tab .e-tab-header:not(.e-vertical)::before {\n      border-bottom: none;\n      border-right: 1px solid #dee2e6;\n    }\n    .onlineEditor .e-richtexteditor.e-rte-tb-expand .e-rte-content, .e-richtexteditor.e-rte-tb-expand .e-source-content\n    .sb-content-section .e-lib .e-tab .e-control .e-template .e-keyboard .e-nested .sb-content-header  {\n      border-bottom: none;\n    }\n    .onlineEditor .e-toolbar.e-control[class*='e-toolbar']\n    {\n      border-bottom: none;\n    }\n    .onlineEditor .CodeMirror-scroll\n    {\n      border-top: 1px solid #e8e8e8;\n    }\n    .onlineEditor .heading .right .e-pane .e-pane-horizontal .e-scrollable\n    {\n      padding:0px;\n    }\n    .onlineEditor .CodeMirror-sizer{\n       margin-right: 10px;\n       border: none;\n    }\n    .fabric-dark .CodeMirror-gutters, .fabric-dark .CodeMirror {\n      background-color: #201F1F;\n      color: #fff;\n    }\n    .fluent-dark .CodeMirror-gutters, .fluent-dark .CodeMirror,\n    .fluent2-dark .CodeMirror-gutters, .fluent2-dark .CodeMirror {\n      background-color: #1B1A19;\n      color: #fff;\n    }\n    .material3-dark .CodeMirror-gutters, .material3-dark .CodeMirror {\n      background-color: #1C1B1F;\n      color: #fff;\n    }\n    .bootstrap-dark .CodeMirror-gutters, .bootstrap-dark .CodeMirror {\n      background-color: #1A1A1A;\n      color: #fff;\n    }\n    .bootstrap5-dark .CodeMirror-gutters, .bootstrap5-dark .CodeMirror,\n    .bootstrap5\\.3-dark .CodeMirror-gutters, .bootstrap5\\.3-dark .CodeMirror {\n      background-color: #212529;\n      color: #fff;\n    }\n    .material-dark .CodeMirror-gutters, .material-dark .CodeMirror {\n      background-color: #303030;\n      color: #fff;\n    }\n    .tailwind-dark .CodeMirror-gutters, .tailwind-dark .CodeMirror,\n    .tailwind3-dark .CodeMirror-gutters, .tailwind3-dark .CodeMirror {\n      background-color: #1F2937;\n      color: #fff;\n    }\n    .highcontrast .CodeMirror-gutters, .highcontrast .CodeMirror,\n    .fluent2-highcontrast .CodeMirror-gutters, .fluent2-highcontrast .CodeMirror {\n      background-color: #000000;\n      color: #fff;\n    }\n    .fabric-dark .title, .bootstrap5-dark .title,.bootstrap5\\.3-dark .title, .bootstrap-dark .title, .fluent-dark .title, .fluent2-dark .title, \n    .material-dark .title, .tailwind-dark .title, .tailwind3-dark .title, .highcontrast .title,.material3-dark .title, .fluent2-highcontrast .title{\n      color: #fff;\n    }\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PaneDirective, PanesDirective, SplitterComponent } from '@syncfusion/ej2-react-layouts';\nimport { RichTextEditorComponent, Toolbar, Inject, Image, Link, HtmlEditor } from '@syncfusion/ej2-react-richtexteditor';\nimport { QuickToolbar, Table, ToolbarType, Count, PasteCleanup, EmojiPicker, Audio, Video, FormatPainter } from '@syncfusion/ej2-react-richtexteditor';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n\nimport * as CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css.js';\nimport 'codemirror/mode/htmlmixed/htmlmixed.js';\n\nfunction OnlineHtmlEditor() {\n    let rteObj;\n    let splitterInstance;\n    // Rich Text Editor items list\n    const items = ['Bold', 'Italic', 'Underline', 'StrikeThrough',\n        'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\n        'Formats', 'Alignments', 'Blockquote', 'OrderedList', 'UnorderedList',\n        'Outdent', 'Indent',\n        'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n        '|', 'EmojiPicker', 'SourceCode', '|', 'Undo', 'Redo'\n    ];\n    //Rich Text Editor ToolbarSettings\n    const toolbarSettings = {\n        items: items,\n        type: ToolbarType.Expand,\n        enableFloating: false\n    };\n    let myCodeMirror;\n    let srcArea;\n    let textArea;\n    function onCreate() {\n        updateValue();\n        textArea = rteObj.contentModule.getEditPanel();\n        srcArea = document.querySelector('.source-code');\n        if (srcArea) {\n            srcArea.addEventListener('keyup', updateHtmlValue);\n        }\n    }\n    function updateHtmlValue() {\n        rteObj.value = myCodeMirror.getValue();\n        rteObj.dataBind();\n    }\n    function onChange() {\n        updateValue();\n    }\n    function onResizing() {\n        rteObj.refreshUI();\n    }\n    function updateValue() {\n        let mirrorView = document.querySelector('#src-view');\n        if (!mirrorView) {\n            mirrorView = createElement('div', {\n                className: 'e-content'\n            });\n            mirrorView.id = 'src-view';\n            let srcCodeElement = document.querySelector('.source-code');\n            if (srcCodeElement) {\n                srcCodeElement.appendChild(mirrorView);\n            }\n            mirrorView.innerHTML = '';\n            mirrorView.style.display = 'block';\n        }\n        let srcViewEle = document.querySelector('#src-view');\n        let codemirrorEle = document.querySelector('.CodeMirror-wrap');\n        if (codemirrorEle) {\n            codemirrorEle.remove();\n        }\n        if (rteObj.value) {\n            renderCodeMirror(srcViewEle, rteObj.value);\n        }\n    }\n    function renderCodeMirror(mirrorView, content) {\n        myCodeMirror = CodeMirror(mirrorView, {\n            value: content,\n            lineNumbers: true,\n            mode: 'text/html',\n            lineWrapping: true,\n        });\n    }\n    function updateOrientation() {\n        if (Browser.isDevice) {\n            splitterInstance.orientation = 'Vertical';\n            document.body.querySelector('.heading').style.width = 'auto';\n        }\n    }\n    function content1() {\n        return (<div className=\"content\">\n                <RichTextEditorComponent id='defaultRTE' ref={(richtexteditor) => { rteObj = richtexteditor; }} toolbarSettings={toolbarSettings} height='447px' saveInterval={1} showCharCount={true} maxLength={5000} created={onCreate.bind(this)} change={onChange.bind(this)} actionComplete={updateValue.bind(this)}>\n                    <h3>Welcome to the HTML real-time live editor!</h3>\n                    <p>Create and edit the valid HTML code simply! You don't worry about the HTML syntax to format your text content. The WYSIWYG editor (left side view) provided the toolbar to make format text and insert images, tables, and more options.</p>\n                    <h4>Don't worry about syntax</h4>\n                    <p>The content editing works bi-directional, you can write the HTML code on the right-side view (code view), and changes will reflect in the WYSIWYG editor.</p>\n                    <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar, Table, Count, PasteCleanup, EmojiPicker, Audio, Video, FormatPainter]}/>\n                </RichTextEditorComponent>\n            </div>);\n    }\n    ;\n    function content2() {\n        return (<div className=\"heading right\">\n                <h6 className=\"title\"><b>HTML SOURCE</b></h6>\n                <div className=\"splitter-default-content source-code pane2\" contentEditable={true}></div>\n            </div>);\n    }\n    ;\n    return (<div className=\"control-pane\">\n            <div className='control-section onlineEditor'>\n                <div id=\"rte-online-sample-view\">\n                    <SplitterComponent id='splitter-rte-online-html-editor' ref={splitter => (splitterInstance = splitter)} height='450px' width='100%' resizing={onResizing.bind(this)} created={updateOrientation.bind(this)}>\n                        <PanesDirective>\n                            <PaneDirective resizable={true} size='50%' min=\"40%\" cssClass='pane1' content={content1.bind(this)}></PaneDirective>\n                            <PaneDirective min=\"40%\" cssClass='pane2' content={content2.bind(this)}></PaneDirective>\n                        </PanesDirective>\n                    </SplitterComponent>\n                </div>\n            </div>\n\n        </div>);\n}\nexport default OnlineHtmlEditor;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<OnlineHtmlEditor />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-react-layouts\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}