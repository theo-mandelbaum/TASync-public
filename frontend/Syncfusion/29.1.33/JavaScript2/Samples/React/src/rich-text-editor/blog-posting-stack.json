{"index.css":"\n#rteUseCase .control-wrapper .tagSection {\n    float: left;\n}\n\n#rteUseCase .control-wrapper .likeAnswer span.e-icon {\n    float: left;\n}\n\n#rteUseCase .control-wrapper img.e-icon {\n    width: 13px;\n    height: 25px;\n}\n\n#rteUseCase .control-wrapper span.questionSide {\n    margin-left: 24px;\n    float: left;\n}\n\n#rteUseCase .control-wrapper .e-dislike {\n    margin-left: 16px;\n    float: left;\n}\n\n#rteUseCase .control-wrapper .questionHeader {\n    margin-top: 12px;\n    margin-bottom: 5px;\n}\n\n#rteUseCase .control-wrapper .header {\n    font-size: 16px;\n    font-family: roboto-Semibold, SegoeUI-Semibold;\n    color: #000000;\n    font-weight: bold;\n    clear: both;\n}\n\n.bootstrap-dark #rteUseCase .control-wrapper .header, .bootstrap5-dark #rteUseCase .control-wrapper .header,.bootstrap5\\.3-dark #rteUseCase .control-wrapper .header, .fluent-dark #rteUseCase .control-wrapper .header, \n.fluent2-dark #rteUseCase .control-wrapper .header, .fabric-dark #rteUseCase .control-wrapper .header, .material-dark #rteUseCase .control-wrapper .header,\n.tailwind-dark #rteUseCase .control-wrapper .header, .tailwind3-dark #rteUseCase .control-wrapper .header, .highcontrast #rteUseCase .control-wrapper .header,.material3-dark #rteUseCase .control-wrapper .header, .fluent2-highcontrast #rteUseCase .control-wrapper .header {\n    color: #fff;    \n}\n\n@media (max-width: 550px) {\n    #rteUseCase .control-wrapper .forum {\n        padding: 20px 20px 60px 20px;\n    }\n}\n\n@media (min-width: 550px) {\n    #rteUseCase .control-wrapper .forum {\n        margin: 0 auto;\n        width: 80%;\n        border: 1px solid #d8d8c0;\n        padding: 10px 90px 60px 90px;\n        box-shadow: 2px 2px 2px 2px #f5f5ef;\n    }\n    .highcontrast #rteUseCase .control-wrapper .forum {\n        border: 1px solid #fff;\n    }\n}\n\n#rteUseCase .control-wrapper .e-like span {\n    font-family: Helvetica, Times New Roman;\n    color: #E3175A;\n    font-size: 12px;\n}\n\n.bootstrap-dark .e-like span, .bootstrap5-dark .e-like span,.bootstrap5\\.3-dark .e-like span, .fluent-dark .e-like span,.material3-dark .e-like span,\n\t.fabric-dark .e-like span, .material-dark .e-like span, .tailwind-dark .e-like span, .tailwind3-dark .e-like span, .highcontrast .e-like span {\n        color: #ff4b86;\n    }\n\n#rteUseCase .control-wrapper .e-dislike span {\n    font-family: Helvetica, Times New Roman;\n    color: #717171;\n    font-size: 12px;\n\n}\n\n.bootstrap-dark .e-dislike span, .bootstrap5-dark .e-dislike span,.bootstrap5\\.3-dark .e-dislike span, .fluent-dark .e-dislike span,.material3-dark .e-dislike span,\n\t.fabric-dark .e-dislike span, .material-dark .e-dislike span, .tailwind-dark .e-dislike span, .tailwind3-dark .e-dislike span, .highcontrast .e-dislike span {\n        color: #BFBFBF;\n    }\n\n#rteUseCase .control-wrapper .detailsQuestion {\n    font-size: 12px;\n    font-family: roboto, SegoeUI;\n    color: #575757;\n    margin-top: 8px;\n}\n\n#rteUseCase .control-wrapper .explain {\n    margin-top: 16px;\n    font-size: 13px;\n    font-family: roboto, SegoeUI;\n    color: #000000;\n}\n\n.bootstrap-dark #rteUseCase .control-wrapper .explain, .bootstrap5-dark #rteUseCase .control-wrapper .explain,.bootstrap5\\.3-dark #rteUseCase .control-wrapper .explain, .fluent-dark #rteUseCase .control-wrapper .explain, \n.fabric-dark #rteUseCase .control-wrapper .explain, .material-dark #rteUseCase .control-wrapper .explain, .tailwind-dark #rteUseCase .control-wrapper .explain, .tailwind3-dark #rteUseCase .control-wrapper .explain, \n.highcontrast #rteUseCase .control-wrapper .explain,.material3-dark #rteUseCase .control-wrapper .explain, .fluent2-dark #rteUseCase .control-wrapper .explain, .fluent2-highcontrast #rteUseCase .control-wrapper .explain {\n    color: #fff;\n}\n\n.bootstrap-dark .detailsQuestion, .bootstrap5-dark .detailsQuestion,.bootstrap5\\.3-dark .detailsQuestion, .fluent-dark .detailsQuestion,.material3-dark .detailsQuestion,\n\t.fabric-dark .detailsQuestion, .material-dark .detailsQuestion, .tailwind-dark .detailsQuestion, .tailwind3-dark .detailsQuestion, .highcontrast .detailsQuestion {\n        color: #BFBFBF;\n    }\n\n#rteUseCase .control-wrapper .separator {\n    margin-top: 5px;\n    border-bottom: 1px solid #DADADA;\n    margin-bottom: 5px;\n}\n\n#rteUseCase .control-wrapper .tags td:first-child div {\n    margin-left: 0px;\n}\n\n#rteUseCase .control-wrapper .tag {\n    color: #000000;\n    padding: 3px 14px;\n    background-color: #DDDDDD;\n    font-size: 13px;\n    margin-left: 8px;\n    border-radius: 6px;\n    float: left;\n    text-transform: lowercase;\n    font-family: roboto, SegoeUI;\n}\n\n#rteUseCase .control-wrapper .answerCount {\n    color: #575757;\n    margin-top: 24px;\n    margin-bottom: 24px;\n    font-family: roboto-Semibold, SegoeUI-Semibold;\n    width: 63px;\n}\n\n.bootstrap-dark .answerCount, .bootstrap5-dark .answerCount,.bootstrap5\\.3-dark .answerCount, .fluent-dark .answerCount,.material3-dark .answerCount,\n.fabric-dark .answerCount, .material-dark .answerCount, .tailwind-dark .answerCount, .tailwind3-dark .answerCount, .highcontrast .answerCount {\n    color: #BFBFBF;\n}\n\n#rteUseCase .control-wrapper .likeAnswer {\n    margin-top: 13px;\n}\n\n#rteUseCase .control-wrapper .tags {\n    margin-top: 10px;\n    margin-bottom: 24px;\n}\n\n#rteUseCase .control-wrapper .questionar {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/emp1.png);\n    margin-top: 2px;\n}\n\n#rteUseCase .control-wrapper .raiser {\n    height: 34px;\n}\n\n#rteUseCase .control-wrapper .Questionarname {\n    margin-top: 13px;\n    float: left;\n    font-weight: 500;\n    margin-left: 10px;\n}\n\n#rteUseCase .control-wrapper .your-answer {\n    color: #3b3b3b;\n    font-weight: 300;\n}\n\n#rteUseCase .control-wrapper .rating {\n    padding-left: 10px;\n    margin-top: -95px;\n}\n\n#rteUseCase .control-wrapper .logos {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/emp2.png);\n}\n\n#rteUseCase .control-wrapper .logo {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/author.png);\n}\n\n#rteUseCase .control-wrapper .emp1 {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/1.png);\n}\n\n#rteUseCase .control-wrapper .emp2 {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/2.png);\n}\n\n#rteUseCase .control-wrapper .emp3 {\n    background-image: url(https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/3.png);\n}\n\n #rteUseCase .control-wrapper .blog-avatar{\n    height: 32px;\n    -ms-flex-line-pack: center;\n    align-content: center;\n    -ms-flex-align: center;\n    align-items: center;\n    background-color: #bcbcbc;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    border-radius: 50%;\n    color: #fff;\n    width: 32px;\n}\n\n#rteUseCase .control-wrapper .author {\n    margin-bottom: 5px;\n    height: 50px;\n    margin-top: 5px;\n}\n\n#rteUseCase .control-wrapper .name {\n    margin: 5px;\n    float: left;\n    color: blue;\n}\n\n#rteUseCase .control-wrapper .posting {\n    clear: both;\n    color: #000;\n    line-height: 24px;\n    margin-top: 12px;\n    font-family: roboto, SegoeUI;\n    font-size: 13px;\n    overflow-wrap: break-word;\n}\n\n.bootstrap-dark #rteUseCase .control-wrapper .posting, .bootstrap5-dark #rteUseCase .control-wrapper .posting,.bootstrap5\\.3-dark #rteUseCase .control-wrapper .posting, .fluent-dark #rteUseCase .control-wrapper .posting, \n.fabric-dark #rteUseCase .control-wrapper .posting, .material-dark #rteUseCase .control-wrapper .posting, .tailwind-dark #rteUseCase .control-wrapper .posting, .tailwind3-dark #rteUseCase .control-wrapper .posting,\n.highcontrast #rteUseCase .control-wrapper .posting,.material3-dark #rteUseCase .control-wrapper .posting, .fluent2-dark #rteUseCase .control-wrapper .posting, .fluent2-highcontrast #rteUseCase .control-wrapper .posting {\n    color: #fff;\n}\n\n#rteUseCase .control-wrapper .authorname {\n    font-family: SegoeUI-Semibold;\n    color: #000000;\n    font-size: 13px;\n}\n\n.bootstrap-dark #rteUseCase .control-wrapper .authorname, .bootstrap5-dark #rteUseCase .control-wrapper .authorname,.bootstrap5\\.3-dark #rteUseCase .control-wrapper .authorname, .fluent-dark #rteUseCase .control-wrapper .authorname, \n.fabric-dark #rteUseCase .control-wrapper .authorname, .material-dark #rteUseCase .control-wrapper .authorname, .tailwind-dark #rteUseCase .control-wrapper .authorname, .tailwind3-dark #rteUseCase .control-wrapper .authorname,\n.highcontrast #rteUseCase .control-wrapper .authorname,.material3-dark #rteUseCase .control-wrapper .authorname, .fluent2-dark #rteUseCase .control-wrapper .authorname, .fluent2-highcontrast #rteUseCase .control-wrapper .authorname {\n    color: #fff;\n}\n\n#rteUseCase .control-wrapper .detailsAnswer {\n    color: #575757;\n    font-size: 12px;\n    font-family: roboto, SegoeUI;\n    margin-top: 7px;\n}\n\n.bootstrap-dark .detailsAnswer, .bootstrap5-dark .detailsAnswer,.bootstrap5\\.3-dark .detailsAnswer, .fluent-dark .detailsAnswer,.material3-dark .detailsAnswer,\n\t.fabric-dark .detailsAnswer, .material-dark .detailsAnswer, .tailwind-dark .detailsAnswer, .tailwind3-dark .detailsAnswer, .highcontrast .detailsAnswer {\n        color: #BFBFBF;\n    }\n\n#rteUseCase .control-wrapper #buttonSection {\n    float: right;\n    margin-top: 11px;\n\n}\n\n#rteUseCase .control-wrapper #buttonSection button {\n    margin-right: 11px;\n}\n\n#rteUseCase .control-wrapper .authorname,\n#rteUseCase .control-wrapper .detailsAnswer {\n    margin-left: 11px;\n}\n\n#rteUseCase .control-wrapper .answerCount {\n    color: #76766f;\n    margin-top: 20px;\n    margin-bottom: 12px;\n}\n\n#rteUseCase .control-wrapper .questDesc {\n    min-height: 120px;\n    width: 100%;\n}\n\n#rteUseCase .control-wrapper .answerHeader {\n    border-bottom: 1px solid #ced1d1;\n    margin-bottom: 20px;\n    margin-top: -40px;\n}\n\n#rteUseCase .control-wrapper .answer {\n    margin-top: 15px;\n}\n\n#rteUseCase .control-wrapper .editorholder h4 {\n    padding: 15px 0;\n}\n\n#rteUseCase .control-wrapper #createpostholder {\n    margin-top: 25px;\n}\n\n#rteUseCase .e-richtexteditor .e-rte-content .e-content {\n    float: left;\n    width: 100%;\n}\n\n#rteUseCase .content-wrapper {\n    width: auto;\n    margin: 0;\n}\n.bootstrap-dark #rteUseCase .control-wrapper .tag,\n.bootstrap5-dark #rteUseCase .control-wrapper .tag, \n.bootstrap5\\.3-dark #rteUseCase .control-wrapper .tag, \n.fluent-dark #rteUseCase .control-wrapper .tag,\n.fluent2-dark #rteUseCase .control-wrapper .tag,\n.material3-dark #rteUseCase .control-wrapper .tag,\n.fabric-dark #rteUseCase .control-wrapper .tag, \n.material-dark #rteUseCase .control-wrapper .tag, \n.tailwind-dark #rteUseCase .control-wrapper .tag,\n.tailwind3-dark #rteUseCase .control-wrapper .tag,\n.highcontrast #rteUseCase .control-wrapper .tag{\n    color: #fff;\n    background: #484644;\n}   ","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Rich Text Editor usecase sample\n */\nimport * as React from 'react';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, Image, Link, QuickToolbar, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-react-richtexteditor';\nimport { SampleBase } from './sample-base';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\n\nexport class Forums extends SampleBase {\n    rteObj;\n    answerSectionEle;\n    answerSectionRef;\n    answerCountEle;\n    answerCountRef;\n    answerEle;\n    answerRef;\n    constructor(props) {\n        super(props);\n        this.answerSectionRef = element => {\n            this.answerSectionEle = element;\n        };\n        this.answerCountRef = element => {\n            this.answerCountEle = element;\n        };\n        this.answerRef = element => {\n            this.answerEle = element;\n        };\n    }\n    resetMessage() {\n        let answerElement = this.rteObj.contentModule.getEditPanel();\n        answerElement.innerHTML = '';\n        this.rteObj.value = '';\n        this.rteObj.refresh();\n    }\n    postMessage() {\n        let empCount = 0;\n        let answerElement = this.rteObj.contentModule.getEditPanel();\n        let comment = this.rteObj.getHtml();\n        let empList = ['emp1', 'emp2', 'emp3'];\n        let nameListList = ['Anne Dodsworth', 'Janet Leverling', 'Laura Callahan'];\n        if (comment !== null && comment.trim() !== '' && (answerElement.innerText.trim() !== '' ||\n            !isNOU(answerElement.querySelector('img')) || !isNOU(answerElement.querySelector('table')))) {\n            let answer = this.answerEle;\n            let cloneAnswer = answer.cloneNode(true);\n            let authorName = cloneAnswer.querySelector('.authorname');\n            let logo = cloneAnswer.querySelector('.logos');\n            logo.classList.remove('logos');\n            if (empCount < 3) {\n                logo.classList.add(empList[empCount]);\n                logo.classList.add('blog-avatar');\n                authorName.innerHTML = nameListList[empCount];\n                empCount++;\n            }\n            else {\n                logo.classList.add('logo');\n                logo.classList.add('blog-avatar');\n                authorName.innerHTML = 'User';\n            }\n            let timeZone = cloneAnswer.querySelector('.detailsAnswer');\n            let day = this.getMonthName(new Date().getMonth()) + ' ' + new Date().getDate();\n            let hr = new Date().getHours() + ':' + new Date().getMinutes();\n            if (new Date().getHours() > 12) {\n                hr = hr + ' PM';\n            }\n            else {\n                hr = hr + ' AM';\n            }\n            timeZone.innerHTML = 'Answered on ' + day + ', ' + new Date().getFullYear() + ' ' + hr;\n            let postContent = cloneAnswer.querySelector('.posting');\n            postContent.innerHTML = comment;\n            let postElement = this.answerSectionEle;\n            postElement.appendChild(cloneAnswer);\n            let countEle = this.answerCountEle;\n            let count = parseInt(countEle.innerHTML, null);\n            count = count + 1;\n            countEle.innerHTML = count.toString() + ' Answers';\n            answerElement.innerHTML = '';\n            this.rteObj.value = '';\n            this.rteObj.refresh();\n        }\n    }\n    getMonthName(index) {\n        let month = [];\n        month[0] = 'January';\n        month[1] = 'February';\n        month[2] = 'March';\n        month[3] = 'April';\n        month[4] = 'May';\n        month[5] = 'June';\n        month[6] = 'July';\n        month[7] = 'August';\n        month[8] = 'September';\n        month[9] = 'October';\n        month[10] = 'November';\n        month[11] = 'December';\n        return month[index];\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className=\"control-section\" id=\"rteUseCase\">\n                    <div className=\"control-wrapper\">\n                        <div className='forum'>\n                            <div className='questionSection'>\n                                <div className='raiser'>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <div className='questionar blog-avatar'> </div>\n                                            </td>\n                                            <td>\n                                                <div className='Questionarname'>Kimberly</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </div>\n                                <div className='questionHeader'>\n                                    <div className='header'>\n                                        How to add a custom item to the toolbar of Rich Text Editor\n                                    </div>\n                                    <div className='detailsQuestion'>Posted on May 7, 2018 6.10 PM</div>\n                                    <div className='explain'>\n                                        I want to add a custom icon, “code-mirror” to the toolbar of Rich Text Editor and display the Rich Text Editor content in code-mirror format.\n                                    </div>\n                                    <div className='tags'>\n                                        <div className='tagSection'>\n                                            <table>\n                                                <tr>\n                                                    <td>\n                                                        <div className='tag'> HTML </div>\n                                                    </td>\n                                                    <td>\n                                                        <div className='tag'> JavaScript </div>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                        <div className='questionLikes'>\n                                            <table>\n                                                <tr>\n                                                    <td>\n                                                        <span className='e-icon e-like questionSide'>\n                                                            <img className='e-icon' src='https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/like.svg' alt='like'/>\n                                                            <span>Like</span>\n                                                        </span>\n                                                    </td>\n                                                    <td>\n                                                        <span className='e-icon e-dislike'>\n                                                            <img className='e-icon' src='https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/dislike.svg' alt='dislike'/>\n                                                            <span>Dislike</span>\n                                                        </span>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='answerSection' ref={this.answerSectionRef}>\n                                <div className='answerCount' ref={this.answerCountRef}>1 Answer</div>\n                                <div className='answer' ref={this.answerRef}>\n                                    <table>\n                                        <tr>\n                                            <td rowSpan={2}>\n                                                <div className='logos blog-avatar'> </div>\n                                            </td>\n                                            <td>\n                                                <div className='authorname'>Mabel Weber</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div className='detailsAnswer'>Answered on May 7, 2018 6.30 PM</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div className='posting'>\n                                        To add a custom icon <b>code-mirror</b> to the toolbar, you have to use template option of the <b>toolbarSettings</b>. To know more about adding custom icons, refer to <a href='https://ej2.syncfusion.com/home/' target='_blank'>custom tool</a> sample of Rich Text Editor.\n                                    </div>\n                                    <div className='likeAnswer'>\n                                        <table>\n                                            <tr>\n                                                <td>\n                                                    <span className='e-icon e-like'>\n                                                        <img className='e-icon' src='https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/like.svg'/>\n                                                        <span>Like</span>\n                                                    </span>\n                                                </td>\n                                                <td>\n                                                    <span className='e-icon e-dislike'>\n                                                        <img className='e-icon' src='https://ej2.syncfusion.com/react/demos/src/rich-text-editor/images/dislike.svg'/>\n                                                        <span>Dislike</span>\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                            <div id=\"createpostholder\">\n                                <form>\n                                    <RichTextEditorComponent id=\"blogpost\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }}>\n                                        <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar, PasteCleanup, Table, Video, Audio]}/>\n                                    </RichTextEditorComponent>\n                                    <div id='buttonSection'>\n                                        <ButtonComponent id=\"rteCancel\" onClick={this.resetMessage.bind(this)} type='button'>Cancel</ButtonComponent>\n                                        <ButtonComponent id=\"rteSubmit\" onClick={this.postMessage.bind(this)} cssClass='e-primary' type='button'>Reply</ButtonComponent>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Forums />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}