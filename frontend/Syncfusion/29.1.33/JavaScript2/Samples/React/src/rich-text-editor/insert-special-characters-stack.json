{"index.css":".e-rte-custom-tbar-section #special_char,\n.e-rte-custom-tbar-section .char_block {\n    display: inline-block;\n}\n\n    #custom_tbar,\n    #custom_tbar div{\n        cursor: pointer;\n    }\n\n    #rteSpecial_char {\n        padding: 15px 0 15px 0;\n    }\n\n    .material .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #e3165b;\n        border-color: #e3165b;\n    }\n\n    .material-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #56a4fd;\n        border-color: #56a4fd;\n    }\n\n    .fabric .e-rte-custom-tbar-section .char_block.e-active,\n    .fabric-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0078d6;\n        border-color: #0078d6;\n    }\n\n    .bootstrap4 .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #007bff;\n        border-color: #007bff;\n    }\n\n    .bootstrap .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #317ab9;\n        border-color: #317ab9;\n    }\n\n    .highcontrast .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #ffd939;\n        border-color: #ffd939;\n    }\n    .material3 .e-rte-custom-tbar-section .char_block.e-active,\n    .material3-dark .e-rte-custom-tbar-section .char_block.e-active {\n\toutline: 1px solid #7D69B1;\n\tborder-color: #7D69B1;\n    }\n    .tailwind .e-rte-custom-tbar-section .char_block.e-active,\n    .tailwind3 .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #3730a3;\n        border-color: #3730a3;\n    }\n\n    .tailwind-dark .e-rte-custom-tbar-section .char_block.e-active,\n    .tailwind3-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #22d3ee;\n        border-color: #22d3ee;\n    }\n\n    .bootstrap5 .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap5\\.3 .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap5\\.3-dark .e-rte-custom-tbar-section .char_block.e-active,\n    .bootstrap5-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0D6EFD;\n        border-color: #0D6EFD;\n    }\n    \n    .fluent .e-rte-custom-tbar-section .char_block.e-active,\n    .fluent-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0078DE;\n        border-color: #0078DE;\n    }\n\n    .fluent2 .e-rte-custom-tbar-section .char_block.e-active,\n    .fluent2-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #0f6cbd;\n        border-color: #0f6cbd;\n    }\n\n    .fuent2-highcontrast .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #22d3ee;\n        border-color: #22d3ee;\n    }\n\n    .material3 .e-rte-custom-tbar-section .char_block.e-active,\n    .material3-dark .e-rte-custom-tbar-section .char_block.e-active {\n        outline: 1px solid #D0BCFF;\n        border-color: #D0BCFF;\n    }\n    \n    .fabric.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\n    .highcontrast.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\n        padding-right: 10px;\n    }\n\n    .bootstrap.e-bigger .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\n    .bootstrap .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\n        padding-right: 6px;\n    }\n\n    .fabric .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text,\n    .highcontrast .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn .e-tbar-btn-text {\n        padding-right: 8px;\n    }\n\n    .e-rte-custom-tbar-section .char_block {\n        width: 30px;\n        height: 30px;\n        line-height: 30px;\n        margin: 0 5px 5px 0;\n        text-align: center;\n        vertical-align: middle;\n        border: 1px solid #DDDDDD;\n        font-size: 20px;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    #rteCustomTool .e-richtexteditor .e-rte-content .e-content {\n        float: left;\n        width: 100%;\n    }\n\n    #rteCustomTool .content-wrapper {\n        width: auto;\n        margin: 0;\n    }\n\n    #custom_tbar div{\n        font-size: 16px;\n    }\n\n    .e-bigger #custom_tbar div{\n        font-size: 18px;\n    }\n\n    @media (min-width: 320px) and (max-width: 480px) {\n        .fabric.e-bigger #customTbarDlg {\n            min-width: 281px;\n        }\n\t\t\n\t\t#rteSpecial_char {\n        padding: 15px 0 15px 7px;\n\t\t}\n\n        .fabric #customTbarDlg {\n            min-width: 241px;\n        }\n\n        .bootstrap.e-bigger #customTbarDlg,\n        .bootstrap #customTbarDlg {\n            min-width: 223px;\n        }\n\n        .highcontrast.e-bigger #customTbarDlg {\n            min-width: 283px;\n        }\n        .highcontrast #customTbarDlg {\n            min-width: 243px;\n        }\n        .material #customTbarDlg {\n            min-width: 224px;\n        }\n        .material.e-bigger #customTbarDlg {\n            min-width: 236px;\n        }\n    }\n\t\n#rteSection {\n    height: 500px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Rich Text Editor custom toolbar sample\n */\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { HtmlEditor, Image, Inject, Link, NodeSelection, QuickToolbar, RichTextEditorComponent, Toolbar, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-react-richtexteditor';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\n\nexport class InsertSpecialCharacters extends SampleBase {\n    rteObj;\n    rteSpecialCharEle;\n    rteSpecialCharRef;\n    rteSectionEle = null;\n    rteSectionRef;\n    constructor(props) {\n        super(props);\n        this.rteSpecialCharEle = null;\n        this.rteSpecialCharRef = element => {\n            this.rteSpecialCharEle = element;\n        };\n        this.rteSectionRef = element => {\n            this.rteSectionEle = element;\n        };\n    }\n    selection = new NodeSelection();\n    range;\n    customBtn;\n    dialogCtn;\n    saveSelection;\n    dialogObj;\n    // Rich Text Editor items list\n    items = ['Bold', 'Italic', 'Underline', '|', 'Formats', 'Alignments', 'Blockquote', 'OrderedList',\n        'UnorderedList', '|', 'CreateLink', 'Image', '|', 'SourceCode',\n        {\n            tooltipText: 'Insert Symbol',\n            template: '<button class=\"e-tbar-btn e-btn\" tabindex=\"-1\" id=\"custom_tbar\"  style=\"width:100%\"><div class=\"e-tbar-btn-text\" style=\"font-weight: 500;\"> &#937;</div></button>'\n        }, '|', 'Undo', 'Redo'\n    ];\n    //Rich Text Editor ToolbarSettings\n    toolbarSettings = {\n        items: this.items\n    };\n    dlgButtons = [{ buttonModel: { content: \"Insert\", isPrimary: true }, click: this.onInsert.bind(this) },\n        { buttonModel: { content: 'Cancel' }, click: this.onCancel }];\n    header = 'Special Characters';\n    target = this.rteSectionEle;\n    height = 'auto';\n    onCreate() {\n        this.customBtn = document.getElementById('custom_tbar');\n        this.customBtn.onclick = (e) => {\n            this.rteObj.contentModule.getEditPanel().focus();\n            this.dialogObj.element.style.display = '';\n            this.range = this.selection.getRange(document);\n            this.saveSelection = this.selection.save(this.range, document);\n            this.dialogObj.content = this.rteSpecialCharEle;\n            this.dialogObj.show();\n        };\n    }\n    dialogCreate() {\n        this.dialogCtn = this.rteSpecialCharEle;\n        this.dialogCtn.onclick = (e) => {\n            let target = e.target;\n            let activeEle = this.dialogObj.element.querySelector('.char_block.e-active');\n            if (target.classList.contains('char_block')) {\n                target.classList.add('e-active');\n                if (activeEle) {\n                    activeEle.classList.remove('e-active');\n                }\n            }\n        };\n    }\n    onInsert() {\n        let activeEle = this.dialogObj.element.querySelector('.char_block.e-active');\n        if (activeEle) {\n            if (this.rteObj.formatter.getUndoRedoStack().length === 0) {\n                this.rteObj.formatter.saveData();\n            }\n            this.saveSelection.restore();\n            this.rteObj.executeCommand('insertText', activeEle.textContent);\n            this.rteObj.formatter.saveData();\n            this.rteObj.formatter.enableUndo(this.rteObj);\n        }\n        this.dialogOverlay();\n    }\n    dialogOverlay() {\n        let activeEle = this.dialogObj.element.querySelector('.char_block.e-active');\n        if (activeEle) {\n            activeEle.classList.remove('e-active');\n        }\n        this.dialogObj.hide();\n    }\n    onCancel() {\n        let activeEle = this.element.querySelector('.char_block.e-active');\n        if (activeEle) {\n            activeEle.classList.remove('e-active');\n        }\n        this.hide();\n    }\n    actionCompleteHandler(e) {\n        if (e.requestType === 'SourceCode') {\n            this.rteObj.getToolbar().querySelector('#custom_tbar').parentElement.classList.add('e-overlay');\n        }\n        else if (e.requestType === 'Preview') {\n            this.rteObj.getToolbar().querySelector('#custom_tbar').parentElement.classList.remove('e-overlay');\n        }\n    }\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section e-rte-custom-tbar-section' id=\"rteCustomTool\">\n          <div className='rte-control-section' ref={this.rteSectionRef} id='rteSection'>\n            <RichTextEditorComponent id=\"specialCharRTE\" ref={(scope) => { this.rteObj = scope; }} toolbarSettings={this.toolbarSettings} actionComplete={this.actionCompleteHandler.bind(this)} created={this.onCreate.bind(this)}>\n              <div style={{ display: 'block' }}><p style={{ marginRight: '10px' }}>The custom command \"insert special character\" is configured as the last item of the toolbar. Click on the command and choose the special character you want to include from the popup.</p></div>\n              <Inject services={[HtmlEditor, Toolbar, Link, Image, QuickToolbar, PasteCleanup, Table, Video, Audio]}/>\n            </RichTextEditorComponent>\n            <DialogComponent id='customTbarDlg' ref={(scope) => { this.dialogObj = scope; }} buttons={this.dlgButtons} overlayClick={this.dialogOverlay.bind(this)} header={this.header} visible={false} showCloseIcon={false} width='43%' target={'#rteSection'} height={this.height} created={this.dialogCreate.bind(this)} isModal={true}>\n            </DialogComponent>\n            <div id=\"customTbarDialog\" style={{ display: 'none' }}>\n              <div id=\"rteSpecial_char\" ref={this.rteSpecialCharRef}>\n                <div className=\"char_block\" title=\"&#94;\">&#94;</div>\n                <div className=\"char_block\" title=\"&#95;\">&#95;</div>\n                <div className=\"char_block\" title=\"&#96;\">&#96;</div>\n                <div className=\"char_block\" title=\"&#123;\">&#123;</div>\n                <div className=\"char_block\" title=\"&#124;\">&#124;</div>\n                <div className=\"char_block\" title=\"&#125;\">&#125;</div>\n                <div className=\"char_block\" title=\"&#126;\">&#126;</div>\n                <div className=\"char_block\" title=\"&#160;\">&#160;</div>\n                <div className=\"char_block\" title=\"&#161;\">&#161;</div>\n                <div className=\"char_block\" title=\"&#162;\">&#162;</div>\n                <div className=\"char_block\" title=\"&#163;\">&#163;</div>\n                <div className=\"char_block\" title=\"&#164;\">&#164;</div>\n                <div className=\"char_block\" title=\"&#165;\">&#165;</div>\n                <div className=\"char_block\" title=\"&#x20B9;\">&#x20B9;</div>\n                <div className=\"char_block\" title=\"&#166;\">&#166;</div>\n                <div className=\"char_block\" title=\"&#167;\">&#167;</div>\n                <div className=\"char_block\" title=\"&#168;\">&#168;</div>\n                <div className=\"char_block\" title=\"&#169;\">&#169;</div>\n                <div className=\"char_block\" title=\"&#170;\">&#170;</div>\n                <div className=\"char_block\" title=\"&#171;\">&#171;</div>\n                <div className=\"char_block\" title=\"&#172;\">&#172;</div>\n                <div className=\"char_block\" title=\"&#173;\">&#45;­</div>\n                <div className=\"char_block\" title=\"&#174;\">&#174;</div>\n                <div className=\"char_block\" title=\"&#175;\">&#175;</div>\n                <div className=\"char_block\" title=\"&#176;\">&#176;</div>\n                <div className=\"char_block\" title=\"&#177;\">&#177;</div>\n                <div className=\"char_block\" title=\"&#178;\">&#178;</div>\n                <div className=\"char_block\" title=\"&#179;\">&#179;</div>\n                <div className=\"char_block\" title=\"&#180;\">&#180;</div>\n                <div className=\"char_block\" title=\"&#181;\">&#181;</div>\n                <div className=\"char_block\" title=\"&#182;\">&#182;</div>\n                <div className=\"char_block\" title=\"&#183;\">&#183;</div>\n                <div className=\"char_block\" title=\"&#184;\">&#184;</div>\n                <div className=\"char_block\" title=\"&#185;\">&#185;</div>\n                <div className=\"char_block\" title=\"&#186;\">&#186;</div>\n                <div className=\"char_block\" title=\"&#187;\">&#187;</div>\n                <div className=\"char_block\" title=\"&#188;\">&#188;</div>\n                <div className=\"char_block\" title=\"&#189;\">&#189;</div>\n                <div className=\"char_block\" title=\"&#190;\">&#190;</div>\n                <div className=\"char_block\" title=\"&#191;\">&#191;</div>\n                <div className=\"char_block\" title=\"&#192;\">&#192;</div>\n                <div className=\"char_block\" title=\"&#193;\">&#193;</div>\n                <div className=\"char_block\" title=\"&#194;\">&#194;</div>\n                <div className=\"char_block\" title=\"&#195;\">&#195;</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<InsertSpecialCharacters />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}