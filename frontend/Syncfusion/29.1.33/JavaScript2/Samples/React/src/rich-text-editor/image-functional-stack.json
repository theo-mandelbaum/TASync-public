{"index.css":".e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e341\";\n}\n\n.e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e354\";\n}\n\n.bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e752\";\n}\n\n.bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e778\";\n}\n\n.bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5\\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5\\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5_3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5_3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,\n.fluent2-highcontrast .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {\n    content: \"\\e713\";\n}\n\n.bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5\\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5\\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5_3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5_3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,\n.fluent2-highcontrast .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {\n    content: \"\\e755\";\n}\n\n#rteImage .e-richtexteditor .e-rte-content .e-content {\n    float: left;\n    width: 100%;\n}\n\n#rteImage .content-wrapper {\n    width: auto;\n    margin: 0;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, QuickToolbar, Image, Link, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-react-richtexteditor';\n\nimport { NodeSelection } from '@syncfusion/ej2-react-richtexteditor';\n\nimport { PropertyPane } from './property-pane';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nfunction ImageSample() {\n    let rteObj;\n    let formatdrop;\n    let readonly;\n    const value = \"Blob\";\n    const fields = { text: \"text\", value: \"value\" };\n    const formatData = [\n        { text: 'Blob', value: 'Blob' },\n        { text: 'Base64', value: 'Base64' }\n    ];\n    const image = ['Replace', 'Align', 'Caption', 'Remove', 'InsertLink', 'OpenImageLink', '-',\n        'EditImageLink', 'RemoveImageLink', 'Display', 'AltText', 'Dimension',\n        {\n            tooltipText: 'Rotate Left',\n            template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateLeft\"><span class=\"e-btn-icon e-icons e-rotate-left\"></span>'\n        },\n        {\n            tooltipText: 'Rotate Right',\n            template: '<button class=\"e-tbar-btn e-btn\" id=\"roatateRight\"><span class=\"e-btn-icon e-icons e-rotate-right\"></span>'\n        }];\n    const quickToolbarSettings = {\n        image: image\n    };\n    function onToolbarClick(e) {\n        let nodeObj = new NodeSelection();\n        let range = nodeObj.getRange(rteObj.contentModule.getDocument());\n        let imgEle = nodeObj.getNodeCollection(range)[0];\n        if (e.item.tooltipText === 'Rotate Right') {\n            let transform = (imgEle.style.transform === '') ? 0 :\n                parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10);\n            imgEle.style.transform = 'rotate(' + (transform + 90) + 'deg)';\n            rteObj.formatter.saveData();\n            rteObj.formatter.enableUndo(rteObj);\n        }\n        else if (e.item.tooltipText === 'Rotate Left') {\n            let transform = (imgEle.style.transform === '') ? 0 :\n                Math.abs(parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10));\n            imgEle.style.transform = 'rotate(-' + (transform + 90) + 'deg)';\n            rteObj.formatter.saveData();\n            rteObj.formatter.enableUndo(rteObj);\n        }\n    }\n    const onCheckChange = (args) => {\n        rteObj.enableAutoUrl = args.checked;\n    };\n    const ondropChange = () => {\n        if (formatdrop.value === 'Base64') {\n            rteObj.insertImageSettings.saveFormat = 'Base64';\n        }\n        else {\n            rteObj.insertImageSettings.saveFormat = 'Blob';\n        }\n    };\n    return (<div className='control-pane'>\n            <div className='col-lg-8'>\n                <div className='control-section' id=\"rteAPI\">\n                    <div className='rte-control-section'>\n                        <RichTextEditorComponent id=\"imageRTE\" ref={(richtexteditor) => { rteObj = richtexteditor; }} toolbarClick={onToolbarClick.bind(this)} quickToolbarSettings={quickToolbarSettings}>\n                            <h2>Insert Image in Rich Text Editor!<br /></h2><p>You can insert and edit images within this editor. Click inside the editor and use the <strong>image tool</strong> to add an image.</p><h5>What You Can Do</h5><li><strong>Insert Images:</strong> Upload images from local storage or provide an image URL.</li><li><strong>Resize &amp; Drag:</strong> Easily adjust image dimensions and reposition them within the content.</li><li><strong>Align Images:</strong> Set images to align <strong>left, center, or right</strong>.</li><li><strong>Caption Support:</strong> Add captions to describe your images.</li><li><strong>Replace &amp; Remove:</strong> Change or delete images as needed.</li><h5>Try It Out!</h5><p><img id=\"rteImageID\" style={{ width: '300px', height: '300px', transform: 'rotate(0deg)' }} alt=\"Editor Features Overview\" src=\"https://cdn.syncfusion.com/ej2/richtexteditor-resources/RTE-Portrait.png\" className=\"e-rte-image e-imginline\"/></p>\n                            <Inject services={[HtmlEditor, Toolbar, Image, Link, QuickToolbar, PasteCleanup, Table, Video, Audio]}/>\n                        </RichTextEditorComponent>\n                    </div>\n                </div>\n            </div>\n            <div className='col-lg-4 property-section' id=\"rteAPIProperty\">\n                <PropertyPane title='Properties'>\n                    <table id=\"property\" title=\"Properties\" style={{ width: '100%', margin: '10px' }}>\n                        <tbody>\n                            <tr>\n                                <td style={{ padding: '8px', width: '50%' }}><div>EnableAutoUrl</div></td>\n                                <td style={{ paddingTop: '0px' }}>\n                                    <div style={{ paddingLeft: '0px', paddingTop: '0px' }}>\n                                        <CheckBoxComponent checked={false} ref={(scope) => { readonly = scope; }} change={onCheckChange.bind(this)}></CheckBoxComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td style={{ padding: '8px', width: '50%' }}><div>Save Format </div></td>\n                                <td>\n                                    <div style={{ paddingLeft: '10px', paddingTop: '0px' }}>\n                                        <DropDownListComponent id=\"formattingOption\" dataSource={formatData} ref={(dropdownlist) => { formatdrop = dropdownlist; }} fields={fields} change={ondropChange.bind(this)} value={value} popupHeight=\"200px\"/>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n        </div>);\n}\nexport default ImageSample;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ImageSample />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}