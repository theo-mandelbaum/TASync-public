{"index.css":"#rteIFrame .e-rte-content body{\n    color: black;\n    background-color: white;\n}\n\n.sb-header {\n    z-index: 100 !important;\n}\n\n#rteIFrame .e-richtexteditor .e-rte-content .e-content {\n    float: left;\n    width: 100%;\n}\n\n#rteIFrame .content-wrapper {\n    width: auto;\n    margin: 0;\n}\n\n.sb-content.e-view.hide-header {\n    top: 0 !important;\n}\n\n.sb-header.e-view.hide-header {\n    display: none;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Rich Text Editor Iframe sample\n */\nimport * as React from 'react';\nimport { RichTextEditorComponent, Toolbar, Inject, Image, Table, Link, HtmlEditor, QuickToolbar, Audio, Video, FormatPainter, EmojiPicker, PasteCleanup } from '@syncfusion/ej2-react-richtexteditor';\nimport { FileManager } from '@syncfusion/ej2-react-richtexteditor';\n\nimport { addClass, removeClass, Browser } from '@syncfusion/ej2-base';\n\nfunction IFrame() {\n    let rteObj;\n    const hostUrl = 'https://ej2-aspcore-service.azurewebsites.net/';\n    const iframeSetting = {\n        enable: true\n    };\n    // Rich Text Editor items list\n    const items = ['Bold', 'Italic', 'Underline', 'StrikeThrough', 'InlineCode', 'SuperScript', 'SubScript', '|',\n        'FontName', 'FontSize', 'FontColor', 'BackgroundColor', '|',\n        'LowerCase', 'UpperCase', '|',\n        'Formats', 'Alignments', 'Blockquote', '|', 'NumberFormatList', 'BulletFormatList', '|',\n        'Outdent', 'Indent', '|', 'CreateLink', 'Image', 'FileManager', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n        '|', 'EmojiPicker', 'Print', '|',\n        'SourceCode', 'FullScreen', '|', 'Undo', 'Redo'];\n    const fileManagerSettings = {\n        enable: true,\n        path: '/Pictures/Food',\n        ajaxSettings: {\n            url: hostUrl + 'api/FileManager/FileOperations',\n            getImageUrl: hostUrl + 'api/FileManager/GetImage',\n            uploadUrl: hostUrl + 'api/FileManager/Upload',\n            downloadUrl: hostUrl + 'api/FileManager/Download'\n        }\n    };\n    //Rich Text Editor ToolbarSettings\n    const toolbarSettings = {\n        items: items\n    };\n    function handleFullScreen(e) {\n        let sbCntEle = document.querySelector('.sb-content.e-view');\n        let sbHdrEle = document.querySelector('.sb-header.e-view');\n        let leftBar;\n        let transformElement;\n        if (Browser.isDevice) {\n            leftBar = document.querySelector('#right-sidebar');\n            transformElement = document.querySelector('.sample-browser.e-view.e-content-animation');\n        }\n        else {\n            leftBar = document.querySelector('#left-sidebar');\n            transformElement = document.querySelector('#right-pane');\n        }\n        if (e.targetItem === 'Maximize') {\n            if (Browser.isDevice && Browser.isIos) {\n                addClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            addClass([leftBar], ['e-close']);\n            removeClass([leftBar], ['e-open']);\n            if (!Browser.isDevice) {\n                transformElement.style.marginLeft = '0px';\n            }\n            transformElement.style.transform = 'inherit';\n        }\n        else if (e.targetItem === 'Minimize') {\n            if (Browser.isDevice && Browser.isIos) {\n                removeClass([sbCntEle, sbHdrEle], ['hide-header']);\n            }\n            removeClass([leftBar], ['e-close']);\n            if (!Browser.isDevice) {\n                addClass([leftBar], ['e-open']);\n                transformElement.style.marginLeft = leftBar.offsetWidth + 'px';\n            }\n            transformElement.style.transform = 'translateX(0px)';\n        }\n    }\n    function actionCompleteHandler() {\n        setTimeout(() => { rteObj.toolbarModule.refreshToolbarOverflow(); }, 400);\n    }\n    return (<div className='control-pane'>\n            <div className='control-section' id='rteIFrame'>\n                <div className=\"content-wrapper\">\n                    <RichTextEditorComponent id=\"iframeRTE\" ref={(richtexteditor) => { rteObj = richtexteditor; }} height={'500px'} actionBegin={handleFullScreen.bind(this)} actionComplete={actionCompleteHandler.bind(this)} toolbarSettings={toolbarSettings} iframeSettings={iframeSetting} fileManagerSettings={fileManagerSettings}>\n                        <p>The Rich Text Editor component is a WYSIWYG (\"what you see is what you get\") editor that provides the best user experience to create and update the content.\n                            Users can format their content using standard toolbar commands.</p>\n\n                        <p><b>Key features:</b></p>\n\n                        <ul>\n                            <li>\n                                <p>Provides &lt;IFRAME&gt; and &lt;DIV&gt; modes</p>\n                            </li>\n                            <li>\n                                <p>Capable of handling markdown editing.</p>\n                            </li>\n                            <li>\n                                <p>Contains a modular library to load the necessary functionality on demand.</p>\n                            </li>\n                            <li>\n                                <p>Provides a fully customizable toolbar.</p>\n                            </li>\n                            <li>\n                                <p>Provides HTML view to edit the source directly for developers.</p>\n                            </li>\n                            <li>\n                                <p>Supports third-party library integration.</p>\n                            </li>\n                            <li>\n                                <p>Allows a preview of modified content before saving it.</p>\n                            </li>\n                            <li>\n                                <p>Handles images, hyperlinks, video, hyperlinks, uploads, etc.</p>\n                            </li>\n                            <li>\n                                <p>Contains undo/redo manager.</p>\n                            </li>\n                            <li>\n                                <p>Creates bulleted and numbered lists.</p>\n                            </li>\n                        </ul>\n                        <Inject services={[Toolbar, Image, Link, HtmlEditor, Table, QuickToolbar, FileManager, Audio, Video, FormatPainter, EmojiPicker, PasteCleanup]}/>\n                    </RichTextEditorComponent>\n                </div>\n            </div>\n\n        </div>);\n}\nexport default IFrame;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<IFrame />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}