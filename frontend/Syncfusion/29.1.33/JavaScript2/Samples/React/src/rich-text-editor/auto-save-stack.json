{"index.css":".current-status {\n    float: right;\n    padding: 11px;\n    margin-right: 22px;\n    font-size: 12px;\n    display: inline-block;\n}\n\n.e-icons.e-icon-refresh::before {\n    content: \"\\e606\";\n}\n\n.btn-text {\n    display: inline;\n    padding: 2px 35px 2px 64px;\n}\n\n.e-icons.e-icon-tick::before {\n    content: \"\\e614\";\n}\n\n.bootstrap4 .e-icons.e-icon-refresh::before {\n    content: \"\\e710\";\n}\n\n.bootstrap4 .e-icons.e-icon-tick::before {\n    content: \"\\e718\";\n}\n\n.tailwind .e-icons.e-icon-refresh::before,\n.tailwind-dark .e-icons.e-icon-refresh::before,\n.tailwind3 .e-icons.e-icon-refresh::before,\n.tailwind3-dark .e-icons.e-icon-refresh::before {\n    content: \"\\e711\";\n}\n\n.tailwind .e-icons.e-icon-tick::before,\n.tailwind-dark .e-icons.e-icon-tick::before,\n.tailwind3 .e-icons.e-icon-tick::before,\n.tailwind3-dark .e-icons.e-icon-tick::before {\n    content: \"\\e75d\";\n}\n\n.bootstrap5 .e-icons.e-icon-refresh::before,\n.bootstrap5\\.3 .e-icons.e-icon-refresh::before,\n.bootstrap5\\.3-dark .e-icons.e-icon-refresh::before,\n.bootstrap5-dark .e-icons.e-icon-refresh::before,\n.fluent .e-icons.e-icon-refresh::before,\n.fluent-dark .e-icons.e-icon-refresh::before,\n.fluent2 .e-icons.e-icon-refresh::before,\n.fluent2-dark .e-icons.e-icon-refresh::before,\n.material3 .e-icons.e-icon-refresh::before,\n.material3-dark .e-icons.e-icon-refresh::before {\n        content: \"\\e706\";\n}\n\n.bootstrap5 .e-icons.e-icon-tick::before,\n.bootstrap5\\.3 .e-icons.e-icon-tick::before,\n.bootstrap5\\.3-dark .e-icons.e-icon-tick::before,\n.bootstrap5-dark .e-icons.e-icon-tick::before,\n.fluent .e-icons.e-icon-tick::before,\n.fluent-dark .e-icons.e-icon-tick::before,\n.fluent2 .e-icons.e-icon-tick::before,\n.fluent2-dark .e-icons.e-icon-tick::before,\n.material3 .e-icons.e-icon-tick::before,\n.material3-dark .e-icons.e-icon-tick::before {\n        content: \"\\e774\";\n}\n\n.status-text {\n    padding: 4px;\n}\n\n.e-icon-refresh {\n    width: 10px;\n    display: inline-block;\n    animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n.bootstrap4 .e-icons.e-icon-refresh::before {\n    content: \"\\e710\";\n}\n\n.bootstrap4 .e-icons.e-icon-tick::before {\n    content: \"\\e718\";\n}\n\n.tailwind .e-icons.e-icon-refresh::before,\n.tailwind3 .e-icons.e-icon-refresh::before {\n    content: \"\\e711\";\n}\n\n.tailwind .e-icons.e-icon-tick::before,\n.tailwind3 .e-icons.e-icon-tick::before {\n    content: \"\\e75d\";\n}\n\n.status-text {\n    font-size: 14px;\n    display: inline-block;\n}\n\n#rteAPIProperty .property-panel-content div {\n    padding-left: 10px;\n    padding-top: 10px;\n}\n\n.property-panel-table td {\n    width: 50%;\n    margin-top: 3px;\n}\n\n#rteAPIProperty .property-panel-content {\n    overflow: inherit;\n}\n\n#rteAPIProperty .property-panel-header {\n    padding-top: 40px;\n    padding-bottom: 20px;\n}\n\n#rteAPI .content-wrapper {\n    width: auto;\n    margin: 0;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Rich Text Editor Auto Save sample\n */\nimport * as React from 'react';\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, Image, Link, QuickToolbar, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-react-richtexteditor';\nimport { SampleBase } from './sample-base';\n\nimport { SwitchComponent } from '@syncfusion/ej2-react-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PropertyPane } from './property-pane';\nexport class AutoSave extends SampleBase {\n    rteObj;\n    switchObj;\n    // Rich Text Editor items list\n    items = ['Bold', 'Italic', 'Underline', '|', 'Formats', 'Alignments', 'Blockquote',\n        'OrderedList', 'UnorderedList', '|', 'CreateLink', 'Image', '|', 'SourceCode', 'Undo', 'Redo'];\n    //Rich Text Editor ToolbarSettings\n    toolbarSettings = {\n        items: this.items\n    };\n    savingEle;\n    savingRef;\n    savedEle;\n    savedRef;\n    constructor(props) {\n        super(props);\n        this.savingRef = element => {\n            this.savingEle = element;\n        };\n        this.savedRef = element => {\n            this.savedEle = element;\n        };\n    }\n    updateStatus() {\n        this.savingEle.style.display = 'block';\n        this.savedEle.style.display = 'none';\n        setTimeout(() => {\n            if (!isNullOrUndefined(this.savingEle) && !isNullOrUndefined(this.savedEle)) {\n                this.savingEle.style.display = 'none';\n                this.savedEle.style.display = 'block';\n            }\n        }, 500);\n    }\n    onChange(e) {\n        if (e.checked) {\n            this.rteObj.saveInterval = 5000;\n        }\n        else {\n            this.rteObj.saveInterval = 0;\n            setTimeout(() => {\n                this.savingEle.style.display = 'none';\n                this.savedEle.style.display = 'none';\n            }, 500);\n        }\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='col-lg-8'>\n                    <div className='control-section' id=\"rteAPI\">\n                        <div className='rte-control-section'>\n                            <RichTextEditorComponent id=\"autoSaveRTE\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }} enablePersistence={true} placeholder={'Start to type a content to save'} saveInterval={5000} toolbarSettings={this.toolbarSettings} change={this.updateStatus.bind(this)}>\n                                <h2>Welcome to the Rich Text Editor Demo!üìù</h2>\n                                <p style={{ textAlign: 'start' }}>Experience the power of modern content editing with advanced formatting, media embedding, and many other features. You can explore this demo for yourself.</p>\n                                <h5>Explore the Possibilities! üöÄ</h5>\n                                <ul>\n                                    <li><b>Highly customizable</b> - You can configure the toolbar, enable/disable features, and fine-tune the editing experience to match your needs.</li>\n                                    <li><b>Seamless content pasting</b> - Copy and paste from Microsoft Word, Outlook, or other editors or sources while preserving formatting, styles, and structure.</li>\n                                    <li><b>Import Word documents</b> - Convert <b>DOCX</b><b> files</b> into editable HTML content inside the editor using the Import from Word feature.</li>\n                                    <li><b>One-click Export</b> - Save your document as <b>PDF</b> üìÑ or <b>Word (DOCX)</b> üìù with just a single click.</li>\n                                    <li><b>@Mentions</b> - Type <span className=\"e-mention-chip\"><a href=\"mailto:albert@gmail.com\" title=\"albert@gmail.com\">@Albert</a></span> to see available suggestions and tag users in your content.</li>\n                                    <li><b>Image Management</b> - Use the File Manager to browse, upload, and manage images within the editor.</li>\n                                </ul>\n                                <p><br /></p>\n                                <h5>Powerful Features!</h5>\n                                <p>A quick overview of the essential features of the Rich Text Editor.<br /></p>\n                                <table className=\"e-rte-table\" style={{ width: '61.0405%', minWidth: '0px', height: '82px' }}>\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: '29.9807%' }}>Feature<br /></th>\n                                            <th style={{ width: '70.0193%' }}>Description<br /></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td style={{ width: '29.981%' }}>Text Formatting<br /></td>\n                                            <td style={{ width: '70.0193%' }}>Bold, Italic, Underline, Strikethrough, and more.<br /></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{ width: '29.9807%' }}>Lists &amp; Indentation<br /></td>\n                                            <td style={{ width: '70.019%' }}>Ordered, unordered, nested lists.<br /></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{ width: '29.9807%' }}>Tables<br /></td>\n                                            <td style={{ width: '70.019%' }}>Insert and edit tables with styling.<br /></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{ width: '29.9807%' }}>Media Embedding<br /></td>\n                                            <td style={{ width: '70.019%' }}>Images, videos, and iframes.<br /></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{ width: '29.9807%' }}>Mentions<br /></td>\n                                            <td style={{ width: '70.019%' }}>Tag users and add comments<br /></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <p><br /></p>\n                                <h5>Effortless Image Handling!</h5>\n                                <p>Insert, resize, align, and manage images seamlessly within the editor.<br /></p>\n                                <p style={{ textAlign: 'center' }}>\n                                    <img alt=\"Sky with sun\" src=\"https://cdn.syncfusion.com/ej2/richtexteditor-resources/RTE-Overview.png\" width=\"400\" height=\"200\" className=\"e-rte-image e-imgcenter\"/>\n                                </p>\n                                <p><br /></p>\n                                <p style={{ textAlign: 'center' }}><b>\"Great writing begins with a great editor.\"</b><b> ‚úçÔ∏è</b> <br /></p>\n                                <Inject services={[Link, Image, HtmlEditor, Toolbar, QuickToolbar, PasteCleanup, Table, Video, Audio]}/>\n                                <Inject services={[Link, Image, HtmlEditor, Toolbar, QuickToolbar, PasteCleanup, Table, Video, Audio]}/>\n                            </RichTextEditorComponent>\n                            <div id='statusEle' className='current-status'>\n                                <div id='saving' ref={this.savingRef} style={{ display: 'none' }}>\n                                    <div className=\"e-icons e-icon-refresh\"> </div>\n                                    <p className='status-text'> Saving changes</p>\n                                </div>\n                                <div id='saved' ref={this.savedRef} style={{ display: 'none' }}>\n                                    <span className=\"e-icons e-icon-tick\"> </span>\n                                    <p className='status-text'>Changes saved</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-lg-4 property-section' id=\"rteAPIProperty\">\n                    <PropertyPane title='Properties'>\n                        <label htmlFor=\"checked\" style={{ padding: \"10px 72px 10px 0\" }}> Auto Save </label>\n                        <SwitchComponent id=\"checked\" ref={(scope) => { this.switchObj = scope; }} change={this.onChange.bind(this)} checked={true}></SwitchComponent>\n                    </PropertyPane>\n\n                </div>\n\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<AutoSave />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}