{"index.css":"#rteInline .e-richtexteditor .e-rte-content .e-content {\n    float: left;\n    width: 100%;\n}\n\n#rteInline .content-wrapper {\n    width: auto;\n    margin: 0;\n    min-height: 400px;\n    overflow: auto;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { RichTextEditorComponent, Inject, QuickToolbar, Image, Link, HtmlEditor, Toolbar, PasteCleanup, Table, Video, Audio } from '@syncfusion/ej2-react-richtexteditor';\nimport { SampleBase } from './sample-base';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\n\nexport class Inline extends SampleBase {\n    rteObj;\n    checkboxObj;\n    change(args) {\n        this.rteObj.inlineMode.onSelection = args.checked;\n    }\n    inlineMode = {\n        enable: true,\n        onSelection: true\n    };\n    format = {\n        width: 'auto'\n    };\n    fontFamily = {\n        width: 'auto'\n    };\n    // Rich Text Editor items list\n    items = ['Bold', 'Italic', 'Underline',\n        'Formats', '-', 'Alignments', 'OrderedList', 'UnorderedList',\n        'CreateLink'];\n    //Rich Text Editor ToolbarSettings\n    toolbarSettings = {\n        items: this.items\n    };\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section' id='rteInline'>\n          <div className='col-lg-8'>\n            <div className=\"content-wrapper\">\n              <RichTextEditorComponent id=\"inlineRTE\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }} inlineMode={this.inlineMode} toolbarSettings={this.toolbarSettings} format={this.format} fontFamily={this.fontFamily}>\n                <h2>Inline Rich Text Editor!</h2><p>Click on this text to edit dynamically. The formatting toolbar will appear only when you select the content.</p><h5>Features:</h5><ul><li><strong>Minimal UI:</strong> The editor is clean and distraction-free.</li><li><strong>Contextual Toolbar:</strong> The toolbar appears only when text is selected.</li><li><strong>Rich Formatting:</strong> Supports bold, italic, underline, lists, links, and more.</li><li><strong>Seamless Editing:</strong> Works like a native text field but with powerful styling options.</li></ul><blockquote><p>Try selecting this text to see the toolbar in action!</p></blockquote>\n                <Inject services={[Image, Link, QuickToolbar, HtmlEditor, Toolbar, PasteCleanup, Table, Video, Audio]}/>\n              </RichTextEditorComponent>\n            </div>\n          </div>\n          <div className='col-lg-4 property-section'>\n            <PropertyPane title='Properties'>\n              <table id=\"property\" title=\"Properties\">\n                <tbody>\n                  <tr>\n                    <td>\n                      <div>\n                        <CheckBoxComponent checked={true} label='Show on Selection' ref={(scope) => { this.checkboxObj = scope; }} change={this.change.bind(this)}></CheckBoxComponent>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </PropertyPane>\n          </div>\n        </div>\n\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Inline />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"codemirror\":\"5.3.0\"}"}