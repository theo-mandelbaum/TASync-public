{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { FileManagerComponent, Inject, NavigationPane, Toolbar } from '@syncfusion/ej2-react-filemanager';\nconst defaultcss = `\n#all-property-table .property-panel-section .property-panel-content table#property tr {\n    height: 50px;\n}\n\n@media (max-width: 550px) {\n    #rangeSelectionRow {\n        display: none;\n    }\n}`;\n/**\n * File Manager API sample\n */\nexport class Default extends SampleBase {\n    hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\n    fmObj;\n    disableDropDownList;\n    enableDropDownList;\n    items = ['NewFolder', 'Cut', 'Copy', 'Paste', 'Download', 'Delete', 'Refresh', 'Selection', 'View', 'Details'];\n    toolCheck(args, id) {\n        if (id == \"toolbar\") {\n            this.fmObj.toolbarSettings.visible = args.checked;\n        }\n        if (id == \"fileExtension\") {\n            this.fmObj.showFileExtension = args.checked;\n        }\n        if (id == \"thumbnail\") {\n            this.fmObj.showThumbnail = args.checked;\n        }\n        if (id == \"rangeSelection\") {\n            this.fmObj.enableRangeSelection = args.checked;\n        }\n    }\n    onDisableItemChange(args) {\n        if (args.itemData != null) {\n            this.fmObj.disableToolbarItems([args.itemData.value]);\n            if (args.value === this.enableDropDownList.value) {\n                this.enableDropDownList.value = null;\n            }\n        }\n    }\n    onEnableItemChange(args) {\n        if (args.itemData != null) {\n            this.fmObj.enableToolbarItems([args.itemData.value]);\n            if (args.value === this.disableDropDownList.value) {\n                this.disableDropDownList.value = null;\n            }\n        }\n    }\n    render() {\n        return (<div>\n                <style>{defaultcss}</style>\n                <div className=\"col-lg-8 control-section\">\n                    <FileManagerComponent id=\"api_filemanager\" ref={(scope) => { this.fmObj = scope; }} ajaxSettings={{\n                url: this.hostUrl + \"api/FileManager/FileOperations\",\n                getImageUrl: this.hostUrl + \"api/FileManager/GetImage\",\n                uploadUrl: this.hostUrl + 'api/FileManager/Upload',\n                downloadUrl: this.hostUrl + 'api/FileManager/Download'\n            }} toolbarSettings={{ items: ['NewFolder', 'SortBy', 'Cut', 'Copy', 'Paste', 'Delete', 'Refresh', 'Download', 'Rename', 'Selection', 'View', 'Details'] }} contextMenuSettings={{\n                file: ['Cut', 'Copy', '|', 'Delete', 'Download', 'Rename', '|', 'Details'],\n                layout: ['SortBy', 'View', 'Refresh', '|', 'Paste', '|', 'NewFolder', '|', 'Details', '|', 'SelectAll'],\n                visible: true\n            }} view={\"LargeIcons\"} navigationPaneSettings={{ visible: false }} enableRangeSelection={true}>\n                <Inject services={[NavigationPane, Toolbar]}/>\n                    </FileManagerComponent>\n                </div>\n                <div id=\"all-property-table\" className='col-lg-4 property-section'>\n                <PropertyPane title='Properties'>\n                <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: \"100%\" }}>\n                    <tbody>\n                    <tr id=\"rangeSelectionRow\">\n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Enable Range Selection</div>\n                        </td>\n                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                            <div>\n                                <CheckBoxComponent id=\"rangeSelection\" checked={true} change={(args) => this.toolCheck(args, \"rangeSelection\")}></CheckBoxComponent>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Toolbar</div>\n                        </td>\n                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                            <div>\n                                <CheckBoxComponent id=\"toolbar\" checked={true} change={(args) => this.toolCheck(args, \"toolbar\")}></CheckBoxComponent>\n                            </div>\n                        </td>\n                    </tr>\n                   <tr>\n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Show File Extension</div>\n                        </td>\n                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                            <div>\n                                <CheckBoxComponent id=\"fileExtension\" checked={true} change={(args) => this.toolCheck(args, \"fileExtension\")}></CheckBoxComponent>\n                            </div>\n                        </td>\n                   </tr>\n                   <tr>\n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Show Thumbnail</div>\n                        </td>\n                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                            <div>\n                                <CheckBoxComponent id=\"thumbnail\" checked={true} change={(args) => this.toolCheck(args, \"thumbnail\")}></CheckBoxComponent>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>    \n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Disable Toolbar Item</div>\n                        </td>\n                        <td style={{ width: '50%', paddingLeft: '10px' }}>\n                            <div>\n                                <DropDownListComponent ref={(scope) => { this.disableDropDownList = scope; }} id=\"disable\" dataSource={this.items} change={this.onDisableItemChange.bind(this)}></DropDownListComponent>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style={{ width: '50%' }}>\n                            <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Enable Toolbar Item</div>\n                        </td>\n                        <td style={{ width: '50%', paddingLeft: '10px' }}>\n                            <div>\n                                <DropDownListComponent ref={(scope) => { this.enableDropDownList = scope; }} id=\"enable\" dataSource={this.items} change={this.onEnableItemChange.bind(this)}></DropDownListComponent>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                </PropertyPane>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-react-filemanager\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}