{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\n\nimport { PropertyPane } from './property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { FileManagerComponent, Inject, NavigationPane, Toolbar } from '@syncfusion/ej2-react-filemanager';\nconst defaultcss = `\r\n    #all-property-table .property-panel-section .property-panel-content table#property tr {\r\n        height: 50px;\r\n    }\r\n    @media (max-width: 550px) {\r\n        #rangeSelectionRow {\r\n            display: none;\r\n        }\r\n    }`;\n/**\n * File Manager API sample\n */\nconst Default = () => {\n    const [isVisible, setIsVisible] = useState(true);\n    const [isAllowMultiselect, setIsAllowmultiselect] = useState(true);\n    const [isShowFileExtension, setIsShowFileExtension] = useState(true);\n    const [isShowThumbnail, setShowThumbnail] = useState(true);\n    const [isEnableRangeSelection, setEnableRangeSelection] = useState(true);\n    let hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\n    let fmObj = useRef(null);\n    let disableDropDownList = useRef(null);\n    let enableDropDownList = useRef(null);\n    let items = ['NewFolder', 'Cut', 'Copy', 'Paste', 'Download', 'Delete', 'Refresh', 'Selection', 'View', 'Details'];\n    const toolCheck = (args, id) => {\n        if (id == \"toolbar\") {\n            setIsVisible(args.checked);\n        }\n        if (id == \"fileExtension\") {\n            setIsShowFileExtension(args.checked);\n        }\n        if (id == \"thumbnail\") {\n            setShowThumbnail(args.checked);\n        }\n        if (id == \"rangeSelection\") {\n            setEnableRangeSelection(args.checked);\n        }\n    };\n    const onDisableItemChange = (args) => {\n        if (args.itemData != null) {\n            fmObj.current.disableToolbarItems([args.itemData.value]);\n            if (args.value === enableDropDownList.current.value) {\n                enableDropDownList.current.value = null;\n            }\n        }\n    };\n    const onEnableItemChange = (args) => {\n        if (args.itemData != null) {\n            fmObj.current.enableToolbarItems([args.itemData.value]);\n            if (args.value === disableDropDownList.current.value) {\n                disableDropDownList.current.value = null;\n            }\n        }\n    };\n    return (<div>\r\n            <style>{defaultcss}</style>\r\n            <div className=\"col-lg-8 control-section\">\r\n                <FileManagerComponent id=\"api_filemanager\" ref={fmObj} ajaxSettings={{ url: hostUrl + \"api/FileManager/FileOperations\", getImageUrl: hostUrl + \"api/FileManager/GetImage\", uploadUrl: hostUrl + 'api/FileManager/Upload', downloadUrl: hostUrl + 'api/FileManager/Download' }} toolbarSettings={{ items: ['NewFolder', 'SortBy', 'Cut', 'Copy', 'Paste', 'Delete', 'Refresh', 'Download', 'Rename', 'Selection', 'View', 'Details'], visible: isVisible }} contextMenuSettings={{ file: ['Cut', 'Copy', '|', 'Delete', 'Download', 'Rename', '|', 'Details'], layout: ['SortBy', 'View', 'Refresh', '|', 'Paste', '|', 'NewFolder', '|', 'Details', '|', 'SelectAll'], visible: true }} view={\"LargeIcons\"} navigationPaneSettings={{ visible: false }} allowMultiSelection={isAllowMultiselect} showFileExtension={isShowFileExtension} showThumbnail={isShowThumbnail} enableRangeSelection={isEnableRangeSelection}>\r\n                    <Inject services={[NavigationPane, Toolbar]}/>\r\n                </FileManagerComponent>\r\n            </div>\r\n            <div id=\"all-property-table\" className='col-lg-4 property-section'>\r\n                <PropertyPane title='Properties'>\r\n                    <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: \"100%\" }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Enable Range Selection</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <CheckBoxComponent id=\"rangeSelection\" checked={true} change={(args) => toolCheck(args, \"rangeSelection\")}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Toolbar</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <CheckBoxComponent id=\"toolbar\" checked={true} change={(args) => toolCheck(args, \"toolbar\")}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Show File Extension</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <CheckBoxComponent id=\"fileExtension\" checked={true} change={(args) => toolCheck(args, \"fileExtension\")}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Show Thumbnail</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <CheckBoxComponent id=\"thumbnail\" checked={true} change={(args) => toolCheck(args, \"thumbnail\")}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Disable Toolbar Item</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingLeft: '10px' }}>\r\n                                    <div>\r\n                                        <DropDownListComponent ref={disableDropDownList} id=\"disable\" dataSource={items} change={onDisableItemChange.bind(this)}></DropDownListComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '50%' }}>\r\n                                    <div style={{ fontSize: '14px', paddingLeft: '0px' }}>Enable Toolbar Item</div>\r\n                                </td>\r\n                                <td style={{ width: '50%', paddingLeft: '10px' }}>\r\n                                    <div>\r\n                                        <DropDownListComponent ref={enableDropDownList} id=\"enable\" dataSource={items} change={onEnableItemChange.bind(this)}></DropDownListComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </PropertyPane>\r\n            </div>\r\n        </div>);\n};\nexport default Default;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-react-filemanager\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}