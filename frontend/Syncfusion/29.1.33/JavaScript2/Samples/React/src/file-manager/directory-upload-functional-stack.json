{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { FileManagerComponent, Inject, NavigationPane, DetailsView, Toolbar, ToolbarItemsDirective, ToolbarItemDirective } from '@syncfusion/ej2-react-filemanager';\nimport { DropDownButtonComponent } from '@syncfusion/ej2-react-splitbuttons';\n/**\n * File Manager folder upload sample\n */\nconst DirectoryUpload = () => {\n    const [isDirectoryUpload, setIsDirectoryUpload] = useState(false);\n    let fmObj = useRef(null);\n    let hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\n    let items = [{ text: 'Folder' }, { text: 'Files' }];\n    const onSelect = (args) => {\n        if (args.item.text === \"Folder\") {\n            setIsDirectoryUpload(true);\n        }\n        else {\n            setIsDirectoryUpload(false);\n        }\n        setTimeout(() => {\n            let uploadBtn = document.querySelector('.e-file-select-wrap button');\n            uploadBtn.click();\n        }, 100);\n    };\n    const uploadClick = (e) => {\n        e.stopPropagation();\n    };\n    const uploadTemplate = () => {\n        return (<DropDownButtonComponent id=\"dropButton\" cssClass=\"e-tbar-btn e-tbtn-txt\" onClick={uploadClick} items={items} iconCss='e-icons e-fe-upload' select={onSelect}>\r\n                <span className=\"e-tbar-btn-text\">Upload</span>\r\n            </DropDownButtonComponent>);\n    };\n    return (<div>\r\n            <div className=\"control-section\">\r\n                <FileManagerComponent id=\"file\" ref={fmObj} uploadSettings={{ directoryUpload: isDirectoryUpload }} ajaxSettings={{ url: hostUrl + \"api/FileManager/FileOperations\", getImageUrl: hostUrl + \"api/FileManager/GetImage\", uploadUrl: hostUrl + 'api/FileManager/Upload', downloadUrl: hostUrl + 'api/FileManager/Download' }} contextMenuSettings={{\n            file: ['Cut', 'Copy', '|', 'Delete', 'Download', 'Rename', '|', 'Details'],\n            visible: true\n        }}>\r\n                    <ToolbarItemsDirective>\r\n                            <ToolbarItemDirective name='NewFolder'/>\r\n                            <ToolbarItemDirective template={uploadTemplate} name=\"Upload\"/>\r\n                            <ToolbarItemDirective name=\"SortBy\"/>\r\n                            <ToolbarItemDirective name=\"Refresh\"/>\r\n                            <ToolbarItemDirective name=\"Cut\"/>\r\n                            <ToolbarItemDirective name=\"Copy\"/>\r\n                            <ToolbarItemDirective name=\"Paste\"/>\r\n                            <ToolbarItemDirective name=\"Delete\"/>\r\n                            <ToolbarItemDirective name=\"Download\"/>\r\n                            <ToolbarItemDirective name=\"Rename\"/>\r\n                            <ToolbarItemDirective name=\"Selection\"/>\r\n                            <ToolbarItemDirective name=\"View\"/>\r\n                            <ToolbarItemDirective name=\"Details\"/>\r\n                        </ToolbarItemsDirective>\r\n                    <Inject services={[NavigationPane, DetailsView, Toolbar]}/>\r\n                </FileManagerComponent>\r\n            </div>\r\n        </div>);\n};\nexport default DirectoryUpload;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<DirectoryUpload />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-react-filemanager\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-splitbuttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}