{"index.css":".fileupload {\n    max-width: 500px;\n    margin: auto;\n}\n#openBtn {\n    position: absolute;\n    top: 28px;\n    left: 43%;\n}\n#target {\n    height: 550px;\n}\n#dialog {\n    top: 20px !important;\n    max-height: 500px !important;\n}\n\n#uploadFileManager .e-file-drop, #uploadFileManager .e-css.e-btn {\n    display: none;\n}\n\n.tailwind #openBtn,\n.tailwind-dark #openBtn {\n    top: 28px;\n}\n\n.bootstrap #openBtn,\n.bootstrap-dark #openBtn {\n    top: 30px;\n}\n\n.bootstrap5 #openBtn,\n.bootstrap5-dark #openBtn {\n    top: 26px;\n}\n\n#uploadFileManager .e-upload .e-file-select-wrap{\n    display: block;\n}\n\n.ej2-new #openBtn {\n    top: 171px;\n}\n\n@media (max-width: 768px) {\n    .ej2-new #openBtn {\n        top: 300px !important;\n        left: 35%;\n    }\n}\n\n.fileupload .e-file-select-wrap {\n    padding: 20px 0 20px 20px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { SampleBase } from './sample-base';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { FileManagerComponent, Inject, NavigationPane, DetailsView, Toolbar } from '@syncfusion/ej2-react-filemanager';\n\n/**\n * File Manager real time use case sample\n */\nexport class FileUpload extends SampleBase {\n    fileUploadObj;\n    dialogObj;\n    filemanagerObj;\n    animationSettings;\n    constructor(props) {\n        super(props);\n        this.animationSettings = { effect: 'None' };\n    }\n    // 'Uploader' will be shown, if Dialog is closed\n    dialogClose() {\n        document.getElementById('uploadFileManager').style.display = 'block';\n    }\n    // 'Uploader' will be hidden, if Dialog is opened\n    dialogOpen() {\n        document.getElementById('uploadFileManager').style.display = 'none';\n    }\n    // File Manager's fileOpen event function\n    onFileOpen(args) {\n        let file = args.fileDetails;\n        if (file.isFile) {\n            args.cancel = true;\n            if (file.size <= 0) {\n                file.size = 10000;\n            }\n            this.fileUploadObj.files = [{ name: file.name, size: file.size, type: file.type }];\n            this.dialogObj.hide();\n        }\n    }\n    btnClick() {\n        this.dialogObj.show();\n        this.dialogOpen();\n        this.filemanagerObj.path = '/';\n        this.filemanagerObj.selectedItems = [];\n        this.filemanagerObj.refresh();\n    }\n    hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\n    render() {\n        return (<div>\n            <div className=\"control-section\">\n                <div id='uploadFileManager' className=\"fileupload\">\n                    <UploaderComponent id='fileUpload' type='file' ref={(scope) => { this.fileUploadObj = scope; }}></UploaderComponent>\n                    <ButtonComponent id=\"openBtn\" onClick={this.btnClick.bind(this)}>File Browser</ButtonComponent>\n                </div>\n                <div id='target' className=\"control-section\">\n                    <DialogComponent width='850px' id='dialog' target={'#target'} ref={(scope) => { this.dialogObj = scope; }} header=\"Select a file\" showCloseIcon={true} visible={false} open={this.dialogOpen.bind(this)} close={this.dialogClose.bind(this)} animationSettings={this.animationSettings}>\n                        <FileManagerComponent id=\"filemanager\" ref={(scope) => { this.filemanagerObj = scope; }} ajaxSettings={{\n                url: this.hostUrl + \"api/FileManager/FileOperations\",\n                getImageUrl: this.hostUrl + \"api/FileManager/GetImage\",\n                uploadUrl: this.hostUrl + 'api/FileManager/Upload',\n                downloadUrl: this.hostUrl + 'api/FileManager/Download'\n            }} allowMultiSelection={false} toolbarSettings={{ items: ['NewFolder', 'Upload', 'Delete', 'Cut', 'Copy', 'Rename', 'SortBy', 'Refresh', 'Selection', 'View', 'Details'] }} contextMenuSettings={{\n                file: ['Cut', 'Copy', '|', 'Delete', 'Download', 'Rename', '|', 'Details'],\n                layout: ['SortBy', 'View', 'Refresh', '|', 'Paste', '|', 'NewFolder', '|', 'Details', '|', 'SelectAll'],\n                visible: true\n            }} fileOpen={this.onFileOpen.bind(this)}>\n                        <Inject services={[NavigationPane, DetailsView, Toolbar]}/>\n                        </FileManagerComponent>\n                    </DialogComponent>\n                </div>\n            </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<FileUpload />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-filemanager\":\"*\",\"@syncfusion/ej2-react-filemanager\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\"}"}