{"index.css":"#toast_default .e-meeting::before {\n        content: \"\\e705\";\n        font-size: 17px;\n}\n.bootstrap4 #toast_default .e-meeting::before {\n        content: \"\\e763\";\n        font-size: 20px;\n}\n.tailwind #toast_default .e-meeting::before,\n.tailwind-dark #toast_default .e-meeting::before,\n.tailwind3 #toast_default .e-meeting::before,\n.tailwind3-dark #toast_default .e-meeting::before,\n.bootstrap5 #toast_default .e-meeting::before,\n.bootstrap5-dark #toast_default .e-meeting::before {\n        content: \"\\e7e9\";\n        font-size: 18px;\n}\n.toast-default-section #toastBtnShow {\n    margin-right: 10px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ToastComponent } from '@syncfusion/ej2-react-notifications';\n\nexport class Default extends SampleBase {\n    toastObj;\n    position = { X: 'Right' };\n    toastBtnShow;\n    toastBtnHide;\n    create() {\n        setTimeout(function () {\n            this.toastObj.show({\n                title: 'Adaptive Tiles Meeting', content: 'Conference Room 01 / Building 135 10:00 AM',\n                icon: 'e-meeting',\n            });\n        }.bind(this), 200);\n    }\n    hideBtnClick() {\n        this.toastObj.hide('All');\n    }\n    showBtnClick() {\n        this.toastObj.show();\n    }\n    onclose(e) {\n        if (e.toastContainer.childElementCount === 0) {\n            this.toastBtnHide.element.style.display = 'none';\n        }\n    }\n    onbeforeOpen() {\n        this.toastBtnHide.element.style.display = 'inline-block';\n    }\n    rendereComplete() {\n        document.addEventListener('click', function (e) {\n            if (!isNullOrUndefined(this.toastObj) && e.target !== this.toastBtnShow.element) {\n                this.toastObj.hide('All');\n            }\n        }.bind(this));\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section col-lg-12 toast-default-section'>\n                    <div className=\"e-sample-resize-container\">\n                        <ToastComponent ref={(toast) => { this.toastObj = toast; }} id='toast_default' position={this.position} created={this.create.bind(this)} close={this.onclose.bind(this)} beforeOpen={this.onbeforeOpen.bind(this)}></ToastComponent>\n                        <div id=\"toastBtnDefault\" style={{ margin: 'auto', textAlign: 'center' }}>\n                            <ButtonComponent id='toastBtnShow' ref={(btn) => { this.toastBtnShow = btn; }} className='e-btn' onClick={this.showBtnClick.bind(this)}>Show Toasts</ButtonComponent>\n                            <ButtonComponent id='toastBtnHide' ref={(btn) => { this.toastBtnHide = btn; }} className='e-btn' onClick={this.hideBtnClick.bind(this)}>Hide All</ButtonComponent>\n                        </div>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-react-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}