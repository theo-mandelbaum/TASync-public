{"index.css":".tab-control-section .orientation-tab .e-content .e-item,\n.tab-control-section .responsive-mode .e-content .e-item {\n    font-size: 12px;\n    padding: 10px;\n    text-align: justify;\n}\n.tab-control-section  .e-headertext {\n    font-weight: 500;\n}\n.e-bigger .tab-control-section .e-tab .e-list-item {\n    border-bottom: 1px solid gainsboro;\n}\n.tab-control-section  .e-tab .e-list-item {\n    height: 63px;\n    border-bottom: 1px solid gainsboro;\n}\n.tab-control-section  .e-tab .e-list-item:last-child {\n    border-bottom: 1px solid gainsboro;\n}\n.e-bigger .tab-control-section  .e-tab .e-list-item {\n    height: 63px;\n}\n.tab-control-section .template-container {\n    height: 100%;\n    padding-top: 7px;\n}\n.tab-control-section .left {\n    display: inline-block;\n    vertical-align: top;\n}\n.tab-control-section .empImg {\n    height: 48px;\n    width: 48px;\n}\n.tab-control-section .name, .role {\n    line-height: normal;\n}\n.tab-control-section .name {\n    font-weight: 500;\n}\n.tab-control-section .role {\n    color: grey;\n    font-weight: 100;\n}\n.tab-control-section .info-div {\n    padding: 7px 15px 0 15px;\n}\n.tab-control-section .content-title {\n    height: 50px;\n    display: table;\n    margin: 0 auto;\n}\n.tab-control-section .cnt-text {\n    vertical-align: middle;\n    display: table-cell;\n    font-size: 18px;\n    font-weight: 600;\n}\n.tab-control-section .e-tab .e-listview .e-text {\n    display: block;\n    text-align: center;\n}\n\n/* custom code start*/\n.tab-control-section .property-panel-content {\n    padding: 10px;\n}\n@media only screen and (min-width: 1824px) {\n    .tab-control-section .col-lg-8.adaptive {\n        width: 40%;\n    }\n    .e-bigger .tab-control-section .col-lg-8.adaptive {\n        width: 45%;\n    }\n}\n\n/* custom code end*/\n\n#amount {\n    text-align: right;\n    font-size: 15px;\n    padding: 15px 0px;\n}\n\n#passenger-table th {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 400;\n    border: 1px solid gainsboro;\n}\n\n#passenger-table td,\n#passenger-table th {\n    padding: 10px;\n}\n\n#passenger-table td {\n    border: 1px solid gainsboro;\n}\n\n.name-header {\n    width: 200px;\n}\n\n.age-header {\n    width: 80px;\n}\n\n.gender-header {\n    width: 120px;\n}\n\n.type-header {\n    width: 150px;\n}\n\n.btn-container {\n    text-align: center;\n}\n\n.search-item {\n    padding-right: 50px;\n    padding-bottom: 20px;\n}\n\n.item-title {\n    font-weight: 500;\n    padding-top: 10px;\n}\n\n@media (max-width: 450px) {\n    .tab-control-resize-container {\n        height: 500px;\n    }\n    .responsive-align {\n        width: 75%;\n        margin: 0 auto;\n    }\n    .search-item {\n        padding: 0 0 20px 0;\n        width: 100%;\n    }\n}\n\n#err1,\n#err2,\n#err3 {\n    font-weight: bold;\n    color: red;\n    display: block;\n    margin-top: 15px;\n}\n\n.wizard-title {\n    font-size: 15px;\n}\n\n#PassengersList {\n    overflow: auto;\n}\n#passenger-table {\n    min-width: 500px;\n    width: 100%;\n}\n.tab-control-section .orientation-tab .e-listview:not(.e-list-template) .e-list-item {\n    height: 63px;\n    padding: 0 16px !important;\n}\n\n.orientation-tab .e-content .e-item.e-active,\n.orientation-tab .e-content .e-item.e-active ul.e-list-parent {\n    width: 100%;\n}\n\n#tab-wizard .e-content .e-item {\n    font-size: 12px;\n    margin: 10px;\n}\n\n#bookTickets, #confirmTickets, #makePayment {\n    margin-left: 4px;\n}\n\n#draggableTab .e-content .e-item {\n    font-size: 12px;\n    padding: 10px;\n    text-align: justify;\n}\n#draggableTab .e-upload {\n    width: 300px;\n}\n#TabContainer .property-panel-header {\n    text-align: center;\n    padding-bottom: 0;\n}\n.treeview-external-drag-tab .e-list-item,\n.e-bigger .treeview-external-drag-tab .e-list-item {\n    border: 0.5px solid #E1E7EC;\n    line-height: 15px;\n    padding: 0 5px;\n}\n.treeview-external-drag-tab.e-treeview .e-ul  {\n    padding: unset;\n}\n#TabContainer {\n    display: flex;\n}\n@media (max-width: 550px) {\n    #TabContainer {\n        display: block;\n    }\n}\n.key-class {\n    display: inline-block;\n    width: 130px;\n}\n@media only screen and (min-width: 1824px) {\n    .tab-control-resize-container {\n        width: 560px;\n    }\n\n    .e-bigger .tab-control-resize-container {\n        width: 75%;\n    }\n}\n@media screen and (max-width: 425px) {\n    .responsive-mode {\n        overflow: hidden;\n    }\n\n    .responsive-mode .e-item.e-active {\n        overflow: scroll;\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { TabComponent, TreeViewComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';\nimport { ColumnDirective, ColumnsDirective, GridComponent } from '@syncfusion/ej2-react-grids';\nimport { Category, ChartComponent, DataLabel, LineSeries, Legend, Tooltip, SeriesCollectionDirective, SeriesDirective } from '@syncfusion/ej2-react-charts';\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { DatePickerComponent, CalendarComponent } from '@syncfusion/ej2-react-calendars';\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\nimport { HtmlEditor, Image, Link, QuickToolbar, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\nimport { isNullOrUndefined } from \"@syncfusion/ej2-base\";\nimport { SampleBase } from './sample-base';\n\nexport class Dragdrop extends SampleBase {\n    tabObj;\n    treeObj;\n    data = [\n        { text: \"DropDown List\", id: \"list-01\" },\n        { text: \"DatePicker\", id: \"list-02\" },\n        { text: \"Calendar\", id: \"list-03\" },\n        { text: \"File Upload\", id: \"list-04\" },\n        { text: \"Rich Text Editor\", id: \"list-05\" }\n    ];\n    allowDragAndDrop = true;\n    field = { dataSource: this.data, id: 'id', text: 'text' };\n    draggedItemHeader;\n    i = 0;\n    onTabCreate() {\n        let tabElement = document.getElementById(\"draggableTab\");\n        if (!isNullOrUndefined(tabElement)) {\n            tabElement.querySelector(\".e-tab-header\").classList.add(\"e-droppable\");\n            tabElement.querySelector(\".e-content\").classList.add(\"tab-content\");\n        }\n    }\n    onTabDragStart(args) {\n        this.draggedItemHeader = this.tabObj.items[args.index].header.text;\n    }\n    onDraggedTab(args) {\n        let dragTabIndex = Array.prototype.indexOf.call(this.tabObj.element.querySelectorAll('.e-toolbar-item'), args.draggedItem);\n        let dropNode = args.target.closest(\"#ListView .e-list-item\");\n        if (dropNode != null && !args.target.closest(\"#draggableTab .e-toolbar-item\") && this.tabObj.items.length > 1) {\n            args.cancel = true;\n            let dropContainer = (document.querySelector('.treeview-external-drag-tab')).querySelectorAll('.e-list-item');\n            let dropIndex = Array.prototype.indexOf.call(dropContainer, dropNode);\n            let newNode = [{ id: \"list\" + this.i, text: this.draggedItemHeader }];\n            this.tabObj.removeTab(dragTabIndex);\n            this.treeObj.addNodes(newNode, \"Treeview\", dropIndex);\n        }\n    }\n    onNodeDragStop(args) {\n        let dropElement = args.target.closest(\"#draggableTab .e-toolbar-item\");\n        if (dropElement != null) {\n            let tabElement = document.querySelector(\"#draggableTab\");\n            let itemPosition = (((args.event.type.indexOf('touch') > -1) ? args.event.changedTouches[0].clientX\n                : args.event.clientX) < dropElement.getBoundingClientRect().left + dropElement.offsetWidth / 2) ? 0 : 1;\n            let dropItemIndex = [].slice.call(tabElement.querySelectorAll(\".e-toolbar-item\")).indexOf(dropElement) + itemPosition;\n            let tabContent;\n            switch (args.draggedNodeData.text) {\n                case \"DropDown List\":\n                    tabContent = this.DropDownList;\n                    break;\n                case \"DatePicker\":\n                    tabContent = this.DatePicker;\n                    break;\n                case \"Calendar\":\n                    tabContent = this.Calendar;\n                    break;\n                case \"File Upload\":\n                    tabContent = this.Uploader;\n                    break;\n                case \"Rich Text Editor\":\n                    tabContent = this.RichTextEditor;\n                    break;\n                case \"Grid\":\n                    tabContent = this.Grid;\n                    break;\n                case \"Schedule\":\n                    tabContent = this.Schedule;\n                    break;\n                case \"Chart\":\n                    tabContent = this.Chart;\n                    break;\n                default:\n                    break;\n            }\n            let newTabItem = [{ header: { text: args.draggedNodeData.text.toString() }, content: tabContent }];\n            this.tabObj.addTab(newTabItem, dropItemIndex);\n            this.treeObj.removeNodes([args.draggedNode]);\n        }\n        args.cancel = true;\n    }\n    onNodeDrag(args) {\n        if (!isNullOrUndefined(args.target.closest(\".tab-content\"))) {\n            args.dropIndicator = \"e-no-drop\";\n        }\n        else if (!isNullOrUndefined(args.target.closest(\"#draggableTab .e-tab-header\"))) {\n            args.dropIndicator = \"e-drop-in\";\n        }\n    }\n    Grid() {\n        let gridData = [\n            {\n                OrderID: 10248, CustomerID: 'VINET', EmployeeID: 5, OrderDate: new Date(8364186e5),\n                ShipName: 'Vins et alcools Chevalier', ShipCity: 'Reims', ShipAddress: '59 rue de l Abbaye',\n                ShipRegion: 'CJ', ShipPostalCode: '51100', ShipCountry: 'France', Freight: 32.38, Verified: !0\n            },\n            {\n                OrderID: 10249, CustomerID: 'TOMSP', EmployeeID: 6, OrderDate: new Date(836505e6),\n                ShipName: 'Toms Spezialitäten', ShipCity: 'Münster', ShipAddress: 'Luisenstr. 48',\n                ShipRegion: 'CJ', ShipPostalCode: '44087', ShipCountry: 'Germany', Freight: 11.61, Verified: !1\n            },\n            {\n                OrderID: 10250, CustomerID: 'HANAR', EmployeeID: 4, OrderDate: new Date(8367642e5),\n                ShipName: 'Hanari Carnes', ShipCity: 'Rio de Janeiro', ShipAddress: 'Rua do Paço, 67',\n                ShipRegion: 'RJ', ShipPostalCode: '05454-876', ShipCountry: 'Brazil', Freight: 65.83, Verified: !0\n            },\n            {\n                OrderID: 10251, CustomerID: 'VICTE', EmployeeID: 3, OrderDate: new Date(8367642e5),\n                ShipName: 'Victuailles en stock', ShipCity: 'Lyon', ShipAddress: '2, rue du Commerce',\n                ShipRegion: 'CJ', ShipPostalCode: '69004', ShipCountry: 'France', Freight: 41.34, Verified: !0\n            },\n            {\n                OrderID: 10252, CustomerID: 'SUPRD', EmployeeID: 2, OrderDate: new Date(8368506e5),\n                ShipName: 'Suprêmes délices', ShipCity: 'Charleroi', ShipAddress: 'Boulevard Tirou, 255',\n                ShipRegion: 'CJ', ShipPostalCode: 'B-6000', ShipCountry: 'Belgium', Freight: 51.3, Verified: !0\n            }\n        ];\n        return (<GridComponent dataSource={gridData}>\r\n                <ColumnsDirective>\r\n                    <ColumnDirective field='OrderID' headerText='Order ID' width='120' textAlign=\"Right\" type=\"number\"/>\r\n                    <ColumnDirective field='CustomerID' headerText='Customer ID' width='140' type=\"string\"/>\r\n                    <ColumnDirective field=\"Freight\" headerText=\"Freight\" width=\"120\" textAlign=\"Right\" format=\"C\"/>\r\n                    <ColumnDirective field=\"OrderDate\" headerText=\"Order Date\" width=\"140\" format=\"yMd\"/>\r\n                </ColumnsDirective>\r\n            </GridComponent>);\n    }\n    Chart() {\n        let chartData = [\n            { month: 'Jan', sales: 35 }, { month: 'Feb', sales: 28 },\n            { month: 'Mar', sales: 34 }, { month: 'Apr', sales: 32 },\n            { month: 'May', sales: 40 }, { month: 'Jun', sales: 32 },\n            { month: 'Jul', sales: 35 }, { month: 'Aug', sales: 55 },\n            { month: 'Sep', sales: 38 }, { month: 'Oct', sales: 30 },\n            { month: 'Nov', sales: 25 }, { month: 'Dec', sales: 32 }\n        ];\n        return (<ChartComponent height='300px' primaryXAxis={{ valueType: 'Category' }}>\r\n                <SeriesCollectionDirective>\r\n                    <SeriesDirective dataSource={chartData} xName='month' yName='sales' type='Line'/>\r\n                </SeriesCollectionDirective>\r\n                <Inject services={[LineSeries, Legend, Tooltip, DataLabel, Category]}/>\r\n            </ChartComponent>);\n    }\n    Schedule() {\n        let dataManger = new DataManager({\n            url: 'http://localhost:62728/api/schedule',\n            adaptor: new ODataV4Adaptor,\n            crossDomain: true\n        });\n        return (<ScheduleComponent height='500px' currentView='Month' eventSettings={{ dataSource: dataManger }} readonly={true}>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\r\n        </ScheduleComponent>);\n    }\n    DropDownList() {\n        let sportsData = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];\n        return (<DropDownListComponent width='200px' dataSource={sportsData} placeholder='Select a game'/>);\n    }\n    DatePicker() {\n        return (<DatePickerComponent width='200px' placeholder='Enter date'/>);\n    }\n    Calendar() {\n        return (<CalendarComponent />);\n    }\n    Uploader() {\n        return (<UploaderComponent autoUpload={false}/>);\n    }\n    RichTextEditor() {\n        return (<RichTextEditorComponent height='340px'>\r\n            <p>The Rich Text Editor component is WYSIWYG (\"what you see is what you get\") editor that provides the best user experience to create and update the content. Users can format their content using standard toolbar commands.</p>\r\n\r\n            <p><b>Key features:</b></p>\r\n            <ul>\r\n                <li>\r\n                    <p>Provides &lt;IFRAME&gt; and &lt;DIV&gt; modes</p>\r\n                </li>\r\n                <li>\r\n                    <p>Capable of handling markdown editing.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Contains a modular library to load the necessary functionality on demand.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Provides a fully customizable toolbar.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Provides HTML view to edit the source directly for developers.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Supports third-party library integration.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Allows preview of modified content before saving it.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Handles images, hyperlinks, video, hyperlinks, uploads, etc.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Contains undo/redo manager.</p>\r\n                </li>\r\n                <li>\r\n                    <p>Creates bulleted and numbered lists.</p>\r\n                </li>\r\n            </ul>\r\n            <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar]}/>\r\n        </RichTextEditorComponent>);\n    }\n    render() {\n        let headerText = [{ text: \"Grid\" }, { text: \"Chart\" }, { text: \"Schedule\" }];\n        return (<div className='control-pane'>\r\n                <div className='control-section tab-control-section row'>\r\n                    <div id=\"TabContainer\">\r\n                        <div className=\"col-lg-4\" style={{ marginTop: '10px' }}>\r\n                            <div className='property-panel-header'>List of Components</div>\r\n                            <TreeViewComponent id=\"ListView\" ref={(treeview) => { this.treeObj = treeview; }} dragArea=\"#TabContainer\" cssClass=\"treeview-external-drag-tab\" fields={this.field} nodeDragStop={this.onNodeDragStop.bind(this)} nodeDragging={this.onNodeDrag.bind(this)} allowDragAndDrop={this.allowDragAndDrop}/>\r\n                        </div>\r\n                        <div className=\"col-lg-8 content-wrapper control-section\">\r\n                            <TabComponent id=\"draggableTab\" ref={(tab) => { this.tabObj = tab; }} created={this.onTabCreate.bind(this)} dragArea=\"#TabContainer\" onDragStart={this.onTabDragStart.bind(this)} dragged={this.onDraggedTab.bind(this)} allowDragAndDrop={this.allowDragAndDrop}>\r\n                                <TabItemsDirective>\r\n                                    <TabItemDirective header={headerText[0]} content={this.Grid}/>\r\n                                    <TabItemDirective header={headerText[1]} content={this.Chart}/>\r\n                                    <TabItemDirective header={headerText[2]} content={this.Schedule}/>\r\n                                </TabItemsDirective>\r\n                            </TabComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Dragdrop />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-react-grids\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-react-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-react-calendars\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}