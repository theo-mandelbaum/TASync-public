{"index.css":".tab-control-section .orientation-tab .e-content .e-item,\n.tab-control-section .responsive-mode .e-content .e-item {\n    font-size: 12px;\n    padding: 10px;\n    text-align: justify;\n}\n.tab-control-section  .e-headertext {\n    font-weight: 500;\n}\n.e-bigger .tab-control-section .e-tab .e-list-item {\n    border-bottom: 1px solid gainsboro;\n}\n.tab-control-section  .e-tab .e-list-item {\n    height: 63px;\n    border-bottom: 1px solid gainsboro;\n}\n.tab-control-section  .e-tab .e-list-item:last-child {\n    border-bottom: 1px solid gainsboro;\n}\n.e-bigger .tab-control-section  .e-tab .e-list-item {\n    height: 63px;\n}\n.tab-control-section .template-container {\n    height: 100%;\n    padding-top: 7px;\n}\n.tab-control-section .left {\n    display: inline-block;\n    vertical-align: top;\n}\n.tab-control-section .empImg {\n    height: 48px;\n    width: 48px;\n}\n.tab-control-section .name, .role {\n    line-height: normal;\n}\n.tab-control-section .name {\n    font-weight: 500;\n}\n.tab-control-section .role {\n    color: grey;\n    font-weight: 100;\n}\n.tab-control-section .info-div {\n    padding: 7px 15px 0 15px;\n}\n.tab-control-section .content-title {\n    height: 50px;\n    display: table;\n    margin: 0 auto;\n}\n.tab-control-section .cnt-text {\n    vertical-align: middle;\n    display: table-cell;\n    font-size: 18px;\n    font-weight: 600;\n}\n.tab-control-section .e-tab .e-listview .e-text {\n    display: block;\n    text-align: center;\n}\n\n/* custom code start*/\n.tab-control-section .property-panel-content {\n    padding: 10px;\n}\n@media only screen and (min-width: 1824px) {\n    .tab-control-section .col-lg-8.adaptive {\n        width: 40%;\n    }\n    .e-bigger .tab-control-section .col-lg-8.adaptive {\n        width: 45%;\n    }\n}\n\n/* custom code end*/\n\n#amount {\n    text-align: right;\n    font-size: 15px;\n    padding: 15px 0px;\n}\n\n#passenger-table th {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 400;\n    border: 1px solid gainsboro;\n}\n\n#passenger-table td,\n#passenger-table th {\n    padding: 10px;\n}\n\n#passenger-table td {\n    border: 1px solid gainsboro;\n}\n\n.name-header {\n    width: 200px;\n}\n\n.age-header {\n    width: 80px;\n}\n\n.gender-header {\n    width: 120px;\n}\n\n.type-header {\n    width: 150px;\n}\n\n.btn-container {\n    text-align: center;\n}\n\n.search-item {\n    padding-right: 50px;\n    padding-bottom: 20px;\n}\n\n.item-title {\n    font-weight: 500;\n    padding-top: 10px;\n}\n\n@media (max-width: 450px) {\n    .tab-control-resize-container {\n        height: 500px;\n    }\n    .responsive-align {\n        width: 75%;\n        margin: 0 auto;\n    }\n    .search-item {\n        padding: 0 0 20px 0;\n        width: 100%;\n    }\n}\n\n#err1,\n#err2,\n#err3 {\n    font-weight: bold;\n    color: red;\n    display: block;\n    margin-top: 15px;\n}\n\n.wizard-title {\n    font-size: 15px;\n}\n\n#PassengersList {\n    overflow: auto;\n}\n#passenger-table {\n    min-width: 500px;\n    width: 100%;\n}\n.tab-control-section .orientation-tab .e-listview:not(.e-list-template) .e-list-item {\n    height: 63px;\n    padding: 0 16px !important;\n}\n\n.orientation-tab .e-content .e-item.e-active,\n.orientation-tab .e-content .e-item.e-active ul.e-list-parent {\n    width: 100%;\n}\n\n#tab-wizard .e-content .e-item {\n    font-size: 12px;\n    margin: 10px;\n}\n\n#bookTickets, #confirmTickets, #makePayment {\n    margin-left: 4px;\n}\n\n#draggableTab .e-content .e-item {\n    font-size: 12px;\n    padding: 10px;\n    text-align: justify;\n}\n#draggableTab .e-upload {\n    width: 300px;\n}\n#TabContainer .property-panel-header {\n    text-align: center;\n    padding-bottom: 0;\n}\n.treeview-external-drag-tab .e-list-item,\n.e-bigger .treeview-external-drag-tab .e-list-item {\n    border: 0.5px solid #E1E7EC;\n    line-height: 15px;\n    padding: 0 5px;\n}\n.treeview-external-drag-tab.e-treeview .e-ul  {\n    padding: unset;\n}\n#TabContainer {\n    display: flex;\n}\n@media (max-width: 550px) {\n    #TabContainer {\n        display: block;\n    }\n}\n.key-class {\n    display: inline-block;\n    width: 130px;\n}\n@media only screen and (min-width: 1824px) {\n    .tab-control-resize-container {\n        width: 560px;\n    }\n\n    .e-bigger .tab-control-resize-container {\n        width: 75%;\n    }\n}\n@media screen and (max-width: 425px) {\n    .responsive-mode {\n        overflow: hidden;\n    }\n\n    .responsive-mode .e-item.e-active {\n        overflow: scroll;\n    }\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { PropertyPane } from './property-pane';\nimport { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\n\n\nconst Orientation = () => {\n    const [orientation, setOrientation] = useState(\"Top\");\n    let tabObj = useRef(null);\n    // Mapping ListView component dataSource property\n    let romeEmployees = [\n        { id: '1', name: 'Anne Dodsworth', role: 'Product Manager' },\n        { id: '2', name: 'Laura Callahan', role: 'Team Lead' },\n        { id: '3', name: 'Andrew Fuller', role: 'Developer' }\n    ];\n    // Mapping ListView component dataSource property\n    let parisEmployees = [\n        { id: '4', name: 'Robert King', role: 'Team Lead' },\n        { id: '5', name: 'Michael Suyama', role: 'Developer' },\n        { id: '6', name: 'Margaret Peacock', role: 'Developer' }\n    ];\n    // Mapping ListView component dataSource property\n    let londonEmployees = [\n        { id: '7', name: 'Janet Leverling', role: 'CEO' },\n        { id: '8', name: 'Steven Buchanan', role: 'HR' },\n        { id: '9', name: 'Nancy Davolio', role: 'Product Manager' }\n    ];\n    // Change event funtion for DropDownList component   \n    const changeOrientationMode = (e) => {\n        setOrientation(e.itemData.text);\n    };\n    // Change event funtion for DropDownList component   \n    const changeHeaderStyles = (e) => {\n        removeStyleClass();\n        let name = document.getElementById('headerStyles').value;\n        if (name === 'Fill') {\n            tabObj.current.element.classList.add('e-fill');\n        }\n        else if (name === 'Accent') {\n            tabObj.current.element.classList.add(\"e-background\");\n            tabObj.current.element.classList.add(\"e-accent\");\n        }\n        tabObj.current.refreshActiveBorder();\n    };\n    const removeStyleClass = () => {\n        tabObj.current.element.classList.remove(\"e-fill\");\n        tabObj.current.element.classList.remove(\"e-background\");\n        tabObj.current.element.classList.remove(\"e-accent\");\n    };\n    // Mapping DropDownList dataSource property\n    let oData = [\n        { 'value': 'top', 'text': 'Top' }, { 'value': 'bottom', 'text': 'Bottom' },\n        { 'value': 'left', 'text': 'Left' }, { 'value': 'right', 'text': 'Right' }\n    ];\n    // Mapping DropDownList fields property\n    let fields = { text: 'text', value: 'value' };\n    // Mapping DropDownList value property\n    let orientVal = 'top';\n    // Mapping DropDownList dataSource property\n    let hData = [\n        { 'value': 'default', 'text': 'Default' },\n        { 'value': 'fill', 'text': 'Fill' },\n        { 'value': 'accent', 'text': 'Accent' }\n    ];\n    // Mapping DropDownList value property\n    let hdrVal = 'default';\n    const templateString = (data) => {\n        return (<div className=\"template-container\">\n                <div className=\"left\"><img className='empImg' src={`https://ej2.syncfusion.com/react/demos/src/tab/Employees/${data.id}.png`} alt='${data.id}'/>\n                    <div className=\"left info-div\">\n                        <div className=\"name\"> {data.name}</div>\n                        <div className=\"role\"> {data.role}</div>\n                    </div>\n                </div>\n            </div>);\n    };\n    const template1 = () => {\n        return (<div>\n                <div className=\"content-title\">\n                    <div className=\"cnt-text\">Employee Info</div>\n                </div>\n                <ListViewComponent id=\"rome\" dataSource={romeEmployees} template={templateString}>\n                </ListViewComponent>\n            </div>);\n    };\n    const template2 = () => {\n        return (<div>\n                <div className=\"content-title\">\n                    <div className=\"cnt-text\">Employee Info</div>\n                </div>\n                <ListViewComponent id=\"paris\" dataSource={parisEmployees} template={templateString}>\n                </ListViewComponent>\n            </div>);\n    };\n    const template3 = () => {\n        return (<div>\n                <div className=\"content-title\">\n                    <div className=\"cnt-text\">Employee Info</div>\n                </div>\n                <ListViewComponent id=\"london\" dataSource={londonEmployees} template={templateString}>\n                </ListViewComponent>\n            </div>);\n    };\n    // Mapping Tab items Header property\n    let headertext;\n    headertext = [{ text: \"Rome\" }, { text: \"Paris\" }, { text: \"London\" }];\n    return (<div className='control-pane'>\n            <div className='control-section tab-control-section row'>\n                <div className='col-lg-8'>\n                    {/* Render the Tab Component */}\n                    <TabComponent ref={tabObj} cssClass='orientation-tab' headerPlacement={orientation} showCloseButton={true} height={320}>\n                        <TabItemsDirective>\n                            <TabItemDirective header={headertext[0]} content={template1.bind(this)}/>\n                            <TabItemDirective header={headertext[1]} content={template2.bind(this)}/>\n                            <TabItemDirective header={headertext[2]} content={template3.bind(this)}/>\n                        </TabItemsDirective>\n                    </TabComponent>\n                </div>\n                <div className='col-lg-4 property-section'>\n                    <PropertyPane title='Properties'>\n                        <table id='property' title='Properties' className='property-panel-table'>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '50%' }}>\n                                        <div>Header Placement</div>\n                                    </td>\n                                    <td style={{ width: '50%' }}>\n                                        <div>\n                                            {/* Render the DropDownList Component */}\n                                            <DropDownListComponent id='orientation' dataSource={oData} fields={fields} value={orientVal} width={'90%'} change={changeOrientationMode.bind(this)}/>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '50%' }}>\n                                        <div>Header Styles</div>\n                                    </td>\n                                    <td style={{ width: '50%' }}>\n                                        <div>\n                                            {/* Render the DropDownList Component */}\n                                            <DropDownListComponent id='headerStyles' dataSource={hData} fields={fields} value={hdrVal} width={'90%'} change={changeHeaderStyles.bind(this)}/>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>\n        </div>);\n};\nexport default Orientation;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Orientation />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-react-lists\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}