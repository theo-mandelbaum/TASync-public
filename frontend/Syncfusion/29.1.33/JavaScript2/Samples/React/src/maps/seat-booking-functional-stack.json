{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","map-data/seat-selection.json":"{\"type\":\"FeatureCollection\", \"features\": [\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,0],[0,20],[20,20],[20,0],[0,0]]],[[[0,22],[0,27],[20,27],[20,22],[0,22]]]]},\"properties\":{\"seatno\":19,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,47],[0,67],[20,67],[20,47],[0,47]]],[[[0,69],[0,74],[20,74],[20,69],[0,69]]]]},\"properties\":{\"seatno\":18,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,94],[0,114],[20,114],[20,94],[0,94]]],[[[0,116],[0,121],[20,121],[20,116],[0,116]]]]},\"properties\":{\"seatno\":13,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,141],[0,161],[20,161],[20,141],[0,141]]],[[[0,163],[0,168],[20,168],[20,163],[0,163]]]]},\"properties\":{\"seatno\":12,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,188],[0,208],[20,208],[20,188],[0,188]]],[[[0,210],[0,215],[20,215],[20,210],[0,210]]]]},\"properties\":{\"seatno\":7,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,235],[0,255],[20,255],[20,235],[0,235]]],[[[0,257],[0,262],[20,262],[20,257],[0,257]]]]},\"properties\":{\"seatno\":6,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,282],[0,302],[20,302],[20,282],[0,282]]],[[[0,304],[0,309],[20,309],[20,304],[0,304]]]]},\"properties\":{\"seatno\":1,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,0],[50,20],[70,20],[70,0],[50,0]]],[[[50,22],[50,27],[70,27],[70,22],[50,22]]]]},\"properties\":{\"seatno\":20,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,47],[50,67],[70,67],[70,47],[50,47]]],[[[50,69],[50,74],[70,74],[70,69],[50,69]]]]},\"properties\":{\"seatno\":17,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,94],[50,114],[70,114],[70,94],[50,94]]],[[[50,116],[50,121],[70,121],[70,116],[50,116]]]]},\"properties\":{\"seatno\":14,\"fill\":\"Orange\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,141],[50,161],[70,161],[70,141],[50,141]]],[[[50,163],[50,168],[70,168],[70,163],[50,163]]]]},\"properties\":{\"seatno\":11,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,188],[50,208],[70,208],[70,188],[50,188]]],[[[50,210],[50,215],[70,215],[70,210],[50,210]]]]},\"properties\":{\"seatno\":8,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,235],[50,255],[70,255],[70,235],[50,235]]],[[[50,257],[50,262],[70,262],[70,257],[50,257]]]]},\"properties\":{\"seatno\":5,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[50,282],[50,302],[70,302],[70,282],[50,282]]],[[[50,304],[50,309],[70,309],[70,304],[50,304]]]]},\"properties\":{\"seatno\":2,\"fill\":\"Orange\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,0],[80,20],[100,20],[100,0],[80,0]]],[[[80,22],[80,27],[100,27],[100,22],[80,22]]]]},\"properties\":{\"seatno\":21,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,47],[80,67],[100,67],[100,47],[80,47]]],[[[80,69],[80,74],[100,74],[100,69],[80,69]]]]},\"properties\":{\"seatno\":16,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,94],[80,114],[100,114],[100,94],[80,94]]],[[[80,116],[80,121],[100,121],[100,116],[80,116]]]]},\"properties\":{\"seatno\":15,\"fill\":\"Orange\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,141],[80,161],[100,161],[100,141],[80,141]]],[[[80,163],[80,168],[100,168],[100,163],[80,163]]]]},\"properties\":{\"seatno\":10,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,188],[80,208],[100,208],[100,188],[80,188]]],[[[80,210],[80,215],[100,215],[100,210],[80,210]]]]},\"properties\":{\"seatno\":9,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,235],[80,255],[100,255],[100,235],[80,235]]],[[[80,257],[80,262],[100,262],[100,257],[80,257]]]]},\"properties\":{\"seatno\":4,\"fill\":\"gray\"}},\n    {\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[80,282],[80,302],[100,302],[100,282],[80,282]]],[[[80,304],[80,309],[100,309],[100,304],[80,304]]]]},\"properties\":{\"seatno\":3,\"fill\":\"gray\"}}\n    ]}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Seat Booking sample\n */\nimport * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Selection } from '@syncfusion/ej2-react-maps';\n\nimport { PropertyPane } from './property-pane';\nimport * as seatSelection from './map-data/seat-selection.json';\nconst SAMPLE_CSS = `\n    #control-container {\n        padding: 0px !important;\n    }\n    #seat-parent {\n        text-align: center;\n        cursor: pointer\n    }\n    #selectedseats {\n        padding: 10px;\n    }\n    #selectedseats, #seat-info {             \n        font-size: 14px;\n    }\n    #clear-btn {\n        padding: 10px;\n        border: 2px solid rgb(241, 235, 247);\n        border-radius: 8px;\n        background: rgb(246, 245, 248);\n        color: black;\n        font-size: 14px;\n    }\n    #sampletitle {\n        padding-left:30px;\n        font-size:20px;\n        font-weight:400;\n    }\n    .seats {\n        padding-top: 15px;\n        font-weight: bold;\n    }`;\nlet seatInfo;\nconst SeatBookingMaps = () => {\n    let mapInstance = useRef(null);\n    const shapeSelected = (args) => {\n        seatInfo = document.getElementById('selectedseats');\n        if (args.shapeData.fill === 'Orange') {\n            args.fill = 'Orange !important';\n            document.getElementById(args.target).setAttribute('class', 'ShapeselectionMapStyle');\n            return;\n        }\n        args.fill = 'green';\n        let seat = args.shapeData.seatno;\n        let connector = ' ';\n        if (seatInfo.innerHTML === '') {\n            seatInfo.innerHTML = '<span id=\"seat-info\">Seats Selected -</span>';\n        }\n        else {\n            connector = ', ';\n        }\n        let seatString = '<span class=\"seats\">' + connector + seat + '</span>';\n        let seatString1 = ' ' + seat + '</span><span class=\"seats\">,';\n        let lastString = '<span id=\"seat-info\">Seats Selected -</span><span class=\"seats\"> ' + seat + '</span>';\n        if (seatInfo.innerHTML.indexOf(seatString) === -1 && seatInfo.innerHTML.indexOf(seatString1) === -1 && seatInfo.innerHTML.indexOf(lastString) === -1) {\n            seatInfo.innerHTML += '<span class=\"seats\">' + connector + seat + '</span>';\n        }\n        else {\n            seatInfo.innerHTML = seatInfo.innerHTML.replace(seatString, '');\n            seatInfo.innerHTML = seatInfo.innerHTML.replace(seatString1, '');\n            if (seatInfo.innerHTML === lastString) {\n                seatInfo.innerHTML = '';\n            }\n        }\n    };\n    const load = (args) => {\n    };\n    const clearseats = () => {\n        if (seatInfo != null && seatInfo.innerHTML !== '') {\n            let seats = seatInfo.innerText.split('-')[1].trim().split(',').map(num => Number(num.trim()));\n            for (let i = 0, length = seats.length; i < length; i++) {\n                mapInstance.current.shapeSelection(0, 'seatno', seats[i], false);\n            }\n            seatInfo.innerHTML = '';\n        }\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className='control-section row'>\n                <div className='col-md-8'>\n                    <div style={{ width: 200, margin: 'auto', paddingBottom: 20 }}>\n                        <img src=\"https://ej2.syncfusion.com/react/demos/src/maps/images/bus-icon.png\" alt=\"Bus icon\" style={{ width: 25, height: 25, float: 'left' }}/>\n                        <div id=\"sampletitle\">Bus seat selection</div>\n                    </div>\n                    <div style={{ border: '3px solid darkgray', width: 200, display: 'block', margin: 'auto' }}>\n                        <img src=\"https://ej2.syncfusion.com/react/demos/src/maps/images/wheel.png\" alt=\"Stering wheel icon\" style={{ width: 30, height: 30, marginLeft: '18%', marginTop: 10 }}></img>\n                        <MapsComponent id=\"maps\" load={load} zoomSettings={{ enable: false }} height=\"400\" itemSelection={shapeSelected} ref={mapInstance}>\n                            <Inject services={[Selection]}/>\n                            <LayersDirective>\n                                <LayerDirective shapeData={seatSelection} geometryType='Normal' shapeSettings={{ colorValuePath: 'fill' }} selectionSettings={{ enable: true, opacity: 1, enableMultiSelect: true }}/>\n                            </LayersDirective>\n                        </MapsComponent>\n                    </div>\n                </div>\n                <div className='col-md-4 property-section'>\n                    <PropertyPane title='Seat Selection'>\n                        <table id='property' role='none' className='property-panel-table' style={{ width: '100%' }}>\n                            <tbody>\n                                <tr style={{ height: '30px' }}>\n                                    <td>\n                                        <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'gray', borderRadius: '25%' }}></div>\n                                        <div id='available' style={{ marginTop: '-25px', marginLeft: '15px' }}>Available</div>\n                                    </td>\n                                </tr>\n                                <tr style={{ height: '30px' }}>\n                                    <td>\n                                        <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'Green', borderRadius: '25%' }}></div>\n                                        <div id='selected' style={{ marginTop: '-25px', marginLeft: '15px' }}>Selected</div>\n                                    </td>\n                                </tr>\n                                <tr style={{ height: '30px' }}>\n                                    <td>\n                                        <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'Orange', borderRadius: '25%' }}></div>\n                                        <div id='booked' style={{ marginTop: '-25px', marginLeft: '15px' }}>Booked</div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br />\n                        <div id=\"seat-parent\">\n                            <span id='clear-btn' onClick={clearseats}>Clear Selection</span>\n                            <br />\n                            <br />\n                            <div id=\"selectedseats\"></div>\n                        </div>\n                    </PropertyPane>\n                </div>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of Maps sample\">\n                <p>This sample demonstrates the rendering of normal geometry type shapes on the map. We have rendered normal geometry type shapes to represent the bus seat selection layout. Available, booked, and selected seats will be displayed in different colors.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Maps features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render the normal geometry type shapes on the map. Selection is enabled in this sample. You can use the <code>fill</code>, <code>width</code>, and <code>color</code> properties in the <code>selectionSettings</code> to customize the appearance of the shapes after selection.\n                </p>\n                <br />\n                <p style={{ fontWeight: 500 }}>Injecting Module</p>\n                <p>\n                    Maps component features are segregated into individual feature-wise modules. To use the selection, inject the <code>Selection</code> module using the <code>Maps.Inject(Selection)</code> method.\n                </p>\n            </section>\n        </main>);\n};\nexport default SeatBookingMaps;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<SeatBookingMaps />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-maps\":\"*\",\"@syncfusion/ej2-react-maps\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}