{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n// Import React and necessary components from Syncfusion's EJ2 React Diagrams library for building the diagram.\nimport * as React from \"react\";\nimport { HierarchicalTree, DataBinding, DiagramComponent, Inject, DiagramTools } from \"@syncfusion/ej2-react-diagrams\";\n\nimport { DataManager } from \"@syncfusion/ej2-data\";\nfunction RemoteData() {\n    return (<div className=\"control-pane\">\n            <div className=\"control-section\">\n                {/* Initializes and renders diagram control */}\n                <DiagramComponent id=\"diagram\" width={\"100%\"} height={\"490\"} layout={{\n            type: \"HierarchicalTree\",\n            margin: { left: 0, right: 0, top: 100, bottom: 0 },\n            verticalSpacing: 40,\n        }} \n    // Set default properties for nodes\n    getNodeDefaults={(node) => {\n            node.width = 80;\n            node.height = 40;\n            // Initialize node shape\n            node.shape = { type: \"Basic\", shape: \"Rectangle\" };\n            node.style = { fill: \"#048785\", strokeColor: \"Transparent\" };\n        }} \n    // Set default properties for connectors\n    getConnectorDefaults={(connector) => {\n            connector.type = \"Orthogonal\";\n            connector.style.strokeColor = \"#048785\";\n            connector.targetDecorator.shape = \"None\";\n        }} \n    // Configure the data source for the diagram\n    dataSourceSettings={{\n            id: \"Id\",\n            parentId: \"ParentId\",\n            dataSource: new DataManager({\n                url: \"http://localhost:62728/api/RemoteData\",\n                crossDomain: true\n            }),\n            // Bind external data to node properties\n            doBinding: (nodeModel, data) => {\n                nodeModel.annotations = [{\n                        content: data[\"Label\"],\n                        style: { color: \"white\" }\n                    }];\n            }\n        }} \n    // Disable all interactions except zoom/pan\n    tool={DiagramTools.ZoomPan} snapSettings={{ constraints: 0 }}>\n                    <Inject services={[DataBinding, HierarchicalTree]}/>\n                </DiagramComponent>\n            </div>\n        </div>);\n}\nexport default RemoteData;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RemoteData />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"@syncfusion/ej2-react-diagrams\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\"}"}