{"index.css":".api-carousel-section .carousel-sample {\n    margin: 0 auto 2em;\n    max-width: 500px;\n    height: 300px;\n}\n\n.api-carousel-section .property-panel-table td {\n    margin: 0;\n    padding-bottom: 1em;\n}\n\n.api-carousel .e-carousel-items .e-carousel-item .img-container {\n    height: 300px;\n}\n\n.api-carousel .e-carousel-items .e-carousel-item .img-container .img-caption {\n    color: rgba(255, 255, 255);\n    font-style: oblique;\n    font-size: 1.5rem;\n    margin: 0;\n    left: 1.5rem;\n    position: absolute;\n    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    top: 1.5rem;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { CarouselComponent, CarouselItemsDirective, CarouselItemDirective } from '@syncfusion/ej2-react-navigations';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SwitchComponent } from '@syncfusion/ej2-react-buttons';\n\nimport { PropertyPane } from './property-pane';\n\nconst API = () => {\n    const [showArrow, setShowArrow] = useState('Visible');\n    const [interval, setInterval] = useState(3000);\n    const [isAutoPlay, setIsAutoPlay] = useState(true);\n    const [isInfinityLoop, setIsInfinityLoop] = useState(true);\n    const [isShowIndicator, setIsShowIndicator] = useState(true);\n    const [isShowPlay, setIsShowPlay] = useState(true);\n    let carouselObj;\n    const itemTemplate1 = () => {\n        return (<figure className=\"img-container\">\n                <img src=\"https://ej2.syncfusion.com/react/demos/src/carousel/images/bridge.jpg\" alt=\"bridge\" style={{ height: \"100%\", width: \"100% \" }}/>\n                <figcaption className=\"img-caption\">Showing 1 of 5</figcaption>\n            </figure>);\n    };\n    const itemTemplate2 = () => {\n        return (<figure className=\"img-container\">\n                <img src=\"https://ej2.syncfusion.com/react/demos/src/carousel/images/trees.jpg\" alt=\"spring_trees\" style={{ height: \"100%\", width: \"100% \" }}/>\n                <figcaption className=\"img-caption\">Showing 2 of 5</figcaption>\n            </figure>);\n    };\n    const itemTemplate3 = () => {\n        return (<figure className=\"img-container\">\n                <img src=\"https://ej2.syncfusion.com/react/demos/src/carousel/images/waterfall.jpg\" alt=\"waterfall\" style={{ height: \"100%\", width: \"100% \" }}/>\n                <figcaption className=\"img-caption\">Showing 3 of 5</figcaption>\n            </figure>);\n    };\n    const itemTemplate4 = () => {\n        return (<figure className=\"img-container\">\n                <img src=\"https://ej2.syncfusion.com/react/demos/src/carousel/images/sea.jpg\" alt=\"sea\" style={{ height: \"100%\", width: \"100% \" }}/>\n                <figcaption className=\"img-caption\">Showing 4 of 5</figcaption>\n            </figure>);\n    };\n    const itemTemplate5 = () => {\n        return (<figure className=\"img-container\">\n                <img src=\"https://ej2.syncfusion.com/react/demos/src/carousel/images/rocks.jpeg\" alt=\"rocks\" style={{ height: \"100%\", width: \"100% \" }}/>\n                <figcaption className=\"img-caption\">Showing 5 of 5</figcaption>\n            </figure>);\n    };\n    const showArrowsData = [\n        { text: 'Hidden', value: 'Hidden' },\n        { text: 'Visible', value: 'Visible' },\n        { text: 'On Hover', value: 'VisibleOnHover' }\n    ];\n    const showArrowsField = { text: 'text', value: 'value' };\n    const showArrowsStateChange = (args) => {\n        setShowArrow(args.value);\n    };\n    const intervalData = [\n        { text: '3 Seconds', value: 3000 },\n        { text: '5 Seconds', value: 5000 },\n        { text: '7 Seconds', value: 7000 }\n    ];\n    const intervalField = { text: 'text', value: 'value' };\n    const intervalStateChange = (args) => {\n        setInterval(args.value);\n    };\n    const autoPlayStateChange = (args) => {\n        setIsAutoPlay(args.checked);\n    };\n    const infiniteLoopStateChange = (args) => {\n        setIsInfinityLoop(args.checked);\n    };\n    const showIndicatorStateChange = (args) => {\n        setIsShowIndicator(args.checked);\n    };\n    const showPlayStateChange = (args) => {\n        setIsShowPlay(args.checked);\n    };\n    return (<div className='control-pane'>\n            <div className='col-lg-8 control-section api-carousel-section'>\n                <div className='control-wrapper carousel-sample'>\n                    {/* Render the Carousel Component */}\n                    <CarouselComponent ref={(carousel) => { carouselObj = carousel; }} cssClass=\"api-carousel\" interval={interval} buttonsVisibility={showArrow} autoPlay={isAutoPlay} loop={isInfinityLoop} showIndicators={isShowIndicator} showPlayButton={isShowPlay}>\n                        <CarouselItemsDirective>\n                            <CarouselItemDirective template={itemTemplate1}/>\n                            <CarouselItemDirective template={itemTemplate2}/>\n                            <CarouselItemDirective template={itemTemplate3}/>\n                            <CarouselItemDirective template={itemTemplate4}/>\n                            <CarouselItemDirective template={itemTemplate5}/>\n                        </CarouselItemsDirective>\n                    </CarouselComponent>\n                </div>\n            </div>\n            <div className='col-lg-4 property-section api-carousel-section'>\n                <PropertyPane title='Properties'>\n                    <table id='property' title='Properties' className='property-panel-table'>\n                        <tbody>\n                            <tr>\n                                <td>Enable Autoplay</td>\n                                <td>\n                                    <div>\n                                        <SwitchComponent id=\"autoPlay\" checked={isAutoPlay} change={autoPlayStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Infinite Looping</td>\n                                <td>\n                                    <div>\n                                        <SwitchComponent id=\"infiniteLoop\" checked={isInfinityLoop} change={infiniteLoopStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Show Indicators</td>\n                                <td>\n                                    <div>\n                                        <SwitchComponent id=\"showIndicator\" checked={isShowIndicator} change={showIndicatorStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Show Play Button</td>\n                                <td>\n                                    <div>\n                                        <SwitchComponent id=\"showPlay\" checked={isShowPlay} change={showPlayStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Show Arrows</td>\n                                <td>\n                                    <div>\n                                        <DropDownListComponent id='showArrows' dataSource={showArrowsData} fields={showArrowsField} value={showArrow} change={showArrowsStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Slide Interval</td>\n                                <td>\n                                    <div>\n                                        <DropDownListComponent id='interval' dataSource={intervalData} fields={intervalField} value={interval} change={intervalStateChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n        </div>);\n};\nexport default API;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<API />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\"}"}