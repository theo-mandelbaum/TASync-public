{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Right to left for bullet chart\n */\nimport * as React from 'react';\nimport { BulletChartComponent, BulletRangeCollectionDirective, BulletRangeDirective, BulletTooltip, Inject } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class BulletChartOrientation extends SampleBase {\n    bulletChartInstance;\n    bulletLoad = (args) => {\n        let chart = document.getElementById('bar-Orientation');\n        chart.setAttribute('title', '');\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.bulletChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/light/i, 'Light').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    };\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section col-md-8'>\n                    <BulletChartComponent id='bar-Orientation' ref={chart => this.bulletChartInstance = chart} width={'19%'} height={'400'} animation={{ enable: false }} tooltip={{ enable: true }} valueField='value' targetField='target' categoryField='name' minimum={0} maximum={30} interval={5} labelFormat='{value}%' title='Profit in Percent' margin={{ left: 10 }} titlePosition={'Top'} orientation='Vertical' load={this.bulletLoad.bind(this)} dataSource={[{ value: 23, target: 27, name: 'Product A' }]}>\n                        <Inject services={[BulletTooltip]}/>\n                        <BulletRangeCollectionDirective>\n                            <BulletRangeDirective end={20}></BulletRangeDirective>\n                            <BulletRangeDirective end={25}></BulletRangeDirective>\n                            <BulletRangeDirective end={30}></BulletRangeDirective>\n                        </BulletRangeCollectionDirective>\n                    </BulletChartComponent>\n                </div>\n                <div className='property-section col-md-4'>\n                    <div className=\"property-panel-header\">Properties</div>\n                    <table>\n                    <tbody>\n                        <tr>\n                            <td style={{ width: '60%' }}>\n                                <div className='prop-text'>Feature Mode</div>\n                            </td>\n                            <td style={{ width: '40%' }}>\n                                <DropDownListComponent id='featureType' value='Vertical' dataSource={['Vertical', 'Horizontal']} change={(args) => {\n                if (args.value === 'Horizontal') {\n                    this.bulletChartInstance.width = '80%';\n                    this.bulletChartInstance.height = '100px';\n                }\n                else {\n                    this.bulletChartInstance.width = '19%';\n                    this.bulletChartInstance.height = '400px';\n                }\n                this.bulletChartInstance.orientation = args.value;\n                this.bulletChartInstance.refresh();\n            }}></DropDownListComponent>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<BulletChartOrientation />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\"}"}