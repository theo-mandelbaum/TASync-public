{"index.css":".tree-control_wrapper {\n    max-width: 500px;\n    min-height: 50px;\n    margin: auto;\n    border: 1px solid #dddddd;\n    border-radius: 3px;\n}\n#loading {\n    display: inline-block;\n    margin: 10px 41%;\n    font-size: 20px;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { TreeViewComponent } from '@syncfusion/ej2-react-navigations';\nimport { DataManager, Query, ODataV4Adaptor } from '@syncfusion/ej2-data';\n\nexport class RemoteData extends SampleBase {\n    // Use data manager to get tree data from remote source\n    data = new DataManager({\n        url: 'https://services.odata.org/V4/Northwind/Northwind.svc',\n        adaptor: new ODataV4Adaptor,\n        crossDomain: true,\n    });\n    // Set queries to filter and fetch remote data\n    query = new Query().from('Employees').select('EmployeeID,FirstName,Title').take(5);\n    query1 = new Query().from('Orders').select('OrderID,EmployeeID,ShipName').take(5);\n    fields = { dataSource: this.data, query: this.query, id: 'EmployeeID', text: 'FirstName', hasChildren: 'EmployeeID',\n        child: { dataSource: this.data, query: this.query1, id: 'OrderID', parentID: 'EmployeeID', text: 'ShipName' }\n    };\n    // Show loading message, while loading tree data\n    show() {\n        let popup = document.getElementById('loading');\n        popup.style.display = '';\n    }\n    // Hide loading message, after tree data has been loaded\n    hide() {\n        let popup = document.getElementById('loading');\n        popup.style.display = 'none';\n    }\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section'>\n        <div className='tree-control_wrapper'>\n            <span id=\"loading\">Loading...</span>\n            <TreeViewComponent fields={this.fields} dataBound={this.hide.bind(this)} created={this.show.bind(this)}/>\n        </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RemoteData />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}