{"index.css":"\n    /* ListView position alignment */\n\n    #ui-list.e-listview {\n        margin: auto;\n        max-width: 325px;\n        line-height: initial;\n        border: 1px solid lightgray;\n    }\n\n    body.tailwind-dark .e-listview.e-list-template .e-list-wrapper:not(.e-list-multi-line) .e-list-content{\n        padding: 0.83em 0;\n    }\n\n    body.tailwind-dark .e-listview.e-list-template .e-list-wrapper.e-list-avatar .e-avatar {\n        height: 2.8571em;\n        left: 1.0667em;\n        top: 0.7142em;\n        width: 2.8571em;\n    }\n\n    /* ListView header alignment */\n\n    #ui-list.e-listview .e-list-header {\n        height: 50px\n    }\n\n    #ui-list.e-listview .e-list-header .e-text {\n        line-height: 18px\n    }\n\n    /* ListView template customization */\n\n    #ui-list.e-listview .showUI {\n        display: flex;\n    }\n\n    #ui-list.e-listview .hideUI {\n        display: none;\n    }\n\n    #ui-list.e-listview .R {\n        background: lightgrey;\n    }\n\n    #ui-list.e-listview .M {\n        background: pink;\n    }\n\n    #ui-list.e-listview .A {\n        background: lightgreen;\n    }\n\n    #ui-list.e-listview .S {\n        background: lightskyblue;\n    }\n\n    #ui-list.e-listview .J {\n        background: orange;\n    }\n\n    #ui-list.e-listview .N {\n        background: lightblue;\n    }\n\n    /* ListView theme customization */\n\n    .highcontrast #ui-list.e-listview .e-list-item:not(.e-hover),\n    .highcontrast #ui-list.e-listview .e-list-header {\n        background: rgb(0, 0, 0);\n    }\n\n    .highcontrast #ui-list.e-listview .e-list-item.e-active {\n        background: #ffd939;\n        color: #000000;\n    }\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * ListView Virtualization Sample\n */\nimport * as React from 'react';\nimport { ListViewComponent, Inject, Virtualization } from '@syncfusion/ej2-react-lists';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { PropertyPane } from './property-pane';\nimport { SampleBase } from './sample-base';\n\nexport class UiVirtualization extends SampleBase {\n    listviewInstance;\n    commonData = [];\n    dataSource = {};\n    startTime;\n    endTime;\n    liElement;\n    constructor(props) {\n        super(props);\n        this.commonData = [\n            { name: 'Nancy', icon: 'N', id: '0', altText: \"\" },\n            { name: 'Andrew', icon: 'A', id: '1', altText: \"\" },\n            { name: 'Janet', icon: 'J', id: '2', altText: \"\" },\n            { name: 'Margaret', imgUrl: 'https://ej2.syncfusion.com/react/demos/src/listview/images/margaret.png', id: '3', altText: \"\" },\n            { name: 'Steven', icon: 'S', id: '4', altText: \"\" },\n            { name: 'Laura', imgUrl: 'https://ej2.syncfusion.com/react/demos/src/listview/images/laura.png', id: '5', altText: \"\" },\n            { name: 'Robert', icon: 'R', id: '6', altText: \"\" },\n            { name: 'Michael', icon: 'M', id: '7', altText: \"\" },\n            { name: 'Albert', imgUrl: 'https://ej2.syncfusion.com/react/demos/src/listview/images/albert.png', id: '8', altText: \"\" },\n            { name: 'Nolan', icon: 'N', id: '9', altText: \"\" }\n        ];\n        this.dataSource = this.createDataSource();\n    }\n    // Set customized list template\n    template(data) {\n        return (<div className=\"e-list-wrapper e-list-avatar\">\n                <span className={`e-avatar e-avatar-circle ${data.icon} ${data.imgUrl ? 'hideUI' : 'showUI'}`}>{data.icon}</span>\n                <img className={`e-avatar e-avatar-circle ${data.imgUrl ? 'showUI' : 'hideUI'}`} src={data.imgUrl ? data.imgUrl : ' '} alt={data.altText}/>\n                <span className=\"e-list-content\">{data.name}</span>\n            </div>);\n    }\n    createDataSource() {\n        const source = {};\n        [[1010, 'data1'], [5010, 'data5'], [10010, 'data10'], [25010, 'data25']]\n            .forEach(([count, key]) => {\n            let data = [...this.commonData];\n            let index;\n            let spyIndex;\n            for (let i = 10; i <= count; i++) {\n                while (index === spyIndex) {\n                    index = Math.floor(Math.random() * 10);\n                }\n                data.push({\n                    ...this.commonData[index],\n                    id: i.toString()\n                });\n                spyIndex = index;\n            }\n            source[key] = data;\n        });\n        return source;\n    }\n    componentDidMount() {\n        // Set element reference once when component mounts\n        this.liElement = document.getElementById('ui-list');\n        createSpinner({ target: this.liElement });\n        if (Browser.isDevice) {\n            this.liElement.classList.add('ui-mobile');\n        }\n    }\n    // Set dropdown list data\n    ddlDatasource = [\n        { value: '1', text: '1k' },\n        { value: '5', text: '5k' },\n        { value: '10', text: '10k' },\n        { value: '25', text: '25k' }\n    ];\n    //Map the appropriate columns to DropDownList fields property\n    ddlFields = { text: 'text', value: 'value' };\n    //Map the appropriate columns to ListView fields property\n    fields = { text: 'name' };\n    onActionComplete() {\n        this.endTime = new Date();\n        document.getElementById('time').innerText = (this.endTime.getTime() - this.startTime.getTime()) + ' ms';\n    }\n    onActionBegin() {\n        this.startTime = new Date();\n    }\n    onChange(e) {\n        showSpinner(this.liElement);\n        const start = Date.now();\n        this.listviewInstance.dataSource = this.dataSource[`data${e.value}`];\n        this.listviewInstance.dataBind();\n        document.getElementById('time').innerText = `${Date.now() - start} ms`;\n        hideSpinner(this.liElement);\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='ui-control-section control-section'>\n                    <div className='col-lg-8'>\n                        <div className=\"content-wrapper\">\n                            {/* ListView element */}\n                            <ListViewComponent id='ui-list' dataSource={this.dataSource.data1} enableVirtualization={true} headerTitle=\"Contacts\" fields={this.fields} cssClass=\"e-list-template\" height={500} template={this.template} actionComplete={this.onActionComplete.bind(this)} ref={(listview) => { this.listviewInstance = listview; }} actionBegin={this.onActionBegin.bind(this)} showHeader={true}>\n                                <Inject services={[Virtualization]}/>\n                            </ListViewComponent>\n                        </div>\n                    </div>\n                    <div id=\"#slider_event\" className='col-lg-4 property-section'>\n                        <PropertyPane title='Properties'>\n                            <table id=\"Properties\" title=\"Tooltip\" className='property-panel-table' style={{ width: '100%' }}>\n                                <tbody>\n                                    <tr>\n                                        <td style={{ width: '50%' }}>\n                                            <div className=\"userselect\">Load data</div>\n                                        </td>\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                                            <div>\n                                                {/* DropDownList element */}\n                                                <DropDownListComponent id='ddl' dataSource={this.ddlDatasource} fields={this.ddlFields} index={0} change={this.onChange.bind(this)} placeholder=\"Select a range\" popupHeight=\"200px\"/>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td style={{ width: '50%' }}>\n                                            <div className=\"userselect\">Time taken</div>\n                                        </td>\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\n                                            <div style={{ paddingLeft: '10px' }}>\n                                                <span id=\"time\">0 ms</span>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </PropertyPane>\n                    </div>\n                </div>\n\n\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<UiVirtualization />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-react-lists\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}