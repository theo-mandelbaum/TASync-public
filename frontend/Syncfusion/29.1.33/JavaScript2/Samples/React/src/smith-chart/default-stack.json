{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","theme-color.js":"export let loadSmithChartTheme = (args) => {\n    let theme = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.smithchart.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n};\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n  * Default sample for smith chart\n */\nimport * as React from \"react\";\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SmithchartComponent, SmithchartSeriesCollectionDirective, SmithchartSeriesDirective, SmithchartLegend, TooltipRender, Inject } from '@syncfusion/ej2-react-charts';\nimport { PropertyPane } from './property-pane';\nimport { SampleBase } from './sample-base';\nimport { loadSmithChartTheme } from './theme-color';\nexport class Default extends SampleBase {\n    // Code for Property Panel\n    smithchartInstance;\n    dropElement;\n    droplist = [\n        { text: 'Impedance', value: 'Impedance' },\n        { text: 'Admittance', value: 'Admittance' },\n    ];\n    typeChange() {\n        let element = this.dropElement.value;\n        this.smithchartInstance.renderType = element;\n        this.smithchartInstance.refresh();\n    }\n    load(args) {\n        args.smithchart.title.text = 'Transmission details';\n        args.smithchart.title.visible = true;\n        loadSmithChartTheme(args);\n    }\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='col-md-9 control-section'>\n                    <SmithchartComponent load={this.load.bind(this)} id='container' ref={gauge => this.smithchartInstance = gauge} legendSettings={{ visible: true, shape: 'Circle' }}>\n                        <Inject services={[SmithchartLegend, TooltipRender]}/>\n                        <SmithchartSeriesCollectionDirective>\n                            <SmithchartSeriesDirective points={[\n                { resistance: 10, reactance: 25 }, { resistance: 8, reactance: 6 },\n                { resistance: 6, reactance: 4.5 }, { resistance: 4.5, reactance: 2 },\n                { resistance: 3.5, reactance: 1.6 }, { resistance: 2.5, reactance: 1.3 },\n                { resistance: 2, reactance: 1.2 }, { resistance: 1.5, reactance: 1 },\n                { resistance: 1, reactance: 0.8 }, { resistance: 0.5, reactance: 0.4 },\n                { resistance: 0.3, reactance: 0.2 }, { resistance: 0, reactance: 0.15 },\n            ]} name='Transmission1' enableAnimation={true} tooltip={{ visible: true }} marker={{ shape: 'Circle', visible: true, border: { width: 2 } }}>\n                            </SmithchartSeriesDirective>\n                            <SmithchartSeriesDirective points={[\n                { resistance: 20, reactance: -50 }, { resistance: 10, reactance: -10 },\n                { resistance: 9, reactance: -4.5 }, { resistance: 8, reactance: -3.5 },\n                { resistance: 7, reactance: -2.5 }, { resistance: 6, reactance: -1.5 },\n                { resistance: 5, reactance: -1 }, { resistance: 4.5, reactance: -0.5 },\n                { resistance: 3.5, reactance: 0 }, { resistance: 2.5, reactance: 0.4 },\n                { resistance: 2, reactance: 0.5 }, { resistance: 1.5, reactance: 0.5 },\n                { resistance: 1, reactance: 0.4 }, { resistance: 0.5, reactance: 0.2 },\n                { resistance: 0.3, reactance: 0.1 }, { resistance: 0, reactance: 0.05 },\n            ]} name='Transmission2' enableAnimation={true} tooltip={{ visible: true }} marker={{ shape: 'Circle', visible: true, border: { width: 2 } }}>\n                            </SmithchartSeriesDirective>\n                        </SmithchartSeriesCollectionDirective>\n                    </SmithchartComponent>\n                </div>\n                {/* Property Panel */}\n                <div className='col-md-3 property-section'>\n                    <PropertyPane title='Properties'>\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\n                        <tbody>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '60%' }}>\n                                    <div>Render Type</div>\n                                </td>\n                                <td style={{ width: '40%' }}>\n                                    <div>\n                                        <DropDownListComponent width=\"120px\" index={0} ref={d => this.dropElement = d} change={this.typeChange.bind(this)} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}