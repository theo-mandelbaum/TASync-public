{"index.css":"/* custom code start */\n\n/* template support css*/\n.e-contextMenu-template .menu-wrapper{\n    display: flex;\n    align-items: center;\n    padding: 2px;\n}\n\n.e-contextMenu-template .menu-wrapper .text-content {\n    display: flex;\n    flex-direction: column;\n}\n\n.e-contextMenu-template .menu-wrapper .text {\n    font-weight: 600;\n}\n\n.e-contextMenu-template .menu-wrapper .description {\n    font-size: 0.8em;\n}\n\n.e-contextMenu-template .menu-wrapper .icon-right {\n    padding: 8px 8px 8px 0px;\n    font-size: 1.5em;\n}\n\n.e-contextMenu-template .e-caret {\n    margin-top: -34px !important;\n}\n\n.e-contextMenu-template .e-menu-item {\n    height: auto !important;\n    line-height: unset !important;\n}\n\n#contextmenu-control {\n    margin: 5% 25%;\n    width: auto;\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n}\n\n#contextmenutarget {\n    border: 1px dashed;\n    height: 250px;\n    padding: 10px;\n    position: relative;\n    text-align: center;\n    justify-content: center;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n}\n\n@media only screen and (max-width: 700px) {\n    #contextmenu-control {\n        margin: 5% 10%;\n        width: auto;\n    }\n    #contextmenutarget {\n        font-size: 12px;\n    }\n}\n\n.e-contextMenu-template .e-menu-item .e-previous {\n    margin-right: 0 !important;\n}\n\n/* custom code end */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { ContextMenuComponent } from '@syncfusion/ej2-react-navigations';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\nconst Template = () => {\n    let template = \"<div class='menu-wrapper'><span class='${iconCss} icon-right'></span><div class='text-content'><span class='text'>${answerType}</span><span class='description'>${description}</span></div></div>\";\n    let content = Browser.isDevice ? 'Right-click or touch and hold to open the Context Menu and select the answer type' : 'Right click/Touch hold to open the Context Menu and select the answer type';\n    //ContextMenu items definition\n    let menuItems = [\n        {\n            answerType: 'Selection',\n            description: \"Choose from options\",\n            iconCss: 'e-icons e-list-unordered'\n        },\n        {\n            answerType: 'Yes / No',\n            description: \"Select Yes or No\",\n            iconCss: 'e-icons e-check-box',\n        },\n        {\n            answerType: 'Text',\n            description: \"Type own answer\",\n            iconCss: 'e-icons e-caption',\n            items: [\n                {\n                    answerType: 'Single line',\n                    description: \"Type answer in a single line\",\n                    iconCss: 'e-icons e-text-form'\n                },\n                {\n                    answerType: 'Multiple line',\n                    description: \"Type answer in multiple line\",\n                    iconCss: 'e-icons e-text-wrap'\n                }\n            ]\n        },\n        {\n            answerType: 'None',\n            iconCss: 'e-icons e-mouse-pointer',\n            description: \"No answer required\"\n        },\n    ];\n    const addTemplateClass = (args) => {\n        if (args.element.classList.contains('e-ul')) {\n            args.element.classList.add('e-contextMenu-template');\n        }\n    };\n    return (<div className='control-pane'>\n            <div className='control-section'>\n                <div className='contextmenu-section'>\n                    <div id='contextmenu-control'>\n                        <div id=\"contextmenutarget\">{content}</div>\n                        <ContextMenuComponent className=\"e-contextMenu-template\" target='#contextmenutarget' items={menuItems} itemTemplate={template} beforeOpen={addTemplateClass}/>\n                    </div>\n                </div>\n            </div>\n        </div>);\n};\nexport default Template;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Template />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}