{"index.css":".e-pivotview {\n    width: 100%;\n    height: 100%;\n}\n\n.component-section {\n    padding-top: 5px;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PivotViewComponent } from '@syncfusion/ej2-react-pivotview';\nimport { SampleBase } from './sample-base';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\n/**\n * PivotView sample for Remote data source.\n */\nexport class Remote extends SampleBase {\n    pivotObj;\n    fields = { text: 'text', value: 'value' };\n    contentTypes = [\n        { 'value': 'JSON', 'text': 'JSON' },\n        { 'value': 'CSV', 'text': 'CSV' }\n    ];\n    remoteData = new DataManager({\n        url: 'http://localhost:62728/api/order',\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n    jsonReport = {\n        url: '',\n        dataSource: this.remoteData,\n        type: 'JSON',\n        expandAll: true,\n        filters: [],\n        columns: [{ name: 'ProductName', caption: 'Product Name' }],\n        rows: [{ name: 'ShipCountry', caption: 'Ship Country' }, { name: 'ShipCity', caption: 'Ship City' }],\n        formatSettings: [{ name: 'UnitPrice', format: 'C0' }],\n        values: [{ name: 'Quantity' }, { name: 'UnitPrice', caption: 'Unit Price' }]\n    };\n    csvReport = {\n        url: 'http://localhost:62728/api/product',\n        type: 'CSV',\n        expandAll: false,\n        enableSorting: true,\n        formatSettings: [{ name: 'Total Cost', format: 'C0' }, { name: 'Total Revenue', format: 'C0' }, { name: 'Total Profit', format: 'C0' }],\n        drilledMembers: [{ name: 'Item Type', items: ['Baby Food'] }],\n        rows: [\n            { name: 'Region' },\n            { name: 'Country' }\n        ],\n        columns: [\n            { name: 'Item Type' },\n            { name: 'Sales Channel' }\n        ],\n        values: [\n            { name: 'Total Cost' },\n            { name: 'Total Revenue' },\n            { name: 'Total Profit' }\n        ],\n        filters: []\n    };\n    ddlOnChange(args) {\n        if (args.value === 'JSON') {\n            this.pivotObj.dataSourceSettings = this.jsonReport;\n        }\n        else if (args.value === 'CSV') {\n            this.pivotObj.dataSourceSettings = this.csvReport;\n        }\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section component-section'>\n                    <div id='dropdown-control' style={{ marginBottom: '5px' }}>\n                        <table style={{ maxWidth: '330px' }}>\n                            <tbody>\n                                <tr style={{ height: '50px' }}>\n                                    <td>\n                                        <div><b>Content Type:</b>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div style={{ paddingLeft: '5px' }}>\n                                            <div>\n                                                <DropDownListComponent placeholder={'Content Type'} fields={this.fields} change={this.ddlOnChange.bind(this)} id=\"contenttype\" index={0} enabled={true} dataSource={this.contentTypes}/>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <PivotViewComponent id='PivotView' ref={(pivotview) => { this.pivotObj = pivotview; }} dataSourceSettings={this.jsonReport} width={'100%'} height={'300'} gridSettings={{ columnWidth: 120 }}>\n                    </PivotViewComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Remote />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-pivotview\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}