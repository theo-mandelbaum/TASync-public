{"index.css":"#PivotViewcontainerwrapper {\r\n    height: auto !important;\r\n}\r\n\r\n.e-bigger .pivot-property-panel-table .e-float-input.e-control-wrapper {\r\n    width: 100% !important;\r\n}\r\n\r\n.pivot-property-panel-table div {\r\n    padding: 0;\r\n}\r\n\r\n.pivot-property-panel-table {\r\n    margin-left: 10px;\r\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PivotViewComponent, Pager, Inject } from '@syncfusion/ej2-react-pivotview';\nimport { SampleBase } from './sample-base';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\n\n/**\n * PivotView sample for Paging option.\n */\nexport class Paging extends SampleBase {\n    pivotObj;\n    pagerPositions = ['Top', 'Bottom'];\n    pageSizes = ['Row', 'Column', 'Both', 'None'];\n    pagerViewData = ['Row', 'Column', 'Both'];\n    remoteData = new DataManager({\n        url: 'http://localhost:62728/api/order',\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n    dataSourceSettings = {\n        type: 'JSON',\n        dataSource: this.remoteData,\n        expandAll: true,\n        columns: [{ name: 'ProductName', caption: 'Product Name' }],\n        rows: [{ name: 'ShipCountry', caption: 'Ship Country' }, { name: 'ShipCity', caption: 'Ship City' }],\n        formatSettings: [{ name: 'UnitPrice', format: 'C0' }],\n        values: [{ name: 'Quantity' }, { name: 'UnitPrice', caption: 'Unit Price' }],\n        filters: []\n    };\n    onDropDownChange(args) {\n        if (args.element.id === 'Pager_Position') {\n            this.pivotObj.pagerSettings.position = args.value;\n        }\n        else if (args.element.id === 'Pager_View') {\n            if (args.value === 'Row') {\n                this.pivotObj.pagerSettings.showRowPager = true;\n                this.pivotObj.pagerSettings.showColumnPager = false;\n            }\n            else if (args.value === 'Column') {\n                this.pivotObj.pagerSettings.showRowPager = false;\n                this.pivotObj.pagerSettings.showColumnPager = true;\n            }\n            else {\n                this.pivotObj.pagerSettings.showRowPager = this.pivotObj.pagerSettings.showColumnPager = true;\n            }\n        }\n        else {\n            if (args.value === 'Row') {\n                this.pivotObj.pagerSettings.showRowPageSize = true;\n                this.pivotObj.pagerSettings.showColumnPageSize = false;\n            }\n            else if (args.value === 'Column') {\n                this.pivotObj.pagerSettings.showRowPageSize = false;\n                this.pivotObj.pagerSettings.showColumnPageSize = true;\n            }\n            else if (args.value === 'Both') {\n                this.pivotObj.pagerSettings.showRowPageSize = this.pivotObj.pagerSettings.showColumnPageSize = true;\n            }\n            else {\n                this.pivotObj.pagerSettings.showRowPageSize = this.pivotObj.pagerSettings.showColumnPageSize = false;\n            }\n        }\n    }\n    ;\n    compactCheckBoxChange(args) {\n        this.pivotObj.pagerSettings.enableCompactView = args.checked;\n    }\n    ;\n    inverseCheckBoxChange(args) {\n        this.pivotObj.pagerSettings.isInversed = args.checked;\n    }\n    ;\n    render() {\n        return (<div className='control-pane'>\r\n                <div className='col-lg-9 control-section component-section' style={{ overflow: 'auto' }}>\r\n                    <PivotViewComponent id='PivotView' ref={(pivotview) => { this.pivotObj = pivotview; }} dataSourceSettings={this.dataSourceSettings} width={'100%'} height={'600'} gridSettings={{ columnWidth: 120 }} pageSettings={{\n                rowPageSize: 10,\n                columnPageSize: 5,\n                currentColumnPage: 1,\n                currentRowPage: 1\n            }} pagerSettings={{\n                position: 'Bottom',\n                enableCompactView: false,\n                showColumnPager: true,\n                showRowPager: true\n            }} enablePaging={true}>\r\n                        <Inject services={[Pager]}/>\r\n                    </PivotViewComponent>\r\n                </div>\r\n                <div className=\"col-lg-3 property-section pivot-property-section\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" style={{ width: \"100%\", height: \"100%\" }} className=\"pivot-property-panel-table property-panel-table\">\r\n                            <tbody>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div className=\"hdrlabel\">Pager Position\r\n                                        </div>\r\n                                    </td>   \r\n                                    <td>\r\n                                        <div>\r\n                                            <DropDownListComponent change={this.onDropDownChange.bind(this)} id=\"Pager_Position\" dataSource={this.pagerPositions} index={1}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div className=\"hdrlabel\">Show Pager\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <DropDownListComponent change={this.onDropDownChange.bind(this)} id=\"Pager_View\" dataSource={this.pagerViewData} index={2}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div className=\"hdrlabel\">Show Page Size\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <DropDownListComponent change={this.onDropDownChange.bind(this)} id=\"Page_Size\" dataSource={this.pageSizes} index={2}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div className=\"hdrlabel\">Compact View\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <CheckBoxComponent id='Compact_View' change={this.compactCheckBoxChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div className=\"hdrlabel\">Inverse Pager\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <CheckBoxComponent id='Inverse' change={this.inverseCheckBoxChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Paging />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-pivotview\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}