{"index.css":"#PivotViewcontainerwrapper {\r\n    height: auto !important;\r\n}\r\n\r\n.e-bigger .pivot-property-panel-table .e-float-input.e-control-wrapper {\r\n    width: 100% !important;\r\n}\r\n\r\n.pivot-property-panel-table div {\r\n    padding: 0;\r\n}\r\n\r\n.pivot-property-panel-table {\r\n    margin-left: 10px;\r\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PivotViewComponent, Pager, Inject } from '@syncfusion/ej2-react-pivotview';\n\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\n\n/**\n * PivotView sample for Paging option.\n */\nfunction Paging() {\n    let pivotObj;\n    let pagerPositions = ['Top', 'Bottom'];\n    let pageSizes = ['Row', 'Column', 'Both', 'None'];\n    let pagerViewData = ['Row', 'Column', 'Both'];\n    let remoteData = new DataManager({\n        url: 'http://localhost:62728/api/order',\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n    let dataSourceSettings = {\n        type: 'JSON',\n        dataSource: remoteData,\n        expandAll: true,\n        columns: [{ name: 'ProductName', caption: 'Product Name' }],\n        rows: [{ name: 'ShipCountry', caption: 'Ship Country' }, { name: 'ShipCity', caption: 'Ship City' }],\n        formatSettings: [{ name: 'UnitPrice', format: 'C0' }],\n        values: [{ name: 'Quantity' }, { name: 'UnitPrice', caption: 'Unit Price' }],\n        filters: []\n    };\n    function onDropDownChange(args) {\n        if (args.element.id === 'Pager_Position') {\n            pivotObj.pagerSettings.position = args.value;\n        }\n        else if (args.element.id === 'Pager_View') {\n            if (args.value === 'Row') {\n                pivotObj.pagerSettings.showRowPager = true;\n                pivotObj.pagerSettings.showColumnPager = false;\n            }\n            else if (args.value === 'Column') {\n                pivotObj.pagerSettings.showRowPager = false;\n                pivotObj.pagerSettings.showColumnPager = true;\n            }\n            else {\n                pivotObj.pagerSettings.showRowPager = pivotObj.pagerSettings.showColumnPager = true;\n            }\n        }\n        else {\n            if (args.value === 'Row') {\n                pivotObj.pagerSettings.showRowPageSize = true;\n                pivotObj.pagerSettings.showColumnPageSize = false;\n            }\n            else if (args.value === 'Column') {\n                pivotObj.pagerSettings.showRowPageSize = false;\n                pivotObj.pagerSettings.showColumnPageSize = true;\n            }\n            else if (args.value === 'Both') {\n                pivotObj.pagerSettings.showRowPageSize = pivotObj.pagerSettings.showColumnPageSize = true;\n            }\n            else {\n                pivotObj.pagerSettings.showRowPageSize = pivotObj.pagerSettings.showColumnPageSize = false;\n            }\n        }\n    }\n    ;\n    function compactCheckBoxChange(args) {\n        pivotObj.pagerSettings.enableCompactView = args.checked;\n    }\n    ;\n    function inverseCheckBoxChange(args) {\n        pivotObj.pagerSettings.isInversed = args.checked;\n    }\n    ;\n    return (<div className='control-pane'>\n            <div className='col-lg-9 control-section component-section' style={{ overflow: 'auto' }}>\n                <PivotViewComponent id='PivotView' ref={(pivotview) => { pivotObj = pivotview; }} dataSourceSettings={dataSourceSettings} width={'100%'} height={'600'} gridSettings={{ columnWidth: 120 }} pageSettings={{\n            rowPageSize: 10,\n            columnPageSize: 5,\n            currentColumnPage: 1,\n            currentRowPage: 1\n        }} pagerSettings={{\n            position: 'Bottom',\n            enableCompactView: false,\n            showColumnPager: true,\n            showRowPager: true\n        }} enablePaging={true}>\n                    <Inject services={[Pager]}/>\n                </PivotViewComponent>\n            </div>\n            <div className=\"col-lg-3 property-section pivot-property-section\">\n                <PropertyPane title='Properties'>\n                    <table id=\"property\" title=\"Properties\" style={{ width: \"100%\", height: \"100%\" }} className=\"pivot-property-panel-table property-panel-table\">\n                        <tbody>\n                            <tr style={{ height: \"50px\" }}>\n                                <td>\n                                    <div className=\"hdrlabel\">Pager Position\n                                    </div>\n                                </td>   \n                                <td>\n                                    <div>\n                                        <DropDownListComponent change={onDropDownChange.bind(this)} id=\"Pager_Position\" dataSource={pagerPositions} index={1}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: \"50px\" }}>\n                                <td>\n                                    <div className=\"hdrlabel\">Show Pager\n                                    </div>\n                                </td>\n                                <td>\n                                    <div>\n                                        <DropDownListComponent change={onDropDownChange.bind(this)} id=\"Pager_View\" dataSource={pagerViewData} index={2}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: \"50px\" }}>\n                                <td>\n                                    <div className=\"hdrlabel\">Show Page Size\n                                    </div>\n                                </td>\n                                <td>\n                                    <div>\n                                        <DropDownListComponent change={onDropDownChange.bind(this)} id=\"Page_Size\" dataSource={pageSizes} index={2}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: \"50px\" }}>\n                                <td>\n                                    <div className=\"hdrlabel\">Compact View\n                                    </div>\n                                </td>\n                                <td>\n                                    <div>\n                                        <CheckBoxComponent id='Compact_View' change={compactCheckBoxChange.bind(this)}></CheckBoxComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: \"50px\" }}>\n                                <td>\n                                    <div className=\"hdrlabel\">Inverse Pager\n                                    </div>\n                                </td>\n                                <td>\n                                    <div>\n                                        <CheckBoxComponent id='Inverse' change={inverseCheckBoxChange.bind(this)}></CheckBoxComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n        </div>);\n}\nexport default Paging;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Paging />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-pivotview\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}