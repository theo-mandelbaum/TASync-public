{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PivotViewComponent, VirtualScroll, Inject } from '@syncfusion/ej2-react-pivotview';\n\nimport { Browser } from '@syncfusion/ej2-base';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n/**\n * PivotView Default Sample.\n */\nconst SAMPLE_CSS = `\n.e-pivotview {\n    width: 100%;\n    height: 100%;\n}\n\n.image {\n    position: absolute;\n    background-repeat: no-repeat;\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/grid/images/spinner.gif');\n    background-position: center;\n    width: 16px;\n    height: 28px;\n}\n\n.e-bigger .image {\n    height: 36px;\n}\n\n#popup {\n    position: absolute;\n    background-color: transparent;\n    display: none;\n    z-index: 100;\n}\n\n#performanceTime {\n    float: right;\n    margin-top: 3px;\n    margin-right: 27px;\n}\n\n.e-bigger #performanceTime{\n    margin-top: 8px;\n}`;\nlet dataSourceSettings = {\n    dataSource: [],\n    enableSorting: false,\n    expandAll: true,\n    formatSettings: [{ name: 'Price', format: 'C0' }],\n    rows: [{ name: 'ProductID' }],\n    columns: [{ name: 'Year' }],\n    values: [{ name: 'Price', caption: 'Unit Price' }, { name: 'Sold', caption: 'Unit Sold' }]\n};\nlet customername = ['TOM', 'Hawk', 'Jon', 'Chandler', 'Monica', 'Rachel', 'Phoebe', 'Gunther',\n    'Ross', 'Geller', 'Joey', 'Bing', 'Tribbiani', 'Janice', 'Bong', 'Perk', 'Green', 'Ken', 'Adams'];\nlet city = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Philadelphia', 'Phoenix', 'San Antonio', 'Austin',\n    'San Francisco', 'Columbus', 'Washington', 'Portland', 'Oklahoma', 'Las Vegas', 'Virginia', 'St. Louis', 'Birmingham'];\nlet applyBtn;\nlet pivotObj;\nlet date1;\nlet date2;\nlet isInit;\nfunction data(count) {\n    let result = [];\n    let dt = 0;\n    for (let i = 1; i < (count + 1); i++) {\n        dt++;\n        let round;\n        let toString = i.toString();\n        if (toString.length === 1) {\n            round = '0000' + (i);\n        }\n        else if (toString.length === 2) {\n            round = '000' + i;\n        }\n        else if (toString.length === 3) {\n            round = '00' + i;\n        }\n        else if (toString.length === 4) {\n            round = '0' + i;\n        }\n        else {\n            round = toString;\n        }\n        result.push({\n            ProductID: 'PRO-' + round,\n            City: city[Math.round(Math.random() * city.length)] || city[0],\n            Year: \"FY \" + (dt + 2013),\n            CustomerName: customername[Math.round(Math.random() * customername.length)] || customername[0],\n            Price: Math.round(Math.random() * 5000) + 5000,\n            Sold: Math.round(Math.random() * 80) + 10,\n        });\n        if (dt / 2 == 1) {\n            dt = 0;\n        }\n    }\n    return result;\n}\n;\nfunction show() {\n    document.getElementById('popup').style.display = 'inline-block';\n}\n;\nfunction VirtualScrolling() {\n    function onClick(args) {\n        show();\n        isInit = true;\n        pivotObj.dataSourceSettings.dataSource = data(100000);\n        date1 = new Date().getTime();\n    }\n    function onDataBound() {\n        if (pivotObj.dataSourceSettings.dataSource.length > 0) {\n            if (date1 && isInit) {\n                date2 = new Date().getTime();\n                document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (date2 - date1) / 1000 + ' sec';\n            }\n            isInit = false;\n            applyBtn.disabled = true;\n            document.getElementById('popup').style.display = 'none';\n        }\n        if (Browser.isDevice && pivotObj && pivotObj.enableRtl) {\n            document.querySelector('.control-section').classList.add('e-rtl');\n        }\n    }\n    return (<div className='control-pane'>\n            <style>\n                {SAMPLE_CSS}\n            </style>\n            <div className='control-section'>\n                <div id=\"btn-control\" style={{ marginBottom: '5px' }}>\n                    <ButtonComponent id='apply' className='e-info' ref={(scope) => { applyBtn = scope; }} onClick={onClick.bind(this)} isPrimary={true}>Load 100K Data</ButtonComponent>\n                    <span id=\"popup\">\n                        <span id=\"gif\" className=\"image\"></span>\n                    </span>\n                    <span id=\"performanceTime\">Time Taken: 0 sec</span>\n                </div>\n                <PivotViewComponent id='PivotView' ref={(pivotview) => { pivotObj = pivotview; }} dataSourceSettings={dataSourceSettings} enableVirtualization={true} width={'100%'} height={300} dataBound={onDataBound} virtualScrollSettings={{ allowSinglePage: true }}>\n                    <Inject services={[VirtualScroll]}/>\n                </PivotViewComponent>\n            </div>\n        </div>);\n}\nexport default VirtualScrolling;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<VirtualScrolling />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-pivotview\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}