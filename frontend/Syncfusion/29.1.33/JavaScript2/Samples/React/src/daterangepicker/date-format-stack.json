{"index.css":".daterangepicker-control-section {\n    max-width: 246px;\n    margin: 30px auto;\n    padding-top: 50px;\n}\n\n.daterangepicker-control-section.format {\n    max-width: 350px;\n}\n\n#format{\n    padding-bottom: 15px;\n    width: 200px;\n    left: 80px;\n    top: 40px;\n} \n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\n\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from './sample-base';\nlet startValue = new Date(new Date().setDate(1));\nlet endValue = new Date(new Date().setDate(20));\nexport class Format extends SampleBase {\n    daterangepickerInstance;\n    listObj;\n    dataTypes = [\n        { value: 'dd\\'\\/\\'MMM\\'\\/\\'yy hh:mm a', text: 'dd/MMM/yy hh:mm a' },\n        { value: 'yyyy\\'\\/\\'MM\\'\\/\\'dd HH:mm', text: 'yyyy/MM/dd HH:mm' },\n        { value: 'dd\\'\\/\\'MMMM\\'\\/\\'yyyy', text: 'dd/MMMM/yyyy' },\n    ];\n    fields = { value: 'value', text: 'text' };\n    waterMark = 'Format';\n    floatLabelType = 'Auto';\n    index = 0;\n    /*Apply selected format to the component*/\n    onChange() {\n        let format = this.listObj.value;\n        this.daterangepickerInstance.format = format;\n        this.daterangepickerInstance.separator = (this.listObj.text === 'yyyy/MM/dd HH:mm') ? 'to' : '-';\n    }\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section row'>\n          <div className='col-lg-8'>\n            <div className='daterangepicker-control-section format'>\n              <DateRangePickerComponent format='dd/MMM/yy hh:mm a' ref={calendar => this.daterangepickerInstance = calendar} startDate={startValue} endDate={endValue}></DateRangePickerComponent>\n            </div>\n          </div>\n          <div id=\"format\" className='col-lg-4 property-section'>\n            <div>\n              <DropDownListComponent id=\"dateFormats\" dataSource={this.dataTypes} fields={this.fields} floatLabelType={this.floatLabelType} index={this.index} ref={(dropdownlist) => { this.listObj = dropdownlist; }} placeholder={this.waterMark} change={this.onChange.bind(this)}>\n              </DropDownListComponent>\n            </div>\n          </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Format />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-react-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}