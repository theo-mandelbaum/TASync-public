{"index.css":"#api-control {\n    margin: 30px auto;\n    padding-top: 50px;\n    text-align: center;\n}\n\n#api-control h4 {\n    margin-bottom: 20px;\n}\n\n.e-bigger #api-control h4 {\n    font-size: 20px;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from \"react\";\nimport { ColorPickerComponent } from '@syncfusion/ej2-react-inputs';\n\nimport { PropertyPane } from './property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\nconst Api = () => {\n    useEffect(() => {\n        hexInput.current.value = state.colorValue;\n    }, []);\n    const [state, setState] = useState({\n        colorValue: \"#0db1e7\",\n        mode: \"Picker\",\n        disabled: false,\n        showButtons: true,\n        modeSwitcher: true,\n    });\n    let hexInput = useRef(null);\n    let type = [{ mode: 'Picker' }, { mode: 'Palette' }];\n    let ddlFields = { text: 'mode', value: 'mode' };\n    const onDdlChange = (args) => {\n        setState({ ...state, mode: args.value });\n    };\n    const onDisableChange = (args) => {\n        setState({ ...state, disabled: args.checked });\n    };\n    const onButtonChange = (args) => {\n        setState({ ...state, showButtons: args.checked });\n    };\n    const onModeChange = (args) => {\n        setState({ ...state, modeSwitcher: args.checked });\n    };\n    const changeValue = (e) => {\n        const val = e.target.value;\n        // Sets to color picker default color value if user types the invalid hex code.\n        setState({ ...state, colorValue: val && val.length > 2 ? (val[0] !== '#' ? `#${val}` : val) : '#008000' });\n    };\n    const onChange = (args) => {\n        hexInput.current.value = args.currentValue.hex;\n    };\n    return (<div className='control-pane'>\n      <div className='control-section'>\n        <div id='api-control' className='col-lg-8'>\n          <h4>Choose a color</h4>\n          <ColorPickerComponent id='color-picker' mode={state.mode} disabled={state.disabled} showButtons={state.showButtons} value={state.colorValue} modeSwitcher={state.modeSwitcher} change={onChange}></ColorPickerComponent>\n        </div>\n        <div className='col-lg-4 property-section'>\n          <PropertyPane title='Properties'>\n            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\n              <tbody>\n                <tr>\n                  <td style={{ width: '50%' }}>\n                    <div>Value</div>\n                  </td>\n                  <td style={{ width: '50%', paddingRight: '0px' }}>\n                    <div style={{ maxWidth: '200px' }}>\n                      <input id=\"hex-input\" aria-label=\"Value\" ref={hexInput} type=\"text\" className=\"e-input\" maxLength={9} onInput={changeValue.bind(hexInput)}/>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '50%' }}>\n                    <div>Mode</div>\n                  </td>\n                  <td style={{ width: '50%', paddingRight: '0px' }}>\n                    <div style={{ maxWidth: '200px' }}>\n                      <DropDownListComponent id=\"ddlelement\" dataSource={type} fields={ddlFields} value='Picker' change={onDdlChange} popupHeight=\"220px\"/>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '50%', paddingTop: '13px' }}>\n                    <div>Disable</div>\n                  </td>\n                  <td style={{ width: '50%', paddingRight: '0px', paddingTop: '13px' }}>\n                    <CheckBoxComponent id=\"disabled\" aria-label=\"Disable\" checked={false} change={onDisableChange}/>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '50%', paddingTop: '15px' }}>\n                    <div>Show Buttons</div>\n                  </td>\n                  <td style={{ width: '50%', paddingRight: '0px', paddingTop: '15px' }}>\n                    <CheckBoxComponent id=\"button\" aria-label=\"Show Buttons\" checked={true} change={onButtonChange}/>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '50%', paddingTop: '15px', paddingBottom: '10px' }}>\n                    <div>Mode Switcher</div>\n                  </td>\n                  <td style={{ width: '50%', paddingRight: '0px', paddingTop: '15px', paddingBottom: '10px' }}>\n                    <CheckBoxComponent id=\"mode-switch\" aria-label=\"Mode Switcher\" checked={true} change={onModeChange}/>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </PropertyPane>\n        </div>\n      </div>\n    </div>);\n};\nexport default Api;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Api />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}