{"DataManager":{"clearPersistence":{"name":"clearPersistence","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#clearpersistence"},"executeLocal":{"name":"executeLocal","description":"<p>Executes the given query with local data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#executelocal"},"executeQuery":{"name":"executeQuery","description":"<p>Executes the given query with either local or remote data source.\nIt will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#executequery"},"getPersistedData":{"name":"getPersistedData","description":"<p>Get the queries maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#getpersisteddata"},"insert":{"name":"insert","description":"<p>Inserts new record in the given table.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#insert"},"remove":{"name":"remove","description":"<p>Removes data from the table with the given key.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#remove"},"saveChanges":{"name":"saveChanges","description":"<p>Save bulk changes to the given table name.\nUser can add a new record, edit an existing record, and delete a record at the same time.\nIf the datasource from remote, then updated in a single post.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#savechanges"},"setDefaultQuery":{"name":"setDefaultQuery","description":"<p>Overrides DataManager's default query with given query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#setdefaultquery"},"setPersistData":{"name":"setPersistData","description":"<p>Set the queries to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#setpersistdata"},"update":{"name":"update","description":"<p>Updates existing record in the given table.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/manager/dataManager#update"}},"Deferred":{"catch":{"name":"catch","description":"<p>Defines the callback function triggers when the Deferred object is rejected.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/manager/deferred#catch"},"promise":{"name":"promise","description":"<p>Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.</p>\n","type":"Promise","link":"//ej2.syncfusion.com/react/documentation/api/manager/deferred#promise"},"reject":{"name":"reject","description":"<p>Reject a Deferred object and call failCallbacks with the given args.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/manager/deferred#reject"},"resolve":{"name":"resolve","description":"<p>Resolve a Deferred object and call doneCallbacks with the given args.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/manager/deferred#resolve"},"then":{"name":"then","description":"<p>Defines the callback function triggers when the Deferred object is resolved.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/manager/deferred#then"}},"Predicate":{"and":{"name":"and","description":"<p>Adds n-number of new predicates on existing predicate with “and” condition.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#and"},"andnot":{"name":"andnot","description":"<p>Adds n-number of new predicates on existing predicate with “and not” condition.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#andnot"},"or":{"name":"or","description":"<p>Adds n-number of new predicates on existing predicate with “or” condition.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#or"},"ornot":{"name":"ornot","description":"<p>Adds n-number of new predicates on existing predicate with “and not” condition.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#ornot"},"toJson":{"name":"toJson","description":"<p>Converts predicates to plain JavaScript.\nThis method is uses Json stringify when serializing Predicate object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#tojson"},"validate":{"name":"validate","description":"<p>Validate the record based on the predicates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#validate"},"fromJson":{"name":"fromJson","description":"<p>Converts plain JavaScript object to Predicate object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/predicate#fromjson"}},"Query":{"addParams":{"name":"addParams","description":"<p>Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#addparams"},"aggregate":{"name":"aggregate","description":"<p>Aggregate the data with given type and field name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#aggregate"},"clone":{"name":"clone","description":"<p>Creates deep copy of the Query object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#clone"},"execute":{"name":"execute","description":"<p>Executes query with the given DataManager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#execute"},"executeLocal":{"name":"executeLocal","description":"<p>Executes query with the local datasource.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#executelocal"},"expand":{"name":"expand","description":"<p>Expands the related table.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#expand"},"foreignKey":{"name":"foreignKey","description":"<p>Sets the foreign key which is used to get data from the related table.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#foreignkey"},"from":{"name":"from","description":"<p>Specifies the name of table to retrieve data in query execution.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#from"},"group":{"name":"group","description":"<p>Groups data with the given field name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#group"},"hierarchy":{"name":"hierarchy","description":"<p>Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#hierarchy"},"page":{"name":"page","description":"<p>Gets data based on the given page index and size.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#page"},"range":{"name":"range","description":"<p>Gets data based on the given start and end index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#range"},"requiresCount":{"name":"requiresCount","description":"<p>It is used to get total number of records in the DataManager execution result.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#requirescount"},"search":{"name":"search","description":"<p>Search data with given search criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#search"},"select":{"name":"select","description":"<p>Selects specified columns from the data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#select"},"setKey":{"name":"setKey","description":"<p>Sets the primary key.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#setkey"},"skip":{"name":"skip","description":"<p>Skips data with given number of records count from the top of the data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#skip"},"sortBy":{"name":"sortBy","description":"<p>Sort the data with given sort criteria.\nBy default, sort direction is ascending.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#sortby"},"sortByDesc":{"name":"sortByDesc","description":"<p>Sorts data in descending order.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#sortbydesc"},"sortByForeignKey":{"name":"sortByForeignKey","description":"<p>Sort the data with given sort criteria.\nBy default, sort direction is ascending.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#sortbyforeignkey"},"take":{"name":"take","description":"<p>Gets data from the top of the data source based on given number of records count.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#take"},"using":{"name":"using","description":"<p>Sets default DataManager to execute query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#using"},"where":{"name":"where","description":"<p>Filter data with given filter criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query/query#where"}},"ComplexBase":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#isdirective"},"componentDidMount":{"name":"componentDidMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#componentwillupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/complex-base/complexBase#shouldcomponentupdate"}},"ComponentBase":{"context":{"name":"context","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#context"},"directivekeys":{"name":"directivekeys","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#directivekeys"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#refs"},"state":{"name":"state","description":"","type":"Readonly","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#state"},"appendReactElement":{"name":"appendReactElement","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#appendreactelement"},"clearTemplate":{"name":"clearTemplate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#cleartemplate"},"compareObjects":{"name":"compareObjects","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#compareobjects"},"componentDidMount":{"name":"componentDidMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#componentwillupdate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#forceupdate"},"getChildProps":{"name":"getChildProps","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#getchildprops"},"getDefaultAttributes":{"name":"getDefaultAttributes","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#getdefaultattributes"},"getInjectedServices":{"name":"getInjectedServices","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#getinjectedservices"},"refreshProperties":{"name":"refreshProperties","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#refreshproperties"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#render"},"renderReactTemplates":{"name":"renderReactTemplates","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#renderreacttemplates"},"setState":{"name":"setState","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#setstate"},"trigger":{"name":"trigger","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/component-base/componentBase#trigger"}},"Inject":{"isService":{"name":"isService","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#isservice"},"componentDidMount":{"name":"componentDidMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#componentwillupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/services/inject#shouldcomponentupdate"}},"InPlaceEditorComponent":{"actionBegin":{"name":"actionBegin","description":"<p>The event will be fired before the data submitted to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#actionbegin"},"actionFailure":{"name":"actionFailure","description":"<p>The event will be fired when data submission failed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#actionfailure"},"actionSuccess":{"name":"actionSuccess","description":"<p>The event will be fired when data submitted successfully to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#actionsuccess"},"beforeSanitizeHtml":{"name":"beforeSanitizeHtml","description":"<p>Event triggers before sanitize the value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#beforesanitizehtml"},"beginEdit":{"name":"beginEdit","description":"<p>The event will be fired before changing the mode from default to edit mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#beginedit"},"cancelClick":{"name":"cancelClick","description":"<p>Event triggers when click the cancel button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#cancelclick"},"change":{"name":"change","description":"<p>The event will be fired when the integrated component value has changed that render based on the <code>type</code> property\nin the In-place editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#change"},"created":{"name":"created","description":"<p>The event will be fired once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#created"},"destroyed":{"name":"destroyed","description":"<p>The event will be fired when the component gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#destroyed"},"endEdit":{"name":"endEdit","description":"<p>The event will be fired when the edit action is finished and begin to submit/cancel the current value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#endedit"},"submitClick":{"name":"submitClick","description":"<p>Event triggers when click the submit button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#submitclick"},"validating":{"name":"validating","description":"<p>The event will be fired while validating current value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#validating"},"actionOnBlur":{"name":"actionOnBlur","description":"<p>Specifies the action to be perform when user clicks outside the container, that is focus out of editable content.\nThe possible options are,</p>\n<ul>\n<li><code>Cancel</code>: Cancel's the editing and resets the old content.</li>\n<li><code>Submit</code>: Submit the edited content to the server.</li>\n<li><code>Ignore</code>: No action is perform with this type and allows to have many containers open.</li>\n</ul>\n","type":"ActionBlur","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#actiononblur"},"adaptor":{"name":"adaptor","description":"<p>Specifies the adaptor type that are used DataManager to communicate with DataSource. The possible values are,</p>\n<ul>\n<li><code>UrlAdaptor</code>: Base adaptor for interacting with remote data services.</li>\n<li><code>ODataV4Adaptor</code>: Used to interact with ODataV4 service.</li>\n<li><code>WebApiAdaptor</code>: Used to interact with Web api created with OData endpoint.</li>\n</ul>\n","type":"AdaptorType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#adaptor"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#allowserverdatabinding"},"cancelButton":{"name":"cancelButton","description":"<p>Used to customize the &quot;Cancel&quot; button UI appearance by defining Button model configuration.</p>\n","type":"ButtonModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#cancelbutton"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines single/multiple classes (separated by space) to be used for customization of In-place editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies whether to enable editing mode or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#disabled"},"editableOn":{"name":"editableOn","description":"<p>Specifies the event action of input to enter edit mode instead of using edit icon. The possible values are:</p>\n<ul>\n<li><code>Click</code>: Do the single click action on input to enter into the edit mode.</li>\n<li><code>DblClick</code>: Do the single double click action on input to enter into the edit mode.</li>\n<li><code>EditIconClick</code>: Disables the editing of event action of input and allows user to edit only through edit icon.</li>\n</ul>\n","type":"EditableType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#editableon"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#element"},"emptyText":{"name":"emptyText","description":"<p>Sets the text to be shown when an element has 'Empty' value.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#emptytext"},"enableEditMode":{"name":"enableEditMode","description":"<p>Specifies to show/hide the editing mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enableeditmode"},"enableHtmlParse":{"name":"enableHtmlParse","description":"<p>It enables or disables the parsing of HTML string content into HTML DOM elements for In-place Editor.\nIf the value of the property is set to false, the In-place Editor value will be displayed as HTML string instead of HTML DOM elements.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enablehtmlparse"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#locale"},"mode":{"name":"mode","description":"<p>Specifies the mode to be render while editing. The possible modes are :</p>\n<ul>\n<li><code>Inline</code>: Editable content is displayed as inline text and ok/cancel buttons are displayed at right bottom corner of input.</li>\n<li><code>Popup</code>: Editable content and ok/cancel buttons are displayed inside popup while editing.</li>\n</ul>\n","type":"RenderMode","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#mode"},"model":{"name":"model","description":"<p>Specifies the model object configuration for the integrated components like AutoComplete, DatePicker,NumericTextBox, etc.</p>\n","type":"AutoCompleteModel|ColorPickerModel|ComboBoxModel|DatePickerModel|DateRangePickerModel|DateTimePickerModel|DropDownListModel|MaskedTextBoxModel|MultiSelectModel|NumericTextBoxModel|RichTextEditorModel|SliderModel|TextBoxModel|TimePickerModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#model"},"name":{"name":"name","description":"<p>Specifies the name of the field which is used to map data to the server.\nIf name is not given, then component ID is taken as mapping field name.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#name"},"popupSettings":{"name":"popupSettings","description":"<p>Specifies the object to customize popup display settings like positions, animation etc.</p>\n","type":"PopupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#popupsettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#portals"},"primaryKey":{"name":"primaryKey","description":"<p>Defines the unique primary key of editable field which can be used for saving data in data-base.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#primarykey"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#root"},"saveButton":{"name":"saveButton","description":"<p>Used to customize the &quot;Save&quot; button UI appearance by defining Button model configuration.</p>\n","type":"ButtonModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#savebutton"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#setstate"},"showButtons":{"name":"showButtons","description":"<p>Used to show/hide the ok/cancel buttons of In-place editor.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#showbuttons"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#state"},"submitOnEnter":{"name":"submitOnEnter","description":"<p>Sets to trigger the submit action with enter key pressing of input.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#submitonenter"},"template":{"name":"template","description":"<p>Specifies the HTML element ID as a string that can be added as a editable field.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#template"},"textOption":{"name":"textOption","description":"<p>Specifies the option to be set on initial rendering. It is applicable for DropDownList,\nAutoComplete, ComboBox, and MultiSelect component types.\nThe possible options are:</p>\n<ul>\n<li><code>Never</code>: The corresponding field value will never be set initially in the component.</li>\n<li><code>Always</code>: The corresponding field value will be set initially in the component.</li>\n</ul>\n","type":"textOptionType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#textoption"},"type":{"name":"type","description":"<p>Specifies the type of components that integrated with In-place editor to make it as editable.</p>\n","type":"InputType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#type"},"url":{"name":"url","description":"<p>Gets the url for server submit action.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#url"},"validationRules":{"name":"validationRules","description":"<p>Maps the validation rules for the input.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#validationrules"},"value":{"name":"value","description":"<p>Specifies the display value for input when original input value is empty.</p>\n","type":"string|number|Date|string[]|Date[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and also removes all its related events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#detachunloadevent"},"extendModelValue":{"name":"extendModelValue","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#extendmodelvalue"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#render"},"save":{"name":"save","description":"<p>Submit the edited input value to the server.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#save"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#serverdatabind"},"setValue":{"name":"setValue","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#setvalue"},"validate":{"name":"validate","description":"<p>Validate current editor value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#validate"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#inject"}},"HeatMapComponent":{"cellClick":{"name":"cellClick","description":"<p>Triggers when clicking on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellclick"},"cellDoubleClick":{"name":"cellDoubleClick","description":"<p>Triggers when performing the double click operation on the cells in the HeatMap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#celldoubleclick"},"cellRender":{"name":"cellRender","description":"<p>Triggers before each heatmap cell renders.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellrender"},"cellSelected":{"name":"cellSelected","description":"<p>Triggers when heatmap cell gets selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellselected"},"created":{"name":"created","description":"<p>Triggers after heatmap is completely rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#created"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendrender"},"load":{"name":"load","description":"<p>Triggers before heatmap gets loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after heatmap is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#loaded"},"resized":{"name":"resized","description":"<p>Triggers to notify the resize of the heatmap when the window is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#resized"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"},"allowSelection":{"name":"allowSelection","description":"<p>Enable or disable the selection of cells in heatmap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#allowselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#allowserverdatabinding"},"backgroundColor":{"name":"backgroundColor","description":"<p>Specifies the background color of the entire heatmap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#backgroundcolor"},"cellSettings":{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},"dataSourceSettings":{"name":"dataSourceSettings","description":"<p>Sets and gets the options to customize the data mapping for the data in the heatmap.</p>\n","type":"DataModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasourcesettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the HeatMap. If <code>enableHtmlSanitizer</code> set to <strong>true</strong>, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#enablehtmlsanitizer"},"enableMultiSelect":{"name":"enableMultiSelect","description":"<p>Enable or disable the multiple selection of cells in heatmap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#enablemultiselect"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#forceupdate"},"heatMapAxis":{"name":"heatMapAxis","description":"","type":"AxisHelper","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#heatmapaxis"},"heatMapSeries":{"name":"heatMapSeries","description":"","type":"Series","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#heatmapseries"},"height":{"name":"height","description":"<p>Sets and gets the height of the heatmap. The height of the heatmap accepts pixel or percentage values given in string format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#locale"},"margin":{"name":"margin","description":"<p>Sets and gets the options to customize left, right, top and bottom margins of the heatmap.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#margin"},"paletteSettings":{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#refs"},"renderingMode":{"name":"renderingMode","description":"<p>Specifies the rendering mode of heatmap. The following are the available rendering modes.</p>\n<ul>\n<li>SVG - Heatmap is rendered using SVG element.</li>\n<li>Canvas - Heatmap is rendered using Canvas element.</li>\n<li>Auto - Automatically switches the rendering mode based on number of records in the data source.</li>\n</ul>\n","type":"DrawType","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#renderingmode"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#setstate"},"showTooltip":{"name":"showTooltip","description":"<p>Enable or disable the visibility of the tooltip for heatmap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#showtooltip"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#state"},"theme":{"name":"theme","description":"<p>Sets and gets the theme styles supported for heatmap. When the theme is set, the styles associated with the theme will be set in the heatmap.</p>\n","type":"HeatMapTheme","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#theme"},"titleSettings":{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},"tooltipSettings":{"name":"tooltipSettings","description":"<p>Sets and gets the options for customizing the tooltip of the heatmap.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltipsettings"},"width":{"name":"width","description":"<p>Sets and gets the width of the heatmap. The width of the heatmap accepts pixel or percentage values given in string format.\nIf specified as '100%, heatmap renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#width"},"xAxis":{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},"yAxis":{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#attachunloadevent"},"clearSelection":{"name":"clearSelection","description":"<p>This method is used to clear the cell selection in the heatmap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#clearselection"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#databind"},"destroy":{"name":"destroy","description":"<p>This method destroys the heatmap. This method removes the events associated with the heatmap and disposes the objects created for rendering and updating the heatmap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#detachunloadevent"},"export":{"name":"export","description":"<p>This method is used to perform the export functionality for the heatmap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#handleunload"},"print":{"name":"print","description":"<p>This method is used to print the rendered heatmap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#refresh"},"refreshBound":{"name":"refreshBound","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#refreshbound"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#inject"}},"ListViewComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when every ListView action starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers when every ListView actions completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers, when the data fetch request from the remote server, fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#actionfailure"},"scroll":{"name":"scroll","description":"<p>Triggers when scrollbar of the ListView component reaches to the top or bottom.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#scroll"},"select":{"name":"select","description":"<p>Triggers when we select the list item in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>The <code>animation</code> property provides an option to apply the different\nanimations on the ListView component.</p>\n","type":"AnimationSettings","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#animation"},"checkBoxPosition":{"name":"checkBoxPosition","description":"<p>The <code>checkBoxPosition</code> is used to set the position of check box in a list item.\nBy default, the <code>checkBoxPosition</code> is Left, which will appear before the text content in a list item.</p>\n","type":"checkBoxPosition","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#checkboxposition"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#context"},"cssClass":{"name":"cssClass","description":"<p>The <code>cssClass</code> property is used to add a user-preferred class name in the root element of the ListView,\nusing which we can customize the component (both CSS and functionality customization)</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#element"},"enable":{"name":"enable","description":"<p>If <code>enable</code> set to true, the list items are enabled.\nAnd, we can disable the component using this property by setting its value as false.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enable"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the ListView component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, which will increase the ListView performance, while loading a large amount of data.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enablevirtualization"},"fields":{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>The ListView has an option to custom design the group header title with the help of <code>groupTemplate</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#grouptemplate"},"headerTemplate":{"name":"headerTemplate","description":"<p>The ListView has an option to custom design the ListView header title with the help of <code>headerTemplate</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertemplate"},"headerTitle":{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},"height":{"name":"height","description":"<p>Defines the height of the ListView component which accepts both string and number values.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#height"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>The <code>htmlAttributes</code> allows additional attributes such as id, class, etc., and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#isvue"},"localData":{"name":"localData","description":"","type":"DataSource[]","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#localdata"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#props"},"query":{"name":"query","description":"<p>The <code>query</code> is used to fetch the specific data from dataSource by using where and select keywords.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#query"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#setstate"},"showCheckBox":{"name":"showCheckBox","description":"<p>If <code>showCheckBox</code> set to true, which will show or hide the checkbox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showcheckbox"},"showHeader":{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},"showIcon":{"name":"showIcon","description":"<p>If <code>showIcon</code> set to true, which will show or hide the icon of the list item.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showicon"},"sortOrder":{"name":"sortOrder","description":"<p>The <code>sortOrder</code> is used to sort the data source. The available type of sort orders are,</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#state"},"targetElement":{"name":"targetElement","description":"","type":"Element","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#targetelement"},"template":{"name":"template","description":"<p>The ListView component supports to customize the content of each list items with the help of <code>template</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#template"},"virtualizationModule":{"name":"virtualizationModule","description":"","type":"Virtualization","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#virtualizationmodule"},"width":{"name":"width","description":"<p>Defines the width of the ListView component which accepts both string and number values.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds the new list item(s) to the current ListView.\nTo add a new list item(s) in the ListView, we need to pass the <code>data</code> as an array of items that need\nto be added and <code>fields</code> as the target item to which we need to add the given item(s) as its children.\nFor example fields: { text: 'Name', tooltip: 'Name', id:'id'}</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#attachunloadevent"},"back":{"name":"back","description":"<p>Switches back from the navigated sub list item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#back"},"checkAllItems":{"name":"checkAllItems","description":"<p>Checks all the unchecked items in the ListView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#checkallitems"},"checkItem":{"name":"checkItem","description":"<p>Checks the specific list item by passing the unchecked fields as an argument to this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#checkitem"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#databind"},"destroy":{"name":"destroy","description":"<p>It is used to destroy the ListView component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Disables the list items by passing the Id and text fields.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#disableitem"},"enableItem":{"name":"enableItem","description":"<p>Enables the disabled list items by passing the Id and text fields.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enableitem"},"findItem":{"name":"findItem","description":"<p>Finds out an item details from the current list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#finditem"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#getrootelement"},"getSelectedItems":{"name":"getSelectedItems","description":"<p>Gets the details of the currently selected item from the list items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#getselecteditems"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#handleunload"},"hideItem":{"name":"hideItem","description":"<p>Hides an list item from the ListView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#hideitem"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#refresh"},"refreshItemHeight":{"name":"refreshItemHeight","description":"<p>Refresh the height of the list item only on enabling the virtualization property.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#refreshitemheight"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#removeeventlistener"},"removeItem":{"name":"removeItem","description":"<p>Removes the list item from the data source based on a passed\nelement like fields: { text: 'Name', tooltip: 'Name', id:'id'}</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#removeitem"},"removeMultipleItems":{"name":"removeMultipleItems","description":"<p>Removes multiple items from the ListView by passing the array of elements or array of field objects.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#removemultipleitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#requiredmodules"},"selectItem":{"name":"selectItem","description":"<p>Selects the list item from the ListView by passing the elements or field object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#selectitem"},"selectMultipleItems":{"name":"selectMultipleItems","description":"<p>Selects multiple list items from the ListView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#selectmultipleitems"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#serverdatabind"},"showItem":{"name":"showItem","description":"<p>Shows the hide list item from the ListView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showitem"},"uncheckAllItems":{"name":"uncheckAllItems","description":"<p>Uncheck all the checked items in ListView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#uncheckallitems"},"uncheckItem":{"name":"uncheckItem","description":"<p>Uncheck the specific list item by passing the checked fields as an argument to this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#uncheckitem"},"unselectItem":{"name":"unselectItem","description":"<p>This method allows for deselecting a list item within the ListView. The item to be deselected can be specified by passing the element or field object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#unselectitem"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#inject"}},"RichTextEditorComponent":{"actionBegin":{"name":"actionBegin","description":"<p>This event triggers before executing a command via toolbar items.\nCancel this event to prevent the command from executing by setting the <code>cancel</code> argument to <code>true</code>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>This event triggers after executing a command via toolbar items.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},"afterImageDelete":{"name":"afterImageDelete","description":"<p>This event triggers when a selected image is removed from the Rich Text Editor content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#afterimagedelete"},"afterMediaDelete":{"name":"afterMediaDelete","description":"<p>This event triggers when selected media is removed from the Rich Text Editor content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#aftermediadelete"},"afterPasteCleanup":{"name":"afterPasteCleanup","description":"<p>This event triggers after cleaning up copied content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#afterpastecleanup"},"beforeDialogClose":{"name":"beforeDialogClose","description":"<p>This event triggers before a dialog is closed.\nCancel this event to prevent the dialog from closing by setting the <code>cancel</code> argument to <code>true</code>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforedialogclose"},"beforeDialogOpen":{"name":"beforeDialogOpen","description":"<p>This event triggers before a dialog is opened.\nCancel this event to prevent the dialog from opening by setting the <code>cancel</code> argument to <code>true</code>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforedialogopen"},"beforeFileUpload":{"name":"beforeFileUpload","description":"<p>This event triggers before the media audio/video upload process starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforefileupload"},"beforeImageDrop":{"name":"beforeImageDrop","description":"<p>This event triggers before an image is dropped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforeimagedrop"},"beforeImageUpload":{"name":"beforeImageUpload","description":"<p>This event triggers before the image upload process starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforeimageupload"},"beforePasteCleanup":{"name":"beforePasteCleanup","description":"<p>This event triggers before cleaning up copied content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforepastecleanup"},"beforeQuickToolbarOpen":{"name":"beforeQuickToolbarOpen","description":"<p>This event triggers before the quick toolbar opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforequicktoolbaropen"},"beforeSanitizeHtml":{"name":"beforeSanitizeHtml","description":"<p>This event triggers before sanitizing the value. Applicable only when <code>editorMode</code> is <code>HTML</code>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#beforesanitizehtml"},"blur":{"name":"blur","description":"<p>This event triggers when the Rich Text Editor loses focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#blur"},"change":{"name":"change","description":"<p>This event triggers when the Rich Text Editor loses focus and changes have been made to the content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#change"},"created":{"name":"created","description":"<p>This event triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},"destroyed":{"name":"destroyed","description":"<p>This event triggers when the Rich Text Editor is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#destroyed"},"dialogClose":{"name":"dialogClose","description":"<p>This event triggers after a dialog has been closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#dialogclose"},"dialogOpen":{"name":"dialogOpen","description":"<p>This event triggers when a dialog is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#dialogopen"},"fileRemoving":{"name":"fileRemoving","description":"<p>This event triggers when selected media is removed from the insert audio/video dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fileremoving"},"fileSelected":{"name":"fileSelected","description":"<p>This event triggers when media is selected or dragged into the insert media audio/video dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fileselected"},"fileUploadFailed":{"name":"fileUploadFailed","description":"<p>This event triggers when there is an error during media upload.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fileuploadfailed"},"fileUploadSuccess":{"name":"fileUploadSuccess","description":"<p>This event triggers when media has been successfully uploaded to the server side.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fileuploadsuccess"},"fileUploading":{"name":"fileUploading","description":"<p>This event triggers when media begins uploading in the insert media audio/video dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fileuploading"},"focus":{"name":"focus","description":"<p>This event triggers when the Rich Text Editor gains focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#focus"},"imageRemoving":{"name":"imageRemoving","description":"<p>This event triggers when a selected image is removed from the insert image dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#imageremoving"},"imageSelected":{"name":"imageSelected","description":"<p>This event triggers when an image is selected or dragged into the insert image dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#imageselected"},"imageUploadFailed":{"name":"imageUploadFailed","description":"<p>This event triggers when there is an error during image upload.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#imageuploadfailed"},"imageUploadSuccess":{"name":"imageUploadSuccess","description":"<p>This event triggers when an image has been successfully uploaded to the server side.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#imageuploadsuccess"},"imageUploading":{"name":"imageUploading","description":"<p>This event triggers when an image upload begins in the insert image dialog.\nIt provides access to the upload details through the event arguments.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#imageuploading"},"quickToolbarClose":{"name":"quickToolbarClose","description":"<p>This event triggers after the quick toolbar has been closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarclose"},"quickToolbarOpen":{"name":"quickToolbarOpen","description":"<p>This event triggers when the quick toolbar is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbaropen"},"resizeStart":{"name":"resizeStart","description":"<p>This event triggers when resizing starts for various elements including tables, images, videos, and the overall editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>This event triggers when resizing stops for various elements including tables, images, videos, and the overall editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#resizestop"},"resizing":{"name":"resizing","description":"<p>This event triggers when resizing elements such as tables, images, videos, and the overall Rich Text Editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#resizing"},"slashMenuItemSelect":{"name":"slashMenuItemSelect","description":"<p>This event triggers when a slash menu item in the popup is selected by the user using mouse, tap, or keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#slashmenuitemselect"},"toolbarClick":{"name":"toolbarClick","description":"<p>This event triggers when a Rich Text Editor toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarclick"},"toolbarStatusUpdate":{"name":"toolbarStatusUpdate","description":"<p>This event is deprecated and no longer works. Use the <code>updatedToolbarStatus</code> event for undo/redo status.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarstatusupdate"},"updatedToolbarStatus":{"name":"updatedToolbarStatus","description":"<p>This event triggers when the toolbar items status is updated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#updatedtoolbarstatus"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#allowserverdatabinding"},"autoSaveOnIdle":{"name":"autoSaveOnIdle","description":"<p>Enables or disables the auto-save option, which performs the save action during idle states after content changes.\nIf enabled, the editor will save content in idle state based on the <code>saveInterval</code> property's value.\nThe change event is triggered if the content has been modified since the last saved state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#autosaveonidle"},"backgroundColor":{"name":"backgroundColor","description":"<p>Defines the color palette for the background color (text highlight color) toolbar command.</p>\n","type":"BackgroundColorModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#backgroundcolor"},"bulletFormatList":{"name":"bulletFormatList","description":"<p>Predefines advanced list types that populate the bulletFormatList dropdown in the toolbar.</p>\n","type":"BulletFormatListModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#bulletformatlist"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class name appended to the root element of the RichTextEditor.\nMultiple custom CSS classes can be added.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#currentcontext"},"editorMode":{"name":"editorMode","description":"<p>Defines the mode of the RichTextEditor.</p>\n<ul>\n<li><code>HTML</code>: Render as an HTML editor using an <code>&lt;IFRAME&gt;</code>, content editable <code>&lt;div&gt;</code>, or <code>&lt;textarea&gt;</code>.</li>\n<li><code>Markdown</code>: Render as a Markdown editor using a <code>&lt;textarea&gt;</code>.</li>\n</ul>\n","type":"EditorMode","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#editormode"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#element"},"emojiPickerSettings":{"name":"emojiPickerSettings","description":"<p>Configures emoji picker options in the Rich Text Editor.\nProperties:</p>\n<ul>\n<li>iconsSet: Array representing emoji icons.</li>\n<li>showSearchBox: Enables/disables the search box.</li>\n</ul>\n","type":"EmojiSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#emojipickersettings"},"enableAutoUrl":{"name":"enableAutoUrl","description":"<p>Enable <code>enableAutoUrl</code> to accept the given URL (relative or absolute) without validating the URL for hyperlinks.\nOtherwise, the given URL will automatically convert to an absolute path URL by prefixing it with <code>https://</code> for hyperlinks.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enableautourl"},"enableHtmlEncode":{"name":"enableHtmlEncode","description":"<p>Determines if source code should be displayed in an encoded format.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablehtmlencode"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Indicates whether to allow cross-site scripting (XSS) or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables the persistence of the component's state between page reloads.\nIf enabled, the value of the Rich Text Editor is retained.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablepersistence"},"enableResize":{"name":"enableResize","description":"<p>Enables or disables the resizing option in the editor.\nWhen enabled, the editor can be resized by dragging the resize icon in its bottom right corner.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enableresize"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablertl"},"enableTabKey":{"name":"enableTabKey","description":"<p>Allows the tab key action in the Rich Text Editor content.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabletabkey"},"enableXhtml":{"name":"enableXhtml","description":"<p>Indicates whether XHTML is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablexhtml"},"enabled":{"name":"enabled","description":"<p>Indicates whether the component is enabled or disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabled"},"enterKey":{"name":"enterKey","description":"<p>Specifies the tag to be inserted when the enter key is pressed.</p>\n<ul>\n<li><code>P</code>: Pressing enter inserts a <code>p</code> tag. The default value will be <code>&lt;p&gt;&lt;br&gt;&lt;/p&gt;</code>.</li>\n<li><code>DIV</code>: Inserts a <code>div</code> tag instead of the default <code>P</code> tag.</li>\n<li><code>BR</code>: Inserts a <code>br</code> tag instead of the default <code>P</code> tag.</li>\n</ul>\n","type":"EnterKey","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enterkey"},"exportPdf":{"name":"exportPdf","description":"<p>Describes file export options to PDF in the Rich Text Editor, such as:</p>\n<ul>\n<li><code>serviceurl</code>: URL used for exporting content to PDF format.</li>\n<li><code>fileName</code>: Specifies the default PDF file name upon export.</li>\n<li><code>stylesheet</code>: Applies a stylesheet to the exported PDF file.</li>\n</ul>\n","type":"ExportPdfModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#exportpdf"},"exportWord":{"name":"exportWord","description":"<p>Defines file export options for the Rich Text Editor with properties like:</p>\n<ul>\n<li><code>serviceurl</code>: The URL utilized for exporting editor content to Word files.</li>\n<li><code>fileName</code>: Designates the default name for exported Word files.</li>\n<li><code>stylesheet</code>: Applies a stylesheet to the exported Word file.</li>\n</ul>\n","type":"ExportWordModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#exportword"},"fileManagerSettings":{"name":"fileManagerSettings","description":"<p>Defines image manager options in the Rich Text Editor with the following attributes:</p>\n<ul>\n<li><code>enable</code>: Boolean to enable or disable the image manager.</li>\n<li><code>ajaxSettings</code>: Configures AJAX settings for image handling.</li>\n<li><code>contextMenuSettings</code>: Manages context menu availability and options.</li>\n<li><code>navigationPaneSettings</code>: Sets up the navigation pane display and contents.</li>\n<li><code>toolbarSettings</code>: Specifies toolbar configuration and visible items.</li>\n<li><code>uploadSettings</code>: Manages upload-specific configurations.</li>\n</ul>\n","type":"FileManagerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#filemanagersettings"},"floatingToolbarOffset":{"name":"floatingToolbarOffset","description":"<p>Keeps the toolbar fixed at the top of the Rich Text Editor during scrolling and specifies the\ntoolbar's offset from the document's top position.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#floatingtoolbaroffset"},"fontColor":{"name":"fontColor","description":"<p>Defines the color palette for the font color toolbar command.</p>\n","type":"FontColorModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fontcolor"},"fontFamily":{"name":"fontFamily","description":"<p>Predefines font families that populate the font family dropdown in the toolbar.</p>\n","type":"FontFamilyModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fontfamily"},"fontSize":{"name":"fontSize","description":"<p>Defines the predefined font sizes that populate the font size dropdown in the toolbar.</p>\n","type":"FontSizeModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fontsize"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#forceupdate"},"format":{"name":"format","description":"<p>Predefines a collection of paragraph styles along with quote and code styles\nthat populate the format dropdown in the toolbar.</p>\n","type":"FormatModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#format"},"formatPainterSettings":{"name":"formatPainterSettings","description":"<p>Configures the format painter options in the Rich Text Editor.\nProperties:</p>\n<ul>\n<li>allowedFormats: Tags selectors that allow format copying.</li>\n<li>deniedFormats: Tag selectors that prevent format copying.</li>\n</ul>\n","type":"FormatPainterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#formatpaintersettings"},"formatter":{"name":"formatter","description":"<p>Customize the <code>keyCode</code> to change the key value.</p>\n","type":"IFormatter","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#formatter"},"height":{"name":"height","description":"<p>Specifies the height of the Rich Text Editor component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#height"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows specifying additional HTML attributes like title, name, etc.\nAccepts multiple attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#htmlattributes"},"iframeSettings":{"name":"iframeSettings","description":"<p>Configures iframe mode items in the Rich Text Editor.\nProperties:</p>\n<ul>\n<li>enable: Boolean to place editor content in an iframe, isolating it from the page.</li>\n<li>attributes: Custom style for displaying content inside the iframe. Applied to iframe body.</li>\n<li>resources: Adds styles and scripts to the iframe.\n<ol>\n<li>styles[]: Array of CSS files for the iframe content.</li>\n<li>scripts[]: Array of JS script files for the iframe.</li>\n</ol>\n</li>\n<li>metaTags[]: Array of meta tags for iframe's head, setting metadata (http-equiv, charset, etc.).</li>\n<li>sandbox: String array defining iframe sandbox attributes, controlling security restrictions. Default includes &quot;allow-same-origin&quot;.</li>\n</ul>\n","type":"IFrameSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#iframesettings"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#ignorecollectionwatch"},"importWord":{"name":"importWord","description":"<p>Configures the options for importing Word files in the Rich Text Editor component.\nThe <code>serviceUrl</code> property specifies the server endpoint URL where the uploaded Word file will be processed.</p>\n","type":"ImportWordModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#importword"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#initrendercalled"},"inlineMode":{"name":"inlineMode","description":"<p>Configures the inline edit mode for the Rich Text Editor with the following options:</p>\n<ul>\n<li><code>enable</code>: A boolean value to enable or disable the inline edit mode.</li>\n<li><code>onSelection</code>: Determines how the toolbar is activated:\n<ul>\n<li>If set to <code>true</code>, the toolbar appears inline upon text selection.</li>\n<li>If set to <code>false</code>, the toolbar opens when clicking on the target element.</li>\n</ul>\n</li>\n</ul>\n","type":"InlineModeModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inlinemode"},"insertAudioSettings":{"name":"insertAudioSettings","description":"<p>Defines the options for inserting audio files in the Rich Text Editor, including properties such as:</p>\n<ul>\n<li><code>allowedTypes</code>: Specifies the file extensions for audio files allowed to be inserted, listed as a comma-separated string (e.g., '.wav', '.mp3').</li>\n<li><code>layoutOption</code>: Sets the default layout for audio files when inserted into the Rich Text Editor. The options are 'Inline' and 'Break'.</li>\n<li><code>saveFormat</code>: Determines the format used to store audio files in the Rich Text Editor, either 'Base64' or 'Blob'.\n<blockquote>\n<p>Choose 'Base64' for frequently inserted small audio files without the need for a specific storage location.</p>\n</blockquote>\n</li>\n<li><code>saveUrl</code>: Provides the service URL responsible for handling audio file uploads and storage on the server.</li>\n<li><code>path</code>: Specifies the storage path for audio files and the reference for displaying them.</li>\n</ul>\n","type":"AudioSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#insertaudiosettings"},"insertImageSettings":{"name":"insertImageSettings","description":"<p>Specifies the options for inserting images in the Rich Text Editor. Includes properties such as:</p>\n<ul>\n<li><code>allowedTypes</code>: Specifies the allowed image file extensions as a comma-separated list (e.g., '.jpg', '.png').</li>\n<li><code>display</code>: Sets the default display mode for an inserted image, either 'inline' or 'block'.</li>\n<li><code>width</code>: Specifies the default width for an inserted image.</li>\n<li><code>saveFormat</code>: Indicates the format for storing images in the editor (Base64 or Blob).\n<blockquote>\n<p>Select Base64 for numerous small images without a specific physical storage location.</p>\n</blockquote>\n</li>\n<li><code>height</code>: Defines the default height for an inserted image.</li>\n<li><code>saveUrl</code>: Specifies the URL for the service that handles image upload and storage on the server.</li>\n<li><code>path</code>: Determines the storage location for images and their display path.</li>\n</ul>\n","type":"ImageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#insertimagesettings"},"insertVideoSettings":{"name":"insertVideoSettings","description":"<p>Specifies video insert options in the Rich Text Editor, detailing properties such as:</p>\n<ul>\n<li><code>allowedTypes</code>: Allowed video file extensions as a comma-separated list (e.g., '.mp4', '.mov').</li>\n<li><code>layoutOption</code>: Determines the display mode for videos ('Inline' or 'Break').</li>\n<li><code>width</code>: Sets default width for inserted videos.</li>\n<li><code>saveFormat</code>: Format for storing video files (Base64 or Blob).\n<blockquote>\n<p>Select Base64 for numerous small video inserts without defined storage requirements.</p>\n</blockquote>\n</li>\n<li><code>height</code>: Sets default height for inserted videos.</li>\n<li><code>saveUrl</code>: URL of the service for handling video uploads and server storage.</li>\n<li><code>path</code>: Identifies the path for storing and displaying videos.</li>\n</ul>\n","type":"VideoSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#insertvideosettings"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#isvue"},"keyConfig":{"name":"keyConfig","description":"<p>Customizes key actions in the RichTextEditor.\nFor example, German keyboard users can customize key actions using these shortcuts.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#keyconfig"},"keyboardModule":{"name":"keyboardModule","description":"","type":"KeyboardEvents","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#keyboardmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#locale"},"localeObj":{"name":"localeObj","description":"","type":"L10n","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#localeobj"},"maxLength":{"name":"maxLength","description":"<p>Specifies the maximum number of characters allowed in the Rich Text Editor.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#maxlength"},"needsID":{"name":"needsID","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#needsid"},"numberFormatList":{"name":"numberFormatList","description":"<p>Predefines advanced list types that populate the numberFormatList dropdown in the toolbar.</p>\n","type":"NumberFormatListModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#numberformatlist"},"pasteCleanupSettings":{"name":"pasteCleanupSettings","description":"<p>Configures paste options in the Rich Text Editor.\nProperties:</p>\n<ul>\n<li>prompt: Boolean to enable or disable paste prompt.</li>\n<li>deniedAttrs: Attributes to restrict during paste.</li>\n<li>allowedStyleProps: Style properties allowed when pasting.</li>\n<li>deniedTags: Tags to restrict when pasting.</li>\n<li>keepFormat: Boolean to keep or remove format when pasting.</li>\n<li>plainText: Boolean to paste as plain text.</li>\n</ul>\n","type":"PasteCleanupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#pastecleanupsettings"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text for the content area of the RichTextEditor when it is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#props"},"quickToolbarSettings":{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in the quick toolbar based on the target element.\nProperties:</p>\n<ul>\n<li>enable: Boolean to show or hide the quick toolbar.</li>\n<li>actionOnScroll: Options for quick toolbar behavior on scroll:\n<ol>\n<li>hide: The quick toolbar closes when the parent element is scrolled.</li>\n<li>none: The quick toolbar stays open even if the parent element is scrolled.</li>\n</ol>\n</li>\n<li>link: Specifies items in the quick toolbar for links ('Open', 'Edit', 'UnLink').</li>\n<li>image: Specifies items in the quick toolbar for images ('Replace', 'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension').</li>\n<li>text: Specifies items in the quick toolbar for text ('Cut', 'Copy', 'Paste').</li>\n<li>audio: Specifies items for audio ('AudioReplace', 'AudioRemove', 'AudioLayoutOption').</li>\n<li>video: Specifies items for video ('VideoReplace', 'VideoAlign', 'VideoRemove', 'VideoLayoutOption', 'VideoDimension').</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},"readonly":{"name":"readonly","description":"<p>Disables user interactions on the component when set to true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#root"},"saveInterval":{"name":"saveInterval","description":"<p>Specifies the save interval in milliseconds for automatically saving the content.\nThe change event is triggered if the content changes from the last saved interval.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#saveinterval"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#setstate"},"shiftEnterKey":{"name":"shiftEnterKey","description":"<p>Specifies tags to be inserted when the Shift + Enter keys are pressed.</p>\n<ul>\n<li><code>BR</code> - When the Shift + Enter key is pressed, a <code>br</code> tag will be inserted, which is the default behavior.</li>\n<li><code>P</code> - When the Shift + Enter key is pressed, a <code>p</code> tag will be inserted instead of the default <code>br</code> tag.</li>\n<li><code>DIV</code> - When the Shift + Enter key is pressed, a <code>div</code> tag will be inserted instead of the default <code>br</code> tag.</li>\n</ul>\n","type":"ShiftEnterKey","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#shiftenterkey"},"showCharCount":{"name":"showCharCount","description":"<p>Enables or disables the display of the character counter.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showcharcount"},"showTooltip":{"name":"showTooltip","description":"<p>Configures whether a tooltip should be displayed for the Rich Text Editor toolbar.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showtooltip"},"slashMenuModule":{"name":"slashMenuModule","description":"","type":"SlashMenu","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#slashmenumodule"},"slashMenuSettings":{"name":"slashMenuSettings","description":"<p>Configuration options for the slash menu feature in the Editor, used to display a mention popup.\nProperties:</p>\n<ul>\n<li>enable: A boolean indicating whether the slash menu is enabled in the Editor.</li>\n<li>items: An array specifying the list of items to be displayed in the slash menu.</li>\n<li>popupWidth: Defines the width of the slash menu popup. Accepts values in pixels, numbers, or percentages. Numeric values are treated as pixels.</li>\n<li>popupHeight: Defines the height of the slash menu popup. Accepts values in pixels, numbers, or percentages. Numeric values are treated as pixels.</li>\n</ul>\n","type":"SlashMenuSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#slashmenusettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#state"},"tableSettings":{"name":"tableSettings","description":"<p>Specifies the options for inserting tables in the Rich Text Editor, featuring properties like:</p>\n<ul>\n<li><code>styles</code>: Automatically appends a CSS class to tables for consistent styling.</li>\n<li><code>width</code>: Defines default table width upon insertion.</li>\n<li><code>minWidth</code>: Sets the minimum width for inserted tables.</li>\n<li><code>maxWidth</code>: Indicates the maximum permissible width for tables.</li>\n<li><code>resize</code>: Enables or disables table resizing functionality.</li>\n</ul>\n","type":"TableSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#tablesettings"},"toolbarSettings":{"name":"toolbarSettings","description":"<p>Specifies the configuration for the toolbar, including the alignment and rendering type.\nBy default, the toolbar floats at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will move with the page applying the specified offset.\nProperties:</p>\n<ul>\n<li>\n<p>enable: A boolean value to show or hide the toolbar.</p>\n</li>\n<li>\n<p>enableFloating: A boolean value to enable or disable the floating toolbar.\nThis keeps the toolbar fixed at the top of the RichTextEditor during scrolling.</p>\n</li>\n<li>\n<p>type: Defines the toolbar type, with the following options:</p>\n<ol>\n<li>Expand: Overflowing toolbar items are hidden and can be accessed by clicking the expand arrow.</li>\n<li>MultiRow: Overflowing toolbar items wrap into the next row.</li>\n<li>Scrollable: Toolbar items are on a single line and can be scrolled horizontally if they overflow.</li>\n</ol>\n</li>\n<li>\n<p>items: An array specifying the items aligned horizontally in the toolbar.</p>\n</li>\n</ul>\n<blockquote>\n<p>'|' and '-' can be used to insert vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Allows the modification of the default toolbar item configuration, such as the icon class.</li>\n</ul>\n<blockquote>\n<p>By default, the toolbar is rendered with a scrollable option on mobile devices and does not support other toolbar types.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},"undoRedoSteps":{"name":"undoRedoSteps","description":"<p>Specifies the number of undo history steps stored in the undo/redo manager.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#undoredosteps"},"undoRedoTimer":{"name":"undoRedoTimer","description":"<p>Specifies the interval time in milliseconds for storing actions in the undo/redo manager.\nThe minimum value is 300 milliseconds.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#undoredotimer"},"value":{"name":"value","description":"<p>Specifies the initial content to be displayed in the RichTextEditor's content area. It should be a string.\nThe editor's content can also be dynamically loaded from a database, AJAX, etc.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},"valueContainer":{"name":"valueContainer","description":"","type":"HTMLTextAreaElement","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#valuecontainer"},"valueTemplate":{"name":"valueTemplate","description":"<p>Accepts a template design and assigns it as the content of the Rich Text Editor.\nThe built-in template engine provides options to compile a template string into an executable function.\nFor example, it supports expression evaluation similar to ES6 template string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#valuetemplate"},"width":{"name":"width","description":"<p>Specifies the width of the Rich Text Editor.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#width"},"addAnchorAriaLabel":{"name":"addAnchorAriaLabel","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#addanchorarialabel"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#attachunloadevent"},"cleanList":{"name":"cleanList","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#cleanlist"},"closeDialog":{"name":"closeDialog","description":"<p>Closes a specified dialog within the Rich Text Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#closedialog"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the component by detaching or removing all event handlers,\nattributes, and CSS classes. It also clears the component's element content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#detachunloadevent"},"disableToolbarItem":{"name":"disableToolbarItem","description":"<p>Disables the specified toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#disabletoolbaritem"},"enableToolbarItem":{"name":"enableToolbarItem","description":"<p>Enables the specified toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabletoolbaritem"},"executeCommand":{"name":"executeCommand","description":"<p>Executes a specified command within the rich text editor, optionally utilizing additional parameters to tailor execution.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#executecommand"},"focusIn":{"name":"focusIn","description":"<p>Focuses the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Blurs the Rich Text Editor component, removing focus.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#focusout"},"getCharCount":{"name":"getCharCount","description":"<p>Calculates the maximum number of characters currently in the Rich Text Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getcharcount"},"getContent":{"name":"getContent","description":"<p>Retrieves the HTML or text content inside the RichTextEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getcontent"},"getHtml":{"name":"getHtml","description":"<p>Retrieves the HTML content from the Rich Text Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#gethtml"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getlocaldata"},"getRange":{"name":"getRange","description":"<p>Get the selected range from the RichTextEditor's content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getrange"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getrootelement"},"getSelectedHtml":{"name":"getSelectedHtml","description":"<p>Retrieves the HTML representation of the selected content as a string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getselectedhtml"},"getSelection":{"name":"getSelection","description":"<p>Retrieves the HTML markup from the currently selected content in RichTextEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getselection"},"getText":{"name":"getText","description":"<p>Retrieves the text content as a string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#gettext"},"getXhtml":{"name":"getXhtml","description":"<p>Retrieves XHTML validated HTML content from the Rich Text Editor\nwhen the <code>enableXhtml</code> property is set to true.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getxhtml"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#handleunload"},"hideInlineToolbar":{"name":"hideInlineToolbar","description":"<p>Hides the inline quick toolbar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#hideinlinetoolbar"},"print":{"name":"print","description":"<p>Prints all the pages of the RichTextEditor by default.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#refresh"},"refreshUI":{"name":"refreshUI","description":"<p>Refreshes the view of the editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#refreshui"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#removeeventlistener"},"removeToolbarItem":{"name":"removeToolbarItem","description":"<p>Removes the specified toolbar items from the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#removetoolbaritem"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#render"},"renderTemplates":{"name":"renderTemplates","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#rendertemplates"},"sanitizeHtml":{"name":"sanitizeHtml","description":"<p>Sanitizes an HTML string to prevent cross-site scripting (XSS) attacks.\nThis method is applicable when the editor mode is specifically set to <code>HTML</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#sanitizehtml"},"selectAll":{"name":"selectAll","description":"<p>Selects all content within the RichTextEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#selectall"},"selectRange":{"name":"selectRange","description":"<p>Selects a specific content range or element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#selectrange"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#serverdatabind"},"showDialog":{"name":"showDialog","description":"<p>Displays a specified dialog within the Rich Text Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showdialog"},"showEmojiPicker":{"name":"showEmojiPicker","description":"<p>Displays the emoji picker. If coordinates are provided, it positions the picker at those locations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showemojipicker"},"showFullScreen":{"name":"showFullScreen","description":"<p>Displays the Rich Text Editor component in full-screen mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showfullscreen"},"showInlineToolbar":{"name":"showInlineToolbar","description":"<p>Displays the inline quick toolbar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showinlinetoolbar"},"showSourceCode":{"name":"showSourceCode","description":"<p>Toggles the display of the HTML/Markdown source code within the editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showsourcecode"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"}},"ColumnDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnDirective#shouldcomponentupdate"}},"ColumnsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/columnsDirective#shouldcomponentupdate"}},"MultiColumnComboBoxComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#actionfailure"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected or when the model value is changed by the user.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#change"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#close"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the control.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#created"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#filtering"},"open":{"name":"open","description":"<p>Triggers when the popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#open"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup content when the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#actionfailuretemplate"},"allowFiltering":{"name":"allowFiltering","description":"<p>Specifies the filter action retrieves matched items through the filtering event based on the characters typed in the search TextBox.\nIf no match is found, the value of the noRecordsTemplate property will be displayed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#allowfiltering"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#allowserverdatabinding"},"allowSorting":{"name":"allowSorting","description":"<p>Specifies whether sorting is allowed for the columns in the dropdown list.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#allowsorting"},"columns":{"name":"columns","description":"<p>Specifies the number of columns and its respective fields to be displayed in the dropdown popup.</p>\n","type":"ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets CSS classes to the root element of the component that allows customization of appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of <code>DataManager</code>.</p>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#datasource"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the component is disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Specifies the component’s state between page reloads. If enabled, the list of states for the value will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Defines whether to enable virtual scrolling in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#enablevirtualization"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item.</li>\n<li>value - Maps the value column from data table for each list item.</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#fields"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe <code>FilterType</code> and its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>StartsWith</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType|string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never - The label will never float in the input when the placeholder is available.</li>\n<li>Always - The floating label will always float above the input.</li>\n<li>Auto - The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Accepts the template design and assigns it to the footer container of the popup.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#forceupdate"},"gridSettings":{"name":"gridSettings","description":"<p>Specifies the configuration of the columns in the popup content.</p>\n","type":"GridSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#gridsettings"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#grouptemplate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as title, name, etc., and accepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#ignorecollectionwatch"},"index":{"name":"index","description":"<p>Gets or sets the index of the selected item in the component.</p>\n","type":"number|null","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#index"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each items present in the popup.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#locale"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of component when no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#norecordstemplate"},"placeholder":{"name":"placeholder","description":"<p>Specifies a short hint that describes the expected value of the multicolumn combobox component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the popup list.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup list. By default, the popup width sets based on the width of the component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#props"},"query":{"name":"query","description":"<p>Accepts the external Query that execute along with data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#query"},"readonly":{"name":"readonly","description":"<p>Specifies the user interactions on the component are disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon in textbox.\nWhen the clear button is clicked, <code>value</code>, <code>text</code> properties will be reset to null.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#showclearbutton"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the sortOrder to sort the data source.\nThe available type of sort orders are,</p>\n<ul>\n<li><code>None</code> - The datasource is not sorting. Default value is None.</li>\n<li><code>Ascending</code> - The datasource is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder|string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#sortorder"},"sortType":{"name":"sortType","description":"<p>Specifies the type of sorting to be applied for the columns.</p>\n<ul>\n<li><code>OneColumn</code> - Allow sorting only one column.</li>\n<li><code>MultipleColumns</code> - Allow sorting multiple columns.</li>\n</ul>\n","type":"SortType|string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#sorttype"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#state"},"text":{"name":"text","description":"<p>Gets or sets the display text of the selected item.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#text"},"value":{"name":"value","description":"<p>Gets or sets the value of the selected item.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#value"},"width":{"name":"width","description":"<p>Specifies the width of the component. By default, the component width sets based on the width of its parent container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#addeventlistener"},"addItems":{"name":"addItems","description":"<p>Adds a new item to the popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#additems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to the component for interaction.component for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Moves the focus from the component if the component is already focused.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#focusout"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#getdatabyvalue"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup if it is in open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#hidepopup"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Opens the popup that displays the list of items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#showpopup"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multicolumn-combobox/#inject"}},"ImageEditorComponent":{"beforeSave":{"name":"beforeSave","description":"<p>Event callback that is raised before an image is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#beforesave"},"click":{"name":"click","description":"<p>Event callback that is raised while clicking on an image in the Image Editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#click"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the Image Editor component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#created"},"cropping":{"name":"cropping","description":"<p>Event callback that is raised while cropping an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#cropping"},"destroyed":{"name":"destroyed","description":"<p>Event callback that is raised once the component is destroyed with its elements and bound events.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#destroyed"},"editComplete":{"name":"editComplete","description":"<p>Event callback that is triggered after the completion of an editing action in the image editor.\nThis event occurs after the image editor canvas has been updated through following actions such as cropping, drawing annotations, applying filters, fine-tuning, or other customizations.</p>\n<p>It provides an opportunity to perform additional tasks, such as comparing the current image data with previous states or triggering further processing based on the changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#editcomplete"},"fileOpened":{"name":"fileOpened","description":"<p>Event callback that is raised once an image is opened in an Image Editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#fileopened"},"finetuneValueChanging":{"name":"finetuneValueChanging","description":"<p>Event callback that is raised when applying fine tune to an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#finetunevaluechanging"},"flipping":{"name":"flipping","description":"<p>Event callback that is raised while flipping an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#flipping"},"frameChange":{"name":"frameChange","description":"<p>Event callback that is raised while applying frames on an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#framechange"},"imageFiltering":{"name":"imageFiltering","description":"<p>Event callback that is raised when applying filter to an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#imagefiltering"},"panning":{"name":"panning","description":"<p>Event callback that is raised while panning an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#panning"},"quickAccessToolbarItemClick":{"name":"quickAccessToolbarItemClick","description":"<p>Event callback that is raised once the quick access toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#quickaccesstoolbaritemclick"},"quickAccessToolbarOpen":{"name":"quickAccessToolbarOpen","description":"<p>Event callback that is raised when opening the quick access toolbar.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#quickaccesstoolbaropen"},"resizing":{"name":"resizing","description":"<p>Event callback that is raised while resizing an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#resizing"},"rotating":{"name":"rotating","description":"<p>Event callback that is raised while rotating an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#rotating"},"saved":{"name":"saved","description":"<p>Event callback that is raised once an image is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#saved"},"selectionChanging":{"name":"selectionChanging","description":"<p>Event callback that is raised while changing selection in an Image Editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#selectionchanging"},"shapeChange":{"name":"shapeChange","description":"<p>Event callback that is raised after shape changing action is performed in an image editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#shapechange"},"shapeChanging":{"name":"shapeChanging","description":"<p>Event callback that is raised while changing shapes in an Image Editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#shapechanging"},"toolbarCreated":{"name":"toolbarCreated","description":"<p>Event callback that is raised once the toolbar is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#toolbarcreated"},"toolbarItemClicked":{"name":"toolbarItemClicked","description":"<p>Event callback that is raised once the toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#toolbaritemclicked"},"toolbarUpdating":{"name":"toolbarUpdating","description":"<p>Event callback that is raised while updating/refreshing the toolbar</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#toolbarupdating"},"zooming":{"name":"zooming","description":"<p>Event callback that is raised while zooming an image.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#zooming"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#allowserverdatabinding"},"allowUndoRedo":{"name":"allowUndoRedo","description":"<p>Specifies a boolean value whether enable undo/redo operations in the image editor.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#allowundoredo"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines one or more CSS classes that can be used to customize the appearance of an Image Editor component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Defines whether an Image Editor component is enabled or disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLDivElement","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#element"},"finetuneSettings":{"name":"finetuneSettings","description":"<p>Specifies the finetune settings option which can be used to perform color adjustments in the image editor control.</p>\n","type":"FinetuneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#finetunesettings"},"fontFamily":{"name":"fontFamily","description":"<p>Predefine the font families that populate in font family dropdown list from the toolbar.</p>\n","type":"FontFamilyModel","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#fontfamily"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#props"},"quickAccessToolbarTemplate":{"name":"quickAccessToolbarTemplate","description":"<p>Specifies a template for the quick access toolbar.\nUse this property to customize the quick access toolbar.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#quickaccesstoolbartemplate"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#root"},"selectionSettings":{"name":"selectionSettings","description":"<p>Specifies the selection settings to customize selection.\nA 'SelectionSettingsModel' value that specifies the the customization related options which are enabled in image editor control. The default value is null.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#setstate"},"showQuickAccessToolbar":{"name":"showQuickAccessToolbar","description":"<p>Specifies whether to show/hide the quick access toolbar.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#showquickaccesstoolbar"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#state"},"theme":{"name":"theme","description":"<p>Specifies the theme of the Image Editor. The appearance of the shape selection in Image Editor is determined by this property.</p>\n","type":"string|Theme","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#theme"},"toolbar":{"name":"toolbar","description":"<p>Specifies the toolbar items to perform UI interactions.\nIt accepts both string[] and ItemModel[] to configure its toolbar items. The default value is null.\nIf the property is not defined in the control, the default toolbar will be rendered with preconfigured toolbar commands.\nIf the property is defined as empty collection, the toolbar will not be rendered.\nThe preconfigured toolbar commands are</p>\n<ul>\n<li>Crop: helps to crop an image as ellipse, square, various ratio aspects, custom selection with resize, drag and drop.</li>\n<li>Straightening: helps to rotate an image by a specified angle.</li>\n<li>Annotate: help to insert a shape on image that supports rectangle, ellipse, line, arrow, path, text, image and freehand drawing with resize, drag and drop, and customize its appearance.</li>\n<li>Transform: helps to rotate and flip an image.</li>\n<li>Finetunes: helps to perform adjustments on an image.</li>\n<li>Filters: helps to perform predefined color filters.</li>\n<li>Frame: helps to add decorative borders or frames around images.</li>\n<li>Resize: helps to modify the dimensions of an image.</li>\n<li>ZoomIn: performs zoom-in an image.</li>\n<li>ZoomOut: performs zoom-out an image.</li>\n<li>Save: save the modified image.</li>\n<li>Open: open an image to perform editing.</li>\n<li>Undo: helps to revert the last action.</li>\n<li>Redo: helps to redo the last action.</li>\n<li>Reset: reset the modification and restore the original image.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#toolbar"},"toolbarTemplate":{"name":"toolbarTemplate","description":"<p>Specifies a custom template for the toolbar of an image editor control.\nA string that specifies a custom template for the toolbar of the image editor. If this property is defined, the 'toolbar' property will not have any effect.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#toolbartemplate"},"uploadSettings":{"name":"uploadSettings","description":"<p>Represents the settings for configuring image uploads.\nThis object allows you to specify restrictions on the types and sizes of images that can be uploaded, ensuring that only valid files are accepted according to the defined criteria.</p>\n<p>The following options are available in <code>uploadSettings</code>.</p>\n<ul>\n<li>allowedExtensions: Specifies the allowed file extensions for uploaded images. The default value is null.</li>\n<li>minFileSize: Specifies the minimum size (in bytes) for the uploaded image. The default value is null.</li>\n<li>maxFileSize: Specifies the maximum size (in bytes) for the uploaded image. The default value is null.</li>\n</ul>\n","type":"UploadSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#uploadsettings"},"width":{"name":"width","description":"<p>Specifies the width of an Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#width"},"zoomSettings":{"name":"zoomSettings","description":"<p>Specifies the zoom settings to perform zooming action.\nA 'ZoomSettingsModel' value that specifies the the zoom related options which are enabled in image editor control. The default value is null.</p>\n","type":"ZoomSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#zoomsettings"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#appendto"},"apply":{"name":"apply","description":"<p>Applies the operations performed in the Image Editor, such as annotation drawings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#apply"},"applyImageFilter":{"name":"applyImageFilter","description":"<p>Filtering an image with the given type of filters.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#applyimagefilter"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#attachunloadevent"},"bringForward":{"name":"bringForward","description":"<p>Moves a shape to ahead of one shape based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform moving.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#bringforward"},"bringToFront":{"name":"bringToFront","description":"<p>Moves a shape to the front of all other shapes based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform moving.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#bringtofront"},"canRedo":{"name":"canRedo","description":"<p>Specifies if it's possible to redo the last recent action made in an Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#canredo"},"canUndo":{"name":"canUndo","description":"<p>Specifies if it's possible to undo the last recent action made in an Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#canundo"},"clearImage":{"name":"clearImage","description":"<p>Clears the loaded image in the Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#clearimage"},"clearSelection":{"name":"clearSelection","description":"<p>Clears the current selection performed in the image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#clearselection"},"cloneShape":{"name":"cloneShape","description":"<p>Duplicates a shape based on the given shape ID in the ImageEditor.\nUse 'getShapeSettings' method to get the shape and then pass a shapeId from the returned shape to clone a shape.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#cloneshape"},"crop":{"name":"crop","description":"<p>Crops an image based on the selection done in the image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#crop"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#databind"},"deleteRedact":{"name":"deleteRedact","description":"<p>Deletes a redaction based on the given shape id.\nUse 'getRedacts' method to get the redaaction id which is then passed to perform deletion.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#deleteredact"},"deleteShape":{"name":"deleteShape","description":"<p>Deletes a shape based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform selection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#deleteshape"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#detachunloadevent"},"discard":{"name":"discard","description":"<p>Discards the operations performed in the Image Editor, such as annotation drawings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#discard"},"drawArrow":{"name":"drawArrow","description":"<p>Draw arrow on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawarrow"},"drawEllipse":{"name":"drawEllipse","description":"<p>Draw ellipse on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawellipse"},"drawFrame":{"name":"drawFrame","description":"<p>Draw a frame on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawframe"},"drawImage":{"name":"drawImage","description":"<p>Draw an image as annotation on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawimage"},"drawLine":{"name":"drawLine","description":"<p>Draw line on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawline"},"drawPath":{"name":"drawPath","description":"<p>Draw path on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawpath"},"drawRectangle":{"name":"drawRectangle","description":"<p>Draw a rectangle on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawrectangle"},"drawRedact":{"name":"drawRedact","description":"<p>Draw a redaction on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawredact"},"drawText":{"name":"drawText","description":"<p>Draw a text on an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#drawtext"},"enableShapeDrawing":{"name":"enableShapeDrawing","description":"<p>Enable or disable a shape drawing option in an Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#enableshapedrawing"},"enableTextEditing":{"name":"enableTextEditing","description":"<p>Enable text area editing in the ImageEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#enabletextediting"},"export":{"name":"export","description":"<p>Export an image using the specified file name and the extension.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#export"},"finetuneImage":{"name":"finetuneImage","description":"<p>Finetuning an image with the given type of finetune and its value in the image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#finetuneimage"},"flip":{"name":"flip","description":"<p>Flips an image by horizontally or vertically in the image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#flip"},"freehandDraw":{"name":"freehandDraw","description":"<p>Enable or disable a freehand drawing in an Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#freehanddraw"},"getImageData":{"name":"getImageData","description":"<p>Returns an image as ImageData to load it in to a canvas.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getimagedata"},"getImageDimension":{"name":"getImageDimension","description":"<p>Get the dimension of an image in the image editor such as x, y, width, and height.\nThe method helps to get dimension after cropped an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getimagedimension"},"getImageFilter":{"name":"getImageFilter","description":"<p>Update filter to the canvas in the ImageEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getimagefilter"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getlocaldata"},"getRedacts":{"name":"getRedacts","description":"<p>Get all the shapes details which is drawn on an image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getredacts"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getrootelement"},"getShapeSetting":{"name":"getShapeSetting","description":"<p>Get particular shapes details based on id of the shape which is drawn on an image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getshapesetting"},"getShapeSettings":{"name":"getShapeSettings","description":"<p>Get all the shapes details which is drawn on an image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#getshapesettings"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#handleunload"},"initialize":{"name":"initialize","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#initialize"},"open":{"name":"open","description":"<p>Opens an image as URL or ImageData for editing in an image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#open"},"pan":{"name":"pan","description":"<p>Enable or disable a panning on the Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#pan"},"redo":{"name":"redo","description":"<p>Redo the last user action that was undone by the user or <code>undo</code> method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#redo"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#render"},"reset":{"name":"reset","description":"<p>Reset all the changes done in an image editor and revert to original image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#reset"},"resize":{"name":"resize","description":"<p>Resize an image by changing its width and height.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#resize"},"rotate":{"name":"rotate","description":"<p>Rotate an image to clockwise and anti-clockwise.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#rotate"},"select":{"name":"select","description":"<p>Perform selection in an image editor. The selection helps to crop an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#select"},"selectRedact":{"name":"selectRedact","description":"<p>Select a redaction based on the given redaction id.\nUse 'getRedacts' method to get the shape id which is then passed to perform selection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#selectredact"},"selectShape":{"name":"selectShape","description":"<p>Select a shape based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform selection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#selectshape"},"sendBackward":{"name":"sendBackward","description":"<p>Moves a shape to behind one shape based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform moving.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#sendbackward"},"sendToBack":{"name":"sendToBack","description":"<p>Moves a shape to behind all other shapes based on the given shape id.\nUse 'getShapeSettings' method to get the shape id which is then passed to perform moving.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#sendtoback"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#serverdatabind"},"straightenImage":{"name":"straightenImage","description":"<p>Straightens an image by rotating it clockwise or counterclockwise.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#straightenimage"},"triggerEditCompleteEvent":{"name":"triggerEditCompleteEvent","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#triggereditcompleteevent"},"undo":{"name":"undo","description":"<p>Reverse the last action which performed by the user in the Image Editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#undo"},"update":{"name":"update","description":"<p>To refresh the Canvas Wrapper.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#update"},"updateRedact":{"name":"updateRedact","description":"<p>This method is used to update the existing redacts by changing its height, width, blur, and pixel size in the component.\nUse 'getRedacts' method to get the redacts which is then passed to change the options of a redacts.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#updateredact"},"updateShape":{"name":"updateShape","description":"<p>This method is used to update the existing shapes by changing its height, width, color, and font styles in the component.\nUse 'getShapeSettings' method to get the shape which is then passed to change the options of a shape.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#updateshape"},"zoom":{"name":"zoom","description":"<p>Zoom in or out on a point in the image editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#zoom"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#inject"}},"FileManagerComponent":{"beforeDelete":{"name":"beforeDelete","description":"<p>This event is triggered before the deletion of a file or folder occurs. It can be utilized to prevent the deletion of specific files or folders. Any actions, such as displaying a spinner for deletion, can be implemented here.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforedelete"},"beforeDownload":{"name":"beforeDownload","description":"<p>Triggers before sending the download request to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforedownload"},"beforeFolderCreate":{"name":"beforeFolderCreate","description":"<p>This event is triggered before a folder is created. It allows for the restriction of folder creation based on the application's use case.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforefoldercreate"},"beforeImageLoad":{"name":"beforeImageLoad","description":"<p>Triggers before sending the getImage request to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforeimageload"},"beforeMove":{"name":"beforeMove","description":"<p>This event is triggered when a file or folder begins to move from its current path through a copy/cut and paste action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforemove"},"beforePopupClose":{"name":"beforePopupClose","description":"<p>Triggers before the dialog is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforepopupclose"},"beforePopupOpen":{"name":"beforePopupOpen","description":"<p>Triggers before the dialog is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforepopupopen"},"beforeRename":{"name":"beforeRename","description":"<p>This event is triggered when a file or folder is about to be renamed. It allows for the restriction of the rename action for specific folders or files by utilizing the cancel option.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforerename"},"beforeSend":{"name":"beforeSend","description":"<p>Triggers before sending the AJAX request to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#beforesend"},"created":{"name":"created","description":"<p>Triggers when the file manager component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#created"},"delete":{"name":"delete","description":"<p>This event is triggered after the file or folder is deleted successfully. The deleted file or folder details can be retrieved here. Additionally, custom elements' visibility can be managed here based on the application's use case.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#delete"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the file manager component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#destroyed"},"failure":{"name":"failure","description":"<p>Triggers when the AJAX request is failed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#failure"},"fileDragStart":{"name":"fileDragStart","description":"<p>Triggers when the file/folder dragging is started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filedragstart"},"fileDragStop":{"name":"fileDragStop","description":"<p>Triggers when the file/folder is about to be dropped at the target.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filedragstop"},"fileDragging":{"name":"fileDragging","description":"<p>Triggers while dragging the file/folder.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filedragging"},"fileDropped":{"name":"fileDropped","description":"<p>Triggers when the file/folder is dropped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filedropped"},"fileLoad":{"name":"fileLoad","description":"<p>Triggers before the file/folder is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileload"},"fileOpen":{"name":"fileOpen","description":"<p>Triggers before the file/folder is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileopen"},"fileSelect":{"name":"fileSelect","description":"<p>Triggers when the file/folder is selected/unselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileselect"},"fileSelection":{"name":"fileSelection","description":"<p>Triggers before the file/folder is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileselection"},"folderCreate":{"name":"folderCreate","description":"<p>This event is triggered when a folder is successfully created. It provides an opportunity to retrieve details about the newly created folder.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#foldercreate"},"menuClick":{"name":"menuClick","description":"<p>Triggers when the context menu item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#menuclick"},"menuClose":{"name":"menuClose","description":"<p>Triggers before the context menu is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#menuclose"},"menuOpen":{"name":"menuOpen","description":"<p>Triggers before the context menu is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#menuopen"},"move":{"name":"move","description":"<p>This event is triggered when a file or folder is pasted into the destination path.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#move"},"popupClose":{"name":"popupClose","description":"<p>Triggers when the dialog is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#popupclose"},"popupOpen":{"name":"popupOpen","description":"<p>Triggers when the dialog is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#popupopen"},"rename":{"name":"rename","description":"<p>This event is triggered when a file or folder is successfully renamed. It provides an opportunity to fetch details about the renamed file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#rename"},"search":{"name":"search","description":"<p>This event is triggered when a search action occurs in the search bar of the File Manager component. It triggers each character entered in the input during the search process.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#search"},"success":{"name":"success","description":"<p>Triggers when the AJAX request is success.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#success"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when the toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#toolbarclick"},"toolbarCreate":{"name":"toolbarCreate","description":"<p>Triggers before creating the toolbar.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#toolbarcreate"},"uploadListCreate":{"name":"uploadListCreate","description":"<p>Triggers before rendering each file item in upload dialog box.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadlistcreate"},"actionRecords":{"name":"actionRecords","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#actionrecords"},"activeElements":{"name":"activeElements","description":"","type":"Element[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#activeelements"},"activeModule":{"name":"activeModule","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#activemodule"},"activeRecords":{"name":"activeRecords","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#activerecords"},"ajaxSettings":{"name":"ajaxSettings","description":"<p>Specifies the AJAX settings of the file manager.</p>\n","type":"AjaxSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ajaxsettings"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Enables or disables drag-and-drop of files.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#allowdraganddrop"},"allowMultiSelection":{"name":"allowMultiSelection","description":"<p>Enables or disables the multiple files selection of the file manager.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#allowmultiselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#allowserverdatabinding"},"breadCrumbBarNavigation":{"name":"breadCrumbBarNavigation","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#breadcrumbbarnavigation"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#context"},"contextMenuSettings":{"name":"contextMenuSettings","description":"<p>Specifies the context menu settings of the file manager.</p>\n","type":"ContextMenuSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#contextmenusettings"},"createdItem":{"name":"createdItem","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#createditem"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the file manager that allows you to customize the appearance by overriding the styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#currentcontext"},"currentItemText":{"name":"currentItemText","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#currentitemtext"},"deleteRecords":{"name":"deleteRecords","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#deleterecords"},"destinationPath":{"name":"destinationPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#destinationpath"},"detailsViewSettings":{"name":"detailsViewSettings","description":"<p>Specifies the details view settings of the file manager.</p>\n","type":"DetailsViewSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#detailsviewsettings"},"dialogObj":{"name":"dialogObj","description":"","type":"Dialog","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dialogobj"},"dragCount":{"name":"dragCount","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dragcount"},"dragCursorPosition":{"name":"dragCursorPosition","description":"","type":"PositionModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dragcursorposition"},"dragData":{"name":"dragData","description":"","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dragdata"},"dragNodes":{"name":"dragNodes","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dragnodes"},"dragPath":{"name":"dragPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dragpath"},"dropData":{"name":"dropData","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#dropdata"},"dropPath":{"name":"dropPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#droppath"},"droppedObjects":{"name":"droppedObjects","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#droppedobjects"},"duplicateItems":{"name":"duplicateItems","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#duplicateitems"},"duplicateRecords":{"name":"duplicateRecords","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#duplicaterecords"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablehtmlsanitizer"},"enablePaste":{"name":"enablePaste","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablepaste"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables persisting component's state between page reloads. If enabled, the following APIs will persist:</p>\n<ol>\n<li><code>view</code>: Represents the previous view of the file manager.</li>\n<li><code>path</code>: Represents the previous path of the file manager.</li>\n<li><code>selectedItems</code>: Represents the previous selected items in the file manager.</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablepersistence"},"enableRangeSelection":{"name":"enableRangeSelection","description":"<p>Gets or sets a value that indicates whether the File Manager allows multiple items selection with mouse dragging.\nSet this property to true to allow users to select multiple items with mouse drag as like file explorer. Hover over\nthe files or folders and drag the mouse to select the required items.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablerangeselection"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Gets or sets a value that enables/disables the virtualization feature of the File Manager.\nWhen enabled, the File Manager will only load a subset of files and folders based on the size of the view port, with the rest being loaded dynamically as the user scrolls vertically through the list.\nThis can improve performance when dealing with a large number of files and folders, as it reduces the initial load time and memory usage.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablevirtualization"},"existingFileCount":{"name":"existingFileCount","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#existingfilecount"},"expandedId":{"name":"expandedId","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#expandedid"},"extDialogObj":{"name":"extDialogObj","description":"","type":"Dialog","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#extdialogobj"},"feFiles":{"name":"feFiles","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fefiles"},"feParent":{"name":"feParent","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#feparent"},"fileAction":{"name":"fileAction","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileaction"},"fileLength":{"name":"fileLength","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filelength"},"fileSystemData":{"name":"fileSystemData","description":"<p>Specifies the array of data to populate folders/files in the File Manager.\nThe mandatory fields to be included in the JSON data are defined in fileData interface.\nThis interface can be extended to add additional fields as required.</p>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filesystemdata"},"fileView":{"name":"fileView","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#fileview"},"filterData":{"name":"filterData","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filterdata"},"filterId":{"name":"filterId","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filterid"},"filterPath":{"name":"filterPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filterpath"},"folderPath":{"name":"folderPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#folderpath"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#forceupdate"},"hasId":{"name":"hasId","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#hasid"},"height":{"name":"height","description":"<p>Specifies the height of the file manager.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isangular"},"isApplySame":{"name":"isApplySame","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isapplysame"},"isBigger":{"name":"isBigger","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isbigger"},"isCut":{"name":"isCut","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#iscut"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isdestroyed"},"isDevice":{"name":"isDevice","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isdevice"},"isDragDrop":{"name":"isDragDrop","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isdragdrop"},"isDropEnd":{"name":"isDropEnd","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isdropend"},"isFile":{"name":"isFile","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isfile"},"isFiltered":{"name":"isFiltered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isfiltered"},"isLayoutChange":{"name":"isLayoutChange","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#islayoutchange"},"isMac":{"name":"isMac","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ismac"},"isMobile":{"name":"isMobile","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ismobile"},"isPasteError":{"name":"isPasteError","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ispasteerror"},"isPathDrag":{"name":"isPathDrag","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#ispathdrag"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isreactcomponent"},"isRetryOpened":{"name":"isRetryOpened","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isretryopened"},"isSameAction":{"name":"isSameAction","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#issameaction"},"isSearchCut":{"name":"isSearchCut","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#issearchcut"},"isSearchDrag":{"name":"isSearchDrag","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#issearchdrag"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isserverrendered"},"isSortByClicked":{"name":"isSortByClicked","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#issortbyclicked"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#isvue"},"itemData":{"name":"itemData","description":"","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#itemdata"},"layoutSelectedItems":{"name":"layoutSelectedItems","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#layoutselecteditems"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#locale"},"localeObj":{"name":"localeObj","description":"","type":"L10n","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#localeobj"},"navigationPaneSettings":{"name":"navigationPaneSettings","description":"<p>Specifies the navigationpane settings of the file manager.</p>\n","type":"NavigationPaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#navigationpanesettings"},"nextPath":{"name":"nextPath","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#nextpath"},"oldPath":{"name":"oldPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#oldpath"},"oldView":{"name":"oldView","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#oldview"},"originalPath":{"name":"originalPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#originalpath"},"pasteNodes":{"name":"pasteNodes","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#pastenodes"},"path":{"name":"path","description":"<p>Specifies the current path of the file manager.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#path"},"pathId":{"name":"pathId","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#pathid"},"pathNames":{"name":"pathNames","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#pathnames"},"persistData":{"name":"persistData","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#persistdata"},"popupTarget":{"name":"popupTarget","description":"<p>Specifies the target element in which the File Manager’s dialog will be displayed.\nThe default value is null, which refers to the File Manager element.</p>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#popuptarget"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#portals"},"previousPath":{"name":"previousPath","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#previouspath"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#refs"},"renameText":{"name":"renameText","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#renametext"},"renamedId":{"name":"renamedId","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#renamedid"},"renamedItem":{"name":"renamedItem","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#renameditem"},"replaceItems":{"name":"replaceItems","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#replaceitems"},"responseData":{"name":"responseData","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#responsedata"},"retryArgs":{"name":"retryArgs","description":"","type":"RetryArgs[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#retryargs"},"retryFiles":{"name":"retryFiles","description":"","type":"FileInfo[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#retryfiles"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#root"},"rootAliasName":{"name":"rootAliasName","description":"<p>Specifies the root folder alias name in file manager</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#rootaliasname"},"searchSettings":{"name":"searchSettings","description":"<p>Specifies the search settings of the file manager.</p>\n","type":"SearchSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#searchsettings"},"searchWord":{"name":"searchWord","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#searchword"},"searchedItems":{"name":"searchedItems","description":"","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#searcheditems"},"selectedItems":{"name":"selectedItems","description":"<p>Specifies the selected folders and files name of the  file manager.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#selecteditems"},"selectedNodes":{"name":"selectedNodes","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#selectednodes"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#setstate"},"showFileExtension":{"name":"showFileExtension","description":"<p>Shows or hides the file extension in file manager.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#showfileextension"},"showHiddenItems":{"name":"showHiddenItems","description":"<p>Determines whether to show or hide hidden files and folders.\nThis is applicable only for storage systems that support attributes for controlling the visibility of data, including physical file directories and custom flat data handlers.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#showhiddenitems"},"showItemCheckBoxes":{"name":"showItemCheckBoxes","description":"<p>Gets or sets a boolean value that determines whether to display checkboxes in the file manager. If enabled, checkboxes are shown for files or folders on hover.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#showitemcheckboxes"},"showThumbnail":{"name":"showThumbnail","description":"<p>Shows or hides the thumbnail images in largeicons view.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#showthumbnail"},"sortBy":{"name":"sortBy","description":"<p>Specifies the field name being used as the sorting criteria to sort the files of the file manager component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#sortby"},"sortComparer":{"name":"sortComparer","description":"<p>Defines the custom sorting function.\nThe sort comparer function has the same functionality like\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.sort</code></a> sort comparer.\nThis can be used to customize the default sorting functionalities with required comparison values.</p>\n","type":"SortComparer|string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#sortcomparer"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies a value that indicates whether the folders and files are sorted in the ascending or descending order,\nor they are not sorted at all. The available types of sort orders are,\n<code>None</code> - Indicates that the folders and files are not sorted.\n<code>Ascending</code> - Indicates that the folders and files are sorted in the ascending order.\n<code>Descending</code> - Indicates that the folders and files are sorted in the descending order.</p>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#sortorder"},"splitterObj":{"name":"splitterObj","description":"","type":"Splitter","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#splitterobj"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#state"},"targetModule":{"name":"targetModule","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#targetmodule"},"targetPath":{"name":"targetPath","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#targetpath"},"toolbarItems":{"name":"toolbarItems","description":"<p>An array of items that are used to configure File Manager toolbar items.</p>\n","type":"ToolbarItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#toolbaritems"},"toolbarSelection":{"name":"toolbarSelection","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#toolbarselection"},"toolbarSettings":{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar.</p>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#toolbarsettings"},"treeExpandTimer":{"name":"treeExpandTimer","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#treeexpandtimer"},"treeObj":{"name":"treeObj","description":"","type":"BaseTreeView","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#treeobj"},"uploadDialogObj":{"name":"uploadDialogObj","description":"","type":"Dialog","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploaddialogobj"},"uploadEventArgs":{"name":"uploadEventArgs","description":"","type":"BeforeSendEventArgs","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadeventargs"},"uploadItem":{"name":"uploadItem","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploaditem"},"uploadObj":{"name":"uploadObj","description":"","type":"Uploader","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadobj"},"uploadSettings":{"name":"uploadSettings","description":"<p>Specifies the upload settings for the file manager.</p>\n","type":"UploadSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadsettings"},"uploadedCount":{"name":"uploadedCount","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadedcount"},"uploadingCount":{"name":"uploadingCount","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadingcount"},"view":{"name":"view","description":"<p>Specifies the initial view of the file manager.\nWith the help of this property, initial view can be changed to details or largeicons view. The available views are:</p>\n<ul>\n<li><code>LargeIcons</code></li>\n<li><code>Details</code></li>\n</ul>\n","type":"ViewType","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#view"},"viewerObj":{"name":"viewerObj","description":"","type":"Dialog","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#viewerobj"},"virtualDragElement":{"name":"virtualDragElement","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#virtualdragelement"},"visitedData":{"name":"visitedData","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#visiteddata"},"visitedItem":{"name":"visitedItem","description":"","type":"Element","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#visiteditem"},"width":{"name":"width","description":"<p>Specifies the width of the file manager.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#attachunloadevent"},"clearSelection":{"name":"clearSelection","description":"<p>Deselects the currently selected folders and files in current path.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#clearselection"},"closeDialog":{"name":"closeDialog","description":"<p>Specifies the method which must be invoked to programmatically close the dialog popup in the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#closedialog"},"createFolder":{"name":"createFolder","description":"<p>Creates a new folder in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#createfolder"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#databind"},"deleteFiles":{"name":"deleteFiles","description":"<p>Deletes the folders or files from the given unique identifiers.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#deletefiles"},"destroy":{"name":"destroy","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#detachunloadevent"},"disableMenuItems":{"name":"disableMenuItems","description":"<p>Disables the specified context menu items in file manager. This method is used only in the menuOpen event.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#disablemenuitems"},"disableToolbarItems":{"name":"disableToolbarItems","description":"<p>Disables the specified toolbar items of the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#disabletoolbaritems"},"downloadFiles":{"name":"downloadFiles","description":"<p>Downloads the folders or files from the given unique identifiers.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#downloadfiles"},"enableMenuItems":{"name":"enableMenuItems","description":"<p>Enables the specified menu items of the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enablemenuitems"},"enableToolbarItems":{"name":"enableToolbarItems","description":"<p>Enables the specified toolbar items of the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#enabletoolbaritems"},"filterFiles":{"name":"filterFiles","description":"<p>Display the custom filtering files in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#filterfiles"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#getlocaldata"},"getMenuItemIndex":{"name":"getMenuItemIndex","description":"<p>Returns the index position of given current context menu item in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#getmenuitemindex"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#getrootelement"},"getSelectedFiles":{"name":"getSelectedFiles","description":"<p>Gets the details of the selected files in the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#getselectedfiles"},"getToolbarItemIndex":{"name":"getToolbarItemIndex","description":"<p>Returns the index position of given toolbar item in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#gettoolbaritemindex"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#handleunload"},"openFile":{"name":"openFile","description":"<p>Opens the corresponding file or folder from the given unique identifier.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#openfile"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#refresh"},"refreshFiles":{"name":"refreshFiles","description":"<p>Refreshes the folder files of the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#refreshfiles"},"refreshLayout":{"name":"refreshLayout","description":"<p>Refreshes the layout of the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#refreshlayout"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#removeeventlistener"},"renameFile":{"name":"renameFile","description":"<p>Renames the file or folder with given new name in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#renamefile"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#render"},"selectAll":{"name":"selectAll","description":"<p>Selects the entire folders and files in current path.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#selectall"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#serverdatabind"},"traverseBackward":{"name":"traverseBackward","description":"<p>Specifies the method that must be invoked to traverse the path backwards in the file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#traversebackward"},"uploadFiles":{"name":"uploadFiles","description":"<p>Opens the upload dialog in file manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#uploadfiles"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/file-manager/#inject"}},"ToolbarItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemDirective#shouldcomponentupdate"}},"ToolbarItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/toolbarItemsDirective#shouldcomponentupdate"}},"ProgressBarAnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationDirective#shouldcomponentupdate"}},"ProgressBarAnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/progressBarAnnotationsDirective#shouldcomponentupdate"}},"ProgressBarComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#animationcomplete"},"load":{"name":"load","description":"<p>Triggers before the progress bar get rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the progress bar has loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#loaded"},"mouseClick":{"name":"mouseClick","description":"<p>Trigger after mouse click</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#mouseclick"},"mouseDown":{"name":"mouseDown","description":"<p>Trigger after mouse down</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#mousedown"},"mouseLeave":{"name":"mouseLeave","description":"<p>Trigger after mouse down</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#mouseleave"},"mouseMove":{"name":"mouseMove","description":"<p>Trigger after mouse move</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#mousemove"},"mouseUp":{"name":"mouseUp","description":"<p>Trigger after mouse up</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#mouseup"},"progressCompleted":{"name":"progressCompleted","description":"<p>Triggers after the progress value completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#progresscompleted"},"textRender":{"name":"textRender","description":"<p>Triggers before the progress bar label renders.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#textrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#tooltiprender"},"valueChanged":{"name":"valueChanged","description":"<p>Triggers after the value has changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#valuechanged"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Animation for the progress bar</p>\n","type":"AnimationModel","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#animation"},"annotations":{"name":"annotations","description":"<p>The configuration for annotation in Progressbar.</p>\n","type":"ProgressAnnotationSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#annotations"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#context"},"cornerRadius":{"name":"cornerRadius","description":"<p>corner type</p>\n","type":"CornerType","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#cornerradius"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#enablepersistence"},"enablePieProgress":{"name":"enablePieProgress","description":"<p>pie view</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#enablepieprogress"},"enableProgressSegments":{"name":"enableProgressSegments","description":"<p>disable the trackSegment</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#enableprogresssegments"},"enableRtl":{"name":"enableRtl","description":"<p>right to left</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#enablertl"},"endAngle":{"name":"endAngle","description":"<p>endAngle for circular progress bar</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#endangle"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#forceupdate"},"gapWidth":{"name":"gapWidth","description":"<p>gapwidth of the segment</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#gapwidth"},"height":{"name":"height","description":"<p>height of the progress bar</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#initrendercalled"},"innerRadius":{"name":"innerRadius","description":"<p>progress radius for circular</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#innerradius"},"isActive":{"name":"isActive","description":"<p>Active state</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isactive"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isdestroyed"},"isGradient":{"name":"isGradient","description":"<p>gradient</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isgradient"},"isIndeterminate":{"name":"isIndeterminate","description":"<p>Indeterminate progress</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isindeterminate"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isserverrendered"},"isStriped":{"name":"isStriped","description":"<p>striped</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isstriped"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#isvue"},"labelOnTrack":{"name":"labelOnTrack","description":"<p>labelOnTrack</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#labelontrack"},"labelStyle":{"name":"labelStyle","description":"<p>Option for customizing the  label text.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#labelstyle"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#locale"},"margin":{"name":"margin","description":"<p>margin size</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#margin"},"maximum":{"name":"maximum","description":"<p>maximum progress value</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#maximum"},"minimum":{"name":"minimum","description":"<p>minimum progress value</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#minimum"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#portals"},"progressAnnotationModule":{"name":"progressAnnotationModule","description":"<p>ProgressAnnotation module to use annotations</p>\n","type":"ProgressAnnotation","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#progressannotationmodule"},"progressColor":{"name":"progressColor","description":"<p>progressColor</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#progresscolor"},"progressThickness":{"name":"progressThickness","description":"<p>progress thickness</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#progressthickness"},"progressTooltipModule":{"name":"progressTooltipModule","description":"<p>ProgressTooltip module to use tooltip</p>\n","type":"ProgressTooltip","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#progresstooltipmodule"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#props"},"radius":{"name":"radius","description":"<p>track radius for circular</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#radius"},"rangeColors":{"name":"rangeColors","description":"<p>RangeColor in Progressbar.</p>\n","type":"RangeColorModel[]","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#rangecolors"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#refs"},"role":{"name":"role","description":"<p>modes of linear progress</p>\n","type":"ModeType","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#role"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#root"},"secondaryProgress":{"name":"secondaryProgress","description":"<p>secondary progress value</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#secondaryprogress"},"secondaryProgressColor":{"name":"secondaryProgressColor","description":"<p>Defines color for the secondary progress bar. By default, it takes the primary progress bar color with half of the opacity.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#secondaryprogresscolor"},"secondaryProgressThickness":{"name":"secondaryProgressThickness","description":"<p>Defines thickness for the secondary progress bar. By default, it takes the primary progress bar thickness.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#secondaryprogressthickness"},"segmentColor":{"name":"segmentColor","description":"<p>Segment color</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#segmentcolor"},"segmentCount":{"name":"segmentCount","description":"<p>segmentCount of the progress bar</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#segmentcount"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#setstate"},"showProgressValue":{"name":"showProgressValue","description":"<p>label of the progress bar</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#showprogressvalue"},"startAngle":{"name":"startAngle","description":"<p>startAngle for circular progress bar</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#startangle"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#state"},"theme":{"name":"theme","description":"<p>theme style</p>\n","type":"ProgressTheme","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#theme"},"tooltip":{"name":"tooltip","description":"<p>Options for customizing the tooltip of progressbar.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#tooltip"},"trackColor":{"name":"trackColor","description":"<p>trackColor</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#trackcolor"},"trackThickness":{"name":"trackThickness","description":"<p>track thickness</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#trackthickness"},"type":{"name":"type","description":"<p>type of the progress bar</p>\n","type":"ProgressType","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#type"},"value":{"name":"value","description":"<p>progress value</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#value"},"width":{"name":"width","description":"<p>width of the progress bar</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#attachunloadevent"},"calculateProgressRange":{"name":"calculateProgressRange","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#calculateprogressrange"},"calculateSegmentSize":{"name":"calculateSegmentSize","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#calculatesegmentsize"},"createClipPath":{"name":"createClipPath","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#createclippath"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#getmodulename"},"getPathLine":{"name":"getPathLine","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#getpathline"},"getPersistData":{"name":"getPersistData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#handleunload"},"hide":{"name":"hide","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#hide"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#removeeventlistener"},"removeSvg":{"name":"removeSvg","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#removesvg"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#serverdatabind"},"show":{"name":"show","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/#inject"}},"RangeColorDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorDirective#shouldcomponentupdate"}},"RangeColorsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progressbar/rangeColorsDirective#shouldcomponentupdate"}},"KanbanComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers on beginning of every Kanban action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers on successful completion of the Kanban actions.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when a Kanban action gets failed or interrupted and an error information will be returned.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actionfailure"},"cardClick":{"name":"cardClick","description":"<p>Triggers on single-clicking the Kanban cards.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardclick"},"cardDoubleClick":{"name":"cardDoubleClick","description":"<p>Triggers on double-clicking the Kanban cards.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#carddoubleclick"},"cardRendered":{"name":"cardRendered","description":"<p>Triggers before each card of the Kanban rendering on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardrendered"},"created":{"name":"created","description":"<p>Triggers after the kanban board is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#created"},"dataBinding":{"name":"dataBinding","description":"<p>Triggers before the data binds to the Kanban.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#databinding"},"dataBound":{"name":"dataBound","description":"<p>Triggers once the event data is bound to the Kanban.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#databound"},"dataSourceChanged":{"name":"dataSourceChanged","description":"<p>Triggers when the grid data is added, deleted and updated.\nInvoke the done method from the argument to start render after edit operation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasourcechanged"},"dataStateChange":{"name":"dataStateChange","description":"<p>Triggers when the grid actions such as Sorting, Paging, Grouping etc., are done.\nIn this event,the current view data and total record count should be assigned to the <code>dataSource</code> based on the action performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datastatechange"},"dialogClose":{"name":"dialogClose","description":"<p>Triggers before the dialog closes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogclose"},"dialogOpen":{"name":"dialogOpen","description":"<p>Triggers before the dialog opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogopen"},"drag":{"name":"drag","description":"<p>Triggers when the card is dragging to other stage or other swimlane.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#drag"},"dragStart":{"name":"dragStart","description":"<p>Triggers when the card drag actions starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dragstart"},"dragStop":{"name":"dragStop","description":"<p>Triggers when the card drag actions stops.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dragstop"},"queryCellInfo":{"name":"queryCellInfo","description":"<p>Triggers before each column of the Kanban rendering on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#querycellinfo"},"actionModule":{"name":"actionModule","description":"","type":"Action","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actionmodule"},"activeCardData":{"name":"activeCardData","description":"","type":"CardClickEventArgs","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#activecarddata"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Enables or disables the drag and drop actions in Kanban.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#allowdraganddrop"},"allowKeyboard":{"name":"allowKeyboard","description":"<p>When this property is set to true, it allows the keyboard interaction in Kanban.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#allowkeyboard"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#allowserverdatabinding"},"cardHeight":{"name":"cardHeight","description":"<p>Sets the <code>height</code> of the each card in the kanban.\nThe string type includes pixel.\nWhen <code>height</code> is set with specific pixel value, then the card will be rendered to that specified height.\nIn case, if <code>auto</code> value is set, then the height of the card gets auto-adjusted based on the content.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardheight"},"cardSettings":{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},"columnDataCount":{"name":"columnDataCount","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columndatacount"},"columns":{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},"constraintType":{"name":"constraintType","description":"<p>Defines the constraint type used to apply validation based on column or swimlane. The possible values are:</p>\n<ul>\n<li>Column</li>\n<li>Swimlane</li>\n</ul>\n","type":"ConstraintType","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#constrainttype"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#context"},"crudModule":{"name":"crudModule","description":"","type":"Crud","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#crudmodule"},"cssClass":{"name":"cssClass","description":"<p>It is used to customize the Kanban, which accepts custom CSS class names that defines specific user-defined\nstyles and themes to be applied on the Kanban element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#currentcontext"},"dataModule":{"name":"dataModule","description":"","type":"Data","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datamodule"},"dataSource":{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},"dialogModule":{"name":"dialogModule","description":"","type":"KanbanDialog","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogmodule"},"dialogSettings":{"name":"dialogSettings","description":"<p>Defines the dialog settings such as template and fields.</p>\n","type":"DialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogsettings"},"dragAndDropModule":{"name":"dragAndDropModule","description":"","type":"DragAndDrop","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#draganddropmodule"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Determine whether to prevent cross-site scripting code in Kanban data entry fields.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables the persisting Kanban board's state between page reloads.\nIf enabled, columns, dataSource properties will be persisted in kanban.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enablertl"},"enableTooltip":{"name":"enableTooltip","description":"<p>Enables or disables the tooltip in Kanban board. The property relates to the tooltipTemplate property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enabletooltip"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>When the enableVirtualization property is set to true in a Kanban,\nit will only render the cards that are currently visible within the viewport,\nand will load additional cards as the user scrolls vertically through the Kanban.\nThis can be helpful for improving the performance of the Kanban when working with large datasets,\nas it reduces the number of elements that need to be rendered and managed by the browser at any given time.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enablevirtualization"},"externalDropId":{"name":"externalDropId","description":"<p>Defines the ID of drop Kanban on which drop should occur.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#externaldropid"},"externalDropObj":{"name":"externalDropObj","description":"","type":"Kanban","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#externaldropobj"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#forceupdate"},"height":{"name":"height","description":"<p>Sets the <code>height</code> of the Kanban board, accepting both string and number values.\nThe string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Kanban will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Kanban gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#initrendercalled"},"isAdaptive":{"name":"isAdaptive","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isadaptive"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isdestroyed"},"isExternalKanbanDrop":{"name":"isExternalKanbanDrop","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isexternalkanbandrop"},"isInitialRender":{"name":"isInitialRender","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isinitialrender"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#isvue"},"kanbanData":{"name":"kanbanData","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#kanbandata"},"keyField":{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},"keyboardModule":{"name":"keyboardModule","description":"","type":"Keyboard","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyboardmodule"},"layoutModule":{"name":"layoutModule","description":"","type":"LayoutRender","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#layoutmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#locale"},"localeObj":{"name":"localeObj","description":"","type":"L10n","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#localeobj"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#props"},"query":{"name":"query","description":"<p>Defines the external <a href=\"http://ej2.syncfusion.com/documentation/data/api-query.html\"><code>query</code></a>\nthat will be executed along with the data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#query"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#root"},"scrollPosition":{"name":"scrollPosition","description":"","type":"ScrollPosition","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#scrollposition"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#setstate"},"showEmptyColumn":{"name":"showEmptyColumn","description":"<p>Enable or disable the columns when empty dataSource.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#showemptycolumn"},"sortSettings":{"name":"sortSettings","description":"<p>Defines the sort settings such as field and direction.</p>\n","type":"SortSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#sortsettings"},"stackedHeaders":{"name":"stackedHeaders","description":"<p>Defines the stacked header for Kanban columns with text and key fields.</p>\n","type":"StackedHeadersModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#stackedheaders"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#state"},"swimlaneSettings":{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"},"swimlaneToggleArray":{"name":"swimlaneToggleArray","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanetogglearray"},"tooltipModule":{"name":"tooltipModule","description":"","type":"KanbanTooltip","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#tooltipmodule"},"tooltipTemplate":{"name":"tooltipTemplate","description":"<p>Defines the template content to card’s tooltip. The property works by enabling the ‘enableTooltip’ property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#tooltiptemplate"},"touchModule":{"name":"touchModule","description":"","type":"KanbanTouch","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#touchmodule"},"virtualLayoutModule":{"name":"virtualLayoutModule","description":"","type":"VirtualLayoutRender","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#virtuallayoutmodule"},"width":{"name":"width","description":"<p>Sets the <code>width</code> of the Kanban board, accepting both string and number values.\nThe string value can be either pixel or percentage format.\nWhen set to <code>auto</code>, the Kanban width gets auto-adjusted and display its content related to the viewable screen size.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#width"},"addCard":{"name":"addCard","description":"<p>Adds the new card to the data source of Kanban and layout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#addcard"},"addColumn":{"name":"addColumn","description":"<p>Add the column to Kanban board dynamically based on the provided column options and index in the argument list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#addcolumn"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#attachunloadevent"},"closeDialog":{"name":"closeDialog","description":"<p>To manually close the dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#closedialog"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#databind"},"deleteCard":{"name":"deleteCard","description":"<p>Deletes the card based on the provided ID or card collection in the argument list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#deletecard"},"deleteColumn":{"name":"deleteColumn","description":"<p>Deletes the column based on the provided index value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#deletecolumn"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#detachunloadevent"},"getCardDetails":{"name":"getCardDetails","description":"<p>Returns the card details based on card ID from the board.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getcarddetails"},"getColumnData":{"name":"getColumnData","description":"<p>Returns the column data based on column key input.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getcolumndata"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getrootelement"},"getSelectedCards":{"name":"getSelectedCards","description":"<p>Gets the list of selected cards from the board.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getselectedcards"},"getSwimlaneData":{"name":"getSwimlaneData","description":"<p>Returns the swimlane column data based on swimlane keyField input.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#getswimlanedata"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#handleunload"},"hideColumn":{"name":"hideColumn","description":"<p>Hides the column from Kanban board based on the provided key in the columns.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#hidecolumn"},"hideSpinner":{"name":"hideSpinner","description":"<p>When the spinner is shown manually using the showSpinner method, it can be hidden using this <code>hideSpinner</code> method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#hidespinner"},"openDialog":{"name":"openDialog","description":"<p>To manually open the dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#opendialog"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#refresh"},"refreshHeader":{"name":"refreshHeader","description":"<p>Method to refresh the column header.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#refreshheader"},"refreshUI":{"name":"refreshUI","description":"<p>Method to refresh the Kanban UI based on modified records.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#refreshui"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#render"},"renderTemplates":{"name":"renderTemplates","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#rendertemplates"},"resetTemplates":{"name":"resetTemplates","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#resettemplates"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#serverdatabind"},"showColumn":{"name":"showColumn","description":"<p>Shows the column from hidden based on the provided key in the columns.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#showcolumn"},"showSpinner":{"name":"showSpinner","description":"<p>Allows you to show the spinner on Kanban at the required scenarios.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#showspinner"},"templateParser":{"name":"templateParser","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#templateparser"},"updateCard":{"name":"updateCard","description":"<p>Updates the changes made in the card object by passing it as a parameter to the data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#updatecard"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#inject"}},"StackedHeaderDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeaderDirective#shouldcomponentupdate"}},"StackedHeadersDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/kanban/stackedHeadersDirective#shouldcomponentupdate"}},"ColorMappingDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingDirective#shouldcomponentupdate"}},"ColorMappingsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/colorMappingsDirective#shouldcomponentupdate"}},"LevelDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelDirective#shouldcomponentupdate"}},"LevelsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/levelsDirective#shouldcomponentupdate"}},"TreeMapComponent":{"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#beforeprint"},"click":{"name":"click","description":"<p>Triggers after clicking on the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#click"},"doubleClick":{"name":"doubleClick","description":"<p>Triggers after double clicking on the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#doubleclick"},"drillEnd":{"name":"drillEnd","description":"<p>Triggers after drill down functionality gets completed in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#drillend"},"drillStart":{"name":"drillStart","description":"<p>Triggers on performing drill down functionality in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#drillstart"},"itemClick":{"name":"itemClick","description":"<p>Triggers after clicking an item in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#itemclick"},"itemHighlight":{"name":"itemHighlight","description":"<p>Triggers after highlighting on the treemap item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#itemhighlight"},"itemMove":{"name":"itemMove","description":"<p>Triggers after mouse hover on the treemap item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#itemmove"},"itemRendering":{"name":"itemRendering","description":"<p>Triggers before item rendering in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#itemrendering"},"itemSelected":{"name":"itemSelected","description":"<p>Triggers after selecting a treemap item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#itemselected"},"legendItemRendering":{"name":"legendItemRendering","description":"<p>Triggers before rendering each legend item in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#legenditemrendering"},"legendRendering":{"name":"legendRendering","description":"<p>Triggers before rendering the legend items in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#legendrendering"},"load":{"name":"load","description":"<p>Triggers before the treemap is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after treemap is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#loaded"},"mouseMove":{"name":"mouseMove","description":"<p>Triggers after mouse hover on the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#mousemove"},"resize":{"name":"resize","description":"<p>Triggers to notify the resize of the treemap when the window is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#resize"},"rightClick":{"name":"rightClick","description":"<p>Triggers after right clicking on the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#rightclick"},"tooltipRendering":{"name":"tooltipRendering","description":"<p>Triggers on rendering of the tooltip in the treemap.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#tooltiprendering"},"allowImageExport":{"name":"allowImageExport","description":"<p>Enables and disables the export to image functionality in treemap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#allowimageexport"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Enables and disables the export to pdf functionality in treemap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#allowpdfexport"},"allowPrint":{"name":"allowPrint","description":"<p>Enables and disables the print functionality in treemap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#allowprint"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#allowserverdatabinding"},"background":{"name":"background","description":"<p>Sets and gets the background color of the treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#background"},"border":{"name":"border","description":"<p>Sets and gets the options for customizing the color and width of the treemap border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#border"},"breadcrumbConnector":{"name":"breadcrumbConnector","description":"<p>Specifies the symbol to show connection between the two words in the header of the treemap during drill down.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#breadcrumbconnector"},"colorValuePath":{"name":"colorValuePath","description":"<p>Sets and gets the value path from the data source, based on it color is filled in treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#colorvaluepath"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Sets and gets the data source for the treemap.</p>\n","type":"DataManager|TreeMapAjax|Object[]","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#datasource"},"description":{"name":"description","description":"<p>Sets and gets the description for treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#description"},"drillDownView":{"name":"drillDownView","description":"<p>Enables or disables the initial drill in the treemap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#drilldownview"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#element"},"enableBreadcrumb":{"name":"enableBreadcrumb","description":"<p>Enables or disables the connection text in the header of the treemap when drill down is enabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#enablebreadcrumb"},"enableDrillDown":{"name":"enableDrillDown","description":"<p>Enables or disables the drill down functionality in treemap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#enabledrilldown"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the TreeMap. If <code>enableHtmlSanitizer</code> set to <strong>true</strong>, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#enablertl"},"equalColorValuePath":{"name":"equalColorValuePath","description":"<p>Sets and gets the value path from the data source, based on it color is filled in treemap.\nThis property is used when equal color mapping is set in the treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#equalcolorvaluepath"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#forceupdate"},"format":{"name":"format","description":"<p>Sets and gets format for the texts in the treemap. This property accepts any global string format like 'C', 'N1', 'P' etc.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#format"},"height":{"name":"height","description":"<p>Sets and gets the height of the treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#height"},"highlightSettings":{"name":"highlightSettings","description":"<p>Sets and gets the options to customize the highlight functionality of the treemap.</p>\n","type":"HighlightSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#highlightsettings"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#initrendercalled"},"initialDrillDown":{"name":"initialDrillDown","description":"<p>Specifies the options for customizing the initial drill down in treemap.</p>\n","type":"InitialDrillSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#initialdrilldown"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#isvue"},"layoutType":{"name":"layoutType","description":"<p>Specifies the rendering type for the layout of the treemap.</p>\n","type":"LayoutMode","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#layouttype"},"leafItemSettings":{"name":"leafItemSettings","description":"<p>Sets and gets the options for customizing the leaf item of the treemap.</p>\n","type":"LeafItemSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#leafitemsettings"},"legendSettings":{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the treemap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#legendsettings"},"levels":{"name":"levels","description":"<p>Sets and gets the options to configure and customize the levels of treemap items.</p>\n","type":"LevelSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#levels"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#locale"},"margin":{"name":"margin","description":"<p>Sets and gets the options for customizing the margin in the treemap.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#margin"},"palette":{"name":"palette","description":"<p>Sets and gets a set of colors to apply in the treemap items.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#palette"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#props"},"query":{"name":"query","description":"<p>Sets and gets the query to select particular data from the shape data.\nThis property is applicable only when the data source is created by data manager.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#query"},"rangeColorValuePath":{"name":"rangeColorValuePath","description":"<p>Sets and gets the value path from the data source, based on it color is filled in treemap.\nThis property is used when range color mapping is set in the treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#rangecolorvaluepath"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#refs"},"renderDirection":{"name":"renderDirection","description":"<p>Specifies the rendering direction of layout of the treemap items.</p>\n","type":"RenderingMode","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#renderdirection"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#root"},"selectionSettings":{"name":"selectionSettings","description":"<p>Sets and gets the options for customizing the selection functionality of the treemap.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#state"},"tabIndex":{"name":"tabIndex","description":"<p>Sets and gets the tab index value for treemap.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#tabindex"},"theme":{"name":"theme","description":"<p>Sets and gets the theme styles supported for treemap. When the theme is set, the styles associated with the theme will be set in the treemap.</p>\n","type":"TreeMapTheme","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#theme"},"titleSettings":{"name":"titleSettings","description":"<p>Sets and gets the options for customizing the title of the treemap.</p>\n","type":"TitleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#titlesettings"},"tooltipSettings":{"name":"tooltipSettings","description":"<p>Sets and gets the options for customizing the tooltip of the treemap.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#tooltipsettings"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Enables or disables the visibility state of the separator for grouping.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#usegroupingseparator"},"weightValuePath":{"name":"weightValuePath","description":"<p>Sets and gets the value path of the weight from the data source, based on which the treemap item is rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#weightvaluepath"},"width":{"name":"width","description":"<p>Sets and gets the width of the treemap.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#databind"},"destroy":{"name":"destroy","description":"<p>This method destroys the treemap. This method removes the events associated with the treemap and disposes the objects created for rendering and updating the treemap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#detachunloadevent"},"doubleClickOnTreeMap":{"name":"doubleClickOnTreeMap","description":"<p>This method handles the double click event in the treemap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#doubleclickontreemap"},"export":{"name":"export","description":"<p>This method is used to perform the export functionality for the rendered treemap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#handleunload"},"print":{"name":"print","description":"<p>This method is used to perform the print functionality in treemap.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#render"},"selectItem":{"name":"selectItem","description":"<p>This method is used to select or remove the selection of treemap item based on the provided selection settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#selectitem"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treemap/#inject"}},"ButtonsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/buttonsDirective#shouldcomponentupdate"}},"DialogButtonDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/dialogButtonDirective#shouldcomponentupdate"}},"DialogComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Event triggers before the dialog is closed.\nIf you cancel this event, the dialog remains opened.\nSet the cancel argument to true to cancel the closure of a dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#beforeclose"},"beforeOpen":{"name":"beforeOpen","description":"<p>Event triggers when the dialog is being opened.\nIf you cancel this event, the dialog remains closed.\nSet the cancel argument to true to cancel the open of a dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#beforeopen"},"beforeSanitizeHtml":{"name":"beforeSanitizeHtml","description":"<p>Event triggers before sanitize the value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#beforesanitizehtml"},"close":{"name":"close","description":"<p>Event triggers after the dialog has been closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#close"},"created":{"name":"created","description":"<p>Event triggers when the dialog is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#created"},"destroyed":{"name":"destroyed","description":"<p>Event triggers when the dialog is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#destroyed"},"drag":{"name":"drag","description":"<p>Event triggers when the user drags the dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#drag"},"dragStart":{"name":"dragStart","description":"<p>Event triggers when the user begins dragging the dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#dragstart"},"dragStop":{"name":"dragStop","description":"<p>Event triggers when the user stop dragging the dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#dragstop"},"open":{"name":"open","description":"<p>Event triggers when a dialog is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#open"},"overlayClick":{"name":"overlayClick","description":"<p>Event triggers when the overlay of dialog is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#overlayclick"},"resizeStart":{"name":"resizeStart","description":"<p>Event triggers when the user begins to resize a dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Event triggers when the user stop to resize a dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#resizestop"},"resizing":{"name":"resizing","description":"<p>Event triggers when the user resize the dialog.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#resizing"},"allowDragging":{"name":"allowDragging","description":"<p>Specifies the value whether the dialog component can be dragged by the end-user.\nThe dialog allows to drag by selecting the header and dragging it for re-position the dialog.</p>\n<blockquote>\n<p>More information on the draggable behavior can be found on this <a href=\"../../dialog/getting-started/#draggable\">documentation</a> section.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#allowdragging"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings of the dialog component.\nThe animation effect can be applied on open and close the dialog with duration and delay.</p>\n<blockquote>\n<p>More information on the animation settings in dialog can be found on this <a href=\"../../dialog/animation/\">documentation</a>  section.</p>\n</blockquote>\n","type":"AnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#animationsettings"},"buttons":{"name":"buttons","description":"<p>Configures the action <code>buttons</code> that contains button properties with primary attributes and click events.\nOne or more action buttons can be configured to the dialog.</p>\n<blockquote>\n<p>More information on the button configuration can be found on this\n<a href=\"../../dialog/getting-started/#enable-footer\">documentation</a> section.</p>\n</blockquote>\n","type":"ButtonPropsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#buttons"},"closeOnEscape":{"name":"closeOnEscape","description":"<p>Specifies the boolean value whether the dialog can be closed with the escape key\nthat is used to control the dialog's closing behavior.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#closeonescape"},"content":{"name":"content","description":"<p>Specifies the value that can be displayed in dialog's content area.\nIt can be information, list, or other HTML elements.\nThe content of dialog can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class name that can be appended with root element of the dialog.\nOne or more custom CSS classes can be added to a dialog.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables the persistence of the dialog's dimensions and position state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#enablepersistence"},"enableResize":{"name":"enableResize","description":"<p>Specifies the value whether the dialog component can be resized by the end-user.\nIf enableResize is true, the dialog component creates grip to resize it diagonal direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#enableresize"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#enablertl"},"footerTemplate":{"name":"footerTemplate","description":"<p>Specifies the template value that can be displayed with dialog's footer area.\nThis is optional property and can be used only when the footer is occupied with information or custom components.\nBy default, the footer is configured with action <a href=\"#buttons\">buttons</a>.\nIf footer template is configured to dialog, the action buttons property will be disabled.</p>\n<blockquote>\n<p>More information on the footer template configuration can be found on this <a href=\"../../dialog/template/#footer\">documentation</a> section.</p>\n</blockquote>\n","type":"HTMLElement|string|Function","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#forceupdate"},"header":{"name":"header","description":"<p>Specifies the value that can be displayed in the dialog's title area that can be configured with plain text or HTML elements.\nThis is optional property and the dialog can be displayed without header, if the header property is null.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#header"},"height":{"name":"height","description":"<p>Specifies the height of the dialog component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isdestroyed"},"isModal":{"name":"isModal","description":"<p>Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.</p>\n<ul>\n<li><code>Modal</code>: It creates overlay that disable interaction with the parent application and user should\nrespond with modal before continuing with other applications.</li>\n<li><code>Modeless</code>: It does not prevent user interaction with parent application.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#ismodal"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#locale"},"minHeight":{"name":"minHeight","description":"<p>Specify the min-height of the dialog component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#minheight"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#portals"},"position":{"name":"position","description":"<p>Specifies the value where the dialog can be positioned within the document or target.\nThe position can be represented with pre-configured positions or specific X and Y values.</p>\n<ul>\n<li><code>X value</code>: left, center, right, or offset value.</li>\n<li><code>Y value</code>: top, center, bottom, or offset value.</li>\n</ul>\n<blockquote>\n<p>More information on the positioning in dialog can be found on this <a href=\"../../dialog/getting-started/#positioning\">documentation</a>  section.</p>\n</blockquote>\n","type":"PositionDataModel","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#refs"},"resizeHandles":{"name":"resizeHandles","description":"<p>Specifies the resize handles direction in the dialog component that can be resized by the end-user.</p>\n","type":"ResizeDirections[]","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#resizehandles"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#setstate"},"showCloseIcon":{"name":"showCloseIcon","description":"<p>Specifies the value that represents whether the close icon is shown in the dialog component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#showcloseicon"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#state"},"target":{"name":"target","description":"<p>Specifies the target element in which to display the dialog.\nThe default value is null, which refers the <code>document.body</code> element.</p>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#target"},"visible":{"name":"visible","description":"<p>Specifies the value that represents whether the dialog component is visible.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#visible"},"width":{"name":"width","description":"<p>Specifies the width of the dialog.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#width"},"zIndex":{"name":"zIndex","description":"<p>Specifies the z-order for rendering that determines whether the dialog is displayed in front or behind of another component.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#detachunloadevent"},"getButtons":{"name":"getButtons","description":"<p>Returns the dialog button instances.\nBased on that, you can dynamically change the button states.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#getbuttons"},"getDimension":{"name":"getDimension","description":"<p>Returns the current width and height of the Dialog</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#getdimension"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#handleunload"},"hide":{"name":"hide","description":"<p>Closes the dialog if it is in visible state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#refresh"},"refreshPosition":{"name":"refreshPosition","description":"<p>Refreshes the dialog's position when the user changes its header and footer height/width dynamically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#refreshposition"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#render"},"sanitizeHelper":{"name":"sanitizeHelper","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#sanitizehelper"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#serverdatabind"},"show":{"name":"show","description":"<p>Opens the dialog if it is in hidden state.\nTo open the dialog with full screen width, set the parameter to true.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dialog/#inject"}},"TooltipComponent":{"afterClose":{"name":"afterClose","description":"<p>We can trigger <code>afterClose</code> event when the Tooltip Component gets closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#afterclose"},"afterOpen":{"name":"afterOpen","description":"<p>We can trigger <code>afterOpen</code> event after the Tooltip Component gets opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#afteropen"},"beforeClose":{"name":"beforeClose","description":"<p>We can trigger <code>beforeClose</code> event before the Tooltip hides from the screen. If returned false, then the Tooltip is no more hidden.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforeclose"},"beforeCollision":{"name":"beforeCollision","description":"<p>We can trigger <code>beforeCollision</code> event for every collision fit calculation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforecollision"},"beforeOpen":{"name":"beforeOpen","description":"<p>We can trigger <code>beforeOpen</code> event before the Tooltip is displayed over the target element.\nWhen one of its arguments <code>cancel</code> is set to true, the Tooltip display can be prevented.\nThis event is mainly used for the purpose of refreshing the Tooltip positions dynamically or to\nset customized styles in it and so on.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforeopen"},"beforeRender":{"name":"beforeRender","description":"<p>We can trigger <code>beforeRender</code> event before the Tooltip and its contents are added to the DOM.\nWhen one of its arguments <code>cancel</code> is set to true, the Tooltip can be prevented from rendering on the page.\nThis event is mainly used for the purpose of customizing the Tooltip before it shows up on the screen.\nFor example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.\nRefer the documentation\n<a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/#dynamic-content-via-ajax\">here</a>\nto know more about this property with demo.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforerender"},"created":{"name":"created","description":"<p>We can trigger <code>created</code> event after the Tooltip component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#created"},"destroyed":{"name":"destroyed","description":"<p>We can trigger <code>destroyed</code> event when the Tooltip component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#destroyed"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>We can set the same or different animation option to Tooltip while it is in open or close state.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/animation/\">here</a>\nto know more about this property with demo.</p>\n","type":"AnimationModel","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#animation"},"closeDelay":{"name":"closeDelay","description":"<p>It is used to close the Tooltip after a specified delay in milliseconds.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#closedelay"},"container":{"name":"container","description":"<p>It is used to set the container element in which the Tooltip’s pop-up will be appended. It accepts value as both string and HTML Element.\nIt's default value is <code>body</code>, in which the Tooltip’s pop-up will be appended.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#container"},"content":{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#context"},"cssClass":{"name":"cssClass","description":"<p>It is used to customize the Tooltip which accepts custom CSS class names that\ndefines specific user-defined styles and themes to be applied on the Tooltip element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#element"},"enableHtmlParse":{"name":"enableHtmlParse","description":"<p>It enables or disables the parsing of HTML string content into HTML DOM elements for Tooltip.\nIf the value of the property is set to false, the tooltip content will be displayed as HTML string instead of HTML DOM elements.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#enablehtmlparse"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Tooltip component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#forceupdate"},"height":{"name":"height","description":"<p>It is used to set the height of Tooltip component which accepts both string and number values.\nWhen Tooltip content gets overflow due to height value then the scroll mode will be enabled.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/setting-dimension/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#height"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as tabindex, title, name, etc. to root element of the Tooltip popup, and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isserverrendered"},"isSticky":{"name":"isSticky","description":"<p>It is used to display the Tooltip in an open state until closed by manually.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/open-mode/#sticky-mode\">here</a>\nto know more about this property with demo.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#issticky"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#locale"},"mouseTrail":{"name":"mouseTrail","description":"<p>It allows the Tooltip to follow the mouse pointer movement over the specified target element.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/position/#mouse-trailing\">here</a>\nto know more about this property with demo.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#mousetrail"},"offsetX":{"name":"offsetX","description":"<p>It sets the space between the target and Tooltip element in X axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#offsetx"},"offsetY":{"name":"offsetY","description":"<p>It sets the space between the target and Tooltip element in Y axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#offsety"},"openDelay":{"name":"openDelay","description":"<p>It is used to open the Tooltip after the specified delay in milliseconds.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#opendelay"},"opensOn":{"name":"opensOn","description":"<p>It is used to determine the device mode to display the Tooltip content.\nIf it is in desktop, it will show the Tooltip content when hovering on the target element.\nIf it is in touch device, it will show the Tooltip content when tap and holding on the target element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#openson"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#portals"},"position":{"name":"position","description":"<p>It is used to set the position of Tooltip element, with respect to Target element.</p>\n","type":"Position","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#setstate"},"showTipPointer":{"name":"showTipPointer","description":"<p>It is used to show or hide the tip pointer of Tooltip.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#showtippointer"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#state"},"target":{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},"tipPointerPosition":{"name":"tipPointerPosition","description":"<p>It is used to set the position of tip pointer on tooltip.\nWhen it sets to auto, the tip pointer auto adjusts within the space of target's length\nand does not point outside.\nRefer the documentation\n<a href=\"https://ej2.syncfusion.com/documentation/tooltip/position.html?lang=typescript#tip-pointer-positioning\">here</a>\nto know more about this property with demo.</p>\n","type":"TipPointerPosition","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#tippointerposition"},"width":{"name":"width","description":"<p>It is used to set the width of Tooltip component which accepts both string and number values.\nWhen set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#width"},"windowCollision":{"name":"windowCollision","description":"<p>It is used to set the collision target element as page viewport (window) or Tooltip element, when using the target.\nIf this property is enabled, tooltip will perform the collision calculation between the target elements\nand viewport(window) instead of Tooltip element.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#windowcollision"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#attachunloadevent"},"close":{"name":"close","description":"<p>It is used to hide the Tooltip with specific animation effect.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#close"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#databind"},"destroy":{"name":"destroy","description":"<p>It is used to destroy the Tooltip component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#handleunload"},"open":{"name":"open","description":"<p>It is used to show the Tooltip on the specified target with specific animation settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#open"},"refresh":{"name":"refresh","description":"<p>It is used to refresh the Tooltip content and its position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#inject"}},"PivotFieldListComponent":{"actionBegin":{"name":"actionBegin","description":"<p>It triggers when UI action begins in the Pivot FieldList. The UI actions used to trigger this event such as\nsorting fields through icon click in the field list tree,\n<a href=\"../../pivotview/field-list/#calculated-fields\"><code>Calculated field</code></a> UI,\nButton actions such as\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/field-list/#sorting-members\"><code>sorting</code></a>,\n<a href=\"../../pivotview/field-list/#filtering-members\"><code>filtering</code></a> and\n<a href=\"pivotview/field-list/#changing-aggregation-type-of-value-fields-at-runtime\"><code>aggregation</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>It triggers when UI action in the Pivot FieldList completed. The UI actions used to trigger this event such as\nsorting fields through icon click in the field list tree,\n<a href=\"../../pivotview/field-list/#calculated-fields\"><code>Calculated field</code></a> UI,\nButton actions such as\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/field-list/#sorting-members\"><code>sorting</code></a>,\n<a href=\"../../pivotview/field-list/#filtering-members\"><code>filtering</code></a> and\n<a href=\"pivotview/field-list/#changing-aggregation-type-of-value-fields-at-runtime\"><code>aggregation</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>It triggers when UI action failed to achieve the desired results in the Pivot FieldList. The UI actions used to trigger this event such as\nsorting fields through icon click in the field list tree,\n<a href=\"../../pivotview/field-list/#calculated-fields\"><code>Calculated field</code></a> UI,\nButton actions such as\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/field-list/#sorting-members\"><code>sorting</code></a>,\n<a href=\"../../pivotview/field-list/#filtering-members\"><code>filtering</code></a> and\n<a href=\"pivotview/field-list/#changing-aggregation-type-of-value-fields-at-runtime\"><code>aggregation</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#actionfailure"},"afterServiceInvoke":{"name":"afterServiceInvoke","description":"<p>It triggers after the response is returned from the service.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#afterserviceinvoke"},"aggregateCellInfo":{"name":"aggregateCellInfo","description":"<p>It allows to change the each cell value during engine populating.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#aggregatecellinfo"},"aggregateMenuOpen":{"name":"aggregateMenuOpen","description":"<p>It triggers before aggregate type context menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#aggregatemenuopen"},"beforeServiceInvoke":{"name":"beforeServiceInvoke","description":"<p>It triggers before service get invoked from client.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#beforeserviceinvoke"},"calculatedFieldCreate":{"name":"calculatedFieldCreate","description":"<p>It triggers before a calculated field created/edited during runtime.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#calculatedfieldcreate"},"created":{"name":"created","description":"<p>It trigger when the Pivot Field List component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#created"},"dataBound":{"name":"dataBound","description":"<p>It trigger when the Pivot Field List rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#databound"},"destroyed":{"name":"destroyed","description":"<p>It trigger when the Pivot Field List component getting destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#destroyed"},"enginePopulated":{"name":"enginePopulated","description":"<p>It triggers after the pivot engine populated and allows to customize the pivot datasource settings.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enginepopulated"},"enginePopulating":{"name":"enginePopulating","description":"<p>It triggers before the pivot engine starts to populate and allows to customize the pivot datasource settings.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enginepopulating"},"fieldDragStart":{"name":"fieldDragStart","description":"<p>It trigger when a field drag (move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#fielddragstart"},"fieldDrop":{"name":"fieldDrop","description":"<p>It triggers before a field drops into any axis.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#fielddrop"},"fieldRemove":{"name":"fieldRemove","description":"<p>It triggers before removing the field from any axis during runtime.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#fieldremove"},"load":{"name":"load","description":"<p>It allows any customization of Pivot Field List properties on initial rendering.\nBased on the changes, the pivot field list will be rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#load"},"memberEditorOpen":{"name":"memberEditorOpen","description":"<p>It triggers before member editor dialog opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#membereditoropen"},"memberFiltering":{"name":"memberFiltering","description":"<p>It triggers before the filtering applied.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#memberfiltering"},"onFieldDropped":{"name":"onFieldDropped","description":"<p>It trigger when a field getting dropped into any axis.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#onfielddropped"},"onHeadersSort":{"name":"onHeadersSort","description":"<p>It triggers before the sorting performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#onheaderssort"},"aggregateTypes":{"name":"aggregateTypes","description":"<p>Allows you to show a menu with built-in aggregate options displayed in the pivot button's dropdown icon of fieldList UI.\nThese aggregate options help to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… easily at runtime.\nThe available aggregate options are:</p>\n<ul>\n<li><code>Sum</code>: Allows to display the pivot table values with sum.</li>\n<li><code>Product</code>: Allows to display the pivot table values with product.</li>\n<li><code>Count</code>: Allows to display the pivot table values with count.</li>\n<li><code>DistinctCount</code>: Allows to display the pivot table values with distinct count.</li>\n<li><code>Min</code>: Allows to display the pivot table with minimum value.</li>\n<li><code>Max</code>: Allows to display the pivot table with maximum value.</li>\n<li><code>Avg</code>: Allows to display the pivot table values with average.</li>\n<li><code>Median</code>: Allows to display the pivot table values with median.</li>\n<li><code>Index</code>: Allows to display the pivot table values with index.</li>\n<li><code>PopulationStDev</code>: Allows to display the pivot table values with population standard deviation.</li>\n<li><code>SampleStDev</code>: Allows to display the pivot table values with sample standard deviation.</li>\n<li><code>PopulationVar</code>: Allows to display the pivot table values with population variance.</li>\n<li><code>SampleVar</code>: Allows to display the pivot table values with sample variance.</li>\n<li><code>RunningTotals</code>: Allows to display the pivot table values with running totals.</li>\n<li><code>DifferenceFrom</code>: Allows to display the pivot table values with difference from the value of the base item in the base field.</li>\n<li><code>PercentageOfDifferenceFrom</code>: Allows to display the pivot table values with percentage difference from the value of the base item in the base field.</li>\n<li><code>PercentageOfGrandTotal</code>: Allows to display the pivot table values with percentage of grand total of all values.</li>\n<li><code>PercentageOfColumnTotal</code>: Allows to display the pivot table values in each column with percentage of total values for the column.</li>\n<li><code>PercentageOfRowTotal</code>: Allows to display the pivot table values in each row with percentage of total values for the row.</li>\n<li><code>PercentageOfParentTotal</code>: Allows to display the pivot table values with percentage of total of all values based on selected field.</li>\n<li><code>PercentageOfParentColumnTotal</code>: Allows to display the pivot table values with percentage of its parent total in each column.</li>\n<li><code>PercentageOfParentRowTotal</code>: Allows to display the pivot table values with percentage of its parent total in each row.</li>\n</ul>\n<blockquote>\n<p>It is applicable only for Relational data.</p>\n</blockquote>\n","type":"AggregateTypes[]","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#aggregatetypes"},"allowCalculatedField":{"name":"allowCalculatedField","description":"<p>Allows the built-in calculated field dialog to be displayed in the component.\nYou can view the calculated field dialog by clicking the &quot;Calculated Field&quot; button in the field list UI.\nThis dialog will helps you to create a new calculated field in the pivot table, based on available fields from the bound data source or using simple formula with basic arithmetic operators at runtime.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#allowcalculatedfield"},"allowDeferLayoutUpdate":{"name":"allowDeferLayoutUpdate","description":"<p>Allows the pivot table component to be updated only on demand, meaning,\nyou can perform a variety of operations such as drag-and-drop fields between row, column, value and filter axes,\napply sorting and filtering inside the Field List, resulting the field list UI would be updated on its own, but not the pivot table.\nOn clicking the “Apply” button in the Field List, the pivot table will updates the last modified report.\nThis helps to improve the performance of the pivot table component rendering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#allowdeferlayoutupdate"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#context"},"cssClass":{"name":"cssClass","description":"<p>Allows you to add the CSS class name to the field list element.\nUse this class name, you can customize the field list easily at your end.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#currentcontext"},"dataSourceSettings":{"name":"dataSourceSettings","description":"<p>Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.</p>\n<ul>\n<li><code>catalog</code>: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>cube</code>: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>providerType</code>: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>url</code>: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>localeIdentifier</code>: Allows you to set the specific culture code as number type to render pivot table with desired localization.\nBy default, the pivot table displays with culture code <strong>1033</strong>, which indicates &quot;en-US&quot; locale. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>dataSource</code>: Allows you to set the data source to the pivot report either as JSON data collection or from remote data server using DataManager to the render the pivot that and field list. <strong>Note: It is applicable only for relational data source.</strong></li>\n<li><code>rows</code>: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.</li>\n<li><code>columns</code>: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.</li>\n<li><code>values</code>: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.</li>\n<li><code>filters</code>: Allows to filter the values in other axis based on the collection of filter fields in pivot table.</li>\n<li><code>excludeFields</code>: Allows you to restrict the specific field(s) from displaying it in the field list UI.\nYou may also be unable to render the pivot table with this field(s) by doing so. <strong>Note: It is applicable only for relational data source.</strong></li>\n<li><code>expandAll</code>: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\nBy default, all the headers are collapsed in the pivot table. <strong>Note: It is applicable only for Relational data.</strong></li>\n<li><code>valueAxis</code>: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.</li>\n<li><code>filterSettings</code>: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.</li>\n<li><code>sortSettings</code>: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\nBy default, the data source containing fields are display with Ascending order alone. To use this option, it requires the <code>enableSorting</code> property to be <strong>true</strong>.</li>\n<li><code>enableSorting</code>: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.</li>\n<li><code>formatSettings</code>: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\nFor example, to display a specific field with currency formatted values in the pivot table, the set the <code>format</code> property to be <strong>C</strong>.</li>\n<li><code>drilledMembers</code>: Allows specific fields to with specify the headers that used to be either expanded or collapsed in the pivot table.</li>\n<li><code>valueSortSettings</code>: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.</li>\n<li><code>calculatedFieldSettings</code>: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.</li>\n<li><code>allowMemberFilter</code>: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.</li>\n<li><code>allowLabelFilter</code>: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.</li>\n<li><code>allowValueFilter</code>: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.</li>\n<li><code>showSubTotals</code>: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.</li>\n<li><code>showRowSubTotals</code>: Allows to show or hide sub-totals in row axis of the pivot table.</li>\n<li><code>showColumnSubTotals</code>: Allows to show or hide sub-totals in column axis of the pivot table.</li>\n<li><code>showGrandTotals</code>: Allows to show or hide grand totals in both rows and columns axis of the pivot table.</li>\n<li><code>showRowGrandTotals</code>: Allows to show or hide grand totals in row axis of the pivot table.</li>\n<li><code>showColumnGrandTotals</code>: Allows to show or hide grand totals in column axis of the pivot table.</li>\n<li><code>showHeaderWhenEmpty</code>: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\nFor example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom &gt;&gt; Undefined” in the header section.</li>\n<li><code>alwaysShowValueHeader</code>: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.</li>\n<li><code>conditionalFormatSettings</code>: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.</li>\n<li><code>emptyCellsTextContent</code>: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.</li>\n<li><code>groupSettings</code>: Allows specific fields to group their data on the basis of their type.\nFor example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\nYou can perform custom group to the string type fields that used to displayed in the pivot table.</li>\n<li><code>authentication</code>: Allows you to set the credential information to access the specified SSAS cube. Note: It is applicable only for OLAP data source.</li>\n</ul>\n","type":"DataSourceSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#datasourcesettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#element"},"enableFieldSearching":{"name":"enableFieldSearching","description":"<p>It enables the search option in the field list UI, which can be used to search specific fields at runtime.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enablefieldsearching"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Allows to restrict the cross-site scripting while using cell template, meaning it will remove the unwanted scripts,styles or HTML in your cell template.</p>\n<blockquote>\n<p>In general, the cross-site scripting known as XSS is a type of computer security vulnerability typically found in web applications.\nIt attacks enable attackers to inject client-side scripts into web pages viewed by other users.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isreactcomponent"},"isRequiredUpdate":{"name":"isRequiredUpdate","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isrequiredupdate"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#isvue"},"loadOnDemandInMemberEditor":{"name":"loadOnDemandInMemberEditor","description":"<p>Allows to load members inside the member filter dialog on-demand.\nThe first level members will be loaded from the OLAP cube to display the member editor by default.\nAs a result, the member editor will be opened quickly, without any performance constraints.\nYou can use either of the following actions to load  your next level members. The actions are:</p>\n<ul>\n<li>By clicking on the respective member's expander button. By doing so, only the child members of the respective member will be loaded.</li>\n<li>Choose the level from the drop-down button. By doing so, all the members up to the level chosen will be loaded from the cube.\nAlso, searching members will only be considered for the level members that are loaded.</li>\n</ul>\n<blockquote>\n<p>This property is applicable only for OLAP data source.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#loadondemandinmembereditor"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#locale"},"maxNodeLimitInMemberEditor":{"name":"maxNodeLimitInMemberEditor","description":"<p>Allows you to set the limit for displaying members while loading large data in the member filter dialog.\nBased on this limit, initial loading will be completed quickly without any performance constraint.\nA message with remaining member count, that are not currently shown in the member filter dialog UI, will be displayed in the member editor.</p>\n<blockquote>\n<p>This property is not applicable to user-defined hierarchies in the OLAP data source.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#maxnodelimitinmembereditor"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#refs"},"renderMode":{"name":"renderMode","description":"<p>Allows to show field list either in static or popup mode. The available modes are:</p>\n<ul>\n<li><code>Popup</code>: To display the field list icon in pivot table UI to invoke the built-in dialog.\nIt helps to display over the pivot table UI without affecting any form of UI shrink within a web page.</li>\n<li><code>Fixed</code>: To display the field list in a static position within a web page.</li>\n</ul>\n","type":"Mode","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#rendermode"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#setstate"},"showValuesButton":{"name":"showValuesButton","description":"<p>Allows you to create a pivot button with &quot;Values&quot; as a caption used to display in the field list UI.\nIt helps you to plot the value fields to either column or row axis during runtime.</p>\n<blockquote>\n<p>The showValuesButton property is enabled by default for the OLAP data source.\nAnd the pivot button can be displayed with &quot;Measures&quot; as a caption used to display in the field list UI.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#showvaluesbutton"},"spinnerTemplate":{"name":"spinnerTemplate","description":"<p>Allows the appearance of the loading indicator to be customized with either an HTML string or the element’s ID,\nthat can be used to displayed with custom formats in the field list UI.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#spinnertemplate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#state"},"target":{"name":"target","description":"<p>Allows you to set the specific target element to the fieldlist dialog.\nThis helps the field list dialog to display the appropriate position on its target element.</p>\n<blockquote>\n<p>To use this option, set the property <code>renderMode</code> to be <strong>Popup</strong>.</p>\n</blockquote>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#target"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the Field Table component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#serverdatabind"},"update":{"name":"update","description":"<p>Updates the Pivot Field List component using dataSource from PivotView component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#update"},"updateView":{"name":"updateView","description":"<p>Updates the PivotView component using dataSource from Pivot Field List component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#updateview"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotfieldlist/#inject"}},"PivotViewComponent":{"actionBegin":{"name":"actionBegin","description":"<p>It triggers when UI action begins in the Pivot Table. The UI actions used to trigger this event such as\n<a href=\"../../pivotview/drill-down/#drill-down-and-drill-up\"><code>drill down/up</code></a>,\n<a href=\"../../pivotview/sorting/#value-sorting\"><code>value sorting</code></a>,\nbuilt-in <a href=\"../../pivotview/tool-bar/#built-in-toolbar-options\"><code>toolbar</code></a> options,\n<a href=\"../../pivotview/grouping-bar/\"><code>grouping bar</code></a> and\n<a href=\"../../pivotview/field-list/\"><code>field list</code></a> buttons actions such as\n<a href=\"../../pivotview/sorting/\"><code>sorting</code></a>, <a href=\"../../pivotview/filtering/\"><code>filtering</code></a>,\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/aggregation/#modifying-aggregation-type-for-value-fields-at-runtime\"><code>aggregate type</code></a> change and so on,\nCRUD operation in <a href=\"../../pivotview/editing/\"><code>editing</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>It triggers when UI action in the Pivot Table completed. The UI actions used to trigger this event such as\n<a href=\"../../pivotview/drill-down/#drill-down-and-drill-up\"><code>drill down/up</code></a>,\n<a href=\"../../pivotview/sorting/#value-sorting\"><code>value sorting</code></a>,\nbuilt-in <a href=\"../../pivotview/tool-bar/#built-in-toolbar-options\"><code>toolbar</code></a> options,\n<a href=\"../../pivotview/grouping-bar/\"><code>grouping bar</code></a> and\n<a href=\"../../pivotview/field-list/\"><code>field list</code></a> buttons actions such as\n<a href=\"../../pivotview/sorting/\"><code>sorting</code></a>, <a href=\"../../pivotview/filtering/\"><code>filtering</code></a>,\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/aggregation/#modifying-aggregation-type-for-value-fields-at-runtime\"><code>aggregate type</code></a> change and so on,\nCRUD operation in <a href=\"../../pivotview/editing/\"><code>editing</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>It triggers when UI action failed to achieve the desired results in the Pivot Table. The UI actions used to trigger this event such as\n<a href=\"../../pivotview/drill-down/#drill-down-and-drill-up\"><code>drill down/up</code></a>,\n<a href=\"../../pivotview/sorting/#value-sorting\"><code>value sorting</code></a>,\nbuilt-in <a href=\"../../pivotview/tool-bar/#built-in-toolbar-options\"><code>toolbar</code></a> options,\n<a href=\"../../pivotview/grouping-bar/\"><code>grouping bar</code></a> and\n<a href=\"../../pivotview/field-list/\"><code>field list</code></a> buttons actions such as\n<a href=\"../../pivotview/sorting/\"><code>sorting</code></a>, <a href=\"../../pivotview/filtering/\"><code>filtering</code></a>,\n<a href=\"../../pivotview/calculated-field/#editing-through-the-field-list-and-the-groupingbar\"><code>editing</code></a>,\n<a href=\"../../pivotview/aggregation/#modifying-aggregation-type-for-value-fields-at-runtime\"><code>aggregate type</code></a> change and so on,\nCRUD operation in <a href=\"../../pivotview/editing/\"><code>editing</code></a>.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#actionfailure"},"afterServiceInvoke":{"name":"afterServiceInvoke","description":"<p>It triggers after the response is returned from the service.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#afterserviceinvoke"},"aggregateCellInfo":{"name":"aggregateCellInfo","description":"<p>It allows to change the each cell value during engine populating.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#aggregatecellinfo"},"aggregateMenuOpen":{"name":"aggregateMenuOpen","description":"<p>It triggers before aggregate type context menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#aggregatemenuopen"},"beforeExport":{"name":"beforeExport","description":"<p>It allows to set properties for exporting.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#beforeexport"},"beforeServiceInvoke":{"name":"beforeServiceInvoke","description":"<p>It triggers before service get invoked from client.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#beforeserviceinvoke"},"beginDrillThrough":{"name":"beginDrillThrough","description":"<p>It triggers when a value cell is clicked in the pivot table for Editing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#begindrillthrough"},"calculatedFieldCreate":{"name":"calculatedFieldCreate","description":"<p>It triggers before a calculated field created/edited during runtime.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#calculatedfieldcreate"},"cellClick":{"name":"cellClick","description":"<p>It triggers when a cell is clicked in the pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#cellclick"},"cellSelected":{"name":"cellSelected","description":"<p>It triggers when a cell got selected in the pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#cellselected"},"cellSelecting":{"name":"cellSelecting","description":"<p>It triggers before a cell selected in pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#cellselecting"},"chartSeriesCreated":{"name":"chartSeriesCreated","description":"<p>It triggers when the pivot chart series are created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#chartseriescreated"},"conditionalFormatting":{"name":"conditionalFormatting","description":"<p>It allows to do changes before applying the conditional formatting.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#conditionalformatting"},"created":{"name":"created","description":"<p>It triggers when the pivot table component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#created"},"dataBound":{"name":"dataBound","description":"<p>It triggers when the pivot table rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#databound"},"destroyed":{"name":"destroyed","description":"<p>It triggers when pivot table component getting destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#destroyed"},"drill":{"name":"drill","description":"<p>It triggers before the header to be either expanded or collapsed in the pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#drill"},"drillThrough":{"name":"drillThrough","description":"<p>It triggers when a value cell is clicked in the pivot table for Drill-Through.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#drillthrough"},"editCompleted":{"name":"editCompleted","description":"<p>It triggers when editing is made in the raw data of pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#editcompleted"},"enginePopulated":{"name":"enginePopulated","description":"<p>It triggers after the pivot engine populated and allows to customize the pivot datasource settings.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enginepopulated"},"enginePopulating":{"name":"enginePopulating","description":"<p>It triggers before the pivot engine starts to populate and allows to customize the pivot datasource settings.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enginepopulating"},"exportComplete":{"name":"exportComplete","description":"<p>It triggers when exporting to PDF, Excel, or CSV is complete</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#exportcomplete"},"fetchReport":{"name":"fetchReport","description":"<p>It allows you to fetch the report names from specified storage.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#fetchreport"},"fieldDragStart":{"name":"fieldDragStart","description":"<p>It triggers when a field drag (move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#fielddragstart"},"fieldDrop":{"name":"fieldDrop","description":"<p>It triggers before a field drops into any axis.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#fielddrop"},"fieldListRefreshed":{"name":"fieldListRefreshed","description":"<p>It allows to identify whether the field list updated or not.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#fieldlistrefreshed"},"fieldRemove":{"name":"fieldRemove","description":"<p>It triggers before removing the field from any axis during runtime.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#fieldremove"},"hyperlinkCellClick":{"name":"hyperlinkCellClick","description":"<p>It triggers when a hyperlink cell is clicked in the pivot table.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#hyperlinkcellclick"},"load":{"name":"load","description":"<p>It allows any customization on the pivot table component properties on initial rendering.\nBased on the changes, pivot table will be rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#load"},"loadReport":{"name":"loadReport","description":"<p>It allows to load the report from specified storage.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#loadreport"},"memberEditorOpen":{"name":"memberEditorOpen","description":"<p>It triggers before member editor dialog opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#membereditoropen"},"memberFiltering":{"name":"memberFiltering","description":"<p>It triggers before the filtering applied.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#memberfiltering"},"newReport":{"name":"newReport","description":"<p>It allows to set the new report.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#newreport"},"numberFormatting":{"name":"numberFormatting","description":"<p>It triggers before number format is applied to specific field during runtime.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#numberformatting"},"onFieldDropped":{"name":"onFieldDropped","description":"<p>It triggers after a field dropped into the axis.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#onfielddropped"},"onHeadersSort":{"name":"onHeadersSort","description":"<p>It triggers before the sorting performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#onheaderssort"},"onPdfCellRender":{"name":"onPdfCellRender","description":"<p>It allows any customization of Pivot cell style while PDF exporting.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#onpdfcellrender"},"removeReport":{"name":"removeReport","description":"<p>It allows you to remove the current report from the specified storage.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#removereport"},"renameReport":{"name":"renameReport","description":"<p>It allows you to rename the current report.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#renamereport"},"saveReport":{"name":"saveReport","description":"<p>It allows you to save the report to the specified storage.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#savereport"},"toolbarClick":{"name":"toolbarClick","description":"<p>It allows to change the toolbar items.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#toolbarclick"},"toolbarRender":{"name":"toolbarRender","description":"<p>It allows to change the toolbar items.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#toolbarrender"},"aggregateTypes":{"name":"aggregateTypes","description":"<p>Allows you to show a menu with built-in aggregate options displayed in the pivot button's dropdown icon of field list and groupingBar UI.\nThese aggregate options helps to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… easily at runtime.\nThe available aggregate options are:</p>\n<ul>\n<li><code>Sum</code>: Allows to display the pivot table values with sum.</li>\n<li><code>Product</code>: Allows to display the pivot table values with product.</li>\n<li><code>Count</code>: Allows to display the pivot table values with count.</li>\n<li><code>DistinctCount</code>: Allows to display the pivot table values with distinct count.</li>\n<li><code>Min</code>: Allows to display the pivot table with minimum value.</li>\n<li><code>Max</code>: Allows to display the pivot table with maximum value.</li>\n<li><code>Avg</code>: Allows to display the pivot table values with average.</li>\n<li><code>Median</code>: Allows to display the pivot table values with median.</li>\n<li><code>Index</code>: Allows to display the pivot table values with index.</li>\n<li><code>PopulationStDev</code>: Allows to display the pivot table values with population standard deviation.</li>\n<li><code>SampleStDev</code>: Allows to display the pivot table values with sample standard deviation.</li>\n<li><code>PopulationVar</code>: Allows to display the pivot table values with population variance.</li>\n<li><code>SampleVar</code>: Allows to display the pivot table values with sample variance.</li>\n<li><code>RunningTotals</code>: Allows to display the pivot table values with running totals.</li>\n<li><code>DifferenceFrom</code>: Allows to display the pivot table values with difference from the value of the base item in the base field.</li>\n<li><code>PercentageOfDifferenceFrom</code>: Allows to display the pivot table values with percentage difference from the value of the base item in the base field.</li>\n<li><code>PercentageOfGrandTotal</code>: Allows to display the pivot table values with percentage of grand total of all values.</li>\n<li><code>PercentageOfColumnTotal</code>: Allows to display the pivot table values in each column with percentage of total values for the column.</li>\n<li><code>PercentageOfRowTotal</code>: Allows to display the pivot table values in each row with percentage of total values for the row.</li>\n<li><code>PercentageOfParentTotal</code>: Allows to display the pivot table values with percentage of total of all values based on selected field.</li>\n<li><code>PercentageOfParentColumnTotal</code>: Allows to display the pivot table values with percentage of its parent total in each column.</li>\n<li><code>PercentageOfParentRowTotal</code>: Allows to display the pivot table values with percentage of its parent total in each row.</li>\n</ul>\n<blockquote>\n<p>It is applicable only for Relational data.</p>\n</blockquote>\n","type":"AggregateTypes[]","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#aggregatetypes"},"allowCalculatedField":{"name":"allowCalculatedField","description":"<p>Allows the built-in calculated field dialog to be displayed in the component.\nYou can view the calculated field dialog by clicking the &quot;Calculated Field&quot; button in the field list UI.\nThis dialog will helps you to create a new calculated field in the pivot table, based on available fields from the bound data source or using simple formula with basic arithmetic operators at runtime.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowcalculatedfield"},"allowConditionalFormatting":{"name":"allowConditionalFormatting","description":"<p>Allows you to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\nYou can apply the conditional formatting at runtime through the built-in dialog, invoked from the toolbar.\nTo do so, set <code>allowConditionalFormatting</code> and <code>showToolbar</code> properties to <strong>true</strong> to the component.\nAlso, include the toolbar option <strong>ConditionalFormatting</strong> in the <code>toolbar</code> property.</p>\n<blockquote>\n<p>You can also view the conditional formatting dialog by clicking an external button using the <code>showConditionalFormattingDialog</code> method.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowconditionalformatting"},"allowDataCompression":{"name":"allowDataCompression","description":"<p>Allows large amounts of data to be loaded without any degradation of performance by compressing raw data on the basis of its uniqueness.\nThese unique records will be provided as input to render the pivot table.\nFor example, if the pivot table is connected to a million raw data with a combination of 1,000 unique data, it will be compressed to 1,000 unique data.\nBy doing so, the time taken to render the pivot table will be drastically reduced, i.e. the pivot table will takes a maximum of 3 seconds instead of 10 seconds to complete its rendering.\nThese compressed data will also be used for further operations at all times to reduce the looping complexity and improves pivot table's performance while updating during runtime.</p>\n<p>To use this option, it requires the property <code>enableVirtualization</code> to be <strong>true</strong>.</p>\n<blockquote>\n<p>This property is applicable only for relational data source.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowdatacompression"},"allowDeferLayoutUpdate":{"name":"allowDeferLayoutUpdate","description":"<p>Allows the pivot table component to be updated only on demand, meaning,\nyou can perform a variety of operations such as drag-and-drop fields between row, column, value and filter axes,\napply sorting and filtering inside the Field List, resulting the field list UI would be updated on its own, but not the pivot table.\nOn clicking the “Apply” button in the Field List, the pivot table will updates the last modified report.\nThis helps to improve the performance of the pivot table component rendering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowdeferlayoutupdate"},"allowDrillThrough":{"name":"allowDrillThrough","description":"<p>Allows to view the underlying raw data of a summarized cell in the pivot table.\nBy double-clicking on any value cell, you can view the detailed raw data in a data grid inside a new window.\nIn the new window, row header, column header and measure name of the clicked cell will be shown at the top.\nYou can also include or exclude fields available in the data grid using column chooser option.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowdrillthrough"},"allowExcelExport":{"name":"allowExcelExport","description":"<p>Allows the pivot table data to be exported as an Excel document. Export can be done in two different file formats such as  XLSX and CSV formats.\nYou can export pivot table using the build-in toolbar option. To do so, set <code>allowExcelExport</code> and <code>showToolbar</code> properties to true to the component.\nAlso, include the toolbar option <strong>Exporting</strong> in the <code>toolbar</code> property.</p>\n<blockquote>\n<p>You can also export the pivot table data by clicking an external button using the <code>excelExport</code> method. Use <code>csvExport</code> method to export the pivot table data to CSV format.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowexcelexport"},"allowGrouping":{"name":"allowGrouping","description":"<p>Allows you to show the grouping UI in the pivot table that automatically groups date, time, number and string at runtime.\nby right clicking on the pivot table’s row or column header, select <strong>Group</strong>. This will shows a dialog in which you can perform grouping with appropriate options to group the data.\nTo ungroup, right click on the pivot table’s row or column header, select <strong>Ungroup</strong>.</p>\n<blockquote>\n<p>This property is applicable only for relational data source.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowgrouping"},"allowNumberFormatting":{"name":"allowNumberFormatting","description":"<p>Allows you to apply required number formatting to the pivot table values such as number, currency, percentage or other custom formats at runtime through a built-in dialog, invoked from the toolbar.\nTo do so, set allowNumberFormatting and showToolbar properties to true to the component.\nAlso, include the toolbar option NumberFormatting in the toolbar property.</p>\n<blockquote>\n<p>You can also view the number formatting dialog by clicking an external button using the <code>showNumberFormattingDialog</code> method.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allownumberformatting"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Allows the pivot table data to be exported as an PDF document. You can export pivot table using the build-in toolbar option.\nTo do so, set <code>allowPdfExport</code> and <code>showToolbar</code> properties to true to the component.\nAlso, include the toolbar option <strong>Exporting</strong> in the <code>toolbar</code> property.</p>\n<blockquote>\n<p>You can also export the pivot table data by clicking an external button using the <code>pdfExport</code> method.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowpdfexport"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#allowserverdatabinding"},"cellTemplate":{"name":"cellTemplate","description":"<p>Allows the table cell elements to be customized with either an HTML string or the element’s ID,\nthat can be used to add additional HTML elements with custom formats to the cell elements that are displayed in the pivot table.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#celltemplate"},"chartSettings":{"name":"chartSettings","description":"<p>Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\nThe following options are available to customize the pivot chart.</p>\n<ul>\n<li><code>background</code>: Allows you to change the background color of the chart series in the pivot chart.\nFor example, to display the chart series with background color as red, set the property <code>background</code> to either <strong>&quot;red&quot;</strong> or <strong>&quot;#FF0000&quot;</strong> or <strong>&quot;rgba(255,0,0,1.0)&quot;</strong>.</li>\n<li><code>border</code>: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\nFor example, to display the chart series border color as red, set the properties <code>color</code> to either <strong>&quot;red&quot;</strong> or <strong>&quot;#FF0000&quot;</strong> or <strong>&quot;rgba(255,0,0,1.0)&quot;</strong> and <code>width</code> to <strong>0.5</strong>.</li>\n<li><code>chartArea</code>: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\nFor example, to change the of the pivot chart's background, set the property <code>opacity</code> to <strong>0.5</strong>.</li>\n<li><code>chartSeries</code>: Allow options to customize the chart series with different settings such as fill color, animation of the series,\nseries width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\nFor example, to display the line type pivot chart, set the property <code>type</code> to <strong>Line</strong>.</li>\n<li><code>crosshair</code>: Allow options to customize the crosshair line with different settings such as color and width of the line,\nline types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.</li>\n<li><code>description</code>: Allows you to add a description of the pivot chart.</li>\n<li><code>enableAnimation</code>: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.</li>\n<li><code>enableCanvas</code>: Allows you to render the pivot chart in canvas mode.</li>\n<li><code>enableExport</code>: Allows the pivot chart to be exported to either <strong>PDF</strong> or <strong>PNG</strong> or <strong>JPEG</strong> or <strong>SVG</strong> filter formats.</li>\n<li><code>enableMultipleAxis</code>: Allows you to draw the pivot chart with multiple value fields as separate chart area.</li>\n<li><code>enableSideBySidePlacement</code>: Allows you to draw points of the column type pivot chart series as side by side.</li>\n<li><code>isMultiSelect</code>: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property <code>selectionMode</code> to be <strong>Point</strong> or <strong>Series</strong> or <strong>Cluster</strong>.</li>\n<li><code>isTransposed</code>: Allows you to render the pivot chart in a transposed manner or not.</li>\n<li><code>legendSettings</code>: Allow options for customizing legends with different properties such as legend visibility,\nheight, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.</li>\n<li><code>margin</code>: Allow options to customize the left, right, top and bottom margins of the pivot chart.</li>\n<li><code>palettes</code>: Allows you to draw the chart series points with custom color in the pivot chart.</li>\n<li><code>primaryXAxis</code>: Allow options to customize the horizontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\ndescription, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\nmajor grid lines, minor and major tick lines, border, etc. in the pivot chart.</li>\n<li><code>primaryYAxis</code>: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\ntitle, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\nmajor grid lines, minor and major tick lines, border, etc. in the pivot chart.</li>\n<li><code>selectedDataIndexes</code>: Allows you to highlight a specific point of the series while rendering the pivot chart.\nFor example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property <code>selectionMode</code> to be <strong>Point</strong> or <strong>Series</strong>.</li>\n<li><code>selectionMode</code>: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\nFor example, to highlight a specific point in a specific series of the pivot chart, set the property <code>selectionMode</code> to <strong>Point</strong>.</li>\n<li><code>showMultiLevelLabels</code>: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.</li>\n<li><code>subTitle</code>: Allows you to add the subtitle to the pivot chart.</li>\n<li><code>subTitleStyle</code>: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.</li>\n<li><code>tabIndex</code>: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.</li>\n<li><code>theme</code>: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.</li>\n<li><code>title</code>: Allows you to add title to the pivot chart.</li>\n<li><code>titleStyle</code>: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.</li>\n<li><code>tooltip</code>: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\nformat, textStyle, template, border, enableAnimation.</li>\n<li><code>useGroupingSeparator</code>: Allows the group separator to be shown to the values in the pivot chart.</li>\n<li><code>value</code>: Allows you to draw a pivot chart with a specific value field during initial loading.</li>\n<li><code>zoomSettings</code>: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\nenableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.</li>\n</ul>\n","type":"ChartSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#chartsettings"},"chartTypes":{"name":"chartTypes","description":"<p>Allows you to display the pivot chart with specific chart types from built-in chart options, invoked from the toolbar.\nThe available chart types are:</p>\n<ul>\n<li><code>Line</code>: Allows to display the pivot chart with line series.</li>\n<li><code>Column</code>: Allows to display the pivot chart with column series.</li>\n<li><code>Area</code>: Allows to display the pivot chart with area series.</li>\n<li><code>Bar</code>: Allows to display the pivot chart with bar series.</li>\n<li><code>StackingColumn</code>: Allows to display the pivot chart with stacked column series.</li>\n<li><code>StackingArea</code>: Allows to display the pivot chart with stacked area series.</li>\n<li><code>StackingBar</code>: Allows to display the pivot chart with stacked bar series.</li>\n<li><code>StackingLine</code>: Allows to display the pivot chart with stacked line series.</li>\n<li><code>StepLine</code>: Allows to display the pivot chart with step line series.</li>\n<li><code>StepArea</code>: Allows to display the pivot chart with step area series.</li>\n<li><code>SplineArea</code>: Allows to display the pivot chart with spline area series.</li>\n<li><code>Scatter</code>: Allows to display the pivot chart with scatter series.</li>\n<li><code>Spline</code>: Allows to display the pivot chart with spline series.</li>\n<li><code>StackingColumn100</code>: Allows to display the pivot chart with 100% stacked column series.</li>\n<li><code>StackingBar100</code>: Allows to display the pivot chart with 100% stacked bar series.</li>\n<li><code>StackingArea100</code>: Allows to display the pivot chart with 100% stacked area series.</li>\n<li><code>StackingLine100</code>: Allows to display the pivot chart with 100% stacked line series.</li>\n<li><code>Bubble</code>: Allows to display the pivot chart with bubble series.</li>\n<li><code>Pareto</code>: Allows to display the pivot chart with pareto series.</li>\n<li><code>Polar</code>: Allows to display the pivot chart with polar series.</li>\n<li><code>Radar</code>: Allows to display the pivot chart with radar series.</li>\n<li><code>Pie</code>: Allows to display the pivot chart with pie series.</li>\n<li><code>Doughnut</code>: Allows to display the pivot chart with doughnut series.</li>\n<li><code>Funnel</code>: Allows to display the pivot chart with funnel series.</li>\n<li><code>Pyramid</code>: Allows to display the pivot chart with pyramid series.\nTo use this option, the <code>showToolbar</code> property must be <strong>true</strong> along with toolbar option <strong>Chart</strong>\nto be set to the <code>toolbar</code> property.</li>\n</ul>\n","type":"ChartSeriesType[]","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#charttypes"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#context"},"cssClass":{"name":"cssClass","description":"<p>Allows you to add the CSS class name to the pivot table element.\nUse this class name, you can customize the pivot table and its inner elements easily at your end.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#currentcontext"},"dataSourceSettings":{"name":"dataSourceSettings","description":"<p>Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.</p>\n<ul>\n<li><code>catalog</code>: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>cube</code>: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>providerType</code>: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.</li>\n<li><code>url</code>: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>localeIdentifier</code>: Allows you to set the specific culture code as number type to render pivot table with desired localization.\nBy default, the pivot table displays with culture code <strong>1033</strong>, which indicates &quot;en-US&quot; locale. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n<li><code>dataSource</code>: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\nYou can fetch JSON data from remote server by using DataManager. <strong>Note: It is applicable only for relational data source.</strong></li>\n<li><code>rows</code>: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.</li>\n<li><code>columns</code>: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.</li>\n<li><code>values</code>: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.</li>\n<li><code>filters</code>: Allows to filter the values in other axis based on the collection of filter fields in pivot table.</li>\n<li><code>excludeFields</code>: Allows you to restrict the specific field(s) from displaying it in the field list UI.\nYou may also be unable to render the pivot table with this field(s) by doing so. <strong>Note: It is applicable only for relational data source.</strong></li>\n<li><code>expandAll</code>: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\nBy default, all the headers are collapsed in the pivot table. <strong>Note: It is applicable only for Relational data.</strong></li>\n<li><code>valueAxis</code>: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.</li>\n<li><code>filterSettings</code>: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.</li>\n<li><code>sortSettings</code>: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\nBy default, the data source containing fields are display with Ascending order alone. To use this option, it requires the <code>enableSorting</code> property to be <strong>true</strong>.</li>\n<li><code>enableSorting</code>: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.</li>\n<li><code>formatSettings</code>: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\nFor example, to display a specific field with currency formatted values in the pivot table, the set the <code>format</code> property to be <strong>C</strong>.</li>\n<li><code>drilledMembers</code>: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.</li>\n<li><code>valueSortSettings</code>: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.</li>\n<li><code>calculatedFieldSettings</code>: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.</li>\n<li><code>allowMemberFilter</code>: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.</li>\n<li><code>allowLabelFilter</code>: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.</li>\n<li><code>allowValueFilter</code>: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.</li>\n<li><code>showSubTotals</code>: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.</li>\n<li><code>showRowSubTotals</code>: Allows to show or hide sub-totals in row axis of the pivot table.</li>\n<li><code>showColumnSubTotals</code>: Allows to show or hide sub-totals in column axis of the pivot table.</li>\n<li><code>showGrandTotals</code>: Allows to show or hide grand totals in both rows and columns axis of the pivot table.</li>\n<li><code>showRowGrandTotals</code>: Allows to show or hide grand totals in row axis of the pivot table.</li>\n<li><code>showColumnGrandTotals</code>: Allows to show or hide grand totals in column axis of the pivot table.</li>\n<li><code>showHeaderWhenEmpty</code>: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\nFor example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom &gt;&gt; Undefined” in the header section.</li>\n<li><code>alwaysShowValueHeader</code>: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.</li>\n<li><code>conditionalFormatSettings</code>: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.</li>\n<li><code>emptyCellsTextContent</code>: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.</li>\n<li><code>groupSettings</code>: Allows specific fields to group their data on the basis of their type.\nFor example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\nYou can perform custom group to the string type fields that used to displayed in the pivot table.</li>\n<li><code>showAggregationOnValueField</code>: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\nFor example, if the value field &quot;Sold Amount&quot; is aggregated with Sum, it will be displayed with caption &quot;Sum of Sold Amount&quot; in its pivot button.</li>\n<li><code>authentication</code>: Allows you to set the credential information to access the specified SSAS cube. <strong>Note: It is applicable only for OLAP data source</strong>.</li>\n</ul>\n","type":"DataSourceSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#datasourcesettings"},"displayOption":{"name":"displayOption","description":"<p>Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:</p>\n<ul>\n<li><code>view</code>: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.</li>\n<li><code>primary</code>: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property <code>view</code> to be <strong>Both</strong>.</li>\n</ul>\n","type":"DisplayOptionModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#displayoption"},"editSettings":{"name":"editSettings","description":"<p>Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\nThe raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\nCRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\nThe options available are as follows:</p>\n<ul>\n<li><code>allowAdding</code>: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.</li>\n<li><code>allowEditing</code>: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.</li>\n<li><code>allowDeleting</code>: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.</li>\n<li><code>allowCommandColumns</code>: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\ndelete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.</li>\n<li><code>mode</code>: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\nThe available modes are normal, batch and dialog. <strong>Normal</strong> mode is enabled for CRUD operations in the data grid by default.</li>\n<li><code>allowEditOnDblClick</code>: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.</li>\n<li><code>showConfirmDialog</code>: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.</li>\n<li><code>showDeleteConfirmDialog</code>: Allows you to show the confirmation dialog to delete any records from the data grid.</li>\n<li><code>allowInlineEditing</code>: Allows direct editing of a value cell without opening the edit dialog. NOTE: It is applicable only if the value cell is made by a single raw data. Otherwise editing dialog will be shown.</li>\n</ul>\n<blockquote>\n<p>This feature is applicable only for the relational data source.</p>\n</blockquote>\n","type":"CellEditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#editsettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#element"},"enableFieldSearching":{"name":"enableFieldSearching","description":"<p>It enables the search option in the field list UI, which can be used to search specific fields at runtime.</p>\n<blockquote>\n<p>This option is only available when the pivot table's built-in popup field list is enabled using the <code>showFieldList</code> property.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablefieldsearching"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Allows to restrict the cross-site scripting while using cell template, meaning it will remove the unwanted scripts,styles or HTML in your cell template.</p>\n<blockquote>\n<p>In general, the cross-site scripting known as XSS is a type of computer security vulnerability typically found in web applications.\nIt attacks enable attackers to inject client-side scripts into web pages viewed by other users.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablehtmlsanitizer"},"enablePaging":{"name":"enablePaging","description":"<p>Allows large amounts of data to be displayed page-by-page.\nIt helps to display the rows and columns by configuring the page size and current page using <code>pageSettings</code> option in the pivot table.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablepaging"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablertl"},"enableValueSorting":{"name":"enableValueSorting","description":"<p>Allows you to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\nYou can sort the values by clicking directly on the value field header positioned either in row or column axis of the pivot table.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablevaluesorting"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Allows to load the large amounts of data without any performance degradation by rendering rows and columns only in the current content view port.\nRest of the aggregated data will be brought into view port dynamically based on vertical or horizontal scroll position.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#enablevirtualization"},"exportAllPages":{"name":"exportAllPages","description":"<p>Allows you to export the pivot table data of all pages, i.e. the data that holds all the records given to render the pivot table will be exported as either an Excel or a PDF document.\nTo use this option, it requires the property <code>enableVirtualization</code> to be <strong>true</strong>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#exportallpages"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#forceupdate"},"gridSettings":{"name":"gridSettings","description":"<p>Allows the set of options to customize rows, columns, values cell and its content in the pivot table. The following options to customize the pivot table are:</p>\n<ul>\n<li><code>height</code>: Allow the height of the pivot table content to be set,\nmeaning that the height given should be applied without considering the column headers in the pivot table.</li>\n<li><code>width</code>: Allow to set width of the pivot table. <strong>Note: The pivot table will not display less than 400px,\nas it is the minimum width to the component.</strong></li>\n<li><code>gridLines</code>: Allow the options for customizing the cell borders of each cell to be displayed in the pivot table.\nFor example, to display a pivot table without cell borders, set the property <code>gridLines</code> to <strong>None</strong>.</li>\n<li><code>allowTextWrap</code>: Allow the contents of the cells to be wrapped when they exceed the width of the cells in the pivot table.</li>\n<li><code>textWrapSettings</code>: Allows options to wrap either column and row header or value or both header and cell content.\nFor example, to allow the wrap option to value cells alone, then set the property <code>wrapMode</code> to <strong>Content</strong> in the <code>textWrapSettings</code> class.</li>\n<li><code>allowReordering</code>: Allows to reorder a specific column header from one index to another index in the pivot table by drag-and-drop.</li>\n<li><code>allowResizing</code>: Allows the columns to be resized by clicking and dragging the right edge of the column headers.</li>\n<li><code>rowHeight</code>: Allow to set height to the pivot table rows commonly.</li>\n<li><code>columnWidth</code>: Allow to set width to the pivot table columns commonly.</li>\n<li><code>clipMode</code>: Allows the contents of the cell overflow to be displayed in the pivot table.\nFor example, to truncate the cell content of a cell when it overflows with respect to its cell width, set the property <code>clipMode</code> to <strong>Clip</strong>.</li>\n<li><code>allowSelection</code>: Allows a row or column or cell to be highlighted by simply clicking or arrow key in the pivot table.</li>\n<li><code>selectionSettings</code>: Allow set of options to customize the selection of a row or column or cell by simply clicking on the arrow key in the pivot table.\nFor example, to highlight both rows and columns with multiple selection, set the properties <code>mode</code> to <strong>Both</strong> and <code>type</code> to <strong>Multiple</strong> in <code>selectionSettings</code> class.</li>\n<li><code>selectedRowIndex</code>: Allows to highlight specific row in the pivot table during initial rendering. For example, to highlight the pivot table's first row, set the property <code>selectedRowIndex</code> to <strong>0</strong>.</li>\n<li><code>contextMenuItems</code>: Allows to show built-in context with pre-defined menu option or custom menu options by simply right clicking on the pivot table cell.</li>\n</ul>\n","type":"GridSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#gridsettings"},"groupingBarSettings":{"name":"groupingBarSettings","description":"<p>Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\ncustomizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\nThe options available to customize the grouping bar UI are:</p>\n<ul>\n<li><code>showFilterIcon</code>: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\nThis filter icon is used to filter the members of a particular field at runtime in the pivot table.</li>\n<li><code>showSortIcon</code>: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\nThis sort icon is used to order members of a particular fields either in ascending or descending at runtime.</li>\n<li><code>showRemoveIcon</code>: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\nThis remove icon is used to remove any field during runtime.</li>\n<li><code>showValueTypeIcon</code>: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\nThis value type icon helps to select the appropriate aggregation type to value fields at runtime.</li>\n<li><code>displayMode</code>: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\nFor example, to show the grouping bar UI to pivot table on its own, set the property <code>displayMode</code> to <strong>Table</strong>.</li>\n<li><code>allowDragAndDrop</code>: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.</li>\n</ul>\n","type":"GroupingBarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#groupingbarsettings"},"height":{"name":"height","description":"<p>Allow the height of the pivot table to be set.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#height"},"hyperlinkSettings":{"name":"hyperlinkSettings","description":"<p>Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\nThese options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the <code>hyperlinkSettings</code> class.\nThe options available are:</p>\n<ul>\n<li><code>showHyperlink</code>: Allows you to set the visibility of hyperlink in all cells.</li>\n<li><code>showRowHeaderHyperlink</code>: Allows you to set the visibility of hyperlink in row headers.</li>\n<li><code>showColumnHeaderHyperlink</code>: Allows you to set the visibility of hyperlink in column headers.</li>\n<li><code>showValueCellHyperlink</code>: Allows you to set the visibility of hyperlink in value cells.</li>\n<li><code>showSummaryCellHyperlink</code>: Allows you to set the visibility of hyperlink in summary cells.</li>\n<li><code>headerText</code>: Allows you to set the visibility of hyperlink based on header text.</li>\n<li><code>conditionalSettings</code>: Allows you to set the visibility of hyperlink based on specific condition.</li>\n<li><code>cssClass</code>: Allows you to add CSS class name to the hyperlink options.</li>\n</ul>\n<blockquote>\n<p>By default, the hyperlink options are disabled for all cells in the pivot table.</p>\n</blockquote>\n","type":"HyperlinkSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#hyperlinksettings"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#isvue"},"loadOnDemandInMemberEditor":{"name":"loadOnDemandInMemberEditor","description":"<p>Allows to load members inside the member filter dialog on-demand.\nThe first level members will be loaded from the OLAP cube to display the member editor by default.\nAs a result, the member editor will be opened quickly, without any performance constraints.\nYou can use either of the following actions to load  your next level members. The actions are:</p>\n<ul>\n<li>By clicking on the respective member's expander button. By doing so, only the child members of the respective member will be loaded.</li>\n<li>Choose the level from the drop-down button. By doing so, all the members up to the level chosen will be loaded from the cube.\nAlso, searching members will only be considered for the level members that are loaded.</li>\n</ul>\n<blockquote>\n<p>This property is applicable only for OLAP data source.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#loadondemandinmembereditor"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#locale"},"maxNodeLimitInMemberEditor":{"name":"maxNodeLimitInMemberEditor","description":"<p>Allows you to set the limit for displaying members while loading large data in the member filter dialog.\nBased on this limit, initial loading will be completed quickly without any performance constraint.\nA message with remaining member count, that are not currently shown in the member filter dialog UI, will be displayed in the member editor.</p>\n<blockquote>\n<p>This property is not applicable to user-defined hierarchies in the OLAP data source.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#maxnodelimitinmembereditor"},"maxRowsInDrillThrough":{"name":"maxRowsInDrillThrough","description":"<p>Allows you to set the maximum number of raw data that used to view it in a data grid inside a new window while performing drill through on summarized cells in the pivot table.\nFor example, if the value cell has a combination of more than 50,000 records, it allows only 10,000 records fetch from the cube and displayed in the data grid.</p>\n<blockquote>\n<p>This property is applicable only for the OLAP data source.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#maxrowsindrillthrough"},"pageSettings":{"name":"pageSettings","description":"<p>Allows to set the page information to display the pivot table with specific page during paging and virtual scrolling.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#pagesettings"},"pagerSettings":{"name":"pagerSettings","description":"<p>Allows a set of options for customizing the paging UI with a variety of settings such as UI position, template and visibility to a specific axis info such as page size, paging data.</p>\n<blockquote>\n<p>To use this option, it requires the property <code>enablePaging</code> to be true.</p>\n</blockquote>\n","type":"PagerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#pagersettings"},"pivotValues":{"name":"pivotValues","description":"<p>It holds the collection of cell information that has been populated from the engine on the basis of the given pivot report to render the component as table and chart.</p>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#pivotvalues"},"pivotView":{"name":"pivotView","description":"","type":"PivotView","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#pivotview"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#setstate"},"showFieldList":{"name":"showFieldList","description":"<p>Allows built-in popup field list to be enabled in the pivot table UI.\nThe popup field list will be displayed over the pivot table UI without affecting any form of UI shrink,\nand allows to manipulate the pivot report through different ways such as add or remove fields and\nalso rearrange them between different axes, including column, row, value, and filter along with sort and\nfilter options dynamically at runtime to update the pivot table.</p>\n<blockquote>\n<p>By default, the icon used to display the field list will be positioned at the top left corner of the pivot table UI.\nWhen groupingBar is enabled, the icon will be placed at the top right corner of the pivot table.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showfieldlist"},"showGroupingBar":{"name":"showGroupingBar","description":"<p>Allows you to show the grouping bar UI in the pivot table that automatically populates fields from the bound report.\nIt also allows you to modify the report with a variety of actions using the pivot buttons to update the pivot table during runtime.\nThe following are:</p>\n<ul>\n<li>Re-arranging fields through drag-and-drop operation between row, column, value and filter axes.</li>\n<li>Remove fields from the existing report using remove icon.</li>\n<li>Filtering members of specific fields using filter icon.</li>\n<li>Sorting members of specific fields using sort icon.</li>\n<li>Editing the calculated fields using edit icon.</li>\n<li>Selecting required aggregate types to value field using dropdown icon.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showgroupingbar"},"showToolbar":{"name":"showToolbar","description":"<p>Allows you to show the toolbar UI that holds built-in toolbar options to accessing frequently used features like\nswitching between pivot table and pivot chart, changing chart types, conditional formatting, number formatting, exporting, etc… with ease at runtime.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showtoolbar"},"showTooltip":{"name":"showTooltip","description":"<p>Allows you to display the tooltip to the value cells either by mouse hovering or by touch in the pivot table.\nThe information used to be displayed in the tooltip is:</p>\n<ul>\n<li>Row: Holds the row header information of a specific value cell.</li>\n<li>Column: Holds the column header information of a specific value cell.</li>\n<li>Value: Holds the value field caption along with its value of a specific value cell.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showtooltip"},"showValuesButton":{"name":"showValuesButton","description":"<p>Allows you to create a pivot button with &quot;Values&quot; as a caption used to display in the grouping bar and field list UI.\nIt helps you to plot the value fields to either column or row axis during runtime.</p>\n<blockquote>\n<p>The showValuesButton property is enabled by default for the OLAP data source.\nAnd the pivot button can be displayed with &quot;Measures&quot; as a caption used to display in the grouping bar and field list UI.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showvaluesbutton"},"spinnerTemplate":{"name":"spinnerTemplate","description":"<p>Allows the appearance of the loading indicator to be customized with either an HTML string or the element’s ID,\nthat can be used to displayed with custom formats in the pivot table.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#spinnertemplate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#state"},"toolbar":{"name":"toolbar","description":"<p>Allows the built-in toolbar options that used to access features like switching between pivot table and pivot chart, changing chart types, conditional formatting, number formatting, exporting, etc… with ease at runtime.\nThe available toolbar options are:</p>\n<ul>\n<li><code>New</code>: Allows to create a new report.</li>\n<li><code>Save</code>: Allows to save the current report.</li>\n<li><code>Save As</code>: Allows to perform save as the current report.</li>\n<li><code>Rename</code>: Allows to rename the current report.</li>\n<li><code>Remove</code>: Allows to delete the current report.</li>\n<li><code>Load</code>: Allows to load any report from the report list.</li>\n<li><code>Grid</code>: Allows to show the pivot table.</li>\n<li><code>Chart</code>: Allows to show the pivot chart with specific type from the built-in list.\nIt also has the option to show the chart with multiple axes based on the value fields bound to the report.\nYou can do this by selecting the checkbox at the bottom of the list.</li>\n<li><code>Exporting</code>: Allow set of options to export the pivot table as PDF/Excel/CSV and the pivot chart as PDF and image format such as PNG, JPEG, SVG.</li>\n<li><code>Sub-total</code>: Allow set of options to show or hide the sub totals in the pivot table. The subtotals will not be displayed in the pivot chart by default.</li>\n<li><code>Grand Total</code>: Allow set of options to show or hides the grand totals in the pivot table. By default, the grand totals will not be displayed in the pivot chart.</li>\n<li><code>Conditional Formatting</code>: Allows to show the conditional formatting pop-up to apply formatting to the values.</li>\n<li><code>Number Formatting</code>: Allows to show the number formatting pop-up to apply number formatting to the values.</li>\n<li><code>Formatting</code>: Allow options to show the conditional formatting and the number formatting pop-up that used to apply formatting to the values in the component.</li>\n<li><code>Field List</code>: Allows you to show the field list pop-up. It allows you to modify the report with a variety of actions such as re-arrange the fields between axes by drag-and-drop,\nadd new fields to report, remove any fields from report, filtering and sorting a specific field members, etc., that are used to update the pivot table during runtime.</li>\n<li><code>MDX</code>: Allows ro show the MDX query that was run to retrieve data from the OLAP data source. <strong>Note: It is applicable only for OLAP data source.</strong></li>\n</ul>\n<blockquote>\n<p>The toolbar option can be displayed based on the order you provided in the toolbar collection.</p>\n</blockquote>\n","type":"ToolbarItems[]|ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#toolbar"},"toolbarTemplate":{"name":"toolbarTemplate","description":"<p>It allows to define the &quot;ID&quot; of div which is used as template in toolbar panel.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#toolbartemplate"},"tooltipTemplate":{"name":"tooltipTemplate","description":"<p>Allows the tooltip element to be customized with either an HTML string or the element’s ID,\ncan be used to displayed with custom formats either by mouse hovering or by touch in the pivot table.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#tooltiptemplate"},"virtualScrollSettings":{"name":"virtualScrollSettings","description":"<p>Allow options for customizing the virtual scrolling experience in the pivot table.</p>\n<blockquote>\n<p>This feature is applicable only for the relational data source.</p>\n</blockquote>\n","type":"VirtualScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#virtualscrollsettings"},"width":{"name":"width","description":"<p>Allow the width of the pivot table to be set.</p>\n<blockquote>\n<p>The pivot table will not display less than 400px, as it is the minimum width to the component.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#attachunloadevent"},"chartExport":{"name":"chartExport","description":"<p>Method allow to export the pivot chart as PDF and image formats like PNG, JPEG, and SVG.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#chartexport"},"createCalculatedFieldDialog":{"name":"createCalculatedFieldDialog","description":"<p>Method to open calculated field dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#createcalculatedfielddialog"},"csvExport":{"name":"csvExport","description":"<p>Export the Pivot table data to a CSV file (.csv).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#csvexport"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the PivotView elements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#detachunloadevent"},"excelExport":{"name":"excelExport","description":"<p>Export the Pivot table data to an Excel file (.xlsx).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#excelexport"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the Pivot widget properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#handleunload"},"loadPersistData":{"name":"loadPersistData","description":"<p>Loads pivot Layout</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#loadpersistdata"},"pdfExport":{"name":"pdfExport","description":"<p>Method allow to export both pivot table and pivot chart in a same PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#pdfexport"},"printChart":{"name":"printChart","description":"<p>Print method for the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#printchart"},"refresh":{"name":"refresh","description":"<p>Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#serverdatabind"},"showConditionalFormattingDialog":{"name":"showConditionalFormattingDialog","description":"<p>Method to open conditional formatting dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#showconditionalformattingdialog"},"showNumberFormattingDialog":{"name":"showNumberFormattingDialog","description":"<p>Method to open the number formatting dialog to set the format dynamically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#shownumberformattingdialog"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pivotview/#inject"}},"BarcodeGeneratorComponent":{"invalid":{"name":"invalid","description":"<p>Triggers if you enter any invalid character.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#invalid"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#allowserverdatabinding"},"backgroundColor":{"name":"backgroundColor","description":"<p>Defines the background color of the barcode.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#backgroundcolor"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#currentcontext"},"displayText":{"name":"displayText","description":"<p>Defines the text properties for the barcode.</p>\n","type":"DisplayTextModel","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#displaytext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#element"},"enableCheckSum":{"name":"enableCheckSum","description":"<p>Defines the checksum for the barcode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#enablechecksum"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#forceupdate"},"foreColor":{"name":"foreColor","description":"<p>Defines the forecolor of the barcode.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#forecolor"},"height":{"name":"height","description":"<p>Defines the height of the barcode model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#locale"},"margin":{"name":"margin","description":"<p>Defines the margin properties for the barcode.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#margin"},"mode":{"name":"mode","description":"<p>Defines the barcode rendering mode.</p>\n<ul>\n<li>SVG - Renders the bar-code objects as SVG elements</li>\n<li>Canvas - Renders the bar-code in a canvas</li>\n</ul>\n","type":"RenderingMode","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#mode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#state"},"type":{"name":"type","description":"<p>Defines the type of barcode to be rendered.</p>\n","type":"BarcodeType","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#type"},"value":{"name":"value","description":"<p>Defines the value of the barcode to be rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#value"},"width":{"name":"width","description":"<p>Defines the width of the barcode model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#databind"},"destroy":{"name":"destroy","description":"<p>It is used to destroy the Barcode component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#detachunloadevent"},"exportAsBase64Image":{"name":"exportAsBase64Image","description":"<p>Export the barcode as an image in the specified image type and returns it as base64 string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#exportasbase64image"},"exportImage":{"name":"exportImage","description":"<p>Export the barcode as an image in the specified image type and downloads it in the browser.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#exportimage"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Returns the module name of the barcode</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#getmodulename"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/barcode-generator/#inject"}},"DataMatrixGeneratorComponent":{"invalid":{"name":"invalid","description":"<p>Triggers if you enter any invalid character.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#invalid"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#allowserverdatabinding"},"backgroundColor":{"name":"backgroundColor","description":"<p>Defines the background color of the DataMatrix.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#backgroundcolor"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#currentcontext"},"displayText":{"name":"displayText","description":"<p>Defines the text properties for the DataMatrix.</p>\n","type":"DisplayTextModel","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#displaytext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#enablertl"},"encoding":{"name":"encoding","description":"<p>Defines encoding type of the DataMatrix.</p>\n","type":"DataMatrixEncoding","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#encoding"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#forceupdate"},"foreColor":{"name":"foreColor","description":"<p>Defines the forecolor of the DataMatrix.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#forecolor"},"height":{"name":"height","description":"<p>Defines the height of the DataMatrix.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#locale"},"margin":{"name":"margin","description":"<p>Defines the margin properties for the DataMatrix.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#margin"},"mode":{"name":"mode","description":"<p>Defines the DataMatrix rendering mode.</p>\n<ul>\n<li>SVG - Renders the bar-code objects as SVG elements</li>\n<li>Canvas - Renders the bar-code in a canvas</li>\n</ul>\n","type":"RenderingMode","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#mode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#setstate"},"size":{"name":"size","description":"<p>Defines encoding type of the DataMatrix.</p>\n","type":"DataMatrixSize","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#size"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#state"},"value":{"name":"value","description":"<p>Defines the value of the DataMatrix to be rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#value"},"width":{"name":"width","description":"<p>Defines the width of the DataMatrix.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#width"},"xDimension":{"name":"xDimension","description":"<p>Defines the xDimension of the DataMatrix.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#xdimension"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#databind"},"destroy":{"name":"destroy","description":"<p>It is used to destroy the Barcode component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#detachunloadevent"},"exportAsBase64Image":{"name":"exportAsBase64Image","description":"<p>Export the barcode as an image in the specified image type and returns it as base64 string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#exportasbase64image"},"exportImage":{"name":"exportImage","description":"<p>Export the barcode as an image in the specified image type and downloads it in the browser.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#exportimage"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Returns the module name of the barcode</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#getmodulename"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datamatrix-generator/#inject"}},"QRCodeGeneratorComponent":{"invalid":{"name":"invalid","description":"<p>Triggers if you enter any invalid character.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#invalid"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#allowserverdatabinding"},"backgroundColor":{"name":"backgroundColor","description":"<p>Defines the background color of the QR code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#backgroundcolor"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#currentcontext"},"displayText":{"name":"displayText","description":"<p>Defines the text properties for the QR code.</p>\n","type":"DisplayTextModel","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#displaytext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#enablertl"},"errorCorrectionLevel":{"name":"errorCorrectionLevel","description":"<p>Defines the error correction level of the QR code.</p>\n","type":"ErrorCorrectionLevel","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#errorcorrectionlevel"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#forceupdate"},"foreColor":{"name":"foreColor","description":"<p>Defines the forecolor of the QR code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#forecolor"},"height":{"name":"height","description":"<p>Defines the height of the QR code model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#locale"},"logo":{"name":"logo","description":"<p>Specifies the logo overlay configuration for the QR code.</p>\n","type":"QRCodeLogoModel","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#logo"},"margin":{"name":"margin","description":"<p>Defines the margin properties for the QR code.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#margin"},"mode":{"name":"mode","description":"<p>Defines the QR code rendering mode.</p>\n<ul>\n<li>SVG - Renders the bar-code objects as SVG elements</li>\n<li>Canvas - Renders the bar-code in a canvas</li>\n</ul>\n","type":"RenderingMode","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#mode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#state"},"value":{"name":"value","description":"<p>Defines the type of barcode to be rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#value"},"version":{"name":"version","description":"<ul>\n<li>Defines the version of the QR code.</li>\n</ul>\n","type":"QRCodeVersion","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#version"},"width":{"name":"width","description":"<p>Defines the width of the QR code model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#width"},"xDimension":{"name":"xDimension","description":"<p>Defines the xDimension of the QR code model.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#xdimension"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#databind"},"destroy":{"name":"destroy","description":"<p>It is used to destroy the Barcode component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#detachunloadevent"},"exportAsBase64Image":{"name":"exportAsBase64Image","description":"<p>Export the barcode as an image in the specified image type and returns it as base64 string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#exportasbase64image"},"exportImage":{"name":"exportImage","description":"<p>Export the barcode as an image in the specified image type and downloads it in the browser.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#exportimage"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Returns the module name of the barcode</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#getmodulename"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/qrcode-generator/#inject"}},"AnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationDirective#shouldcomponentupdate"}},"AnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/annotationsDirective#shouldcomponentupdate"}},"AxesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axesDirective#shouldcomponentupdate"}},"AxisDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/axisDirective#shouldcomponentupdate"}},"CircularGaugeComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation gets completed for pointers.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#animationcomplete"},"annotationRender":{"name":"annotationRender","description":"<p>Triggers before each annotation for the circular gauge gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#annotationrender"},"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before each axis label gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#axislabelrender"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the prints gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#beforeprint"},"dragEnd":{"name":"dragEnd","description":"<p>Triggers after the pointer is dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#dragend"},"dragMove":{"name":"dragMove","description":"<p>Triggers while dragging the pointers.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#dragmove"},"dragStart":{"name":"dragStart","description":"<p>Triggers before the pointer is dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#dragstart"},"gaugeMouseDown":{"name":"gaugeMouseDown","description":"<p>Triggers on mouse down.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#gaugemousedown"},"gaugeMouseLeave":{"name":"gaugeMouseLeave","description":"<p>Triggers while cursor leaves the circular gauge.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#gaugemouseleave"},"gaugeMouseMove":{"name":"gaugeMouseMove","description":"<p>Triggers on hovering the circular gauge.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#gaugemousemove"},"gaugeMouseUp":{"name":"gaugeMouseUp","description":"<p>Triggers when mouse up action is performed over the circular gauge.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#gaugemouseup"},"legendRender":{"name":"legendRender","description":"<p>Triggers before each legend for the circular gauge gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#legendrender"},"load":{"name":"load","description":"<p>Triggers before the circular gauge gets loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the circular gauge gets loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#loaded"},"radiusCalculate":{"name":"radiusCalculate","description":"<p>Triggers before the radius for the circular gauge gets calculated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#radiuscalculate"},"resized":{"name":"resized","description":"<p>Triggers to notify the resize of the circular gauge when the window is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#resized"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for pointer of the circular gauge gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#tooltiprender"},"allowImageExport":{"name":"allowImageExport","description":"<p>Enables and disables the export to image functionality in circular gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowimageexport"},"allowMargin":{"name":"allowMargin","description":"<p>Enables or disables the ability of the gauge to be rendered to the complete width. The left, right, top and bottom spacing will not be considered in the gauge when this property is disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowmargin"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Enables and disables the export to pdf functionality in circular gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowpdfexport"},"allowPrint":{"name":"allowPrint","description":"<p>Enables and disables the print functionality in circular gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowprint"},"allowRangePreRender":{"name":"allowRangePreRender","description":"<p>Allow the range element to be rendered ahead of the axis element, when this property is set to &quot;true&quot;.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowrangeprerender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#allowserverdatabinding"},"animationDuration":{"name":"animationDuration","description":"<p>Sets and gets the duration of animation in milliseconds in circular gauge.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#animationduration"},"axes":{"name":"axes","description":"<p>Sets and gets the options for customizing the axes of circular gauge.</p>\n","type":"AxisModel[]","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#axes"},"background":{"name":"background","description":"<p>Sets and gets the background color of the gauge. This property accepts value in hex code, rgba string as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#background"},"border":{"name":"border","description":"<p>Sets and gets the options for customizing the style properties of the gauge border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#border"},"centerX":{"name":"centerX","description":"<p>Sets and gets the X coordinate of the center of the circular gauge.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#centerx"},"centerY":{"name":"centerY","description":"<p>Sets and gets the Y coordinate of the center of the circular gauge.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#centery"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#currentcontext"},"description":{"name":"description","description":"<p>Sets and gets the information about gauge for assistive technology.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#description"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#enablepersistence"},"enablePointerDrag":{"name":"enablePointerDrag","description":"<p>Enables and disables drag movement of the pointer in the circular gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#enablepointerdrag"},"enableRangeDrag":{"name":"enableRangeDrag","description":"<p>Enables and disables the drag movement of the ranges in the circular gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#enablerangedrag"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#forceupdate"},"height":{"name":"height","description":"<p>Sets and gets the height of the circular gauge as a string in order to provide input as both like '100px' or '100%'.\nIf specified as '100%, gauge will render to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the circular gauge.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#locale"},"margin":{"name":"margin","description":"<p>Sets and gets the options to customize the left, right, top and bottom margins of the circular gauge.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#margin"},"moveToCenter":{"name":"moveToCenter","description":"<p>Enables and disables placing the half or quarter circle in center, if <code>centerX</code> and <code>centerY</code> properties are not specified.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#movetocenter"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#state"},"tabIndex":{"name":"tabIndex","description":"<p>Sets and gets the tab index value for the circular gauge.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#tabindex"},"theme":{"name":"theme","description":"<p>Sets and gets the theme styles supported for circular gauge. When the theme is set, the styles associated with the theme will be set in the gauge.</p>\n","type":"GaugeTheme","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#theme"},"title":{"name":"title","description":"<p>Sets and gets the title for circular gauge.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Sets and gets the options for customizing the title for circular gauge.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Sets and gets the options for customizing the tooltip of gauge.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#tooltip"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Enables and disables the grouping separator should be used for a number.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#usegroupingseparator"},"width":{"name":"width","description":"<p>Sets and gets the width of the circular gauge as a string in order to provide input as both like '100px' or '100%'.\nIf specified as '100%, gauge will render to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#databind"},"destroy":{"name":"destroy","description":"<p>This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#detachunloadevent"},"export":{"name":"export","description":"<p>This method is used to perform the export functionality for the circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#handleunload"},"print":{"name":"print","description":"<p>This method is used to print the rendered circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#serverdatabind"},"setAnnotationValue":{"name":"setAnnotationValue","description":"<p>This method is used to set the annotation content dynamically for circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#setannotationvalue"},"setPointerValue":{"name":"setPointerValue","description":"<p>This method is used to set the pointer value dynamically for circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#setpointervalue"},"setRangeValue":{"name":"setRangeValue","description":"<p>This method is used to set the range values dynamically for circular gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#setrangevalue"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circular-gauge/#inject"}},"PointerDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerDirective#shouldcomponentupdate"}},"PointersDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/pointersDirective#shouldcomponentupdate"}},"RangeDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangeDirective#shouldcomponentupdate"}},"RangesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/rangesDirective#shouldcomponentupdate"}},"MessageComponent":{"closed":{"name":"closed","description":"<p>Triggers when the Message component is closed successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/message/#closed"},"created":{"name":"created","description":"<p>Triggers when the Message component is created successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/message/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the Message component is destroyed successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/message/#destroyed"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#allowserverdatabinding"},"content":{"name":"content","description":"<p>Specifies the content to be displayed in the Message component. It can be a paragraph, a list, or any other HTML element.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/message/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/message/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class or multiple classes separated by space that can be appended to the root element of the Message component to customize the message.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/message/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/message/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/message/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/message/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/message/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/message/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/message/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/message/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/message/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/message/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/message/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/message/#setstate"},"severity":{"name":"severity","description":"<p>Specifies the severity of the message, which is used to define the appearance (icons and colors) of the message. The available severity messages are Normal, Success, Info, Warning, and Error.</p>\n","type":"string|Severity","link":"//ej2.syncfusion.com/react/documentation/api/message/#severity"},"showCloseIcon":{"name":"showCloseIcon","description":"<p>Shows or hides the close icon in the Message component. An end user can click the close icon to hide the message. The closed event is triggered when the message is closed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#showcloseicon"},"showIcon":{"name":"showIcon","description":"<p>Shows or hides the severity icon in the Message component. When set to true, the severity icon is displayed at the left edge of the Message component.\nThis icon will be distinctive based on the severity property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#showicon"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/message/#state"},"variant":{"name":"variant","description":"<p>Specifies the variant from predefined appearance variants to display the content of the Message component. The available variants are Text, Outlined, and Filled.</p>\n","type":"string|Variant","link":"//ej2.syncfusion.com/react/documentation/api/message/#variant"},"visible":{"name":"visible","description":"<p>Shows or hides the visibility of the Message component. When set to false, the Message component will be hidden.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/message/#visible"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#databind"},"destroy":{"name":"destroy","description":"<p>Method to destroy the Message component. It removes the component from the DOM and detaches all its bound events. It also removes the attributes and classes of the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the persisted state properties of the Message component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/message/#inject"}},"SkeletonComponent":{"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines single/multiple classes (separated by space) to be used for customization of Skeleton.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#forceupdate"},"height":{"name":"height","description":"<p>Defines the height of the Skeleton.\nHeight is not required when shape is &quot;Circle&quot; and &quot;Square&quot;.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#isvue"},"label":{"name":"label","description":"<p>Defines the 'aria-label' for Skeleton accessibility.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#label"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#setstate"},"shape":{"name":"shape","description":"<p>Defines the shape of the Skeleton.</p>\n","type":"string|SkeletonType","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#shape"},"shimmerEffect":{"name":"shimmerEffect","description":"<p>Defines the animation effect of the Skeleton.</p>\n","type":"string|ShimmerEffect","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#shimmereffect"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#state"},"visible":{"name":"visible","description":"<p>Defines the visibility state of Skeleton.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#visible"},"width":{"name":"width","description":"<p>Defines the width of the Skeleton.\nWidth will be prioritized and used as dimension when shape is &quot;Circle&quot; and &quot;Square&quot;.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#databind"},"destroy":{"name":"destroy","description":"<p>Method to destroys the Skeleton component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/skeleton/#inject"}},"ButtonModelPropDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropDirective#shouldcomponentupdate"}},"ButtonModelPropsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/buttonModelPropsDirective#shouldcomponentupdate"}},"ToastComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers the event before the toast close.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#beforeclose"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers the event before the toast shown.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#beforeopen"},"beforeSanitizeHtml":{"name":"beforeSanitizeHtml","description":"<p>Event triggers before sanitize the value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#beforesanitizehtml"},"click":{"name":"click","description":"<p>The event will be fired while clicking on the Toast.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#click"},"close":{"name":"close","description":"<p>Trigger the event after the Toast hides.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#close"},"created":{"name":"created","description":"<p>Triggers the event after the Toast gets created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers the event after the Toast gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#destroyed"},"open":{"name":"open","description":"<p>Triggers the event after the Toast shown on the target container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toast/#open"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Specifies the animation configuration settings for showing and hiding the Toast.</p>\n","type":"ToastAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/toast/#animation"},"buttons":{"name":"buttons","description":"<p>Specifies the collection of Toast action <code>buttons</code> to be rendered with the given\nButton model properties and its click action handler.</p>\n","type":"ButtonModelPropsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/toast/#buttons"},"content":{"name":"content","description":"<p>Specifies the content to be displayed on the Toast.\nAccepts selectors, string values and HTML elements.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/toast/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toast/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines single/multiple classes (separated by space) to be used for customization of Toast.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toast/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/toast/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#enablertl"},"extendedTimeout":{"name":"extendedTimeout","description":"<p>Specifies the Toast display time duration after interacting with the Toast.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/toast/#extendedtimeout"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toast/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/toast/#height"},"icon":{"name":"icon","description":"<p>Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/#icon"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toast/#locale"},"needsID":{"name":"needsID","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#needsid"},"newestOnTop":{"name":"newestOnTop","description":"<p>Specifies the newly created Toast message display order while multiple toast's are added to page one after another.\nBy default, newly added Toast will be added after old Toast's.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#newestontop"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toast/#portals"},"position":{"name":"position","description":"<p>Specifies the position of the Toast message to be displayed within target container.\nIn the case of multiple Toast display, new Toast position will not update on dynamic change of property values\nuntil the old Toast messages removed.\nX values are: Left , Right ,Center\nY values are: Top , Bottom</p>\n","type":"ToastPositionModel","link":"//ej2.syncfusion.com/react/documentation/api/toast/#position"},"progressDirection":{"name":"progressDirection","description":"<p>Specifies whether to show the progress bar with left to right direction to denote the Toast message display timeout.</p>\n","type":"ProgressDirectionType","link":"//ej2.syncfusion.com/react/documentation/api/toast/#progressdirection"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/toast/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toast/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toast/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toast/#setstate"},"showCloseButton":{"name":"showCloseButton","description":"<p>Specifies whether to show the close button in Toast message to close the Toast.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#showclosebutton"},"showProgressBar":{"name":"showProgressBar","description":"<p>Specifies whether to show the progress bar to denote the Toast message display timeout.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toast/#showprogressbar"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/toast/#state"},"target":{"name":"target","description":"<p>Specifies the target container where the Toast to be displayed.\nBased on the target, the positions such as <code>Left</code>, <code>Top</code> will be applied to the Toast.\nThe default value is null, which refers the <code>document.body</code> element.</p>\n","type":"HTMLElement|Element|string","link":"//ej2.syncfusion.com/react/documentation/api/toast/#target"},"template":{"name":"template","description":"<p>Specifies the HTML element/element ID as a string that can be displayed as a Toast.\nThe given template is taken as preference to render the Toast, even if the built-in properties such as title and content are defined.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/toast/#template"},"timeOut":{"name":"timeOut","description":"<p>Specifies the Toast display time duration on the page in milliseconds.</p>\n<ul>\n<li>Once the time expires, Toast message will be removed.</li>\n<li>Setting 0 as a time out value displays the Toast on the page until the user closes it manually.</li>\n</ul>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/toast/#timeout"},"title":{"name":"title","description":"<p>Specifies the title to be displayed on the Toast.\nAccepts selectors, string values and HTML elements.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/toast/#title"},"width":{"name":"width","description":"<p>Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.\nIn mobile devices, default width is considered as <code>100%</code>.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/toast/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers, attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#handleunload"},"hide":{"name":"hide","description":"<p>To Hide Toast element on a document.\nTo Hide all toast element when passing 'All'.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#serverdatabind"},"show":{"name":"show","description":"<p>To show Toast element on a document with the relative position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toast/#inject"}},"QueryBuilderComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when field, operator, value is change.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#actionbegin"},"beforeChange":{"name":"beforeChange","description":"<p>Triggers before the condition (And/Or), field, operator, value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#beforechange"},"change":{"name":"change","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#change"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when dataBound to the Query Builder.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#databound"},"ruleChange":{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"},"addRuleToNewGroups":{"name":"addRuleToNewGroups","description":"<p>Specifies a boolean value whether enable / disable the new rule adding while adding new groups.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#addruletonewgroups"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Specifies a boolean value whether to enable / disable the drag and drop support to move the rules/ groups.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#allowdraganddrop"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#allowserverdatabinding"},"allowValidation":{"name":"allowValidation","description":"<p>Enables or disables the validation.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#allowvalidation"},"autoSelectField":{"name":"autoSelectField","description":"<p>Specifies a boolean value whether enable / disable the auto selection with the first value for the field.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#autoselectfield"},"autoSelectOperator":{"name":"autoSelectOperator","description":"<p>Specifies a boolean value whether enable / disable the auto selection with the first value for the operator.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#autoselectoperator"},"columns":{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class or multiple classes, which are separated by a space in the QueryBuilder element.\nYou can add custom styles to the QueryBuilder using the cssClass property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Binds the column name from data source in query-builder.\nThe <code>dataSource</code> is an array of JavaScript objects.</p>\n","type":"Object[]|Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#datasource"},"displayMode":{"name":"displayMode","description":"<p>Specifies the displayMode as Horizontal or Vertical.</p>\n","type":"DisplayMode","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#displaymode"},"drag":{"name":"drag","description":"<p>Triggers when rule/ group are dragged (moved) continuously.</p>\n","type":"emittypedrageventargs","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#drag"},"dragStart":{"name":"dragStart","description":"<p>Triggers when rule/ group dragging starts.</p>\n","type":"emittypedrageventargs","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#dragstart"},"drop":{"name":"drop","description":"<p>Triggers when rule/ group are dropped on to the target rule/ group.</p>\n","type":"emittypedropeventargs","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#drop"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLDivElement","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#element"},"enableNotCondition":{"name":"enableNotCondition","description":"<p>Enables/Disables the not group condition in query builder.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#enablenotcondition"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, filter states will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#enablertl"},"enableSeparateConnector":{"name":"enableSeparateConnector","description":"<p>Specifies whether to enable separate connectors between rules/groups.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#enableseparateconnector"},"fieldMode":{"name":"fieldMode","description":"<p>Specifies the fieldMode as DropDownList or DropDownTree.</p>\n","type":"FieldMode","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#fieldmode"},"fieldModel":{"name":"fieldModel","description":"<p>Specifies the property for field.</p>\n","type":"DropDownListModel|DropDownTreeModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#fieldmodel"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#forceupdate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Specifies the template for the header with any other widgets.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#headertemplate"},"height":{"name":"height","description":"<p>Specifies the height of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#ignorecollectionwatch"},"immediateModeDelay":{"name":"immediateModeDelay","description":"<p>If immediateModeDelay is set by particular number, the rule Change event is triggered after that period.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#immediatemodedelay"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#locale"},"matchCase":{"name":"matchCase","description":"<p>If match case is set to true, the grid filters the records with exact match.\nif false, it filters case insensitive records (uppercase and lowercase letters treated the same).</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#matchcase"},"maxGroupCount":{"name":"maxGroupCount","description":"<p>Specifies the maximum group count or restricts the group count.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#maxgroupcount"},"operatorModel":{"name":"operatorModel","description":"<p>Specifies the property for operator.</p>\n","type":"DropDownListModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#operatormodel"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#props"},"readonly":{"name":"readonly","description":"<p>When set to true, the user interactions on the component are disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#root"},"rule":{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},"separator":{"name":"separator","description":"<p>Specifies the separator string for column.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#separator"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setstate"},"showButtons":{"name":"showButtons","description":"<p>Specifies the showButtons settings of the query builder component.\nThe showButtons can be enable Enables or disables the ruleDelete, groupInsert, and groupDelete buttons.</p>\n","type":"ShowButtonsModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#showbuttons"},"sortDirection":{"name":"sortDirection","description":"<p>Specifies the sort direction of the field names.</p>\n","type":"SortDirection","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#sortdirection"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#state"},"summaryView":{"name":"summaryView","description":"<p>Shows or hides the filtered query.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#summaryview"},"valueModel":{"name":"valueModel","description":"<p>Specifies the property for value.</p>\n","type":"ValueModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#valuemodel"},"width":{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#addeventlistener"},"addGroups":{"name":"addGroups","description":"<p>Adds single or multiple groups, which contains the collection of rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#addgroups"},"addRules":{"name":"addRules","description":"<p>Adds single or multiple rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#addrules"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#attachunloadevent"},"cloneGroup":{"name":"cloneGroup","description":"<p>Clones the group based on the group ID to the specific group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#clonegroup"},"cloneRule":{"name":"cloneRule","description":"<p>Clones the rule based on the rule ID to the specific group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#clonerule"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#databind"},"deleteGroup":{"name":"deleteGroup","description":"<p>Delete the Group</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#deletegroup"},"deleteGroups":{"name":"deleteGroups","description":"<p>Deletes the group or groups based on the group ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#deletegroups"},"deleteRules":{"name":"deleteRules","description":"<p>Deletes the rule or rules based on the rule ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#deleterules"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it maintains the initial input element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#detachunloadevent"},"getDataManagerQuery":{"name":"getDataManagerQuery","description":"<p>Gets the query for Data Manager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getdatamanagerquery"},"getFilteredRecords":{"name":"getFilteredRecords","description":"<p>Return the Query from current rules collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getfilteredrecords"},"getGroup":{"name":"getGroup","description":"<p>Gets the group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getgroup"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getlocaldata"},"getMongoQuery":{"name":"getMongoQuery","description":"<p>Gets the Mongo query from rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getmongoquery"},"getOperators":{"name":"getOperators","description":"<p>Return the operator bound to the column.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getoperators"},"getParameterizedNamedSql":{"name":"getParameterizedNamedSql","description":"<p>Gets the named parameter SQL query from rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getparameterizednamedsql"},"getParameterizedSql":{"name":"getParameterizedSql","description":"<p>Gets the parameter SQL query from rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getparameterizedsql"},"getPredicate":{"name":"getPredicate","description":"<p>Get the predicate from collection of rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getpredicate"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getrootelement"},"getRule":{"name":"getRule","description":"<p>Gets the rule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getrule"},"getRules":{"name":"getRules","description":"<p>Gets the rule or rule collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getrules"},"getRulesFromSql":{"name":"getRulesFromSql","description":"<p>Get the rules from SQL query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getrulesfromsql"},"getSqlFromRules":{"name":"getSqlFromRules","description":"<p>Gets the sql query from rules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getsqlfromrules"},"getValidRules":{"name":"getValidRules","description":"<p>Get the valid rule or rules collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getvalidrules"},"getValues":{"name":"getValues","description":"<p>Return values bound to the column.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#getvalues"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#handleunload"},"lockGroup":{"name":"lockGroup","description":"<p>Locks the group based on the group ID</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#lockgroup"},"lockRule":{"name":"lockRule","description":"<p>Locks the rule based on the rule ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#lockrule"},"notifyChange":{"name":"notifyChange","description":"<p>Notify the changes to component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#notifychange"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#requiredmodules"},"reset":{"name":"reset","description":"<p>Clears the rules without root rule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#reset"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#serverdatabind"},"setMongoQuery":{"name":"setMongoQuery","description":"<p>Set the rules from Mongo query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setmongoquery"},"setParameterizedNamedSql":{"name":"setParameterizedNamedSql","description":"<p>Sets the rules from the named parameter SQL query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setparameterizednamedsql"},"setParameterizedSql":{"name":"setParameterizedSql","description":"<p>Sets the rules from the parameter sql query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setparameterizedsql"},"setRules":{"name":"setRules","description":"<p>Set the rule or rules collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setrules"},"setRulesFromSql":{"name":"setRulesFromSql","description":"<p>Sets the rules from the sql query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#setrulesfromsql"},"validateFields":{"name":"validateFields","description":"<p>Validate the conditions and it display errors for invalid fields.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#validatefields"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#inject"}},"LinearGaugeComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after completing the animation for pointer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#animationcomplete"},"annotationRender":{"name":"annotationRender","description":"<p>Triggers before each annotation gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#annotationrender"},"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before each axis label gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#axislabelrender"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print functionality gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#beforeprint"},"dragEnd":{"name":"dragEnd","description":"<p>Triggers after the pointer is dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#dragend"},"dragMove":{"name":"dragMove","description":"<p>Triggers while dragging the pointers.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#dragmove"},"dragStart":{"name":"dragStart","description":"<p>Triggers before the pointer is dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#dragstart"},"gaugeMouseDown":{"name":"gaugeMouseDown","description":"<p>Triggers when performing the mouse down operation on gauge area.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#gaugemousedown"},"gaugeMouseLeave":{"name":"gaugeMouseLeave","description":"<p>Triggers when performing the mouse leave operation from the gauge area.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#gaugemouseleave"},"gaugeMouseMove":{"name":"gaugeMouseMove","description":"<p>Triggers when performing the mouse move operation on gauge area.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#gaugemousemove"},"gaugeMouseUp":{"name":"gaugeMouseUp","description":"<p>Triggers when performing mouse up operation on gauge area.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#gaugemouseup"},"load":{"name":"load","description":"<p>Triggers before the gauge gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the gauge gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#loaded"},"resized":{"name":"resized","description":"<p>Triggers to notify the resize of the linear gauge when the window is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#resized"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip get rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#tooltiprender"},"valueChange":{"name":"valueChange","description":"<p>Triggers while changing the value of the pointer by UI interaction.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#valuechange"},"allowImageExport":{"name":"allowImageExport","description":"<p>Enables or disables the export to image functionality in linear gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#allowimageexport"},"allowMargin":{"name":"allowMargin","description":"<p>Enables or disables the ability of the gauge to be rendered to the complete width. The left, right, top and bottom spacing will not be considered in the gauge when this property is disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#allowmargin"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Enables or disables the export to PDF functionality in linear gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#allowpdfexport"},"allowPrint":{"name":"allowPrint","description":"<p>Enables or disables the print functionality in linear gauge.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#allowprint"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#allowserverdatabinding"},"animationDuration":{"name":"animationDuration","description":"<p>Defines the duration of the loading animation in linear gauge, which animates the\naxis line, ticks, axis labels, ranges, pointers, and annotations. The value of this property will be in milliseconds.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#animationduration"},"annotations":{"name":"annotations","description":"<p>Specifies the options for customizing the annotation of linear gauge.</p>\n","type":"AnnotationModel[]","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#annotations"},"axes":{"name":"axes","description":"<p>Specifies the options for customizing the axis in linear gauge.</p>\n","type":"AxisModel[]","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#axes"},"background":{"name":"background","description":"<p>Specifies the background color of the gauge. This property accepts value in hex code, rgba string as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#background"},"border":{"name":"border","description":"<p>Specifies the options for customizing the style properties of the border for linear gauge.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#border"},"container":{"name":"container","description":"<p>Specifies the options for customizing the container in linear gauge.</p>\n","type":"ContainerModel","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#container"},"containerBounds":{"name":"containerBounds","description":"","type":"Rect","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#containerbounds"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#currentcontext"},"description":{"name":"description","description":"<p>Sets and gets the information about gauge for assistive technology.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#description"},"edgeLabelPlacement":{"name":"edgeLabelPlacement","description":"<p>Specifies the placement of the label in linear gauge.</p>\n","type":"LabelPlacement","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#edgelabelplacement"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#forceupdate"},"format":{"name":"format","description":"<p>Specifies the format to apply for internationalization in linear gauge.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#format"},"height":{"name":"height","description":"<p>Specifies the height of the linear gauge as a string in order to provide input as both like '100px' or '100%'.\nIf specified as '100%, gauge will render to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#locale"},"margin":{"name":"margin","description":"<p>Specifies the options to customize the margins of the linear gauge.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#margin"},"orientation":{"name":"orientation","description":"<p>Specifies the orientation of the rendering of the linear gauge.</p>\n","type":"Orientation","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#props"},"rangePalettes":{"name":"rangePalettes","description":"<p>Specifies the color palette for axis ranges in linear gauge.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#rangepalettes"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#state"},"tabIndex":{"name":"tabIndex","description":"<p>Specifies the tab index value for the linear gauge.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#tabindex"},"theme":{"name":"theme","description":"<p>Sets and gets the theme styles supported for linear gauge. When the theme is set, the styles associated with the theme will be set in the gauge.</p>\n","type":"LinearGaugeTheme","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#theme"},"title":{"name":"title","description":"<p>Specifies the title for linear gauge.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Specifies the options for customizing the appearance of title for linear gauge.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Specifies the options for customizing the tooltip in linear gauge.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#tooltip"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Enables or disables a grouping separator should be used for a number.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#usegroupingseparator"},"width":{"name":"width","description":"<p>Specifies the width of the linear gauge as a string in order to provide input as both like '100px' or '100%'.\nIf specified as '100%, gauge will render to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#databind"},"destroy":{"name":"destroy","description":"<p>This method destroys the linear gauge. This method removes the events associated with the linear gauge and disposes the objects created for rendering and updating the linear gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#detachunloadevent"},"export":{"name":"export","description":"<p>This method handles the export functionality for linear gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#handleunload"},"print":{"name":"print","description":"<p>This method handles the print functionality for linear gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#serverdatabind"},"setAnnotationValue":{"name":"setAnnotationValue","description":"<p>This method is used to set the annotation value in the linear gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#setannotationvalue"},"setPointerValue":{"name":"setPointerValue","description":"<p>This method is used to set the pointer value in the linear gauge.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#setpointervalue"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/linear-gauge/#inject"}},"AIAssistViewComponent":{"created":{"name":"created","description":"<p>Event triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#created"},"promptChanged":{"name":"promptChanged","description":"<p>Event triggered when the prompt text changed in the AIAssistView component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptchanged"},"promptRequest":{"name":"promptRequest","description":"<p>Event triggered when a prompt request is made in the AIAssistView component.\nProvides details about the prompt request, including whether it should be cancelled, the prompt text, output, and toolbar items.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptrequest"},"stopRespondingClick":{"name":"stopRespondingClick","description":"<p>Triggers when the 'Stop Responding' button is clicked while a prompt request is in progress.\nThis event allows users to handle stopping the response generation and update the UI accordingly.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#stoprespondingclick"},"activeView":{"name":"activeView","description":"<p>Specifies the index of the active view in the AIAssistView component.\nDetermines the currently active and visible view.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#activeview"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#allowserverdatabinding"},"bannerTemplate":{"name":"bannerTemplate","description":"<p>Specifies the template for the banner in the AIAssistView component.\nRepresents the content or layout used to render the banner. Can be a string or a function.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#bannertemplate"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies custom CSS classes for the AIAssistView component. Allows for additional custom styling.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#enablertl"},"footerTemplate":{"name":"footerTemplate","description":"<p>Specifies the template for the footer in the AIAssistView component.\nDefines the content or layout used to render the footer. Can be a string or a function.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the AIAssistView component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#portals"},"prompt":{"name":"prompt","description":"<p>Specifies the text input prompt for the AIAssistView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#prompt"},"promptIconCss":{"name":"promptIconCss","description":"<p>Specifies the CSS class for the prompter avatar in the AIAssistView component. Allows custom styling for the prompt avatar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#prompticoncss"},"promptItemTemplate":{"name":"promptItemTemplate","description":"<p>Specifies the template for rendering prompt items in the AIAssistView component.\nDefines the content or layout used to render prompt items, and can be either a string or a function.\nThe template context includes prompt text and toolbar items.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptitemtemplate"},"promptPlaceholder":{"name":"promptPlaceholder","description":"<p>Specifies the placeholder text for the prompt input text area in the AIAssistView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptplaceholder"},"promptSuggestionItemTemplate":{"name":"promptSuggestionItemTemplate","description":"<p>Specifies the template for rendering prompt suggestion items in the AIAssistView component.\nDefines the content or layout used to render prompt suggestion items, and can be either a string or a function.\nThe template context includes the index and suggestion text.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptsuggestionitemtemplate"},"promptSuggestions":{"name":"promptSuggestions","description":"<p>Specifies the list of prompt suggestions in the AIAssistView component.\nContains suggestions that can be used as prompts.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptsuggestions"},"promptSuggestionsHeader":{"name":"promptSuggestionsHeader","description":"<p>Specifies the header text for the prompt suggestions in the AIAssistView component. Provides a header for the list of suggestions.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#promptsuggestionsheader"},"promptToolbarSettings":{"name":"promptToolbarSettings","description":"<p>Specifies the settings for the prompt toolbar in the AIAssistView component.\nRepresents the configuration for the toolbar associated with prompt items.</p>\n","type":"PromptToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#prompttoolbarsettings"},"prompts":{"name":"prompts","description":"<p>Specifies the collection of prompts and their responses in the AIAssistView component.</p>\n","type":"PromptModel[]","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#prompts"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#refs"},"responseIconCss":{"name":"responseIconCss","description":"<p>Specifies the CSS class for the responder avatar in the AIAssistView component. Allows custom styling for the responder avatar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#responseiconcss"},"responseItemTemplate":{"name":"responseItemTemplate","description":"<p>Specifies the template for rendering response items in the AIAssistView component.\nDefines the content or layout used to render response items, and can be either a string or a function.\nThe template context includes the prompt text, response text, and toolbar items.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#responseitemtemplate"},"responseToolbarSettings":{"name":"responseToolbarSettings","description":"<p>Specifies the settings for the response toolbar in the AIAssistView component.\nRepresents the configuration for the toolbar associated with response items.</p>\n","type":"ResponseToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#responsetoolbarsettings"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether the clear button of text area is displayed in the AIAssistView component.\nDetermines if a button for clearing the prompt text area is shown or hidden.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#showclearbutton"},"showHeader":{"name":"showHeader","description":"<p>Specifies whether the header is displayed in the AIAssistView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#showheader"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#state"},"toolbarSettings":{"name":"toolbarSettings","description":"<p>Specifies the toolbar settings for the AIAssistView component.\nRepresents the configuration for toolbar items and actions within the component.</p>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#toolbarsettings"},"views":{"name":"views","description":"<p>Specifies the collection of assist view models in the AIAssistView component.\nRepresents the views available in the assist view.</p>\n","type":"AssistViewModel[]","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#views"},"width":{"name":"width","description":"<p>Specifies the width of the AIAssistView component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#addeventlistener"},"addPromptResponse":{"name":"addPromptResponse","description":"<p>Adds a response to the last prompt or appends a new prompt data in the AIAssistView component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#addpromptresponse"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#detachunloadevent"},"executePrompt":{"name":"executePrompt","description":"<p>Executes the specified prompt in the AIAssistView component. The method accepts a string representing the prompt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#executeprompt"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#render"},"scrollToBottom":{"name":"scrollToBottom","description":"<p>Scrolls the view to the bottom to display the most recent response in the AIAssistView component.\nThis method programmatically scrolls the view to the bottom,\ntypically used when new responses are added or to refocus on the latest response.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#scrolltobottom"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ai-assistview/#inject"}},"ViewDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewDirective#shouldcomponentupdate"}},"ViewsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/viewsDirective#shouldcomponentupdate"}},"ChatUIComponent":{"created":{"name":"created","description":"<p>Event triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#created"},"messageSend":{"name":"messageSend","description":"<p>Event triggered when a message is about to be sent in the Chat UI component.\nThis event allows for cancelling the send action if needed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#messagesend"},"userTyping":{"name":"userTyping","description":"<p>Event triggered when the user is typing a message in the Chat UI component.\nThis event provides updates on the user's typing status.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#usertyping"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#allowserverdatabinding"},"autoScrollToBottom":{"name":"autoScrollToBottom","description":"<p>Specifies whether the UI should automatically scroll to the bottom when a new message is added to the Chat UI component.\nWhen set to <code>true</code>, the chat will automatically scroll to display the latest message, ensuring that users can see new messages without manual intervention.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#autoscrolltobottom"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies custom CSS classes for the Chat UI component.\nThis property enables the application of additional styling options to customize the visual appearance of the chat interface.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#element"},"emptyChatTemplate":{"name":"emptyChatTemplate","description":"<p>Specifies the template for rendering the empty state of the Chat UI component.\nThis property can accept either a string or a function to customize the appearance when there are no messages to display in the chat.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#emptychattemplate"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#enablertl"},"footerTemplate":{"name":"footerTemplate","description":"<p>Specifies the template for the footer area in the Chat UI component.\nDefines the content or layout used to render the footer, which can be provided as a string or a function.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#forceupdate"},"headerIconCss":{"name":"headerIconCss","description":"<p>Specifies the CSS class for the header icon in the Chat UI component.\nThis property allows for custom styling of the header icon.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#headericoncss"},"headerText":{"name":"headerText","description":"<p>Specifies the header text to be displayed in the Chat UI component.\nThis property defines the text that appears in the header, which can indicate the current participant's username or the group name, providing context for the conversation.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#headertext"},"headerToolbar":{"name":"headerToolbar","description":"<p>Specifies the header toolbar settings for the Chat UI component.\nRepresents the configuration for toolbar items and actions within the component.</p>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#headertoolbar"},"height":{"name":"height","description":"<p>Specifies the height of the Chat UI component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#isvue"},"loadOnDemand":{"name":"loadOnDemand","description":"<p>Enables on-demand loading of messages, typically triggered as the user scrolls through the chat history.\nWhen set to <code>true</code>, older messages will load progressively, improving performance for large message histories by avoiding initial loading of all messages.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#loadondemand"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#locale"},"messageTemplate":{"name":"messageTemplate","description":"<p>Specifies the template for rendering individual messages in the Chat UI component.\nThis property can accept either a string or a function to customize the appearance of messages. The template context includes message and index.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#messagetemplate"},"messages":{"name":"messages","description":"<p>Specifies a collection of messages within the Chat UI component.\nEach message is represented by a MessageModel object, containing properties such as text, author, timestamp, and status.</p>\n","type":"MessageModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#messages"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text for the message input textarea in the Chat UI component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#setstate"},"showFooter":{"name":"showFooter","description":"<p>Specifies whether to show or hide footer in the Chat UI component.\nWhen set to <code>true</code>, the footer will be visible in the Chat UI component. If <code>false</code>, the footer will be hidden.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#showfooter"},"showHeader":{"name":"showHeader","description":"<p>Specifies whether the header is displayed in the Chat UI component.\nThis property controls the visibility of the header, allowing users to show or hide it as needed.\nWhen set to <code>false</code>, the header will be hidden from view.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#showheader"},"showTimeBreak":{"name":"showTimeBreak","description":"<p>Specifies whether time breaks are enabled for grouping chat messages by date.\nWhen set to <code>true</code>, messages will be grouped based on their timestamp, creating date-wise separators within the chat.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#showtimebreak"},"showTimeStamp":{"name":"showTimeStamp","description":"<p>Specifies whether timestamps are displayed alongside each message in the Chat UI component.\nWhen set to true, timestamps will appear with each message, helping users track the timing of conversations.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#showtimestamp"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#state"},"suggestionTemplate":{"name":"suggestionTemplate","description":"<p>Specifies the template for rendering suggestion items in the Chat UI component.\nDefines the content or layout used to render suggestion items, and can be either a string or a function.\nThe template context includes the index and suggestion text.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#suggestiontemplate"},"suggestions":{"name":"suggestions","description":"<p>Specifies the list of message suggestions displayed above the input textarea in the Chat UI component.\nThis property represents an array of suggestions that can assist the user in composing messages, providing quick replies.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#suggestions"},"timeBreakTemplate":{"name":"timeBreakTemplate","description":"<p>Defines a custom template for rendering time breaks in the Chat UI component.\nAccepts a string or function that formats the appearance of date-based separators, allowing customization of how messages are visually grouped by date.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#timebreaktemplate"},"timeStampFormat":{"name":"timeStampFormat","description":"<p>Specifies the format of the value that to be displayed in component.\nBy default, the format will be set based on the culture. You can set the format to &quot;format:'dd/MM/yyyy hh:mm a'&quot; in string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#timestampformat"},"typingUsers":{"name":"typingUsers","description":"<p>Specifies a list of users who are currently typing in the chat.\nThis property is updated to indicate active participants typing responses.</p>\n","type":"UserModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#typingusers"},"typingUsersTemplate":{"name":"typingUsersTemplate","description":"<p>Template for displaying users currently typing in the chat interface.\nAccepts a string or function to customize the display format.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#typinguserstemplate"},"user":{"name":"user","description":"<p>Represents the current user interacting with the Chat UI.\nUses the <code>UserModel</code> object, which contains current user information.\nMessages from the current user are displayed on the right side of the Chat UI for differentiation from other participants.</p>\n","type":"UserModel","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#user"},"width":{"name":"width","description":"<p>Specifies the width of the Chat UI component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#addeventlistener"},"addMessage":{"name":"addMessage","description":"<p>Appends a new message to the end of the Chat UI conversation area.\nThis method adds the specified message as the latest entry in the chat:</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#addmessage"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#detachunloadevent"},"focus":{"name":"focus","description":"<p>Sets focus for the input textarea in the Chat UI component.\nEnsures that user input is directed to the chat input field.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#focus"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#render"},"scrollToBottom":{"name":"scrollToBottom","description":"<p>Scrolls to the last message in the conversation area of the Chat UI component.\nThis method allows programmatic control to ensure the chat view is scrolled to the bottom, typically used when new messages are added or to refocus on the most recent conversation.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#scrolltobottom"},"scrollToMessage":{"name":"scrollToMessage","description":"<p>Scrolls to a specific message in the Chat UI component based on the provided message ID.\nLocates the message with the specified ID and scrolls it to the view.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#scrolltomessage"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#serverdatabind"},"updateMessage":{"name":"updateMessage","description":"<p>Updates an existing message in the Chat UI component.\nThis method allows for modifying a message that has already been added to the conversation.\nIt requires the unique identifier of the message to be updated and the new message content as a <code>MessageModel</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#updatemessage"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/#inject"}},"MessageDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messageDirective#shouldcomponentupdate"}},"MessagesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chat-ui/messagesDirective#shouldcomponentupdate"}},"RibbonCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionDirective#shouldcomponentupdate"}},"RibbonCollectionsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonCollectionsDirective#shouldcomponentupdate"}},"RibbonContextualTabDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabDirective#shouldcomponentupdate"}},"RibbonContextualTabsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonContextualTabsDirective#shouldcomponentupdate"}},"RibbonGroupDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupDirective#shouldcomponentupdate"}},"RibbonGroupsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonGroupsDirective#shouldcomponentupdate"}},"RibbonItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemDirective#shouldcomponentupdate"}},"RibbonItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonItemsDirective#shouldcomponentupdate"}},"RibbonComponent":{"created":{"name":"created","description":"<p>Event triggers once the Ribbon Component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#created"},"launcherIconClick":{"name":"launcherIconClick","description":"<p>Event triggers when the launcher icon of the group is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#launchericonclick"},"overflowPopupClose":{"name":"overflowPopupClose","description":"<p>Event triggers when the overflow popup closes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#overflowpopupclose"},"overflowPopupOpen":{"name":"overflowPopupOpen","description":"<p>Event triggers when the overflow popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#overflowpopupopen"},"ribbonCollapsing":{"name":"ribbonCollapsing","description":"<p>Event triggers before collapsing the ribbon.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribboncollapsing"},"ribbonExpanding":{"name":"ribbonExpanding","description":"<p>Event triggers before expanding the ribbon.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonexpanding"},"ribbonLayoutSwitched":{"name":"ribbonLayoutSwitched","description":"<p>Event triggers when the ribbon layout is switched.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonlayoutswitched"},"tabSelected":{"name":"tabSelected","description":"<p>Event triggers after selecting the tab item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#tabselected"},"tabSelecting":{"name":"tabSelecting","description":"<p>Event triggers before selecting the tab item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#tabselecting"},"activeLayout":{"name":"activeLayout","description":"<p>Specifies the active layout of the ribbon.\nAccepts one of the below values.</p>\n<ul>\n<li>Classic – Renders the ribbon tab contents in classic layout.</li>\n<li>Simplified – Renders the ribbon tab contents in single row.</li>\n</ul>\n","type":"RibbonLayout|string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#activelayout"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#allowserverdatabinding"},"backStageMenu":{"name":"backStageMenu","description":"<p>Defines the properties of ribbon backstage.</p>\n","type":"BackStageMenuModel","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#backstagemenu"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#context"},"contextualTabs":{"name":"contextualTabs","description":"<p>Defines the properties of ribbon contextual tab.</p>\n","type":"RibbonContextualTabSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#contextualtabs"},"cssClass":{"name":"cssClass","description":"<p>Defines one or more CSS classes to customize the appearance of ribbon.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#element"},"enableKeyTips":{"name":"enableKeyTips","description":"<p>Defines whether to enable the key tip or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enablekeytips"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enablertl"},"fileMenu":{"name":"fileMenu","description":"<p>Defines the properties of ribbon file menu.</p>\n","type":"FileMenuSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#filemenu"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#forceupdate"},"helpPaneTemplate":{"name":"helpPaneTemplate","description":"<p>Specifies the template content for the help pane of ribbon.\nThe help pane appears on the right side of the ribbon header row.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#helppanetemplate"},"hideLayoutSwitcher":{"name":"hideLayoutSwitcher","description":"<p>Defines whether to show the layout switcher button or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#hidelayoutswitcher"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isdestroyed"},"isMinimized":{"name":"isMinimized","description":"<p>Specifies whether the ribbon is minimized or not.\nWhen minimized, only the tab header is shown.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isminimized"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#isvue"},"launcherIconCss":{"name":"launcherIconCss","description":"<p>Defines the icon CSS for the launcher icon button in group header.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#launchericoncss"},"layoutSwitcherKeyTip":{"name":"layoutSwitcherKeyTip","description":"<p>Defines the key tip text for the layoutSwitcher icon.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#layoutswitcherkeytip"},"locale":{"name":"locale","description":"<p>Provides the localization value for the controls present in ribbon items.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#refs"},"ribbonBackstageModule":{"name":"ribbonBackstageModule","description":"<p>The <code>ribbonBackstageModule</code> is used to create and manipulate the ribbon backstage.</p>\n","type":"RibbonBackstage","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonbackstagemodule"},"ribbonButtonModule":{"name":"ribbonButtonModule","description":"<p>The <code>ribbonButtonModule</code> is used to create and manipulate buttons in ribbon item.</p>\n","type":"RibbonButton","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonbuttonmodule"},"ribbonCheckBoxModule":{"name":"ribbonCheckBoxModule","description":"<p>The <code>ribbonCheckBoxModule</code> is used to create and manipulate checkbox in ribbon item.</p>\n","type":"RibbonCheckBox","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribboncheckboxmodule"},"ribbonColorPickerModule":{"name":"ribbonColorPickerModule","description":"<p>The <code>ribbonColorPickerModule</code> is used to create and manipulate color picker in ribbon item.</p>\n","type":"RibbonColorPicker","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribboncolorpickermodule"},"ribbonComboBoxModule":{"name":"ribbonComboBoxModule","description":"<p>The <code>ribbonComboBoxModule</code> is used to create and manipulate combobox in ribbon item.</p>\n","type":"RibbonComboBox","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribboncomboboxmodule"},"ribbonContextualTabModule":{"name":"ribbonContextualTabModule","description":"<p>The <code>ribbonContextualTabModule</code> is used to create and manipulate group button in ribbon item.</p>\n","type":"RibbonContextualTab","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribboncontextualtabmodule"},"ribbonDropDownModule":{"name":"ribbonDropDownModule","description":"<p>The <code>ribbonDropDownModule</code> is used to create and manipulate dropdown buttons in ribbon item.</p>\n","type":"RibbonDropDown","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbondropdownmodule"},"ribbonFileMenuModule":{"name":"ribbonFileMenuModule","description":"<p>The <code>ribbonFileMenuModule</code> is used to create and manipulate the ribbon file menu.</p>\n","type":"RibbonFileMenu","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonfilemenumodule"},"ribbonGalleryModule":{"name":"ribbonGalleryModule","description":"<p>The <code>ribbonGalleryModule</code> is used to create and manipulate gallery in ribbon item.</p>\n","type":"RibbonGallery","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbongallerymodule"},"ribbonGroupButtonModule":{"name":"ribbonGroupButtonModule","description":"<p>The <code>ribbonGroupButtonModule</code> is used to create and manipulate group button in ribbon item.</p>\n","type":"RibbonGroupButton","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbongroupbuttonmodule"},"ribbonKeyTipModule":{"name":"ribbonKeyTipModule","description":"<p>The <code>ribbonKeytipModule</code> is used to create and manipulate the ribbon keytip.</p>\n","type":"RibbonKeyTip","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonkeytipmodule"},"ribbonSplitButtonModule":{"name":"ribbonSplitButtonModule","description":"<p>The <code>ribbonSplitButtonModule</code> is used to create and manipulate split buttons in ribbon item.</p>\n","type":"RibbonSplitButton","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#ribbonsplitbuttonmodule"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#root"},"selectedTab":{"name":"selectedTab","description":"<p>Specifies the index of the current active tab.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#selectedtab"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#state"},"tabAnimation":{"name":"tabAnimation","description":"<p>Specifies the animation configuration settings for showing the content of the Ribbon Tab.</p>\n","type":"TabAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#tabanimation"},"tabs":{"name":"tabs","description":"<p>Defines the list of ribbon tabs.</p>\n","type":"RibbonTabModel[]","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#tabs"},"width":{"name":"width","description":"<p>Specifies the width of the ribbon.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#width"},"addCollection":{"name":"addCollection","description":"<p>adds the ribbon collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#addcollection"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#addeventlistener"},"addGroup":{"name":"addGroup","description":"<p>Adds the ribbon group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#addgroup"},"addItem":{"name":"addItem","description":"<p>Adds ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#additem"},"addTab":{"name":"addTab","description":"<p>Adds the ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#addtab"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#detachunloadevent"},"disableGroup":{"name":"disableGroup","description":"<p>Disables a specific group within a ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#disablegroup"},"disableItem":{"name":"disableItem","description":"<p>Disables ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#disableitem"},"disableTab":{"name":"disableTab","description":"<p>Disables a specific tab in the ribbon.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#disabletab"},"enableGroup":{"name":"enableGroup","description":"<p>Enables a specific group within a ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enablegroup"},"enableItem":{"name":"enableItem","description":"<p>Enables ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enableitem"},"enableTab":{"name":"enableTab","description":"<p>Enables a specific tab in the ribbon.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#enabletab"},"getItem":{"name":"getItem","description":"<p>Gets the Ribbon item model associated with the specified item ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#getitem"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#handleunload"},"hideGroup":{"name":"hideGroup","description":"<p>Hides a specific group within a ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#hidegroup"},"hideItem":{"name":"hideItem","description":"<p>Hides a specific ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#hideitem"},"hideTab":{"name":"hideTab","description":"<p>Hides a specific tab in the ribbon.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#hidetab"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#refresh"},"refreshLayout":{"name":"refreshLayout","description":"<p>Refreshes the layout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#refreshlayout"},"removeCollection":{"name":"removeCollection","description":"<p>Removes the ribbon collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#removecollection"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#removeeventlistener"},"removeGroup":{"name":"removeGroup","description":"<p>Removes the ribbon group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#removegroup"},"removeItem":{"name":"removeItem","description":"<p>Removes ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#removeitem"},"removeTab":{"name":"removeTab","description":"<p>Removes the ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#removetab"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#render"},"selectTab":{"name":"selectTab","description":"<p>Selects the tab</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#selecttab"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#serverdatabind"},"showGroup":{"name":"showGroup","description":"<p>Shows a specific group within a ribbon tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#showgroup"},"showItem":{"name":"showItem","description":"<p>Shows a specific ribbon item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#showitem"},"showTab":{"name":"showTab","description":"<p>Shows a specific tab in the ribbon.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#showtab"},"updateCollection":{"name":"updateCollection","description":"<p>collection - Gets the ribbon collection to be updated. The id of the collection is a required property. Other properties are optional.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#updatecollection"},"updateGroup":{"name":"updateGroup","description":"<p>group - Gets the ribbon group to be updated. The id of the group is a required property. Other properties are optional.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#updategroup"},"updateItem":{"name":"updateItem","description":"<p>item - Gets the ribbon item to be updated. The id of the item is a required property. Other properties are optional.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#updateitem"},"updateTab":{"name":"updateTab","description":"<p>tab - Gets the ribbon tab to be updated. The id of the tab is a required property. Other properties are optional.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#updatetab"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/#inject"}},"RibbonTabDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabDirective#shouldcomponentupdate"}},"RibbonTabsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/ribbon/ribbonTabsDirective#shouldcomponentupdate"}},"PdfViewerComponent":{"addSignature":{"name":"addSignature","description":"<p>Triggers when a signature is added to a page of a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#addsignature"},"ajaxRequestFailed":{"name":"ajaxRequestFailed","description":"<p>Triggers when the AJAX request is failed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ajaxrequestfailed"},"ajaxRequestInitiate":{"name":"ajaxRequestInitiate","description":"<p>Triggers before the data is sent to the server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ajaxrequestinitiate"},"ajaxRequestSuccess":{"name":"ajaxRequestSuccess","description":"<p>Triggers on successful AJAX request.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ajaxrequestsuccess"},"annotationAdd":{"name":"annotationAdd","description":"<p>Triggers when an annotation is added to a PDF document's page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationadd"},"annotationDoubleClick":{"name":"annotationDoubleClick","description":"<p>Triggers when the annotation is double clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationdoubleclick"},"annotationMouseLeave":{"name":"annotationMouseLeave","description":"<p>Triggers when the user mouse moves away from the annotation object.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationmouseleave"},"annotationMouseover":{"name":"annotationMouseover","description":"<p>Triggers when the mouse is moved over the annotation object.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationmouseover"},"annotationMove":{"name":"annotationMove","description":"<p>Triggers when an annotation is moved over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationmove"},"annotationMoving":{"name":"annotationMoving","description":"<p>Triggers while moving an annotation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationmoving"},"annotationPropertiesChange":{"name":"annotationPropertiesChange","description":"<p>Triggers when the annotation's property is modified on a PDF document page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationpropertieschange"},"annotationRemove":{"name":"annotationRemove","description":"<p>Triggers when an annotation is removed from a PDF document's page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationremove"},"annotationResize":{"name":"annotationResize","description":"<p>Triggers when an annotation is resized over the page of a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationresize"},"annotationSelect":{"name":"annotationSelect","description":"<p>Triggers when an annotation is selected over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationselect"},"annotationUnSelect":{"name":"annotationUnSelect","description":"<p>Triggers when an annotation is unselected over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationunselect"},"beforeAddFreeText":{"name":"beforeAddFreeText","description":"<p>Triggers before adding a text in the freeText annotation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#beforeaddfreetext"},"bookmarkClick":{"name":"bookmarkClick","description":"<p>Triggers when the bookmark is clicked in the PDF Viewer's bookmark panel.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#bookmarkclick"},"buttonFieldClick":{"name":"buttonFieldClick","description":"<p>Triggers when the button is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#buttonfieldclick"},"commentAdd":{"name":"commentAdd","description":"<p>Triggers when a comment for the annotation is added to the comment panel.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commentadd"},"commentDelete":{"name":"commentDelete","description":"<p>Triggers when the comment for the annotation in the comment panel is deleted.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commentdelete"},"commentEdit":{"name":"commentEdit","description":"<p>Triggers when the comment for the annotation in the comment panel is edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commentedit"},"commentSelect":{"name":"commentSelect","description":"<p>Triggers when the comment for the annotation in the comment panel is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commentselect"},"commentStatusChanged":{"name":"commentStatusChanged","description":"<p>Triggers when the annotation's comment for status is changed in the comment panel.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commentstatuschanged"},"created":{"name":"created","description":"<p>Triggers during the creation of the PDF viewer component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#created"},"customContextMenuBeforeOpen":{"name":"customContextMenuBeforeOpen","description":"<p>Fires before the custom context menu option is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#customcontextmenubeforeopen"},"customContextMenuSelect":{"name":"customContextMenuSelect","description":"<p>Fires when a custom context menu option is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#customcontextmenuselect"},"documentLoad":{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"},"documentLoadFailed":{"name":"documentLoadFailed","description":"<p>Triggers while document loading failed in PdfViewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentloadfailed"},"documentUnload":{"name":"documentUnload","description":"<p>Triggers while closing the document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentunload"},"downloadEnd":{"name":"downloadEnd","description":"<p>Triggers when the download actions are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#downloadend"},"downloadStart":{"name":"downloadStart","description":"<p>Triggers when the download action is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#downloadstart"},"exportFailed":{"name":"exportFailed","description":"<p>Triggers when the annotations export in a PDF document fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportfailed"},"exportStart":{"name":"exportStart","description":"<p>Triggers when an exported annotation started in the PDF Viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportstart"},"exportSuccess":{"name":"exportSuccess","description":"<p>Triggers when the annotations in a PDF document are successfully exported.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportsuccess"},"extractTextCompleted":{"name":"extractTextCompleted","description":"<p>Triggers when an text extraction is completed in the PDF Viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#extracttextcompleted"},"formFieldAdd":{"name":"formFieldAdd","description":"<p>Triggers when a form field is added.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldadd"},"formFieldClick":{"name":"formFieldClick","description":"<p>Triggers when the form field is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldclick"},"formFieldDoubleClick":{"name":"formFieldDoubleClick","description":"<p>Triggers when the form field is double-clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfielddoubleclick"},"formFieldFocusOut":{"name":"formFieldFocusOut","description":"<p>Triggers when focus out from the form fields.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldfocusout"},"formFieldMouseLeave":{"name":"formFieldMouseLeave","description":"<p>Triggers when the mouse cursor leaves the form field.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldmouseleave"},"formFieldMouseover":{"name":"formFieldMouseover","description":"<p>Triggers when the mouse cursor is over a form field.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldmouseover"},"formFieldMove":{"name":"formFieldMove","description":"<p>Triggers when a form field is moved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldmove"},"formFieldPropertiesChange":{"name":"formFieldPropertiesChange","description":"<p>Triggers when a property of form field is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldpropertieschange"},"formFieldRemove":{"name":"formFieldRemove","description":"<p>Triggers when a form field is removed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldremove"},"formFieldResize":{"name":"formFieldResize","description":"<p>Triggers when a form field is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldresize"},"formFieldSelect":{"name":"formFieldSelect","description":"<p>Triggers when a form field is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldselect"},"formFieldUnselect":{"name":"formFieldUnselect","description":"<p>Triggers when a form field is unselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldunselect"},"hyperlinkClick":{"name":"hyperlinkClick","description":"<p>Triggers when a hyperlink in a PDF document is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#hyperlinkclick"},"hyperlinkMouseOver":{"name":"hyperlinkMouseOver","description":"<p>Triggers when hyperlink in a PDF document is hovered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#hyperlinkmouseover"},"importFailed":{"name":"importFailed","description":"<p>Triggers when the annotations imports in a PDF document fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#importfailed"},"importStart":{"name":"importStart","description":"<p>Triggers when an imported annotation started to appear in the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#importstart"},"importSuccess":{"name":"importSuccess","description":"<p>Triggers when the annotations in a PDF document are successfully imported.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#importsuccess"},"keyboardCustomCommands":{"name":"keyboardCustomCommands","description":"<p>Triggers when the customized keyboard command keys are pressed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#keyboardcustomcommands"},"moveSignature":{"name":"moveSignature","description":"<p>Triggers when a signature is moved across the page of a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#movesignature"},"pageChange":{"name":"pageChange","description":"<p>Triggers when there is change in current page number.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagechange"},"pageClick":{"name":"pageClick","description":"<p>Triggers when the mouse click is performed over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pageclick"},"pageMouseover":{"name":"pageMouseover","description":"<p>Triggers when moving the mouse over the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagemouseover"},"pageOrganizerSaveAs":{"name":"pageOrganizerSaveAs","description":"<p>Triggers when the page organizer save as triggered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pageorganizersaveas"},"pageRenderComplete":{"name":"pageRenderComplete","description":"<p>Triggers upon completion of page rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagerendercomplete"},"pageRenderInitiate":{"name":"pageRenderInitiate","description":"<p>Triggers upon the initiation of page rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagerenderinitiate"},"printEnd":{"name":"printEnd","description":"<p>Triggers when the print actions are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#printend"},"printStart":{"name":"printStart","description":"<p>Triggers when the print action is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#printstart"},"removeSignature":{"name":"removeSignature","description":"<p>Triggers when the signature is removed from the page of a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#removesignature"},"resizeSignature":{"name":"resizeSignature","description":"<p>Triggers when the signature is resized and placed on a page of a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#resizesignature"},"resourcesLoaded":{"name":"resourcesLoaded","description":"<p>Triggers after loading the Pdfium resources.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#resourcesloaded"},"signaturePropertiesChange":{"name":"signaturePropertiesChange","description":"<p>Triggers when the property of the signature is changed in the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signaturepropertieschange"},"signatureSelect":{"name":"signatureSelect","description":"<p>Triggers when signature is selected over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signatureselect"},"signatureUnselect":{"name":"signatureUnselect","description":"<p>Triggers when signature is unselected over the page of the PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signatureunselect"},"textSearchComplete":{"name":"textSearchComplete","description":"<p>Triggers when the text search is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textsearchcomplete"},"textSearchHighlight":{"name":"textSearchHighlight","description":"<p>Triggers when the text search text is highlighted.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textsearchhighlight"},"textSearchStart":{"name":"textSearchStart","description":"<p>Triggers when the text search is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textsearchstart"},"textSelectionEnd":{"name":"textSelectionEnd","description":"<p>Triggers when the text selection is complete.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textselectionend"},"textSelectionStart":{"name":"textSelectionStart","description":"<p>Triggers when the text selection is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textselectionstart"},"thumbnailClick":{"name":"thumbnailClick","description":"<p>Triggers when the thumbnail in the PDF Viewer's thumbnail panel is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#thumbnailclick"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when custom toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#toolbarclick"},"validateFormFields":{"name":"validateFormFields","description":"<p>Triggers when validation is failed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#validateformfields"},"zoomChange":{"name":"zoomChange","description":"<p>Triggers When the magnification value changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#zoomchange"},"DropdownFieldSettings":{"name":"DropdownFieldSettings","description":"<p>Get or set the dropdown field settings.</p>\n","type":"DropdownFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#dropdownfieldsettings"},"accessibilityTags":{"name":"accessibilityTags","description":"<p>Gets the Accessibility Tags object of the pdf viewer.</p>\n","type":"AccessibilityTags","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#accessibilitytags"},"ajaxRequestSettings":{"name":"ajaxRequestSettings","description":"<p>Defines the ajax Request settings of the PDF Viewer.</p>\n","type":"AjaxRequestSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ajaxrequestsettings"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#allowserverdatabinding"},"annotation":{"name":"annotation","description":"<p>Gets the annotation object of the pdf viewer.</p>\n","type":"Annotation","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotation"},"annotationCollection":{"name":"annotationCollection","description":"<p>Get the Loaded document annotation Collections in the PdfViewer control.</p>\n","type":"any[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationcollection"},"annotationSelectorSettings":{"name":"annotationSelectorSettings","description":"<p>Defines the settings of annotation selector.</p>\n","type":"AnnotationSelectorSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationselectorsettings"},"annotationSettings":{"name":"annotationSettings","description":"<p>Defines the settings of the annotations.</p>\n","type":"AnnotationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#annotationsettings"},"areaSettings":{"name":"areaSettings","description":"<p>Defines the settings of area annotation.</p>\n","type":"AreaSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#areasettings"},"arrowSettings":{"name":"arrowSettings","description":"<p>Defines the settings of arrow annotation.</p>\n","type":"ArrowSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#arrowsettings"},"bookmark":{"name":"bookmark","description":"<p>Gets the bookmark view object of the pdf viewer.</p>\n","type":"BookmarkView","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#bookmark"},"checkBoxFieldSettings":{"name":"checkBoxFieldSettings","description":"<p>Get or set the check box field settings.</p>\n","type":"CheckBoxFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#checkboxfieldsettings"},"circleSettings":{"name":"circleSettings","description":"<p>Defines the settings of circle annotation.</p>\n","type":"CircleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#circlesettings"},"commandManager":{"name":"commandManager","description":"<p>Defines a set of custom commands and binds them with a set of desired key gestures.</p>\n","type":"CommandManagerModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#commandmanager"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#context"},"contextMenuOption":{"name":"contextMenuOption","description":"<p>Specifies the state of the ContextMenu in the PDF document.</p>\n","type":"ContextMenuAction","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#contextmenuoption"},"contextMenuSettings":{"name":"contextMenuSettings","description":"<p>Defines the context menu settings.</p>\n","type":"ContextMenuSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#contextmenusettings"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#currentcontext"},"currentPageNumber":{"name":"currentPageNumber","description":"<p>Returns the current page number of the document displayed in the PdfViewer control.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#currentpagenumber"},"customFonts":{"name":"customFonts","description":"<p>Specifies a collection of font names as strings. These fonts must be located in the resourceUrl folder.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#customfonts"},"customStamp":{"name":"customStamp","description":"<p>Defines the stamp items of the PDF Viewer.</p>\n","type":"CustomStampModel[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#customstamp"},"customStampSettings":{"name":"customStampSettings","description":"<p>Defines the settings of customStamp annotation.</p>\n","type":"CustomStampSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#customstampsettings"},"dateTimeFormat":{"name":"dateTimeFormat","description":"<p>Customize desired date and time format</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#datetimeformat"},"designerMode":{"name":"designerMode","description":"<p>Enable or disable the interaction of form fields in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#designermode"},"disableContextMenuItems":{"name":"disableContextMenuItems","description":"<p>Disables the menu items in the context menu.</p>\n","type":"ContextMenuItem[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#disablecontextmenuitems"},"distanceSettings":{"name":"distanceSettings","description":"<p>Defines the settings of distance annotation.</p>\n","type":"DistanceSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#distancesettings"},"documentPath":{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},"downloadFileName":{"name":"downloadFileName","description":"<p>Gets or sets the download file name in the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#downloadfilename"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#element"},"enableAccessibilityTags":{"name":"enableAccessibilityTags","description":"<p>Determines whether accessibility tags are enabled or disabled.\nAccessibility tags can help make web content more accessible to users with disabilities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableaccessibilitytags"},"enableAnnotation":{"name":"enableAnnotation","description":"<p>Enable or disable the annotation in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableannotation"},"enableAnnotationToolbar":{"name":"enableAnnotationToolbar","description":"<p>Opens the annotation toolbar when the PDF document is loaded in the PDF Viewer control initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableannotationtoolbar"},"enableAutoComplete":{"name":"enableAutoComplete","description":"<p>Enable or disables the auto complete option in form documents.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableautocomplete"},"enableBookmark":{"name":"enableBookmark","description":"<p>Enables or disables the bookmark view in the PDF viewer</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablebookmark"},"enableBookmarkStyles":{"name":"enableBookmarkStyles","description":"<p>Enables or disables the bookmark styles in the PDF viewer</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablebookmarkstyles"},"enableCommentPanel":{"name":"enableCommentPanel","description":"<p>Enable or disables the Comment Panel of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablecommentpanel"},"enableDesktopMode":{"name":"enableDesktopMode","description":"<p>Gets or sets a boolean value to show or hide desktop toolbar in mobile devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabledesktopmode"},"enableDownload":{"name":"enableDownload","description":"<p>Enable or disables the download option of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabledownload"},"enableFormDesigner":{"name":"enableFormDesigner","description":"<p>Show or hide the form designer tool in the main toolbar of the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableformdesigner"},"enableFormDesignerToolbar":{"name":"enableFormDesignerToolbar","description":"<p>Opens the form designer toolbar when the PDF document is loaded in the PDF Viewer control initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableformdesignertoolbar"},"enableFormFields":{"name":"enableFormFields","description":"<p>Enable or disable the form fields in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableformfields"},"enableFormFieldsValidation":{"name":"enableFormFieldsValidation","description":"<p>Enable or disable the form fields validation.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableformfieldsvalidation"},"enableFreeText":{"name":"enableFreeText","description":"<p>Enable or disable the free text annotation in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablefreetext"},"enableHandwrittenSignature":{"name":"enableHandwrittenSignature","description":"<p>Enables or disables the handwritten signature in PDF document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablehandwrittensignature"},"enableHyperlink":{"name":"enableHyperlink","description":"<p>Enables or disables the hyperlinks in PDF document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablehyperlink"},"enableImportAnnotationMeasurement":{"name":"enableImportAnnotationMeasurement","description":"<p>Enable or disable the customization of measure values in PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableimportannotationmeasurement"},"enableInkAnnotation":{"name":"enableInkAnnotation","description":"<p>If it is set as false, then the ink annotation support in the PDF Viewer will be disabled. By default it is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableinkannotation"},"enableLocalStorage":{"name":"enableLocalStorage","description":"<p>Enable or disable session storage for PDF Viewer data.\nWhen true, the PDF Viewer stores data in an internal collection instead of session storage.\nWhen false, the default session storage mechanism is used.\n<strong>Remarks:</strong></p>\n<ul>\n<li>Setting <code>enableLocalStorage</code> to <code>true</code> stores all session-specific data (e.g., form fields, annotations, signatures) in memory, increasing memory usage based on the document size and content complexity.</li>\n<li>Larger documents or those with more interactive elements will consume more memory.</li>\n<li>Ensure proper cleanup by destroying the PDF Viewer instance when no longer needed to avoid memory leaks.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablelocalstorage"},"enableMagnification":{"name":"enableMagnification","description":"<p>Enable or disable the Magnification module of PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablemagnification"},"enableMeasureAnnotation":{"name":"enableMeasureAnnotation","description":"<p>Enable or disable the calibrate annotation in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablemeasureannotation"},"enableMultiLineOverlap":{"name":"enableMultiLineOverlap","description":"<p>Enable or disable the multi line text markup annotations in overlapping collections.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablemultilineoverlap"},"enableMultiPageAnnotation":{"name":"enableMultiPageAnnotation","description":"<p>Enables or disables the multi-page text markup annotation selection in UI.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablemultipageannotation"},"enableNavigation":{"name":"enableNavigation","description":"<p>Enable or disable the Navigation module of PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablenavigation"},"enableNavigationToolbar":{"name":"enableNavigationToolbar","description":"<p>Enable or disables the Navigation toolbar of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablenavigationtoolbar"},"enablePageOrganizer":{"name":"enablePageOrganizer","description":"<p>Enable or disable the page organizer in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablepageorganizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablepersistence"},"enablePinchZoom":{"name":"enablePinchZoom","description":"<p>Enable or disable the pinch zoom option in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablepinchzoom"},"enablePrint":{"name":"enablePrint","description":"<p>Enable or disables the print option of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableprint"},"enablePrintRotation":{"name":"enablePrintRotation","description":"<p>If it is set as FALSE, will suppress the page rotation of Landscape document on print action. By default it is TRUE.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableprintrotation"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablertl"},"enableShapeAnnotation":{"name":"enableShapeAnnotation","description":"<p>Enable or disable the shape annotation in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableshapeannotation"},"enableShapeLabel":{"name":"enableShapeLabel","description":"<p>Enable or disable the Label for shapeAnnotations of PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enableshapelabel"},"enableStampAnnotations":{"name":"enableStampAnnotations","description":"<p>Enables and disable the stamp annotations when the PDF viewer control is loaded initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablestampannotations"},"enableStickyNotesAnnotation":{"name":"enableStickyNotesAnnotation","description":"<p>Enables and disable the stickyNotes annotations when the PDF viewer control is loaded initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablestickynotesannotation"},"enableTextMarkupAnnotation":{"name":"enableTextMarkupAnnotation","description":"<p>Enable or disable the text markup annotation in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletextmarkupannotation"},"enableTextMarkupResizer":{"name":"enableTextMarkupResizer","description":"<p>Enable or disable the text markup resizer to modify the bounds in UI.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletextmarkupresizer"},"enableTextSearch":{"name":"enableTextSearch","description":"<p>Enable or disable the text search in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletextsearch"},"enableTextSelection":{"name":"enableTextSelection","description":"<p>Enable or disable the text selection in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletextselection"},"enableThumbnail":{"name":"enableThumbnail","description":"<p>Enables or disables the thumbnail view in the PDF viewer</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablethumbnail"},"enableToolbar":{"name":"enableToolbar","description":"<p>Enable or disables the toolbar of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletoolbar"},"enableZoomOptimization":{"name":"enableZoomOptimization","description":"<p>Enable or disable the zoom optimization mode in PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablezoomoptimization"},"exportAnnotationFileName":{"name":"exportAnnotationFileName","description":"<p>Gets or sets the export annotations JSON file name in the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportannotationfilename"},"extractTextOption":{"name":"extractTextOption","description":"<p>Enables different levels of extract text for the Standalone PDF Viewer.\nThe choice of <code>extractTextCompleted</code> determines the content of the <code>textData</code>.\n<strong>Options:</strong></p>\n<ul>\n<li><code>ExtractTextOption.TextAndBounds</code>: Indicates that both plain text and text with bounds (layout information) are returned.\nThis is the default behavior, providing both the extracted text and its positional data.\nUse this option when you need both the textual content and its layout information for further processing or analysis.</li>\n<li><code>ExtractTextOption.TextOnly</code>: Indicates that only plain text is extracted and returned.\nThis option does not include any additional bounds  information.</li>\n<li><code>ExtractTextOption.BoundsOnly</code>: Indicates that text is returned along with layout information, such as bounds or coordinates.\nThis option does not include plain text and is useful when only positional data is required.</li>\n<li><code>ExtractTextOption.None</code>: Indicates that no text information is returned. This option is not applicable for the ExtractText method and is only used in the extractTextCompleted event when no text data is available.</li>\n</ul>\n<p>This property is used to determine how <code>textData</code> should be managed during the <code>extractTextCompleted</code> event.</p>\n","type":"ExtractTextOption","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#extracttextoption"},"fileName":{"name":"fileName","description":"<p>Gets or sets the document name loaded in the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#filename"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#forceupdate"},"formDesigner":{"name":"formDesigner","description":"<p>Gets the FormDesigner object of the pdf viewer.</p>\n","type":"FormDesigner","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formdesigner"},"formFieldCollections":{"name":"formFieldCollections","description":"<p>Gets the form fields present in the loaded PDF document. It used to get the form fields id, name, type and it's values.</p>\n","type":"FormFieldModel[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#formfieldcollections"},"freeTextSettings":{"name":"freeTextSettings","description":"<p>Defines the settings of free text annotation.</p>\n","type":"FreeTextSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#freetextsettings"},"handWrittenSignatureSettings":{"name":"handWrittenSignatureSettings","description":"<p>Defines the settings of handWrittenSignature.</p>\n","type":"HandWrittenSignatureSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#handwrittensignaturesettings"},"height":{"name":"height","description":"<p>Defines the scrollable height of the PdfViewer control.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#height"},"hideSaveSignature":{"name":"hideSaveSignature","description":"<p>Gets or sets a boolean value to show or hide the save signature check box option in the signature dialog.\nFALSE by default</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#hidesavesignature"},"highlightSettings":{"name":"highlightSettings","description":"<p>Defines the settings of highlight annotation.</p>\n","type":"HighlightSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#highlightsettings"},"hyperlinkOpenState":{"name":"hyperlinkOpenState","description":"<p>Specifies the open state of the hyperlink in the PDF document.</p>\n","type":"LinkTarget","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#hyperlinkopenstate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#initrendercalled"},"initialDialogSettings":{"name":"initialDialogSettings","description":"<p>Get or set the signature dialog settings for initial field.</p>\n","type":"SignatureDialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#initialdialogsettings"},"initialFieldSettings":{"name":"initialFieldSettings","description":"<p>Get or set the initial field settings.</p>\n","type":"InitialFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#initialfieldsettings"},"initialRenderPages":{"name":"initialRenderPages","description":"<p>Initially renders the first N pages of the PDF document when the document is loaded.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#initialrenderpages"},"inkAnnotationSettings":{"name":"inkAnnotationSettings","description":"<p>Defines the ink annotation settings for PDF Viewer.It used to customize the strokeColor, thickness, opacity of the ink annotation.</p>\n","type":"InkAnnotationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#inkannotationsettings"},"interactionMode":{"name":"interactionMode","description":"<p>Sets the interaction mode of the PDF Viewer.</p>\n","type":"InteractionMode","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#interactionmode"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isangular"},"isAnnotationToolbarOpen":{"name":"isAnnotationToolbarOpen","description":"<p>Opens the annotation toolbar when the PDF document is loaded in the PDF Viewer control initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isannotationtoolbaropen"},"isAnnotationToolbarVisible":{"name":"isAnnotationToolbarVisible","description":"<p>Opens the annotation toolbar when the PDF document is loaded in the PDF Viewer control initially\nand get the annotation Toolbar Visible status.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isannotationtoolbarvisible"},"isBookmarkPanelOpen":{"name":"isBookmarkPanelOpen","description":"<p>Gets or sets a boolean value to show or hide the bookmark panel while loading a document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isbookmarkpanelopen"},"isCommandPanelOpen":{"name":"isCommandPanelOpen","description":"<p>If it set as true, then the command panel show at initial document loading in the PDF viewer</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#iscommandpanelopen"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isdestroyed"},"isDocumentEdited":{"name":"isDocumentEdited","description":"<p>Checks whether the PDF document is edited.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isdocumentedited"},"isExtractText":{"name":"isExtractText","description":"<p>Enable or disable the text extract from the PDF viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isextracttext"},"isFormDesignerToolbarVisible":{"name":"isFormDesignerToolbarVisible","description":"<p>Opens the annotation toolbar when the PDF document is loaded in the PDF Viewer control initially\nand get the annotation Toolbar Visible status.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isformdesignertoolbarvisible"},"isFormFieldDocument":{"name":"isFormFieldDocument","description":"<p>Enable if the PDF document contains form fields.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isformfielddocument"},"isMaintainSelection":{"name":"isMaintainSelection","description":"<p>Maintain the selection of text markup annotation.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ismaintainselection"},"isPageOrganizerOpen":{"name":"isPageOrganizerOpen","description":"<p>Specifies whether the page organizer dialog will be displayed upon the initial document loading in the PDF Viewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#ispageorganizeropen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isserverrendered"},"isSignatureEditable":{"name":"isSignatureEditable","description":"<p>Enables or disable saving Hand Written signature as editable in the PDF.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#issignatureeditable"},"isThumbnailViewOpen":{"name":"isThumbnailViewOpen","description":"<p>If it set as true, then the thumbnail view show at initial document loading in the PDF Viewer</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isthumbnailviewopen"},"isValidFreeText":{"name":"isValidFreeText","description":"<p>Checks if the freeText value is valid or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isvalidfreetext"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#isvue"},"lineSettings":{"name":"lineSettings","description":"<p>Defines the settings of line annotation.</p>\n","type":"LineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#linesettings"},"listBoxFieldSettings":{"name":"listBoxFieldSettings","description":"<p>Get or set the listbox field settings.</p>\n","type":"ListBoxFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#listboxfieldsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#locale"},"magnification":{"name":"magnification","description":"<p>Gets the magnification object of the pdf viewer.</p>\n","type":"Magnification","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#magnification"},"maxZoom":{"name":"maxZoom","description":"<p>Specifies the maximum allowable zoom level for the control, with a default value of 400.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#maxzoom"},"measurementSettings":{"name":"measurementSettings","description":"<p>Defines the settings of measurement annotation.</p>\n","type":"MeasurementSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#measurementsettings"},"minZoom":{"name":"minZoom","description":"<p>Specifies the minimum acceptable zoom level for the control, with a default value of 10.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#minzoom"},"navigation":{"name":"navigation","description":"<p>Gets the navigation object of the pdf viewer.</p>\n","type":"Navigation","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#navigation"},"pageCount":{"name":"pageCount","description":"<p>gets the page count of the document loaded in the PdfViewer control.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagecount"},"pageOrganizer":{"name":"pageOrganizer","description":"<p>Gets the page organizer object of the PDF Viewer.</p>\n","type":"PageOrganizer","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pageorganizer"},"pageOrganizerSettings":{"name":"pageOrganizerSettings","description":"<p>This property allows for control over various page management functionalities within the PDF Viewer. By setting it to <code>true</code>, users will be able to delete, insert, rotate pages, rearrange pages. Conversely, setting it to <code>false</code> will disable these actions.</p>\n","type":"PageOrganizerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pageorganizersettings"},"passwordFieldSettings":{"name":"passwordFieldSettings","description":"<p>Get or set the password field settings.</p>\n","type":"PasswordFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#passwordfieldsettings"},"perimeterSettings":{"name":"perimeterSettings","description":"<p>Defines the settings of perimeter annotation.</p>\n","type":"PerimeterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#perimetersettings"},"polygonSettings":{"name":"polygonSettings","description":"<p>Defines the settings of polygon annotation.</p>\n","type":"PolygonSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#polygonsettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#portals"},"print":{"name":"print","description":"<p>Gets the print object of the pdf viewer.</p>\n","type":"Print","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#print"},"printMode":{"name":"printMode","description":"<p>Specifies the print mode in the PDF Viewer.</p>\n","type":"PrintMode","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#printmode"},"printScaleFactor":{"name":"printScaleFactor","description":"<p>Specifies the document printing quality. The default printing quality is set to 1.0. This limit varies from 0.5 to 5.0. If an invalid value is specified, the default value of 1.0 will be used. For documents with smaller page dimensions, a higher print quality is recommended.\n{% codeBlock src='pdfviewer/printScaleFactor/index.md' %}{% endBlock %}</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#printscalefactor"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#props"},"radioButtonFieldSettings":{"name":"radioButtonFieldSettings","description":"<p>Get or set the radio button field settings.</p>\n","type":"RadioButtonFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#radiobuttonfieldsettings"},"radiusSettings":{"name":"radiusSettings","description":"<p>Defines the settings of radius annotation.</p>\n","type":"RadiusSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#radiussettings"},"rectangleSettings":{"name":"rectangleSettings","description":"<p>Defines the settings of rectangle annotation.</p>\n","type":"RectangleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#rectanglesettings"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#refs"},"resourceUrl":{"name":"resourceUrl","description":"<p>Set the resource URL for assets or the public directory. The standalone PDF Viewer will load its custom resources from this URL.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#resourceurl"},"restrictZoomRequest":{"name":"restrictZoomRequest","description":"<p>restrict zoom request.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#restrictzoomrequest"},"retryCount":{"name":"retryCount","description":"<p>Specifies the retry count for the failed requests.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#retrycount"},"retryStatusCodes":{"name":"retryStatusCodes","description":"<p>Specifies the response status codes for retrying a failed request with a &quot;3xx&quot;, &quot;4xx&quot;, or &quot;5xx&quot; response status code.\nThe value can have multiple values, such as [500, 401, 400], and the default value is 500.</p>\n","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#retrystatuscodes"},"retryTimeout":{"name":"retryTimeout","description":"<p>Gets or sets the timeout for retries in seconds.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#retrytimeout"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#root"},"scrollSettings":{"name":"scrollSettings","description":"<p>Defines the scroll settings.</p>\n","type":"ScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#scrollsettings"},"selectedItems":{"name":"selectedItems","description":"<p>Defines the collection of selected items, size and position of the selector</p>\n","type":"SelectorModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#selecteditems"},"serverActionSettings":{"name":"serverActionSettings","description":"<p>Defines the settings of the PDF Viewer service.</p>\n","type":"ServerActionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serveractionsettings"},"serviceUrl":{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#setstate"},"shapeLabelSettings":{"name":"shapeLabelSettings","description":"<p>Defines the settings of shape label.</p>\n","type":"ShapeLabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#shapelabelsettings"},"showDigitalSignatureAppearance":{"name":"showDigitalSignatureAppearance","description":"<p>Show or hide the digital signature appearance in the document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#showdigitalsignatureappearance"},"showNotificationDialog":{"name":"showNotificationDialog","description":"<p>If it is set as false then error message box is not displayed in PDF viewer control.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#shownotificationdialog"},"signatureCollection":{"name":"signatureCollection","description":"<p>Get the Loaded document signature Collections in the PdfViewer control.</p>\n","type":"any[]","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signaturecollection"},"signatureDialogSettings":{"name":"signatureDialogSettings","description":"<p>Get or set the signature dialog settings for signature field.</p>\n","type":"SignatureDialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signaturedialogsettings"},"signatureFieldSettings":{"name":"signatureFieldSettings","description":"<p>Get or set the signature field settings.</p>\n","type":"SignatureFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signaturefieldsettings"},"signatureFitMode":{"name":"signatureFitMode","description":"<p>Specifies the signature mode in the PDF Viewer.</p>\n","type":"SignatureFitMode","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#signaturefitmode"},"stampSettings":{"name":"stampSettings","description":"<p>Defines the settings of stamp annotation.</p>\n","type":"StampSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#stampsettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#state"},"stickyNotesSettings":{"name":"stickyNotesSettings","description":"<p>Defines the settings of stickyNotes annotation.</p>\n","type":"StickyNotesSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#stickynotessettings"},"strikethroughSettings":{"name":"strikethroughSettings","description":"<p>Defines the settings of strikethrough annotation.</p>\n","type":"StrikethroughSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#strikethroughsettings"},"textFieldSettings":{"name":"textFieldSettings","description":"<p>Get or set the text field settings.</p>\n","type":"TextFieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textfieldsettings"},"textSearch":{"name":"textSearch","description":"<p>Gets the text search object of the pdf viewer.</p>\n","type":"TextSearch","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textsearch"},"textSearchColorSettings":{"name":"textSearchColorSettings","description":"<p>Sets the settings for the color of the text search highlight.</p>\n","type":"TextSearchColorSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textsearchcolorsettings"},"textSelection":{"name":"textSelection","description":"<p>Gets the TextSelection object of the pdf viewer.</p>\n","type":"TextSelection","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#textselection"},"thumbnailView":{"name":"thumbnailView","description":"<p>Gets the thumbnail-view object of the pdf viewer.</p>\n","type":"ThumbnailView","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#thumbnailview"},"tileRenderingSettings":{"name":"tileRenderingSettings","description":"<p>Defines the tile rendering settings.</p>\n","type":"TileRenderingSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#tilerenderingsettings"},"toolbar":{"name":"toolbar","description":"<p>Gets the toolbar object of the pdf viewer.</p>\n","type":"Toolbar","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#toolbar"},"toolbarSettings":{"name":"toolbarSettings","description":"<p>Defines the settings of the PDF Viewer toolbar.</p>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#toolbarsettings"},"underlineSettings":{"name":"underlineSettings","description":"<p>Defines the settings of underline annotation.</p>\n","type":"UnderlineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#underlinesettings"},"volumeSettings":{"name":"volumeSettings","description":"<p>Defines the settings of volume annotation.</p>\n","type":"VolumeSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#volumesettings"},"width":{"name":"width","description":"<p>Defines the scrollable width of the PdfViewer control.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#width"},"zoomMode":{"name":"zoomMode","description":"<p>Specifies the rendering mode in the PDF Viewer.</p>\n","type":"ZoomMode","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#zoommode"},"zoomPercentage":{"name":"zoomPercentage","description":"<p>Returns the current zoom percentage of the PdfViewer control.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#zoompercentage"},"zoomValue":{"name":"zoomValue","description":"<p>Sets the initial loading zoom value from 10 to 400 in the PDF Viewer Control.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#zoomvalue"},"addAnnotation":{"name":"addAnnotation","description":"<p>Perform to add annotations in the PDF Viewer</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#addannotation"},"addCustomMenu":{"name":"addCustomMenu","description":"<p>Adds a custom menu item to the existing menu, with optional configurations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#addcustommenu"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#attachunloadevent"},"clearFormFields":{"name":"clearFormFields","description":"<p>Clears data from the form fields.\nParameter - Specifies the form field object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#clearformfields"},"convertClientPointToPagePoint":{"name":"convertClientPointToPagePoint","description":"<p>Convert user coordinates to the PDF page coordinates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#convertclientpointtopagepoint"},"convertPagePointToClientPoint":{"name":"convertPagePointToClientPoint","description":"<p>Convert page coordinates to the user coordinates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#convertpagepointtoclientpoint"},"convertPagePointToScrollingPoint":{"name":"convertPagePointToScrollingPoint","description":"<p>Convert page coordinates to the scrolling coordinates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#convertpagepointtoscrollingpoint"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#databind"},"deleteAnnotations":{"name":"deleteAnnotations","description":"<p>To delete the annotation Collections in the PDF Document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#deleteannotations"},"destroy":{"name":"destroy","description":"<p>Destroys all managed resources used by this object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#detachunloadevent"},"download":{"name":"download","description":"<p>Downloads the PDF document being loaded in the ejPdfViewer control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#download"},"exportAnnotation":{"name":"exportAnnotation","description":"<p>Perform export annotations action in the PDF Viewer</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportannotation"},"exportAnnotationsAsBase64String":{"name":"exportAnnotationsAsBase64String","description":"<p>Export annotations and returns a base64 string for both Json and XFDF formats</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportannotationsasbase64string"},"exportAnnotationsAsObject":{"name":"exportAnnotationsAsObject","description":"<p>Perform export annotations action in the PDF Viewer</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportannotationsasobject"},"exportFormFields":{"name":"exportFormFields","description":"<p>Exports the form field data in the specified data format.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportformfields"},"exportFormFieldsAsObject":{"name":"exportFormFieldsAsObject","description":"<p>Returns an object which represents the form field data in the specified data format.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#exportformfieldsasobject"},"extractText":{"name":"extractText","description":"<p>Extracts text from a specific page of the PDF document based on the supplied options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#extracttext"},"focusFormField":{"name":"focusFormField","description":"<p>Focus a form field in a document by its field name or the field object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#focusformfield"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getmodulename"},"getPageInfo":{"name":"getPageInfo","description":"<p>Retrieves the information of a specified page in the viewer.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getpageinfo"},"getPageNumberFromClientPoint":{"name":"getPageNumberFromClientPoint","description":"<p>Get page number from the user coordinates x and y.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getpagenumberfromclientpoint"},"getPersistData":{"name":"getPersistData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#handleunload"},"importAnnotation":{"name":"importAnnotation","description":"<p>Perform imports annotations action in the PDF Viewer</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#importannotation"},"importFormFields":{"name":"importFormFields","description":"<p>Imports the form fields data into the current PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#importformfields"},"load":{"name":"load","description":"<p>Loads the given PDF document in the PDF viewer control</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#load"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#onpropertychanged"},"redo":{"name":"redo","description":"<p>Perform redo action for the edited annotations</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#redo"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#requiredmodules"},"resetFormFields":{"name":"resetFormFields","description":"<p>reset all form fields data</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#resetformfields"},"retrieveFormFields":{"name":"retrieveFormFields","description":"<p>To retrieve the form fields in the PDF Document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#retrieveformfields"},"saveAsBlob":{"name":"saveAsBlob","description":"<p>Saves the PDF document being loaded in the PDF Viewer control as blob.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#saveasblob"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serverdatabind"},"setJsonData":{"name":"setJsonData","description":"<p>To modify the Json Data in ajax request.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#setjsondata"},"showNotificationPopup":{"name":"showNotificationPopup","description":"<p>Specifies the message to be displayed  in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#shownotificationpopup"},"undo":{"name":"undo","description":"<p>Perform undo action for the edited annotations</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#undo"},"unload":{"name":"unload","description":"<p>Unloads the PDF document being displayed in the PDF viewer.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#unload"},"updateFormFields":{"name":"updateFormFields","description":"<p>To update the form fields within a PDF document, but only when the FormDesigner module is either not injected or has been disabled.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#updateformfields"},"updateFormFieldsValue":{"name":"updateFormFieldsValue","description":"<p>Update the form field values from externally.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#updateformfieldsvalue"},"updateViewerContainer":{"name":"updateViewerContainer","description":"<p>updates the PDF Viewer container width and height from externally.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#updateviewercontainer"},"zoomToRect":{"name":"zoomToRect","description":"<p>Brings the given rectangular region to view and zooms in the document to fit the region in client area (view port).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#zoomtorect"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#inject"}},"DropDownButtonComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers before closing the DropDownButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#beforeclose"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each Popup item of DropDownButton.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#beforeitemrender"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening the DropDownButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#beforeopen"},"close":{"name":"close","description":"<p>Triggers while closing the DropDownButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#close"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#created"},"open":{"name":"open","description":"<p>Triggers while opening the DropDownButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#open"},"select":{"name":"select","description":"<p>Triggers while selecting action item in DropDownButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings for opening the sub menu in the DropDownMenu.\nThe settings control the duration, easing, and effect of the animation applied when the sub menu opens.</p>\n","type":"DropDownMenuAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#animationsettings"},"closeActionEvents":{"name":"closeActionEvents","description":"<p>Specifies the event to close the DropDownButton popup.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#closeactionevents"},"content":{"name":"content","description":"<p>Defines the content of the DropDownButton element that can either be a text or HTML elements.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#context"},"createPopupOnClick":{"name":"createPopupOnClick","description":"<p>Specifies the popup element creation on open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#createpopuponclick"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the DropDownButton element. The\nDropDownButton size and styles can be customized by using this.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the DropDownButton is <code>disabled</code> or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the DropDownButton component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the DropDownButton that is used to\ninclude an icon. DropDownButton can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions the icon before/top of the text content in the DropDownButton. The possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Top: The icon will be positioned to the top of the text content.</li>\n</ul>\n","type":"SplitButtonIconPosition","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template content to be displayed.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#itemtemplate"},"items":{"name":"items","description":"<p>Specifies action items with its properties which will be rendered as DropDownButton popup.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#locale"},"popupWidth":{"name":"popupWidth","description":"<p>This property defines the width of the dropdown popup for the DropDownButton component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#state"},"target":{"name":"target","description":"<p>Allows to specify the DropDownButton popup item element.</p>\n","type":"string|Element","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#target"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#addeventlistener"},"addItems":{"name":"addItems","description":"<p>Adds a new item to the menu. By default, new item appends to the list as the last item,\nbut you can insert based on the text parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#additems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to DropDownButton\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#removeeventlistener"},"removeItems":{"name":"removeItems","description":"<p>Removes the items from the menu.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#serverdatabind"},"toggle":{"name":"toggle","description":"<p>To open/close DropDownButton popup based on current state of the DropDownButton.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#inject"}},"DropDownButtonItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemDirective#shouldcomponentupdate"}},"DropDownButtonItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/dropDownButtonItemsDirective#shouldcomponentupdate"}},"ProgressButtonComponent":{"begin":{"name":"begin","description":"<p>Triggers when the progress starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#begin"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#created"},"end":{"name":"end","description":"<p>Triggers when the progress is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#end"},"fail":{"name":"fail","description":"<p>Triggers when the progress is incomplete.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#fail"},"progress":{"name":"progress","description":"<p>Triggers in specified intervals.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#progress"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings.</p>\n","type":"AnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#animationsettings"},"content":{"name":"content","description":"<p>Defines the text <code>content</code> of the progress button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the progress button that allows customization of component’s appearance.\nThe progress button types, styles, and size can be achieved by using this property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Enables or disables the progress button.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#disabled"},"duration":{"name":"duration","description":"<p>Specifies the duration of progression in the progress button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#duration"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Progress button component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#enablepersistence"},"enableProgress":{"name":"enableProgress","description":"<p>Enables or disables the background filler UI in the progress button.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#enableprogress"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the progress button that is used to include an icon.\nProgress button can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions an icon in the progress button. The possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Right: The icon will be positioned to the right of the text content.</li>\n<li>Top: The icon will be positioned at the top of the text content.</li>\n<li>Bottom: The icon will be positioned at the bottom of the text content.</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isdestroyed"},"isPrimary":{"name":"isPrimary","description":"<p>Allows the appearance of the progress button to be enhanced and visually appealing when set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isprimary"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isserverrendered"},"isToggle":{"name":"isToggle","description":"<p>Makes the progress button toggle, when set to <code>true</code>. When you click it, the state changes from normal to active.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#istoggle"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isvue"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#setstate"},"spinSettings":{"name":"spinSettings","description":"<p>Specifies a spinner and its related properties.</p>\n","type":"SpinSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#spinsettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the button element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to ProgressButton\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#handleunload"},"progressComplete":{"name":"progressComplete","description":"<p>Complete the button progress.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#progresscomplete"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#serverdatabind"},"start":{"name":"start","description":"<p>Starts the button progress at the specified percent.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#start"},"stop":{"name":"stop","description":"<p>Stops the button progress.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#stop"}},"SplitButtonItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemDirective#shouldcomponentupdate"}},"SplitButtonItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/splitButtonItemsDirective#shouldcomponentupdate"}},"SplitButtonComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers before closing the SplitButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#beforeclose"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each Popup item of SplitButton.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#beforeitemrender"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening the SplitButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#beforeopen"},"click":{"name":"click","description":"<p>Triggers when the primary button of SplitButton has been clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#click"},"close":{"name":"close","description":"<p>Triggers while closing the SplitButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#close"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#created"},"open":{"name":"open","description":"<p>Triggers while opening the SplitButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#open"},"select":{"name":"select","description":"<p>Triggers while selecting action item of SplitButton popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings for opening the sub menu in the DropDownMenu.\nThe settings control the duration, easing, and effect of the animation applied when the sub menu opens.</p>\n","type":"DropDownMenuAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#animationsettings"},"closeActionEvents":{"name":"closeActionEvents","description":"<p>Specifies the event to close the DropDownButton popup.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#closeactionevents"},"content":{"name":"content","description":"<p>Defines the content of the SplitButton primary action button can either be a text or HTML elements.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#context"},"createPopupOnClick":{"name":"createPopupOnClick","description":"<p>Specifies the popup element creation on open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#createpopuponclick"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton\nsize and styles can be customized by using this.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the SplitButton is disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the DropDownButton component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the SplitButton that is used to include an\nicon. SplitButton can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions the icon before/top of the text content in the SplitButton. The possible values are</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Top: The icon will be positioned to the top of the text content.</li>\n</ul>\n","type":"SplitButtonIconPosition","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template content to be displayed.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#itemtemplate"},"items":{"name":"items","description":"<p>Specifies action items with its properties which will be rendered as SplitButton secondary button popup.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#locale"},"popupWidth":{"name":"popupWidth","description":"<p>This property defines the width of the dropdown popup for the DropDownButton component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#state"},"target":{"name":"target","description":"<p>Allows to specify the SplitButton popup item element.</p>\n","type":"string|Element","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#target"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#addeventlistener"},"addItems":{"name":"addItems","description":"<p>Adds a new item to the menu. By default, new item appends to the list as the last item,\nbut you can insert based on the text parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#additems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to SplitButton\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>Called internally if any of the property value changed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#removeeventlistener"},"removeItems":{"name":"removeItems","description":"<p>Removes the items from the menu.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#serverdatabind"},"toggle":{"name":"toggle","description":"<p>To open/close SplitButton popup based on current state of the SplitButton.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#inject"}},"DocumentEditorContainerComponent":{"beforeAcceptRejectChanges":{"name":"beforeAcceptRejectChanges","description":"<p>Triggers before accepting or rejecting changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#beforeacceptrejectchanges"},"beforeCommentAction":{"name":"beforeCommentAction","description":"<p>Triggers on comment actions(Post, edit, reply, resolve, reopen).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#beforecommentaction"},"beforePaneSwitch":{"name":"beforePaneSwitch","description":"<p>Trigger before switching panes in DocumentEditor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#beforepaneswitch"},"commentDelete":{"name":"commentDelete","description":"<p>Triggers on deleting a comment.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#commentdelete"},"contentChange":{"name":"contentChange","description":"<p>Triggers whenever the content changes in the document editor container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#contentchange"},"contentControl":{"name":"contentControl","description":"<p>Triggers when user interaction prevented in content control.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#contentcontrol"},"created":{"name":"created","description":"<p>Triggers when the component is created</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#created"},"customContextMenuBeforeOpen":{"name":"customContextMenuBeforeOpen","description":"<p>Triggers before opening the custom context-menu option.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#customcontextmenubeforeopen"},"customContextMenuSelect":{"name":"customContextMenuSelect","description":"<p>Triggers while selecting the custom context-menu option.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#customcontextmenuselect"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#destroyed"},"documentChange":{"name":"documentChange","description":"<p>Triggers whenever document changes in the document editor container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#documentchange"},"selectionChange":{"name":"selectionChange","description":"<p>Triggers whenever selection changes in the document editor container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#selectionchange"},"serviceFailure":{"name":"serviceFailure","description":"<p>Triggers when the server action fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#servicefailure"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#toolbarclick"},"trackChange":{"name":"trackChange","description":"<p>Triggers Keyboard shortcut of TrackChanges.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#trackchange"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#allowserverdatabinding"},"autoResizeOnVisibilityChange":{"name":"autoResizeOnVisibilityChange","description":"<p>Gets or sets a value indicating whether to start automatic resize with the specified time interval and iteration count.</p>\n<blockquote>\n<ul>\n<li>Resize action triggers automatically for the specified number of iterations, or till the parent element's height and width is non-zero.</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>If the parent element's height and width is zero even in the last iteration, then the default height and width (200) is allocated for the Document editor.</li>\n</ul>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#autoresizeonvisibilitychange"},"beforeXmlHttpRequestSend":{"name":"beforeXmlHttpRequestSend","description":"<p>Triggers before a server request is started, allows you to modify the XMLHttpRequest object (setting additional headers, if needed).</p>\n","type":"emittypexmlhttprequesteventargs","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#beforexmlhttprequestsend"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#currentcontext"},"currentUser":{"name":"currentUser","description":"<p>Gets or sets the current user.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#currentuser"},"documentEditor":{"name":"documentEditor","description":"<p>Gets the DocumentEditor instance.</p>\n","type":"DocumentEditor","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#documenteditor"},"documentEditorSettings":{"name":"documentEditorSettings","description":"<p>Defines the settings for DocumentEditor customization.</p>\n","type":"DocumentEditorSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#documenteditorsettings"},"documentSettings":{"name":"documentSettings","description":"<p>Gets the settings and properties of the document that is opened in Document editor component.</p>\n","type":"DocumentSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#documentsettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#element"},"enableAutoFocus":{"name":"enableAutoFocus","description":"<p>Gets or sets a value indicating whether the automatic focus behavior is enabled for Document editor or not.</p>\n<blockquote>\n<p>By default, the Document editor gets focused automatically when the page loads. If you want the Document editor not to be focused automatically, then set this property to false.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enableautofocus"},"enableComment":{"name":"enableComment","description":"<p>Gets or sets a value indicating whether comment is enabled or not</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablecomment"},"enableCsp":{"name":"enableCsp","description":"<p>Enables the rendering with strict Content Security policy.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablecsp"},"enableLocalPaste":{"name":"enableLocalPaste","description":"<p>Enables the local paste.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablelocalpaste"},"enableLockAndEdit":{"name":"enableLockAndEdit","description":"<p>Enables the partial lock and edit module.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablelockandedit"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablertl"},"enableSpellCheck":{"name":"enableSpellCheck","description":"<p>Enable or disable the spell checker in document editor container.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enablespellcheck"},"enableToolbar":{"name":"enableToolbar","description":"<p>Enable or disable the toolbar in document editor container.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enabletoolbar"},"enableTrackChanges":{"name":"enableTrackChanges","description":"<p>Enable or disable the track changes in document editor container.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#enabletrackchanges"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#forceupdate"},"headers":{"name":"headers","description":"<p>Adds the custom headers to XMLHttpRequest.</p>\n","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#headers"},"height":{"name":"height","description":"<p>Defines the height of the DocumentEditorContainer component</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#isvue"},"layoutType":{"name":"layoutType","description":"<p>Gets or sets the Layout Type.</p>\n","type":"LayoutType","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#layouttype"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#refs"},"restrictEditing":{"name":"restrictEditing","description":"<p>Specifies the restrict editing operation.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#restrictediting"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#root"},"serverActionSettings":{"name":"serverActionSettings","description":"<p>Defines the settings of the DocumentEditorContainer service.</p>\n","type":"ContainerServerActionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#serveractionsettings"},"serviceUrl":{"name":"serviceUrl","description":"<p>Gets or sets the Sfdt service URL.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#serviceurl"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#setstate"},"showPropertiesPane":{"name":"showPropertiesPane","description":"<p>Show or hide properties pane.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#showpropertiespane"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#state"},"toolbar":{"name":"toolbar","description":"<p>Gets the toolbar instance.</p>\n","type":"Toolbar","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#toolbar"},"toolbarItems":{"name":"toolbarItems","description":"<p>Defines toolbar items for DocumentEditorContainer.</p>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#toolbaritems"},"userColor":{"name":"userColor","description":"<p>Gets or sets the color used for highlighting the editable ranges or regions of the <code>currentUser</code> in Document Editor. The default value is &quot;#FFFF00&quot;.</p>\n<blockquote>\n<p>If the visibility of text affected due this highlight color matching with random color applied for the track changes, then modify the color value of this property to resolve text visibility problem.</p>\n</blockquote>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#usercolor"},"width":{"name":"width","description":"<p>Defines the width of the DocumentEditorContainer component</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#width"},"zIndex":{"name":"zIndex","description":"<p>Specifies the z-order for rendering that determines whether the dialog is displayed in front or behind of another component.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys all managed resources used by this object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#render"},"resize":{"name":"resize","description":"<p>Resizes the container component and its sub elements based on given size or client size.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#resize"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#serverdatabind"},"setDefaultCharacterFormat":{"name":"setDefaultCharacterFormat","description":"<p>Set the default character format for document editor container</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#setdefaultcharacterformat"},"setDefaultParagraphFormat":{"name":"setDefaultParagraphFormat","description":"<p>Set the default paragraph format for document editor container</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#setdefaultparagraphformat"},"setDefaultSectionFormat":{"name":"setDefaultSectionFormat","description":"<p>Set the default section format for document editor container</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#setdefaultsectionformat"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor-container/#inject"}},"DocumentEditorComponent":{"actionComplete":{"name":"actionComplete","description":"<p>Triggers when the document editor collaborative actions (such as LockContent, SaveContent, UnlockContent) gets completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#actioncomplete"},"afterFormFieldFill":{"name":"afterFormFieldFill","description":"<p>Triggers after the form field fill.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#afterformfieldfill"},"beforeAcceptRejectChanges":{"name":"beforeAcceptRejectChanges","description":"<p>Triggers before accepting or rejecting changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforeacceptrejectchanges"},"beforeCommentAction":{"name":"beforeCommentAction","description":"<p>Triggers on comment actions(Post, edit, reply, resolve, reopen).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforecommentaction"},"beforeFileOpen":{"name":"beforeFileOpen","description":"<p>Triggers before a file is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforefileopen"},"beforeFormFieldFill":{"name":"beforeFormFieldFill","description":"<p>Triggers before the form field fill.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforeformfieldfill"},"beforePaneSwitch":{"name":"beforePaneSwitch","description":"<p>Triggers before opening the comment pane.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforepaneswitch"},"commentBegin":{"name":"commentBegin","description":"<p>Triggers after inserting the comment.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#commentbegin"},"commentDelete":{"name":"commentDelete","description":"<p>Triggers after deleting the comment.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#commentdelete"},"commentEnd":{"name":"commentEnd","description":"<p>Triggers after posting the comment.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#commentend"},"contentChange":{"name":"contentChange","description":"<p>Triggers whenever the content changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#contentchange"},"contentControl":{"name":"contentControl","description":"<p>Triggers when user interaction prevented in content control.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#contentcontrol"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#created"},"customContextMenuBeforeOpen":{"name":"customContextMenuBeforeOpen","description":"<p>Triggers before opening the custom context-menu option.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#customcontextmenubeforeopen"},"customContextMenuSelect":{"name":"customContextMenuSelect","description":"<p>Triggers while selecting the custom context-menu option.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#customcontextmenuselect"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#destroyed"},"documentChange":{"name":"documentChange","description":"<p>Triggers whenever the document changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#documentchange"},"keyDown":{"name":"keyDown","description":"<p>Triggers whenever the key is pressed in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#keydown"},"requestNavigate":{"name":"requestNavigate","description":"<p>Triggers whenever the hyperlink is clicked or tapped in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#requestnavigate"},"searchResultsChange":{"name":"searchResultsChange","description":"<p>Triggers whenever search results changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#searchresultschange"},"selectionChange":{"name":"selectionChange","description":"<p>Triggers whenever the selection changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#selectionchange"},"serviceFailure":{"name":"serviceFailure","description":"<p>Triggers when the server side action fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#servicefailure"},"trackChange":{"name":"trackChange","description":"<p>Triggers when the trackChanges enabled / disabled.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#trackchange"},"viewChange":{"name":"viewChange","description":"<p>Triggers whenever the container view changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#viewchange"},"zoomFactorChange":{"name":"zoomFactorChange","description":"<p>Triggers whenever the zoom factor changes in the document editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#zoomfactorchange"},"acceptTab":{"name":"acceptTab","description":"<p>Gets or sets a value indicating whether tab key can be accepted as input or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#accepttab"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#allowserverdatabinding"},"autoResizeOnVisibilityChange":{"name":"autoResizeOnVisibilityChange","description":"<p>Gets or sets a value indicating whether to start automatic resize with the specified time interval and iteration count.</p>\n<blockquote>\n<ul>\n<li>Resize action triggers automatically for the specified number of iterations, or till the parent element's height and width is non-zero.</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>If the parent element's height and width is zero even in the last iteration, then the default height and width (200) is allocated for the Document editor.</li>\n</ul>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#autoresizeonvisibilitychange"},"beforeXmlHttpRequestSend":{"name":"beforeXmlHttpRequestSend","description":"<p>Triggers before a server request is started, allows you to modify the XMLHttpRequest object (setting additional headers, if needed).</p>\n","type":"emittypexmlhttprequesteventargs","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#beforexmlhttprequestsend"},"collaborativeEditingHandlerModule":{"name":"collaborativeEditingHandlerModule","description":"<p>Gets or sets the Collaborative editing module.</p>\n","type":"CollaborativeEditingHandler","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#collaborativeeditinghandlermodule"},"collaborativeEditingModule":{"name":"collaborativeEditingModule","description":"<p>Gets or sets the Collaborative editing module.</p>\n","type":"CollaborativeEditing","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#collaborativeeditingmodule"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#context"},"contextMenu":{"name":"contextMenu","description":"<p>Gets the context menu object of the document editor.</p>\n","type":"ContextMenu","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#contextmenu"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#currentcontext"},"currentUser":{"name":"currentUser","description":"<p>Gets or sets the current user.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#currentuser"},"defaultPasteOption":{"name":"defaultPasteOption","description":"<p>Gets or sets the default Paste Formatting Options</p>\n","type":"PasteOptions","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#defaultpasteoption"},"documentEditorSettings":{"name":"documentEditorSettings","description":"<p>Defines the settings for DocumentEditor customization.</p>\n","type":"DocumentEditorSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#documenteditorsettings"},"documentLoadFailed":{"name":"documentLoadFailed","description":"<p>Triggers when SFDT is failed to load in the document editor</p>\n","type":"emittypedocumentloadfailedeventargs","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#documentloadfailed"},"documentName":{"name":"documentName","description":"<p>Gets or sets the name of the document.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#documentname"},"documentSettings":{"name":"documentSettings","description":"<p>Gets the settings and properties of the document that is opened in Document editor component.</p>\n","type":"DocumentSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#documentsettings"},"editor":{"name":"editor","description":"<p>Gets the editor object of the document editor.</p>\n","type":"Editor","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#editor"},"editorHistory":{"name":"editorHistory","description":"<p>Gets the editor history object of the document editor.</p>\n","type":"EditorHistory","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#editorhistory"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#element"},"enableAutoFocus":{"name":"enableAutoFocus","description":"<p>Gets or sets a value indicating whether the automatic focus behavior is enabled for Document editor or not.</p>\n<blockquote>\n<p>By default, the Document editor gets focused automatically when the page loads. If you want the Document editor not to be focused automatically, then set this property to false.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableautofocus"},"enableBookmarkDialog":{"name":"enableBookmarkDialog","description":"<p>Gets or sets a value indicating whether bookmark dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablebookmarkdialog"},"enableBordersAndShadingDialog":{"name":"enableBordersAndShadingDialog","description":"<p>Gets or sets a value indicating whether borders and shading dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablebordersandshadingdialog"},"enableCollaborativeEditing":{"name":"enableCollaborativeEditing","description":"<p>Enable collaborative editing in document editor.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablecollaborativeediting"},"enableColumnsDialog":{"name":"enableColumnsDialog","description":"<p>Gets or sets a value indicating whether margin dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablecolumnsdialog"},"enableComment":{"name":"enableComment","description":"<p>Gets or sets a value indicating whether comment is enabled or not</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablecomment"},"enableContextMenu":{"name":"enableContextMenu","description":"<p>Gets or sets a value indicating whether context menu is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablecontextmenu"},"enableCursorOnReadOnly":{"name":"enableCursorOnReadOnly","description":"<p>Gets or sets a value indicating whether to enable cursor in document editor on read only state or not. The default value is false.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablecursoronreadonly"},"enableEditor":{"name":"enableEditor","description":"<p>Gets or sets a value indicating whether editor needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableeditor"},"enableEditorHistory":{"name":"enableEditorHistory","description":"<p>Gets or sets a value indicating whether editor history needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableeditorhistory"},"enableFontDialog":{"name":"enableFontDialog","description":"<p>Gets or sets a value indicating whether font dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablefontdialog"},"enableFootnoteAndEndnoteDialog":{"name":"enableFootnoteAndEndnoteDialog","description":"<p>Gets or sets a value indicating whether notes dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablefootnoteandendnotedialog"},"enableFormField":{"name":"enableFormField","description":"<p>Gets or sets a value indicating whether form fields is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableformfield"},"enableHyperlinkDialog":{"name":"enableHyperlinkDialog","description":"<p>Gets or sets a value indicating whether hyperlink dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablehyperlinkdialog"},"enableImageResizer":{"name":"enableImageResizer","description":"<p>Gets or sets a value indicating whether image resizer is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableimageresizer"},"enableListDialog":{"name":"enableListDialog","description":"<p>Gets or sets a value indicating whether list dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablelistdialog"},"enableLocalPaste":{"name":"enableLocalPaste","description":"<p>Gets or sets a value indicating whether local paste needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablelocalpaste"},"enableLockAndEdit":{"name":"enableLockAndEdit","description":"<p>Enables the partial lock and edit module.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablelockandedit"},"enableOptionsPane":{"name":"enableOptionsPane","description":"<p>Gets or sets a value indicating whether options pane is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableoptionspane"},"enablePageSetupDialog":{"name":"enablePageSetupDialog","description":"<p>Gets or sets a value indicating whether font dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablepagesetupdialog"},"enableParagraphDialog":{"name":"enableParagraphDialog","description":"<p>Gets or sets a value indicating whether paragraph dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableparagraphdialog"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablepersistence"},"enablePrint":{"name":"enablePrint","description":"<p>Gets or sets a value indicating whether print needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableprint"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablertl"},"enableSearch":{"name":"enableSearch","description":"<p>Gets or sets a value indicating whether search module is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablesearch"},"enableSelection":{"name":"enableSelection","description":"<p>Gets or sets a value indicating whether selection needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableselection"},"enableSfdtExport":{"name":"enableSfdtExport","description":"<p>Gets or sets a value indicating whether Sfdt export needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablesfdtexport"},"enableSpellCheck":{"name":"enableSpellCheck","description":"<p>Gets or sets a value indicating whether editor need to be spell checked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablespellcheck"},"enableStyleDialog":{"name":"enableStyleDialog","description":"<p>Gets or sets a value indicating whether font dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablestyledialog"},"enableTableDialog":{"name":"enableTableDialog","description":"<p>Gets or sets a value indicating whether table dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletabledialog"},"enableTableOfContentsDialog":{"name":"enableTableOfContentsDialog","description":"<p>Gets or sets a value indicating whether table of contents dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletableofcontentsdialog"},"enableTableOptionsDialog":{"name":"enableTableOptionsDialog","description":"<p>Gets or sets a value indicating whether table options dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletableoptionsdialog"},"enableTablePropertiesDialog":{"name":"enableTablePropertiesDialog","description":"<p>Gets or sets a value indicating whether table properties dialog is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletablepropertiesdialog"},"enableTextExport":{"name":"enableTextExport","description":"<p>Gets or sets a value indicating whether text export needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletextexport"},"enableTrackChanges":{"name":"enableTrackChanges","description":"<p>Gets or sets a value indicating whether track changes is enabled or not</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enabletrackchanges"},"enableWordExport":{"name":"enableWordExport","description":"<p>Gets or sets a value indicating whether word export needs to be enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enablewordexport"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#forceupdate"},"headers":{"name":"headers","description":"<p>Adds the custom headers to XMLHttpRequest.</p>\n","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#headers"},"height":{"name":"height","description":"<p>Defines the height of the DocumentEditor component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isdestroyed"},"isDocumentEmpty":{"name":"isDocumentEmpty","description":"<p>Describes whether Document contains any content or not</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isdocumentempty"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isreactcomponent"},"isReadOnly":{"name":"isReadOnly","description":"<p>Gets or sets a value indicating whether the document editor is in read only state or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isreadonly"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#isvue"},"layoutType":{"name":"layoutType","description":"<p>Gets or sets the Layout Type.</p>\n","type":"LayoutType","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#layouttype"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#locale"},"pageCount":{"name":"pageCount","description":"<p>Gets the total number of pages.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#pagecount"},"pageGap":{"name":"pageGap","description":"<p>Gets or sets the page gap value in document editor.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#pagegap"},"pageOutline":{"name":"pageOutline","description":"<p>Gets or sets the page outline color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#pageoutline"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#refs"},"revisions":{"name":"revisions","description":"<p>Gets the revision collection which contains information about changes made from original document</p>\n","type":"RevisionCollection","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#revisions"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#root"},"search":{"name":"search","description":"<p>Gets the search object of the document editor.</p>\n","type":"Search","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#search"},"selection":{"name":"selection","description":"<p>Gets the selection object of the document editor.</p>\n","type":"Selection","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#selection"},"serverActionSettings":{"name":"serverActionSettings","description":"<p>Defines the settings of the DocumentEditor services</p>\n","type":"ServerActionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#serveractionsettings"},"serviceUrl":{"name":"serviceUrl","description":"<p>Gets or sets the Sfdt Service URL.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#serviceurl"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setstate"},"showComments":{"name":"showComments","description":"<p>Shows the comment in the document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showcomments"},"showRevisions":{"name":"showRevisions","description":"<p>Shows the revision changes in the document.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showrevisions"},"spellCheckDialog":{"name":"spellCheckDialog","description":"<p>Gets the spell check dialog object of the document editor.</p>\n","type":"SpellCheckDialog","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#spellcheckdialog"},"spellChecker":{"name":"spellChecker","description":"<p>Gets the spell check object of the document editor.</p>\n","type":"SpellChecker","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#spellchecker"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#state"},"useCtrlClickToFollowHyperlink":{"name":"useCtrlClickToFollowHyperlink","description":"<p>Gets or sets a value indicating whether holding Ctrl key is required to follow hyperlink on click. The default value is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#usectrlclicktofollowhyperlink"},"userColor":{"name":"userColor","description":"<p>Gets or sets the color used for highlighting the editable ranges or regions of the <code>currentUser</code> in Document Editor. The default value is &quot;#FFFF00&quot;.</p>\n<blockquote>\n<p>If the visibility of text affected due this highlight color matching with random color applied for the track changes, then modify the color value of this property to resolve text visibility problem.</p>\n</blockquote>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#usercolor"},"width":{"name":"width","description":"<p>Defines the width of the DocumentEditor component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#width"},"zIndex":{"name":"zIndex","description":"<p>Specifies the z-order for rendering that determines whether the dialog is displayed in front or behind of another component.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#zindex"},"zoomFactor":{"name":"zoomFactor","description":"<p>Gets or sets the zoom factor in document editor.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#zoomfactor"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys all managed resources used by this object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#detachunloadevent"},"enableAllModules":{"name":"enableAllModules","description":"<p>Enables all the modules.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#enableallmodules"},"exportAsImage":{"name":"exportAsImage","description":"<p>Exports the specified page as image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#exportasimage"},"exportContentControlData":{"name":"exportContentControlData","description":"<p>Exports the content control values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#exportcontentcontroldata"},"exportFormData":{"name":"exportFormData","description":"<p>Exports the form field values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#exportformdata"},"fitPage":{"name":"fitPage","description":"<p>Fits the page based on given fit type.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#fitpage"},"focusIn":{"name":"focusIn","description":"<p>Shifts the focus to the document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#focusin"},"getBookmarks":{"name":"getBookmarks","description":"<p>Gets the bookmarks.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getbookmarks"},"getComments":{"name":"getComments","description":"<p>Gets the entire document's comment information.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getcomments"},"getFormFieldInfo":{"name":"getFormFieldInfo","description":"<p>Gets the form field by name</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getformfieldinfo"},"getFormFieldNames":{"name":"getFormFieldNames","description":"<p>Gets all the form field names in current document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getformfieldnames"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getrootelement"},"getStyleNames":{"name":"getStyleNames","description":"<p>Gets the style names based on given style type.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getstylenames"},"getStyles":{"name":"getStyles","description":"<p>Gets the style objects on given style type.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#getstyles"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#handleunload"},"importContentControlData":{"name":"importContentControlData","description":"<p>Imports content control data and returns the processed content control information.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#importcontentcontroldata"},"importFormData":{"name":"importFormData","description":"<p>Imports the form field values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#importformdata"},"open":{"name":"open","description":"<p>Opens the given sfdt text or base 64 string or url.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#open"},"openAsync":{"name":"openAsync","description":"<p>Opens the given sfdt text or base 64 string or url.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#openasync"},"openBlank":{"name":"openBlank","description":"<p>Opens a blank document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#openblank"},"print":{"name":"print","description":"<p>Prints the document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#render"},"resetContentControlData":{"name":"resetContentControlData","description":"<p>Resets the content control data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#resetcontentcontroldata"},"resetFormFields":{"name":"resetFormFields","description":"<p>Resets the form field value to default with the specified form field name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#resetformfields"},"resize":{"name":"resize","description":"<p>Resizes the component and its sub elements based on given size or container size.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#resize"},"save":{"name":"save","description":"<p>Saves the document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#save"},"saveAsBlob":{"name":"saveAsBlob","description":"<p>Saves the document as blob.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#saveasblob"},"scrollToPage":{"name":"scrollToPage","description":"<p>Scrolls view to start of the given page number if exists.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#scrolltopage"},"serialize":{"name":"serialize","description":"<p>Serializes the data to JSON string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#serialize"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#serverdatabind"},"setCustomFonts":{"name":"setCustomFonts","description":"<p>Sets custom fonts in the document editor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setcustomfonts"},"setDefaultCharacterFormat":{"name":"setDefaultCharacterFormat","description":"<p>Sets the default character format for document editor</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setdefaultcharacterformat"},"setDefaultParagraphFormat":{"name":"setDefaultParagraphFormat","description":"<p>Sets the default paragraph format for document editor</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setdefaultparagraphformat"},"setDefaultSectionFormat":{"name":"setDefaultSectionFormat","description":"<p>Sets the default section format for document editor</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setdefaultsectionformat"},"setFormFieldInfo":{"name":"setFormFieldInfo","description":"<p>Sets the form field info with the specified name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#setformfieldinfo"},"showDialog":{"name":"showDialog","description":"<p>Shows the dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showdialog"},"showOptionsPane":{"name":"showOptionsPane","description":"<p>Shows the options pane.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showoptionspane"},"showRestrictEditingPane":{"name":"showRestrictEditingPane","description":"<p>Shows the restrict editing pane.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showrestricteditingpane"},"showXmlPane":{"name":"showXmlPane","description":"<p>Shows the Xml pane.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#showxmlpane"},"updateFields":{"name":"updateFields","description":"<p>Updates the fields in the current document.\nCurrently cross reference field only supported.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#updatefields"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/document-editor/#inject"}},"AggregateColumnDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnDirective#shouldcomponentupdate"}},"AggregateColumnsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateColumnsDirective#shouldcomponentupdate"}},"AggregateDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregateDirective#shouldcomponentupdate"}},"AggregatesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/aggregatesDirective#shouldcomponentupdate"}},"StackedColumnDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnDirective#shouldcomponentupdate"}},"StackedColumnsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/stackedColumnsDirective#shouldcomponentupdate"}},"TreeGridComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when TreeGrid actions like sorting, filtering, paging, etc., start.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers when TreeGrid actions like sorting, filtering, paging, etc., are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when any TreeGrid action fails to achieve the desired results.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#actionfailure"},"batchAdd":{"name":"batchAdd","description":"<p>Triggers when records are added in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#batchadd"},"batchCancel":{"name":"batchCancel","description":"<p>Triggers before records are cancelled in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#batchcancel"},"batchDelete":{"name":"batchDelete","description":"<p>Triggers when records are deleted in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#batchdelete"},"beforeBatchAdd":{"name":"beforeBatchAdd","description":"<p>Triggers before records are added in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforebatchadd"},"beforeBatchDelete":{"name":"beforeBatchDelete","description":"<p>Triggers before records are deleted in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforebatchdelete"},"beforeBatchSave":{"name":"beforeBatchSave","description":"<p>Triggers before records are saved in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforebatchsave"},"beforeCopy":{"name":"beforeCopy","description":"<p>Triggers before the TreeGrid copy action is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforecopy"},"beforeDataBound":{"name":"beforeDataBound","description":"<p>Triggers before data is bound to the TreeGrid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforedatabound"},"beforeExcelExport":{"name":"beforeExcelExport","description":"<p>Triggers before TreeGrid data is exported to an Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforeexcelexport"},"beforePaste":{"name":"beforePaste","description":"<p>Triggers before the TreeGrid paste action is initiated.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforepaste"},"beforePdfExport":{"name":"beforePdfExport","description":"<p>Triggers before TreeGrid data is exported to a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforepdfexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print action begins.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beforeprint"},"beginEdit":{"name":"beginEdit","description":"<p>Triggers before a record is edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#beginedit"},"cellDeselected":{"name":"cellDeselected","description":"<p>Triggers when a selected cell is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#celldeselected"},"cellDeselecting":{"name":"cellDeselecting","description":"<p>Triggers before a selected cell is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#celldeselecting"},"cellEdit":{"name":"cellEdit","description":"<p>Triggers when a cell is being edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#celledit"},"cellSave":{"name":"cellSave","description":"<p>Triggers when a cell is being saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#cellsave"},"cellSaved":{"name":"cellSaved","description":"<p>Triggers after a cell is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#cellsaved"},"cellSelected":{"name":"cellSelected","description":"<p>Triggers after a cell is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#cellselected"},"cellSelecting":{"name":"cellSelecting","description":"<p>Triggers before any cell selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#cellselecting"},"checkboxChange":{"name":"checkboxChange","description":"<p>Triggers when the state of a checkbox changes in a checkbox column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#checkboxchange"},"collapsed":{"name":"collapsed","description":"<p>Triggers after a TreeGrid record is collapsed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapsed"},"collapsing":{"name":"collapsing","description":"<p>Triggers while a TreeGrid record is collapsing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapsing"},"columnDrag":{"name":"columnDrag","description":"<p>Triggers continuously while the column header is being dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columndrag"},"columnDragStart":{"name":"columnDragStart","description":"<p>Triggers when column header dragging begins.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columndragstart"},"columnDrop":{"name":"columnDrop","description":"<p>Triggers when a column header is dropped onto the target column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columndrop"},"columnMenuClick":{"name":"columnMenuClick","description":"<p>Triggers when there is a click on the column menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columnmenuclick"},"columnMenuOpen":{"name":"columnMenuOpen","description":"<p>Triggers before the column menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columnmenuopen"},"contextMenuClick":{"name":"contextMenuClick","description":"<p>Triggers when an item in the context menu is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#contextmenuclick"},"contextMenuOpen":{"name":"contextMenuOpen","description":"<p>Triggers before the context menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#contextmenuopen"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when the data source is populated in the TreeGrid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#databound"},"dataSourceChanged":{"name":"dataSourceChanged","description":"<p>Triggers when data in the TreeGrid is added, deleted, or updated.\nInvoke the done method from the argument to start rendering after an edit operation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasourcechanged"},"dataStateChange":{"name":"dataStateChange","description":"<p>Triggers when TreeGrid actions such as sorting, paging, etc., are completed.\nThe current view data and total record count should be assigned to the dataSource based on the action performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datastatechange"},"detailDataBound":{"name":"detailDataBound","description":"<p>Triggers after a detail row expands. This event triggers initially during the first expand.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#detaildatabound"},"excelExportComplete":{"name":"excelExportComplete","description":"<p>Triggers after TreeGrid data is exported to an Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#excelexportcomplete"},"excelHeaderQueryCellInfo":{"name":"excelHeaderQueryCellInfo","description":"<p>Triggers before each header cell is exported to an Excel file, allowing customization of cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#excelheaderquerycellinfo"},"excelQueryCellInfo":{"name":"excelQueryCellInfo","description":"<p>Triggers before each cell is exported to an Excel file, allowing customization of cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#excelquerycellinfo"},"expanded":{"name":"expanded","description":"<p>Triggers after a TreeGrid record is expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expanded"},"expanding":{"name":"expanding","description":"<p>Triggers while a TreeGrid record is expanding.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expanding"},"headerCellInfo":{"name":"headerCellInfo","description":"<p>Triggered for accessing header information.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#headercellinfo"},"load":{"name":"load","description":"<p>Allows customization of TreeGrid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#load"},"pdfExportComplete":{"name":"pdfExportComplete","description":"<p>Triggers after TreeGrid data is exported to a PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pdfexportcomplete"},"pdfHeaderQueryCellInfo":{"name":"pdfHeaderQueryCellInfo","description":"<p>Triggers before each header cell is exported to a PDF document, allowing customization of cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pdfheaderquerycellinfo"},"pdfQueryCellInfo":{"name":"pdfQueryCellInfo","description":"<p>Triggers before each cell is exported to a PDF document, allowing customization of cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pdfquerycellinfo"},"printComplete":{"name":"printComplete","description":"<p>Triggers after the print action has been completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#printcomplete"},"queryCellInfo":{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis event is triggered before the cell element is appended to the TreeGrid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#querycellinfo"},"recordDoubleClick":{"name":"recordDoubleClick","description":"<p>Triggers when a record is double-clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#recorddoubleclick"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when column resizing starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when column resizing ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers during column resizing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#resizing"},"rowDataBound":{"name":"rowDataBound","description":"<p>Triggered every time a request is made to access row information, element, or data.\nThis event is triggered before the row element is appended to the TreeGrid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdatabound"},"rowDeselected":{"name":"rowDeselected","description":"<p>Triggers when a selected row is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdeselected"},"rowDeselecting":{"name":"rowDeselecting","description":"<p>Triggers before the selected row is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdeselecting"},"rowDrag":{"name":"rowDrag","description":"<p>Triggers continuously while row elements are being dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdrag"},"rowDragStart":{"name":"rowDragStart","description":"<p>Triggers when row element dragging starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdragstart"},"rowDragStartHelper":{"name":"rowDragStartHelper","description":"<p>Triggers just before the row element dragging begins.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdragstarthelper"},"rowDrop":{"name":"rowDrop","description":"<p>Triggers when a row element is dropped onto the target row.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdrop"},"rowSelected":{"name":"rowSelected","description":"<p>Triggers after a row is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowselected"},"rowSelecting":{"name":"rowSelecting","description":"<p>Triggers before row selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowselecting"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when a toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#toolbarclick"},"aggregates":{"name":"aggregates","description":"<p>Configures the TreeGrid aggregate rows.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/aggregates/aggregates\">Aggregates</a> for its configuration.</p>\n</blockquote>\n","type":"AggregateRowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#aggregates"},"allowExcelExport":{"name":"allowExcelExport","description":"<p>Enables exporting the TreeGrid to an Excel file if set to true.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/excel-export/\">ExcelExport</a> documentation for more details.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowexcelexport"},"allowFiltering":{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> is set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter tree grid records with required criteria.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowfiltering"},"allowMultiSorting":{"name":"allowMultiSorting","description":"<p>If <code>allowMultiSorting</code> set to true, then it will allow the user to sort multiple column in the treegrid.</p>\n<blockquote>\n<p><code>allowSorting</code> should be true.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowmultisorting"},"allowPaging":{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Enables exporting the TreeGrid to a PDF file if set to true.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/pdf-export/\">PdfExport</a> documentation for more details.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpdfexport"},"allowReordering":{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, TreeGrid columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n<blockquote>\n<p>If TreeGrid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowreordering"},"allowResizing":{"name":"allowResizing","description":"<p>If <code>allowResizing</code> is set to true, TreeGrid columns can be resized.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowresizing"},"allowRowDragAndDrop":{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> is set to true, row reordering functionality is enabled, allowing rows to be dragged\nand dropped within the TreeGrid or across TreeGrids.\nThis feature enables users to reorganize data dynamically via drag-and-drop operations.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowrowdraganddrop"},"allowSelection":{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, selection of (highlight row) TreeGrid records by clicking is allowed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowserverdatabinding"},"allowSorting":{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of treegrid records when column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowsorting"},"allowTextWrap":{"name":"allowTextWrap","description":"<p>If <code>allowTextWrap</code> set to true,\nthen text content will wrap to the next line when its text content exceeds the width of the Column Cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowtextwrap"},"autoCheckHierarchy":{"name":"autoCheckHierarchy","description":"<p>If <code>autoCheckHierarchy</code> is set to true, hierarchy checkbox selection is enabled in TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#autocheckhierarchy"},"childMapping":{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},"clipMode":{"name":"clipMode","description":"<p>Defines the options for printing the TreeGrid.\nThe available print modes are:</p>\n<ul>\n<li><code>AllPages</code>: Prints all pages of the TreeGrid.</li>\n<li><code>CurrentPage</code>: Prints only the current page of the TreeGrid.</li>\n</ul>\n","type":"ClipMode","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#clipmode"},"clipboardModule":{"name":"clipboardModule","description":"<p><code>clipboardModule</code> is used to handle TreeGrid copy action.</p>\n","type":"TreeClipboard","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#clipboardmodule"},"columnMenuItems":{"name":"columnMenuItems","description":"<p><code>columnMenuItems</code> defines both built-in and custom column menu items.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the current column.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>Filter</code> - Filter options will show based on filterSettings property like filterbar, menu filter.</li>\n</ul>\n","type":"ColumnMenuItem[]|ColumnMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columnmenuitems"},"columnMenuModule":{"name":"columnMenuModule","description":"<p>The <code>columnMenuModule</code> is used to manipulate column menu items and its action in TreeGrid.</p>\n","type":"ColumnMenu","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columnmenumodule"},"columnQueryMode":{"name":"columnQueryMode","description":"<p>Specifies how data is retrieved from the data source for the TreeGrid.\nThe available modes are:</p>\n<ul>\n<li><code>All</code>: Retrieve the entire data source.</li>\n<li><code>Schema</code>: Retrieve data only for defined columns.</li>\n<li><code>ExcludeHidden</code>: Retrieve data only for visible columns in the TreeGrid.</li>\n</ul>\n","type":"ColumnQueryModeType","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columnquerymode"},"columns":{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#context"},"contextMenuItems":{"name":"contextMenuItems","description":"<p><code>contextMenuItems</code> defines both built-in and custom context menu items.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the current column.</li>\n<li><code>Edit</code> - Edit the current record.</li>\n<li><code>Delete</code> - Delete the current record.</li>\n<li><code>Save</code> - Save the edited record.</li>\n<li><code>Cancel</code> - Cancel the edited state.</li>\n<li><code>PdfExport</code> - Export the grid as Pdf format.</li>\n<li><code>ExcelExport</code> - Export the grid as Excel format.</li>\n<li><code>CsvExport</code> - Export the grid as CSV format.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>FirstPage</code> - Go to the first page.</li>\n<li><code>PrevPage</code> - Go to the previous page.</li>\n<li><code>LastPage</code> - Go to the last page.</li>\n<li><code>NextPage</code> - Go to the next page.</li>\n</ul>\n","type":"ContextMenuItem[]|ContextMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#contextmenuitems"},"contextMenuModule":{"name":"contextMenuModule","description":"<p>The <code>contextMenuModule</code> is used to handle context menu items and its action in the TreeGrid.</p>\n","type":"ContextMenu","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#contextmenumodule"},"copyHierarchyMode":{"name":"copyHierarchyMode","description":"<p><code>copyHierarchyMode</code> Defines the copy clipboard types.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>Parent</code> - Copy the selected data with parent record.</li>\n<li><code>Child</code> - Copy the selected data with child record.</li>\n<li><code>Both</code> - Copy the selected data with both parent and child record.</li>\n<li><code>None</code> - Copy only the selected record.</li>\n</ul>\n","type":"CopyHierarchyType","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#copyhierarchymode"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#currentcontext"},"dataModule":{"name":"dataModule","description":"","type":"DataManipulation","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datamodule"},"dataSource":{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},"detailTemplate":{"name":"detailTemplate","description":"<p>The detail template allows you to show or hide additional information about a particular row.</p>\n<blockquote>\n<p>It accepts either the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">template string</a>\nor the HTML element ID.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#detailtemplate"},"editModule":{"name":"editModule","description":"<p>The <code>editModule</code> is used to handle TreeGrid content manipulation.</p>\n","type":"Edit","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#editmodule"},"editSettings":{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#editsettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#element"},"enableAdaptiveUI":{"name":"enableAdaptiveUI","description":"<p>If <code>enableAdaptiveUI</code> is set to true, the pop-up UI will become adaptive to small screens,\nand be used for filtering and other features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enableadaptiveui"},"enableAltRow":{"name":"enableAltRow","description":"<p>If <code>enableAltRow</code> is set to true, the TreeGrid will render with <code>e-altrow</code> CSS class to the alternative tr elements.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/row/#styling-alternate-rows/\">AltRow</a> to customize the styles of alternative rows.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablealtrow"},"enableAutoFill":{"name":"enableAutoFill","description":"<p>If <code>enableAutoFill</code> is set to true, then the auto fill icon will displayed on cell selection for copy cells.\nIt requires the selection <code>mode</code> to be Cell and <code>cellSelectionMode</code> to be <code>Box</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enableautofill"},"enableCollapseAll":{"name":"enableCollapseAll","description":"<p>Specifies whether to load all rows in a collapsed state when the TreeGrid is initially rendered.\nThis setting is particularly useful when dealing with large datasets, as it helps enhance loading performance by\nreducing initial data rendering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablecollapseall"},"enableColumnVirtualization":{"name":"enableColumnVirtualization","description":"<p>Enables column virtualization in the TreeGrid. When set to <code>true</code>, only columns visible within the viewport are rendered.\nAdditional columns are loaded as you horizontally scroll. This is beneficial for rendering large datasets efficiently.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablecolumnvirtualization"},"enableHover":{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablehover"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Determines whether to sanitize untrusted HTML content in the TreeGrid. If <code>true</code>, potentially harmful HTML strings\nand scripts are sanitized before rendering to protect against XSS attacks.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablehtmlsanitizer"},"enableImmutableMode":{"name":"enableImmutableMode","description":"<p>If <code>enableImmutableMode</code>  is set to true, the TreeGrid will reuse old rows if it exists in the new result instead of\nfull refresh while performing the TreeGrid actions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enableimmutablemode"},"enableInfiniteScrolling":{"name":"enableInfiniteScrolling","description":"<p>Enables infinite scrolling in the TreeGrid. When set to <code>true</code>, additional data is loaded as the scrollbar\nreaches the end. Useful for handling large datasets.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enableinfinitescrolling"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablertl"},"enableVirtualMaskRow":{"name":"enableVirtualMaskRow","description":"<p>Specifies whether to display shimmer effect during scrolling action in virtual scrolling feature.\nIf disabled, spinner is shown instead of shimmer effect.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablevirtualmaskrow"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the TreeGrid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablevirtualization"},"excelExportModule":{"name":"excelExportModule","description":"","type":"ExcelExport","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#excelexportmodule"},"expandStateMapping":{"name":"expandStateMapping","description":"<p>Specifies the mapping property path for the expand status of a record in data source.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expandstatemapping"},"filterSettings":{"name":"filterSettings","description":"<p>Configures the filter settings of the TreeGrid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#filtersettings"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#forceupdate"},"frozenColumns":{"name":"frozenColumns","description":"<p>Specifies the number of columns that should remain visible and fixed on the left side of the TreeGrid during horizontal scrolling.\nThis feature ensures key columns, such as identifiers, stay visible while users scroll through data.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#frozencolumns"},"frozenRows":{"name":"frozenRows","description":"<p>Specifies the number of rows that should remain visible and fixed at the top of the TreeGrid during scrolling.\nThis feature helps improve readability in data-heavy grids by keeping the header rows or key rows visible.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#frozenrows"},"gridLines":{"name":"gridLines","description":"<p>Defines how TreeGrid content lines are displayed, determining the visibility of vertical and horizontal lines.</p>\n<ul>\n<li><code>Both</code>: Displays both horizontal and vertical grid lines.</li>\n<li><code>None</code>: Hides both horizontal and vertical grid lines.</li>\n<li><code>Horizontal</code>: Displays only horizontal grid lines.</li>\n<li><code>Vertical</code>: Displays only vertical grid lines.</li>\n<li><code>Default</code>: Adjusts line visibility based on the theme.</li>\n</ul>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#gridlines"},"hasChildMapping":{"name":"hasChildMapping","description":"<p>Specifies whether record is parent or not for the remote data binding</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#haschildmapping"},"height":{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},"idMapping":{"name":"idMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the id of that row.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#idmapping"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#ignorecollectionwatch"},"infiniteScrollSettings":{"name":"infiniteScrollSettings","description":"<p>Configures settings for infinite scrolling.</p>\n","type":"InfiniteScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#infinitescrollsettings"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#isvue"},"keyboardModule":{"name":"keyboardModule","description":"<p>The <code>keyboardModule</code> is used to manipulate keyboard interactions in TreeGrid.</p>\n","type":"KeyboardEvents","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#keyboardmodule"},"loadChildOnDemand":{"name":"loadChildOnDemand","description":"<p>When enabled, only parent records would be rendered during the initial render and child records will be loaded only when expanding a parent record.\nThis property is only applicable for remote data binding.\nLoading child records on demand can improve the performance of data-bound controls with a large number of records.\nChild records are only loaded when they are requested, rather than loading all child records at once.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#loadchildondemand"},"loadingIndicator":{"name":"loadingIndicator","description":"<p>Configures the loading indicator of the Tree Grid. Specifies whether to display spinner or shimmer effect\nduring the waiting time on any actions (paging, sorting, filtering, CRUD operations) performed in Tree Grid.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#loadingindicator"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#locale"},"pageSettings":{"name":"pageSettings","description":"<p>Configures the pager in the TreeGrid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pagesettings"},"pagerModule":{"name":"pagerModule","description":"<p>The <code>pagerModule</code> is used to manipulate paging in the TreeGrid.</p>\n","type":"Page","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pagermodule"},"parentIdMapping":{"name":"parentIdMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the parent’s id</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#parentidmapping"},"pdfExportModule":{"name":"pdfExportModule","description":"","type":"PdfExport","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pdfexportmodule"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#portals"},"printMode":{"name":"printMode","description":"<p>Defines the options for printing the TreeGrid.\nThe available print modes are:</p>\n<ul>\n<li><code>AllPages</code>: Prints all pages of the TreeGrid.</li>\n<li><code>CurrentPage</code>: Prints only the current page of the TreeGrid.</li>\n</ul>\n","type":"PrintMode","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#printmode"},"printModule":{"name":"printModule","description":"<p>The <code>printModule</code> is used to handle the printing feature of the TreeGrid.</p>\n","type":"Print","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#printmodule"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#props"},"query":{"name":"query","description":"<p>Defines the external <a href=\"https://ej2.syncfusion.com/documentation/data/api-query.html\">Query</a>\nthat will be executed along with data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#query"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#refs"},"reorderModule":{"name":"reorderModule","description":"<p>The <code>reorderModule</code> is used to manipulate reordering in TreeGrid.</p>\n","type":"Reorder","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#reordermodule"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#root"},"rowDragAndDropModule":{"name":"rowDragAndDropModule","description":"<p>The <code>rowDragandDrop</code> is used to manipulate Row Reordering in TreeGrid.</p>\n","type":"RowDD","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdraganddropmodule"},"rowDropSettings":{"name":"rowDropSettings","description":"<p>Configures the row drop settings of the TreeGrid.</p>\n","type":"RowDropSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowdropsettings"},"rowHeight":{"name":"rowHeight","description":"<p>Defines the height of TreeGrid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowheight"},"rowTemplate":{"name":"rowTemplate","description":"<p>The row template that renders customized rows from the given template.\nBy default, TreeGrid renders a table row for every data source item.</p>\n<blockquote>\n<ul>\n<li>It accepts either <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">template string</a>\nor HTML element ID.</li>\n<li>The row template must be a table row.\nCheck the <a href=\"../../treegrid/row\">Row Template</a> customization.</li>\n</ul>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowtemplate"},"searchSettings":{"name":"searchSettings","description":"<p>Configures the search settings of the TreeGrid.</p>\n","type":"SearchSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#searchsettings"},"selectedRowIndex":{"name":"selectedRowIndex","description":"<p>Specifies the index of the row to be selected upon initial rendering.\nAlso retrieves the index of the currently selected row.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectedrowindex"},"selectionModule":{"name":"selectionModule","description":"","type":"TreeGridSelection","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectionmodule"},"selectionSettings":{"name":"selectionSettings","description":"<p>Configures the selection behavior.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#setstate"},"showColumnChooser":{"name":"showColumnChooser","description":"<p>If <code>showColumnChooser</code> is set to true, it allows you to dynamically show or hide columns.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#showcolumnchooser"},"showColumnMenu":{"name":"showColumnMenu","description":"<p>If <code>showColumnMenu</code> set to true, then it will enable the column menu options in each columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/columns/#column-menu/\">Column menu</a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#showcolumnmenu"},"sortModule":{"name":"sortModule","description":"<p>The <code>sortModule</code> is used to manipulate sorting in TreeGrid.</p>\n","type":"Sort","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#sortmodule"},"sortSettings":{"name":"sortSettings","description":"<p>Configures the sort settings of the TreeGrid.</p>\n","type":"SortSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#sortsettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#state"},"textWrapSettings":{"name":"textWrapSettings","description":"<p>Configures the text wrap in the TreeGrid.</p>\n","type":"TextWrapSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#textwrapsettings"},"toolbar":{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the TreeGrid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole TreeGrid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the TreeGrid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Search: Searches records by the given key.</li>\n<li>ExpandAll: Expands all the rows in TreeGrid</li>\n<li>CollapseAll: Collapses all the rows in TreeGrid</li>\n<li>ExcelExport - Export the TreeGrid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the TreeGrid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the TreeGrid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#toolbar"},"toolbarModule":{"name":"toolbarModule","description":"<p>The <code>toolbarModule</code> is used to manipulate ToolBar items and its action in the TreeGrid.</p>\n","type":"Toolbar","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#toolbarmodule"},"treeColumnIndex":{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},"width":{"name":"width","description":"<p>Defines the TreeGrid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#addeventlistener"},"addRecord":{"name":"addRecord","description":"<p>Adds a new record to the TreeGrid at the specified position or default location.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#addrecord"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#attachunloadevent"},"autoFitColumns":{"name":"autoFitColumns","description":"<p>Adjusts column widths to fit their content, ensuring content is displayed without wrapping or truncation.</p>\n<ul>\n<li>Hidden columns are ignored by this method.</li>\n<li>Use the <code>autoFitColumns</code> method during the <code>dataBound</code> event for initial rendering.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#autofitcolumns"},"clearFiltering":{"name":"clearFiltering","description":"<p>Clears all filters applied to the TreeGrid, restoring the view to show all records.\nThis method is useful for resetting the grid to its unfiltered state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#clearfiltering"},"clearSelection":{"name":"clearSelection","description":"<p>Deselects all selected rows and cells within the TreeGrid.\nResets the selection state of the grid, which is useful after bulk operations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#clearselection"},"clearSorting":{"name":"clearSorting","description":"<p>Clears all the sorted columns in the TreeGrid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#clearsorting"},"closeEdit":{"name":"closeEdit","description":"<p>Cancels the current edit operation on the TreeGrid.\nThis method discards changes made to the row and exits the edit mode without saving.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#closeedit"},"collapseAll":{"name":"collapseAll","description":"<p>Collapses all rows in the TreeGrid, hiding all child rows and leaving only parent nodes visible.\nThis method can be used to quickly minimize the view to only top-level data,\nwhich is helpful for summarizing or performing broad overviews of the dataset.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapseall"},"collapseAtLevel":{"name":"collapseAtLevel","description":"<p>Collapses all the records at the specified hierarchical level within the TreeGrid.\nThis function helps in hiding child rows for all parent nodes at a given level,\neffectively reducing the visible depth of the hierarchical structure.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapseatlevel"},"collapseByKey":{"name":"collapseByKey","description":"<p>Collapses a specific record identified by the provided primary key value.\nThis method is useful for collapsing particular node in the TreeGrid when\nthe parent rows need to be targeted individually by their unique key.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapsebykey"},"collapseRow":{"name":"collapseRow","description":"<p>Collapses the specified parent row in the TreeGrid.\nThis method collapses the row associated with the provided HTMLTableRowElement,\nhiding any of its displayed child rows. It is typically used to manage the\nvisibility of hierarchical data within a tree structure.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#collapserow"},"copy":{"name":"copy","description":"<p>Copies the data of selected rows or cells to the clipboard.\nThis method supports including headers for better context when pasting elsewhere.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#copy"},"csvExport":{"name":"csvExport","description":"<p>Exports the TreeGrid data to a CSV file.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#csvexport"},"deleteRecord":{"name":"deleteRecord","description":"<p>Deletes a record based on specified criteria or the selected record if none specified.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#deleterecord"},"deleteRow":{"name":"deleteRow","description":"<p>Deletes a visible row from the TreeGrid using its HTML element.\nApply this method when handling row deletions through DOM manipulations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#deleterow"},"destroy":{"name":"destroy","description":"<p>Destroys the TreeGrid component by detaching event handlers,\nremoving attributes and classes, and clearing the component's DOM elements.\nThis method ensures that all resources used by the TreeGrid are properly released\nand the component is cleaned up from the DOM to prevent memory leaks.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#detachunloadevent"},"editCell":{"name":"editCell","description":"<p>Begins editing of a specific cell using row and field indices.\nCustomers can programmatically specify which cell to edit without user input.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#editcell"},"enableToolbarItems":{"name":"enableToolbarItems","description":"<p>Enables or disables specified ToolBar items within the TreeGrid.\nThis facilitates dynamic control of toolbar actions based on application logic.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enabletoolbaritems"},"endEdit":{"name":"endEdit","description":"<p>Commits the edits made to a record in edit mode, updating the data source.\nUse this method to finalize changes for rows in edit mode, ensuring persistence.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#endedit"},"excelExport":{"name":"excelExport","description":"<p>Exports the TreeGrid data to an Excel file (.xlsx).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#excelexport"},"expandAll":{"name":"expandAll","description":"<p>Expands all rows in the TreeGrid, making the full hierarchy visible.\nThis method should be used with caution on large datasets, as it makes\nall nodes and their child rows visible, which might affect performance.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expandall"},"expandAtLevel":{"name":"expandAtLevel","description":"<p>Expands all the records at the specified hierarchical level within the TreeGrid.\nThis method is useful for visually expanding data at a certain depth, making\nall parent rows visible at the given level and their child rows accessible.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expandatlevel"},"expandByKey":{"name":"expandByKey","description":"<p>Expands a specific record identified by the provided primary key value.\nThis method is useful for expanding particular node in the TreeGrid when\nthe parent rows need to be targeted individually by their unique key.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expandbykey"},"expandRow":{"name":"expandRow","description":"<p>Expands the specified parent row within the TreeGrid to reveal its nested data.\nThis method is useful for programmatically expanding rows to display their\nhierarchical children, providing detailed views for nested data structures.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#expandrow"},"extendRequiredModules":{"name":"extendRequiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#extendrequiredmodules"},"filterByColumn":{"name":"filterByColumn","description":"<p>Filters the TreeGrid rows based on a specified column and filter criteria.\nThis method allows for dynamic filtering against column data using various\noperators and values, supporting case-sensitive filtering and accent sensitivity.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#filterbycolumn"},"getBatchChanges":{"name":"getBatchChanges","description":"<p>Collects data changes (added, edited, and deleted) that have not been saved in batch mode.\nThis allows you to view pending changes awaiting a commit to the data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getbatchchanges"},"getCellFromIndex":{"name":"getCellFromIndex","description":"<p>Retrieves a cell element based on its row and column indices in the TreeGrid.\nThis method is helpful for accessing cell-level elements for custom\noperations or styling.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcellfromindex"},"getCheckedRecords":{"name":"getCheckedRecords","description":"<p>Retrieves the records associated with rows that have their checkboxes checked.\nFacilitates operations that require information about specifically selected or\ninteracted rows within the grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcheckedrecords"},"getCheckedRowIndexes":{"name":"getCheckedRowIndexes","description":"<p>Retrieves the indices of rows that have their checkboxes checked.\nThis can assist in programatically assessing which rows have been selected\nby checkbox interaction for further processing.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcheckedrowindexes"},"getColumnByField":{"name":"getColumnByField","description":"<p>Retrieves a column object by the column's field name.\nThis is typically used for obtaining the details of a column for\nconfiguration or data manipulation purposes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnbyfield"},"getColumnByUid":{"name":"getColumnByUid","description":"<p>Fetches a column object using the column's unique identifier (UID).\nUseful in scenarios where columns do not have unique field names but\nare uniquely identifiable via UID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnbyuid"},"getColumnFieldNames":{"name":"getColumnFieldNames","description":"<p>Retrieves the names of all column fields in the TreeGrid.\nThis method provides a list of field names useful for dynamic operations\nor configuration where fields need to be enumerated or manipulated.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnfieldnames"},"getColumnHeaderByField":{"name":"getColumnHeaderByField","description":"<p>Retrieves a column header element based on the field name of the column.\nThis method helps to directly manipulate headers, such as applying custom styles.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnheaderbyfield"},"getColumnHeaderByIndex":{"name":"getColumnHeaderByIndex","description":"<p>Acquires the column header element using the column's index.\nSuitable for situations where direct column index is available\nand header access is needed for operations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnheaderbyindex"},"getColumnHeaderByUid":{"name":"getColumnHeaderByUid","description":"<p>Retrieves a column header element utilizing the column's UID.\nUseful for precision access to header elements when UIDs are used\nuniquely to manage column identities.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnheaderbyuid"},"getColumnIndexByField":{"name":"getColumnIndexByField","description":"<p>Determines the column index by the specified field name.\nHelpful in converting field names to indices for operations that require\nnumeric input for array or collection indexing.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnindexbyfield"},"getColumnIndexByUid":{"name":"getColumnIndexByUid","description":"<p>Determines the column index based on the unique identifier (UID).\nThis can be crucial in scenarios that involve dynamic column management\nwhere UID provides an accurate reference.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumnindexbyuid"},"getColumns":{"name":"getColumns","description":"<p>Fetches a collection of columns from the TreeGrid optionally refreshing the column model.\nUse this method to retrieve and optionally refresh the list of columns\nto ensure up-to-date configurations and settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcolumns"},"getContent":{"name":"getContent","description":"<p>Retrieves the main content area of the TreeGrid.\nThis method allows access to the main content DIV, which can\nbe used for layout adjustments or adding custom elements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcontent"},"getContentTable":{"name":"getContentTable","description":"<p>Retrieves the content table element of the TreeGrid.\nThis table contains the main data display area, allowing for\ninteraction and data manipulation directly within the TreeGrid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcontenttable"},"getCurrentViewRecords":{"name":"getCurrentViewRecords","description":"<p>Retrieves the current set of records that are visible in the TreeGrid view.\nThis method excludes any summary rows to focus on the main data set\ncurrently being viewed by the user.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getcurrentviewrecords"},"getDataModule":{"name":"getDataModule","description":"<p>Obtains the data handling modules used by the TreeGrid.\nThis includes both the base data module for standard grid operations and the tree module\nfor handling hierarchical data, giving complete access to data management capabilities.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getdatamodule"},"getDataRows":{"name":"getDataRows","description":"<p>Obtains all data row elements from the TreeGrid, excluding summary rows.\nProvides a way to access the visual representation of data for purposes\nlike custom formatting or event binding.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getdatarows"},"getFooterContent":{"name":"getFooterContent","description":"<p>Retrieves the footer content element of the TreeGrid, usually for styling or custom manipulation.\nThis can be used to access the footer for adding custom functionality\nor styling purposes to enhance user interaction at the bottom of the grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfootercontent"},"getFooterContentTable":{"name":"getFooterContentTable","description":"<p>Acquires the footer table element of the TreeGrid for layout management.\nUseful for manipulating the table's structure or style beneath the grid content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfootercontenttable"},"getFrozenLeftColumnHeaderByIndex":{"name":"getFrozenLeftColumnHeaderByIndex","description":"<p>Gets a frozen left column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenleftcolumnheaderbyindex"},"getFrozenRightCellFromIndex":{"name":"getFrozenRightCellFromIndex","description":"<p>Gets a frozen right table cell by row and column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenrightcellfromindex"},"getFrozenRightColumnHeaderByIndex":{"name":"getFrozenRightColumnHeaderByIndex","description":"<p>Gets a frozen right column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenrightcolumnheaderbyindex"},"getFrozenRightDataRows":{"name":"getFrozenRightDataRows","description":"<p>Gets all the Tree Grid's frozen right table data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenrightdatarows"},"getFrozenRightRowByIndex":{"name":"getFrozenRightRowByIndex","description":"<p>Gets a frozen right tables row element by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenrightrowbyindex"},"getFrozenRightRows":{"name":"getFrozenRightRows","description":"<p>Gets the Tree Grid's frozen right content rows from frozen Tree Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getfrozenrightrows"},"getHeaderContent":{"name":"getHeaderContent","description":"<p>Retrieves the header content element of the TreeGrid.\nMainly used for interacting with the header section, which includes\ncolumn headers and any applied header styling or events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getheadercontent"},"getHeaderTable":{"name":"getHeaderTable","description":"<p>Retrieves the header table element of the TreeGrid.\nThis method is useful for direct access to the table structure\nwhere column headers are defined.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getheadertable"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getlocaldata"},"getMovableCellFromIndex":{"name":"getMovableCellFromIndex","description":"<p>Gets a movable table cell by row and column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getmovablecellfromindex"},"getMovableColumnHeaderByIndex":{"name":"getMovableColumnHeaderByIndex","description":"<p>Gets a movable column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getmovablecolumnheaderbyindex"},"getMovableDataRows":{"name":"getMovableDataRows","description":"<p>Gets all the TreeGrid's movable table data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getmovabledatarows"},"getMovableRowByIndex":{"name":"getMovableRowByIndex","description":"<p>Gets a movable tables row by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getmovablerowbyindex"},"getMovableRows":{"name":"getMovableRows","description":"<p>Gets the TreeGrid's movable content rows from frozen treegrid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getmovablerows"},"getPager":{"name":"getPager","description":"<p>Obtains the pager element of the TreeGrid.\nThe pager enables navigation between pages when the TreeGrid displays paginated data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getpager"},"getPrimaryKeyFieldNames":{"name":"getPrimaryKeyFieldNames","description":"<p>Retrieves the primary key field names used in the TreeGrid.\nThis information is crucial for identifying and manipulating unique rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getprimarykeyfieldnames"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getrootelement"},"getRowByIndex":{"name":"getRowByIndex","description":"<p>Fetches a specific row element based on its index in the TreeGrid.\nThis provides a way to directly access and manipulate a row using its index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getrowbyindex"},"getRowInfo":{"name":"getRowInfo","description":"<p>Provides detailed information about a row based on a specified target element.\nIntegral for retrieving metadata such as row index or data object\nwhen working with events or complex tree structures.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getrowinfo"},"getRows":{"name":"getRows","description":"<p>Retrieves all the TreeGrid row elements.\nThis method is useful for accessing the HTML representation of the rows for further manipulation or inspection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getrows"},"getSelectedRecords":{"name":"getSelectedRecords","description":"<p>Retrieves the data records corresponding to the currently selected rows.\nThis method provides the full record data for the selected rows,\nwhich is useful for data manipulation or extraction operations.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getselectedrecords"},"getSelectedRowCellIndexes":{"name":"getSelectedRowCellIndexes","description":"<p>Retrieves the indexes of the selected cells within the selected rows.\nThis can be useful for handling cell-specific operations, such as\napplying styles or editing values programmatically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getselectedrowcellindexes"},"getSelectedRowIndexes":{"name":"getSelectedRowIndexes","description":"<p>Retrieves the indexes of the currently selected rows in the TreeGrid.\nThis method is useful when you need to perform actions based on the selected rows,\nsuch as retrieving data or changing the selection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getselectedrowindexes"},"getSelectedRows":{"name":"getSelectedRows","description":"<p>Retrieves the currently selected rows.\nUseful for obtaining the selected data elements for downstream processing.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getselectedrows"},"getUidByColumnField":{"name":"getUidByColumnField","description":"<p>Finds the unique identifier (UID) for a column based on its field name.\nUIDs are essential for precise identification and manipulation within complex grids.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getuidbycolumnfield"},"getVisibleColumns":{"name":"getVisibleColumns","description":"<p>Retrieves all the columns that are currently set to be visible within the TreeGrid.\nHelps in understanding the user's current view and can be used to dynamically\nadjust the visible columns.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getvisiblecolumns"},"getVisibleRecords":{"name":"getVisibleRecords","description":"<p>Retrieves currently visible records according to the TreeGrid's visual state.\nIt considers row expansion and collapse states to return only those records\nthat a user can currently interact with.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#getvisiblerecords"},"goToPage":{"name":"goToPage","description":"<p>Navigates to a specified page number within the TreeGrid pagination.\nThis can be used to programmatically change the page being viewed,\nallowing for scripted navigation through data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#gotopage"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#handleunload"},"hideColumns":{"name":"hideColumns","description":"<p>Hides one or more columns based on the specified column names.\nUtilized to dynamically reduce the visibility of columns based on\nuser roles or preferences.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#hidecolumns"},"hideSpinner":{"name":"hideSpinner","description":"<p>Hides a manually shown loading spinner overlay from the TreeGrid.\nEnsures that any long-running process indication is removed after completion\nto manage user interface aesthetics.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#hidespinner"},"indent":{"name":"indent","description":"<p>Indents a specified record, promoting it to one level deeper in the hierarchy.\nThis function moves the selected row to become the last child of its preceding row,\naltering the visual and hierarchical data structure.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#indent"},"openColumnChooser":{"name":"openColumnChooser","description":"<p>Displays the column chooser at a specified screen position.\nUseful for customizing the visibility of columns interactively via the UI.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#opencolumnchooser"},"outdent":{"name":"outdent","description":"<p>Outdents a specified record, moving it one level up in the hierarchy.\nThis method repositions the selected row to be a sibling of its parent, impacting\nits display and the hierarchical relationships within the TreeGrid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#outdent"},"paste":{"name":"paste","description":"<p>Pastes data into the selected cells from the clipboard.\nAutomatically places the pasted data starting from the specified indices.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#paste"},"pdfExport":{"name":"pdfExport","description":"<p>Exports the TreeGrid data to a PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pdfexport"},"print":{"name":"print","description":"<p>Prints all the pages of the TreeGrid and hides the pager by default.\nCustomize print options using the <a href=\"./#printmode\">printMode</a>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#print"},"refresh":{"name":"refresh","description":"<p>Refreshes the visual appearance and data of the TreeGrid, updating header and content.\nThis is crucial for synchronizing the displayed data with the underlying data source,\nensuring the view reflects current data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#refresh"},"refreshColumns":{"name":"refreshColumns","description":"<p>Updates and refreshes the TreeGrid's column definitions and layout.\nEnsures that the latest column settings are displayed, either refreshing the UI\nor adjusting internal configurations to match current data or configuration updates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#refreshcolumns"},"refreshHeader":{"name":"refreshHeader","description":"<p>Refreshes the header section of the TreeGrid to reflect any structural or data changes.\nThis method is useful when there are dynamic updates or layout adjustments\nneeded in the header portion to ensure it aligns with current grid data or settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#refreshheader"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#render"},"reorderColumns":{"name":"reorderColumns","description":"<p>Reorders TreeGrid columns by specifying their field names.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#reordercolumns"},"reorderRows":{"name":"reorderRows","description":"<p>Reorders rows in the TreeGrid based on specified source indexes and a target position.\nThis functionality allows for dynamic rearrangement of rows, such as moving selected\nrows to a new position as siblings or children.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#reorderrows"},"saveCell":{"name":"saveCell","description":"<p>Saves the current cell value changes without committing to the data source.\nThis operation persists the changes in the UI but not in the underlying data model.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#savecell"},"search":{"name":"search","description":"<p>Searches for TreeGrid records using a specified search string.\nCustomize the search behavior through the <a href=\"./#searchsettings/\">searchSettings</a>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#search"},"selectCell":{"name":"selectCell","description":"<p>Selects a cell by its index position in the TreeGrid.\nUseful for navigating or highlighting specific data cells within the grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectcell"},"selectCheckboxes":{"name":"selectCheckboxes","description":"<p>Selects rows in the TreeGrid using row indices, checking their associated checkboxes.\nThis method provides automation for selecting or highlighting specific rows,\nuseful in scenarios needing pre-selection or default selections.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectcheckboxes"},"selectRow":{"name":"selectRow","description":"<p>Selects a row in the TreeGrid by its index.\nUse this method to highlight a specific row; useful for programmatically navigating data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectrow"},"selectRows":{"name":"selectRows","description":"<p>Selects multiple rows in the TreeGrid given an array of row indexes.\nUseful for batch operations where multiple row selections are necessary.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectrows"},"serverCsvExport":{"name":"serverCsvExport","description":"<p>Sends a POST request to export the TreeGrid to a CSV file on the server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#servercsvexport"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#serverdatabind"},"serverExcelExport":{"name":"serverExcelExport","description":"<p>Sends a POST request to export the TreeGrid to an Excel file on the server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#serverexcelexport"},"serverPdfExport":{"name":"serverPdfExport","description":"<p>Sends a POST request to export the TreeGrid to a PDF document on the server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#serverpdfexport"},"setCellValue":{"name":"setCellValue","description":"<p>Updates the value of a specific cell using its primary key for identification.\nUseful for targeted updates that leverage unique identifiers to ensure accuracy.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#setcellvalue"},"setRowData":{"name":"setRowData","description":"<p>Updates the data for a specific row identified by its primary key and refreshes the display.\nImportant for keeping the displayed data consistent with the source database or dataset.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#setrowdata"},"showColumns":{"name":"showColumns","description":"<p>Shows one or more columns based on the specified column names.\nThis is useful for dynamically adjusting the visibility of columns\nbased on user actions or application logic.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#showcolumns"},"showSpinner":{"name":"showSpinner","description":"<p>Displays a loading spinner overlay across the TreeGrid for any data action or long-running process.\nThis can be manually invoked to indicate processing, enhancing user experience by providing feedback.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#showspinner"},"sortByColumn":{"name":"sortByColumn","description":"<p>Sorts a column with the specified options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#sortbycolumn"},"startEdit":{"name":"startEdit","description":"<p>Initiates editing for a specific row using its HTML element.\nThis allows for manual control of which row enters edit mode through the UI.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#startedit"},"updateCell":{"name":"updateCell","description":"<p>Updates the value of a specific cell directly, bypassing the edit mode.\nThis method provides a quick way to update the UI and data without user interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#updatecell"},"updateExternalMessage":{"name":"updateExternalMessage","description":"<p>Updates the external message displayed within the pager component.\nThis is useful for showing custom messages or additional information\nrelated to the data set or pagination status.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#updateexternalmessage"},"updateRow":{"name":"updateRow","description":"<p>Updates a specific row with given values directly, skipping the edit state.\nThis method allows for bulk updates of row data programmatically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#updaterow"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#inject"}},"DashboardLayoutComponent":{"change":{"name":"change","description":"<p>Triggers whenever the panels positions are changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#change"},"created":{"name":"created","description":"<p>Triggers when Dashboard Layout is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when Dashboard Layout is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#destroyed"},"drag":{"name":"drag","description":"<p>Triggers while a panel is dragged continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#drag"},"dragStart":{"name":"dragStart","description":"<p>Triggers when a panel is about to drag.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#dragstart"},"dragStop":{"name":"dragStop","description":"<p>Triggers when a dragged panel is dropped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#dragstop"},"resize":{"name":"resize","description":"<p>Triggers when a panel is being resized continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#resize"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when a panel is about to resize.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when a panel resize ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#resizestop"},"allowDragging":{"name":"allowDragging","description":"<p>If allowDragging is set to true, then the DashboardLayout allows you to drag and reorder the panels.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#allowdragging"},"allowFloating":{"name":"allowFloating","description":"<p>If allowFloating is set to true, then the DashboardLayout automatically move the panels upwards to fill the empty available\ncells while dragging or resizing the panels.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#allowfloating"},"allowResizing":{"name":"allowResizing","description":"<p>If allowResizing is set to true, then the DashboardLayout allows you to resize the panels.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#allowresizing"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#allowserverdatabinding"},"cellAspectRatio":{"name":"cellAspectRatio","description":"<p>Defines the cell aspect ratio of the panel.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#cellaspectratio"},"cellSpacing":{"name":"cellSpacing","description":"<p>Defines the spacing between the panels.</p>\n","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#cellspacing"},"columns":{"name":"columns","description":"<p>Defines the number of columns to be created in the DashboardLayout.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#currentcontext"},"draggableHandle":{"name":"draggableHandle","description":"<p>Defines the draggable handle selector which will act as dragging handler for the panels.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#draggablehandle"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#isvue"},"mediaQuery":{"name":"mediaQuery","description":"<p>Defines the media query value where the dashboardlayout becomes stacked layout when the resolution meets.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#mediaquery"},"panels":{"name":"panels","description":"<p>Defines the panels property of the DashboardLayout component.</p>\n","type":"PanelModel[]","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#panels"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#refs"},"resizableHandles":{"name":"resizableHandles","description":"<p>Defines the resizing handles directions used for resizing the panels.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#resizablehandles"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#setstate"},"showGridLines":{"name":"showGridLines","description":"<p>Enables or disables the grid lines for the Dashboard Layout panels.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#showgridlines"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#addeventlistener"},"addPanel":{"name":"addPanel","description":"<p>Allows to add a panel to the Dashboardlayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#addpanel"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the DashboardLayout component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#handleunload"},"movePanel":{"name":"movePanel","description":"<p>Moves the panel in the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#movepanel"},"refresh":{"name":"refresh","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#refresh"},"refreshDraggableHandle":{"name":"refreshDraggableHandle","description":"<p>Method to update the draggable handle when draggable panel elements are bound dynamically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#refreshdraggablehandle"},"removeAll":{"name":"removeAll","description":"<p>Removes all the panels from the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#removeall"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#removeeventlistener"},"removePanel":{"name":"removePanel","description":"<p>Removes the panel from the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#removepanel"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#render"},"resizePanel":{"name":"resizePanel","description":"<p>Resize the panel in the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#resizepanel"},"serialize":{"name":"serialize","description":"<p>Returns the panels object of the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#serialize"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#serverdatabind"},"updatePanel":{"name":"updatePanel","description":"<p>Allows to update a panel in the DashboardLayout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#updatepanel"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/#inject"}},"PanelDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelDirective#shouldcomponentupdate"}},"PanelsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/dashboard-layout/panelsDirective#shouldcomponentupdate"}},"PaneDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/paneDirective#shouldcomponentupdate"}},"PanesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/panesDirective#shouldcomponentupdate"}},"SplitterComponent":{"beforeCollapse":{"name":"beforeCollapse","description":"<p>Triggers when before panes get collapsed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#beforecollapse"},"beforeExpand":{"name":"beforeExpand","description":"<p>Triggers when before panes get expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#beforeexpand"},"beforeSanitizeHtml":{"name":"beforeSanitizeHtml","description":"<p>Event triggers before sanitize the value.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#beforesanitizehtml"},"collapsed":{"name":"collapsed","description":"<p>Triggers when after panes get collapsed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#collapsed"},"created":{"name":"created","description":"<p>Triggers after creating the splitter component with its panes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#created"},"expanded":{"name":"expanded","description":"<p>Triggers when after panes get expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#expanded"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when the split pane is started to resize.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the resizing of split pane is stopped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers when a split pane is being resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#resizing"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class names that defines specific user-defined\nstyles and themes to be appended on the root element of the Splitter.\nIt is used to customize the Splitter control.\nOne or more custom CSS classes can be specified to the Splitter.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables the persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#enablepersistence"},"enableReversePanes":{"name":"enableReversePanes","description":"<p>Specifies the value whether splitter panes are reordered or not .</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#enablereversepanes"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies boolean value that indicates whether the component is enabled or disabled.\nThe Splitter component does not allow to interact when this property is disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#enabled"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the Splitter component that accepts both string and number values.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#locale"},"orientation":{"name":"orientation","description":"<p>Specifies a value that indicates whether to align the split panes horizontally or vertically.</p>\n<ul>\n<li>Set the orientation property as &quot;Horizontal&quot; to create a horizontal splitter that aligns the panes left-to-right.</li>\n<li>Set the orientation property as &quot;Vertical&quot; to create a vertical splitter that aligns the panes top-to-bottom.</li>\n</ul>\n","type":"Orientation","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#orientation"},"paneSettings":{"name":"paneSettings","description":"<p>Configures the individual pane behaviors such as content, size, resizable, minimum, maximum validation, collapsible and collapsed.</p>\n","type":"PanePropertiesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#panesettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#root"},"separatorSize":{"name":"separatorSize","description":"<p>Specifies the size of the separator line for both horizontal or vertical orientation.\nThe separator is used to separate the panes by lines.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#separatorsize"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#state"},"width":{"name":"width","description":"<p>Specifies the width of the Splitter control, which accepts both string and number values as width.\nThe string value can be either in pixel or percentage format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#addeventlistener"},"addPane":{"name":"addPane","description":"<p>Allows you to add a pane dynamically to the specified index position by passing the pane properties.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#addpane"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#attachunloadevent"},"collapse":{"name":"collapse","description":"<p>collapses corresponding pane based on the index is passed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#collapse"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and also removes all its related events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#detachunloadevent"},"expand":{"name":"expand","description":"<p>expands corresponding pane based on the index is passed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#expand"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#removeeventlistener"},"removePane":{"name":"removePane","description":"<p>Allows you to remove the specified pane dynamically by passing its index value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#removepane"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/splitter/#inject"}},"ItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemDirective#shouldcomponentupdate"}},"ItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/itemsDirective#shouldcomponentupdate"}},"TimelineComponent":{"beforeItemRender":{"name":"beforeItemRender","description":"<p>Event triggers before rendering each item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#beforeitemrender"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the timeline.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#created"},"align":{"name":"align","description":"<p>Defines the alignment of item content within the Timeline.\nThe possible values are:</p>\n<ul>\n<li>Before</li>\n<li>After</li>\n<li>Alternate</li>\n<li>AlternateReverse</li>\n</ul>\n","type":"string|TimelineAlign","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#align"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines the CSS class to customize the Timeline appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#isvue"},"items":{"name":"items","description":"<p>Defines the list of items.</p>\n","type":"TimelineItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#locale"},"orientation":{"name":"orientation","description":"<p>Defines the orientation type of the Timeline.\nThe possible values are:</p>\n<ul>\n<li>Horizontal</li>\n<li>vertical</li>\n</ul>\n","type":"string|TimelineOrientation","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#refs"},"reverse":{"name":"reverse","description":"<p>Defines whether to show the timeline items in reverse order or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#reverse"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#state"},"template":{"name":"template","description":"<p>Defines the template content for each timeline item. The template context will contain the item model.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#template"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timeline/#inject"}},"BubbleDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubbleDirective#shouldcomponentupdate"}},"BubblesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/bubblesDirective#shouldcomponentupdate"}},"InitialShapeSelectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionDirective#shouldcomponentupdate"}},"InitialShapeSelectionsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/initialShapeSelectionsDirective#shouldcomponentupdate"}},"LayerDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layerDirective#shouldcomponentupdate"}},"LayersDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/layersDirective#shouldcomponentupdate"}},"MapsComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation is completed in the maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#animationcomplete"},"annotationRendering":{"name":"annotationRendering","description":"<p>Triggers before rendering an annotation in the maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#annotationrendering"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#beforeprint"},"bubbleClick":{"name":"bubbleClick","description":"<p>Triggers when performing the click operation on the bubble element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#bubbleclick"},"bubbleMouseMove":{"name":"bubbleMouseMove","description":"<p>Triggers when hovering the mouse on the bubble element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#bubblemousemove"},"bubbleRendering":{"name":"bubbleRendering","description":"<p>Triggers before the bubble element gets rendered on the map.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#bubblerendering"},"click":{"name":"click","description":"<p>Triggers when a user clicks on an element in Maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#click"},"dataLabelRendering":{"name":"dataLabelRendering","description":"<p>Triggers before the data-label gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#datalabelrendering"},"doubleClick":{"name":"doubleClick","description":"<p>Triggers when performing the double click operation on an element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#doubleclick"},"itemHighlight":{"name":"itemHighlight","description":"<p>Trigger before the shape, bubble or marker gets highlighted.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#itemhighlight"},"itemSelection":{"name":"itemSelection","description":"<p>Triggers before the shape, bubble or marker gets selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#itemselection"},"layerRendering":{"name":"layerRendering","description":"<p>Triggers before the maps layer gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#layerrendering"},"legendRendering":{"name":"legendRendering","description":"<p>Triggers before the legend gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#legendrendering"},"load":{"name":"load","description":"<p>Triggers before the maps gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the maps gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#loaded"},"markerClick":{"name":"markerClick","description":"<p>Triggers when clicking on a marker element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerclick"},"markerClusterClick":{"name":"markerClusterClick","description":"<p>Triggers when clicking the marker cluster in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerclusterclick"},"markerClusterMouseMove":{"name":"markerClusterMouseMove","description":"<p>Triggers when moving the mouse over the marker cluster element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerclustermousemove"},"markerClusterRendering":{"name":"markerClusterRendering","description":"<p>Triggers before the maps marker cluster gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerclusterrendering"},"markerDragEnd":{"name":"markerDragEnd","description":"<p>When the marker has stopped dragging on the map, this event is triggered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerdragend"},"markerDragStart":{"name":"markerDragStart","description":"<p>When the marker begins to drag on the map, this event is triggered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerdragstart"},"markerMouseMove":{"name":"markerMouseMove","description":"<p>Triggers when moving the mouse over the marker element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markermousemove"},"markerRendering":{"name":"markerRendering","description":"<p>Triggers before the maps marker gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#markerrendering"},"mouseMove":{"name":"mouseMove","description":"<p>This event is triggered when the mouse pointer moves over the map.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mousemove"},"onclick":{"name":"onclick","description":"<p>Triggers when a user clicks on an element in Maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#onclick"},"pan":{"name":"pan","description":"<p>Triggers before performing the panning operation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#pan"},"panComplete":{"name":"panComplete","description":"<p>This event is triggered after performing the panning action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#pancomplete"},"resize":{"name":"resize","description":"<p>Triggers to notify the resize of the maps when the window is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#resize"},"rightClick":{"name":"rightClick","description":"<p>Triggers when performing the right click operation on an element in maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#rightclick"},"shapeHighlight":{"name":"shapeHighlight","description":"<p>Triggers before the shape gets highlighted.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#shapehighlight"},"shapeRendering":{"name":"shapeRendering","description":"<p>Triggers before the maps shape gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#shaperendering"},"shapeSelected":{"name":"shapeSelected","description":"<p>Triggers when a shape is selected in the maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#shapeselected"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the maps tooltip gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#tooltiprender"},"tooltipRenderComplete":{"name":"tooltipRenderComplete","description":"<p>Triggers after the maps tooltip gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#tooltiprendercomplete"},"zoom":{"name":"zoom","description":"<p>Triggers before the zoom operations such as zoom in and zoom out in the maps.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoom"},"zoomComplete":{"name":"zoomComplete","description":"<p>This event is triggered after the zooming operation is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomcomplete"},"allowImageExport":{"name":"allowImageExport","description":"<p>Enables or disables the export to image functionality in maps.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#allowimageexport"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>Enables or disables the export to PDF functionality in maps.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#allowpdfexport"},"allowPrint":{"name":"allowPrint","description":"<p>Enables or disables the print functionality in maps.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#allowprint"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#allowserverdatabinding"},"annotations":{"name":"annotations","description":"<p>Gets or sets the options for customizing the annotations in the maps.</p>\n","type":"AnnotationModel[]","link":"//ej2.syncfusion.com/react/documentation/api/maps/#annotations"},"background":{"name":"background","description":"<p>Gets or sets the background color of the maps container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#background"},"baseLayerIndex":{"name":"baseLayerIndex","description":"<p>Gets or sets the index of the layer of maps which will be the base layer. It provides the option to select which layer to be visible in the maps.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/maps/#baselayerindex"},"border":{"name":"border","description":"<p>Gets or sets the options for customizing the style properties of the maps border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#border"},"centerPosition":{"name":"centerPosition","description":"<p>Gets or sets the center position of the maps.</p>\n","type":"CenterPositionModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#centerposition"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#currentcontext"},"dataLabel":{"name":"dataLabel","description":"","type":"DataLabel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#datalabel"},"dataLabelShape":{"name":"dataLabelShape","description":"","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/maps/#datalabelshape"},"description":{"name":"description","description":"<p>Gets or sets the description of the maps for assistive technology.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#description"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/maps/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#forceupdate"},"format":{"name":"format","description":"<p>Gets or sets the format to apply internationalization for the text in the maps.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#format"},"height":{"name":"height","description":"<p>Gets or sets the height in which the maps is to be rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isserverrendered"},"isShapeSelected":{"name":"isShapeSelected","description":"<p>Specifies whether the shape is selected in the maps or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isshapeselected"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#isvue"},"layers":{"name":"layers","description":"<p>Gets or sets the options to customize the layers of the maps.</p>\n","type":"LayerSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/maps/#layers"},"legendSettings":{"name":"legendSettings","description":"<p>Gets or sets the options to customize the legend of the maps.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#locale"},"mapScaleValue":{"name":"mapScaleValue","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mapscalevalue"},"mapsArea":{"name":"mapsArea","description":"<p>Gets or sets the options to customize the area around the map.</p>\n","type":"MapsAreaSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mapsarea"},"margin":{"name":"margin","description":"<p>Gets or sets the options to customize the margin of the maps.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#margin"},"mouseClickEvent":{"name":"mouseClickEvent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mouseclickevent"},"mouseDownEvent":{"name":"mouseDownEvent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mousedownevent"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maps/#portals"},"previousProjection":{"name":"previousProjection","description":"","type":"String","link":"//ej2.syncfusion.com/react/documentation/api/maps/#previousprojection"},"projectionType":{"name":"projectionType","description":"<p>Gets or sets the projection with which the maps will be rendered to show the two-dimensional curved surface of a globe on a plane.</p>\n","type":"ProjectionType","link":"//ej2.syncfusion.com/react/documentation/api/maps/#projectiontype"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/maps/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maps/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maps/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maps/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/maps/#state"},"tabIndex":{"name":"tabIndex","description":"<p>Gets or sets the tab index value for the maps.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/maps/#tabindex"},"theme":{"name":"theme","description":"<p>Gets or sets the theme styles supported for maps. When the theme is set, the styles associated with the theme will be set in the maps.</p>\n","type":"MapsTheme","link":"//ej2.syncfusion.com/react/documentation/api/maps/#theme"},"titleSettings":{"name":"titleSettings","description":"<p>Gets or sets the options to customize the title of the maps.</p>\n","type":"TitleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#titlesettings"},"tooltipDisplayMode":{"name":"tooltipDisplayMode","description":"<p>Gets or sets the mode in which the tooltip is to be displayed.\nThe tooltip can be rendered on mouse move, click or double clicking on the\nelement on the map.</p>\n","type":"TooltipGesture","link":"//ej2.syncfusion.com/react/documentation/api/maps/#tooltipdisplaymode"},"translatePoint":{"name":"translatePoint","description":"","type":"Point","link":"//ej2.syncfusion.com/react/documentation/api/maps/#translatepoint"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Enables or disables the visibility state of the separator for grouping.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/#usegroupingseparator"},"width":{"name":"width","description":"<p>Gets or sets the width in which the maps is to be rendered.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/#width"},"zoomLabelPositions":{"name":"zoomLabelPositions","description":"","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomlabelpositions"},"zoomSettings":{"name":"zoomSettings","description":"<p>Gets or sets the options to customize the zooming operations in maps.</p>\n","type":"ZoomSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomsettings"},"zoomShapeCollection":{"name":"zoomShapeCollection","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomshapecollection"},"zoomTranslatePoint":{"name":"zoomTranslatePoint","description":"","type":"Point","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomtranslatepoint"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#addeventlistener"},"addLayer":{"name":"addLayer","description":"<p>This method is used to add the layers dynamically to the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#addlayer"},"addMarker":{"name":"addMarker","description":"<p>This method is used to add markers dynamically in the maps.\nIf we provide the index value of the layer in which the marker to be added and the settings\nof the marker as parameters, the marker will be added in the location.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#addmarker"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#databind"},"destroy":{"name":"destroy","description":"<p>This method destroys the maps. This method removes the events associated with the maps and disposes the objects created for rendering and updating the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#detachunloadevent"},"export":{"name":"export","description":"<p>This method handles the export functionality for the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#export"},"getBingUrlTemplate":{"name":"getBingUrlTemplate","description":"<p>This method is used to get the Bing maps URL.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#getbingurltemplate"},"getGeoLocation":{"name":"getGeoLocation","description":"<p>This method is used to get the geographical coordinates for location points in pixels when shape maps are rendered in the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#getgeolocation"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#getlocaldata"},"getMinMaxLatitudeLongitude":{"name":"getMinMaxLatitudeLongitude","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#getminmaxlatitudelongitude"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#getrootelement"},"getTileGeoLocation":{"name":"getTileGeoLocation","description":"<p>This method is used to get the geographical coordinates for location points in pixels when an online map provider is rendered in the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#gettilegeolocation"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#handleunload"},"mapsOnResize":{"name":"mapsOnResize","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#mapsonresize"},"panByDirection":{"name":"panByDirection","description":"<p>This method is used to perform panning by specifying the direction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#panbydirection"},"pointToLatLong":{"name":"pointToLatLong","description":"<p>This method is used to convert the point in pixels to latitude and longitude in maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#pointtolatlong"},"print":{"name":"print","description":"<p>This method handles the printing functionality for the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#removeeventlistener"},"removeLayer":{"name":"removeLayer","description":"<p>This method is used to remove a layer from the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#removelayer"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#serverdatabind"},"shapeSelection":{"name":"shapeSelection","description":"<p>This method is used to select the geometric shape element in the maps.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#shapeselection"},"zoomByPosition":{"name":"zoomByPosition","description":"<p>This method is used to zoom the map by specifying the center position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoombyposition"},"zoomToCoordinates":{"name":"zoomToCoordinates","description":"<p>This method is used to zoom the maps based on the provided coordinates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#zoomtocoordinates"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/#inject"}},"MarkerDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markerDirective#shouldcomponentupdate"}},"MarkersDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/markersDirective#shouldcomponentupdate"}},"NavigationLineDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLineDirective#shouldcomponentupdate"}},"NavigationLinesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maps/navigationLinesDirective#shouldcomponentupdate"}},"RecurrenceEditorComponent":{"change":{"name":"change","description":"<p>Triggers for value changes on every sub-controls rendered within the recurrence editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#change"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#destroyed"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#allowserverdatabinding"},"calendarMode":{"name":"calendarMode","description":"<p>Sets the specific calendar type to be applied on recurrence editor.</p>\n","type":"CalendarType","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#calendarmode"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#context"},"cssClass":{"name":"cssClass","description":"<p>Allows styling with custom class names.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#currentcontext"},"dateFormat":{"name":"dateFormat","description":"<p>Sets the user specific date format on recurrence editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#dateformat"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#enablertl"},"endTypes":{"name":"endTypes","description":"<p>Sets the type of recurrence end for the recurrence pattern on the editor.</p>\n","type":"EndType[]","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#endtypes"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>Sets the first day of the week.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#firstdayofweek"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#forceupdate"},"frequencies":{"name":"frequencies","description":"<p>Sets the recurrence pattern on the editor.</p>\n","type":"RepeatType[]","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#frequencies"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#locale"},"localeObj":{"name":"localeObj","description":"","type":"L10n","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#localeobj"},"maxDate":{"name":"maxDate","description":"<p>Sets the maximum date on recurrence editor.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#maxdate"},"minDate":{"name":"minDate","description":"<p>Sets the minimum date on recurrence editor.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#mindate"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#root"},"selectedType":{"name":"selectedType","description":"<p>Sets the current repeat type to be set on the recurrence editor.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#selectedtype"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#setstate"},"startDate":{"name":"startDate","description":"<p>Sets the start date on recurrence editor.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#startdate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#state"},"value":{"name":"value","description":"<p>Sets the recurrence rule as its output values.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getpersistdata"},"getRecurrenceDates":{"name":"getRecurrenceDates","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getrecurrencedates"},"getRecurrenceRule":{"name":"getRecurrenceRule","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getrecurrencerule"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getrootelement"},"getRuleSummary":{"name":"getRuleSummary","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#getrulesummary"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#render"},"resetFields":{"name":"resetFields","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#resetfields"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#serverdatabind"},"setRecurrenceRule":{"name":"setRecurrenceRule","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#setrecurrencerule"},"updateRuleUntilDate":{"name":"updateRuleUntilDate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#updateruleuntildate"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/recurrence-editor/#inject"}},"HeaderRowDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowDirective#shouldcomponentupdate"}},"HeaderRowsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/headerRowsDirective#shouldcomponentupdate"}},"ResourceDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourceDirective#shouldcomponentupdate"}},"ResourcesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/resourcesDirective#shouldcomponentupdate"}},"ScheduleComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers on beginning of every scheduler action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers on successful completion of the scheduler actions.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when a scheduler action gets failed or interrupted and an error information will be returned.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#actionfailure"},"beforePaste":{"name":"beforePaste","description":"<p>Triggers once when pasting an event on the scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#beforepaste"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers when the print event is called.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#beforeprint"},"cellClick":{"name":"cellClick","description":"<p>Triggers when the scheduler cells are single clicked or on single tap on the same cells in mobile devices.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cellclick"},"cellDoubleClick":{"name":"cellDoubleClick","description":"<p>Triggers when the scheduler cells are double clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#celldoubleclick"},"created":{"name":"created","description":"<p>Triggers after the scheduler component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#created"},"dataBinding":{"name":"dataBinding","description":"<p>Triggers before the data binds to the scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#databinding"},"dataBound":{"name":"dataBound","description":"<p>Triggers once the event data is bound to the scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the scheduler component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#destroyed"},"drag":{"name":"drag","description":"<p>Triggers when an appointment is being in a dragged state.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#drag"},"dragStart":{"name":"dragStart","description":"<p>Triggers when an appointment is started to drag.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dragstart"},"dragStop":{"name":"dragStop","description":"<p>Triggers when the dragging of appointment is stopped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dragstop"},"eventClick":{"name":"eventClick","description":"<p>Triggers when the events are single clicked or on single tapping the events on the mobile devices.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventclick"},"eventDoubleClick":{"name":"eventDoubleClick","description":"<p>Triggers when the events are double clicked or on double tapping the events on the desktop devices.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventdoubleclick"},"eventRendered":{"name":"eventRendered","description":"<p>Triggers before each of the event getting rendered on the scheduler user interface.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventrendered"},"excelExport":{"name":"excelExport","description":"<p>Triggers before the Excel export process begins.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#excelexport"},"hover":{"name":"hover","description":"<p>Triggers when the scheduler elements are hovered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#hover"},"moreEventsClick":{"name":"moreEventsClick","description":"<p>Triggers when the more events indicator are clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#moreeventsclick"},"navigating":{"name":"navigating","description":"<p>Triggers before the date or view navigation takes place on scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#navigating"},"popupClose":{"name":"popupClose","description":"<p>Triggers before any of the scheduler popups close on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#popupclose"},"popupOpen":{"name":"popupOpen","description":"<p>Triggers before any of the scheduler popups opens on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#popupopen"},"renderCell":{"name":"renderCell","description":"<p>Triggers before each element of the schedule rendering on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#rendercell"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when an appointment is started to resize.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the resizing of appointment is stopped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers when an appointment is being in a resizing action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resizing"},"select":{"name":"select","description":"<p>Triggers when multiple cells or events are selected on the Scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#select"},"tooltipOpen":{"name":"tooltipOpen","description":"<p>Triggers before the tooltip is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#tooltipopen"},"virtualScrollStart":{"name":"virtualScrollStart","description":"<p>Triggers when the scroll action is started.\nThis event triggers only when <code>allowVirtualScrolling</code> or <code>enableLazyLoading</code> properties are enabled along with resource grouping.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#virtualscrollstart"},"virtualScrollStop":{"name":"virtualScrollStop","description":"<p>Triggers when the scroll action is stopped.\nThis event triggers only when <code>allowVirtualScrolling</code> or <code>enableLazyLoading</code> properties are enabled along with resource grouping.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#virtualscrollstop"},"activeCellsData":{"name":"activeCellsData","description":"","type":"CellClickEventArgs","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#activecellsdata"},"activeEventData":{"name":"activeEventData","description":"","type":"EventClickArgs","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#activeeventdata"},"activeEventTemplates":{"name":"activeEventTemplates","description":"","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#activeeventtemplates"},"activeView":{"name":"activeView","description":"","type":"IRenderer","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#activeview"},"activeViewOptions":{"name":"activeViewOptions","description":"","type":"ViewsData","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#activeviewoptions"},"adaptiveGroupIndex":{"name":"adaptiveGroupIndex","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#adaptivegroupindex"},"agendaDaysCount":{"name":"agendaDaysCount","description":"<p>Sets the number of days to be displayed by default in Agenda View and in case of virtual scrolling,\nthe number of days will be fetched on each scroll-end based on this count.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#agendadayscount"},"agendaModule":{"name":"agendaModule","description":"","type":"Agenda","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#agendamodule"},"allowClipboard":{"name":"allowClipboard","description":"<p>Enables clipboard functionality for appointments, allowing them to be copied using keyboard shortcuts and pasted onto the Scheduler.\nWhen set to <code>true</code>, users can use keyboard shortcuts to cut, copy appointments and paste them into different time slots or calendars.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowclipboard"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>When set to <code>true</code>, allows the appointments to move over the time slots. When an appointment is dragged, both its start\nand end time tends to change simultaneously allowing it to reschedule the appointment on some other time.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowdraganddrop"},"allowInline":{"name":"allowInline","description":"<p>This property helps user to add/edit the event in inline. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowinline"},"allowKeyboardInteraction":{"name":"allowKeyboardInteraction","description":"<p>When set to <code>true</code>, allows the keyboard interaction to take place on Schedule.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowkeyboardinteraction"},"allowMultiCellSelection":{"name":"allowMultiCellSelection","description":"<p>This property helps user to allow/prevent the selection of multiple cells. By default, it is set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowmulticellselection"},"allowMultiDrag":{"name":"allowMultiDrag","description":"<p>This property helps to drag the multiple selected events. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowmultidrag"},"allowMultiRowSelection":{"name":"allowMultiRowSelection","description":"<p>This property helps user to allow/prevent the selection of multiple days(rows). By default, it is set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowmultirowselection"},"allowOverlap":{"name":"allowOverlap","description":"<p>Specifies whether overlapping appointments are allowed within the same time slot in the Scheduler.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowoverlap"},"allowResizing":{"name":"allowResizing","description":"<p>When set to <code>true</code>, allows the resizing of appointments. It allows the rescheduling of appointments either by changing the\nstart or end time by dragging the event resize handlers.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowresizing"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowserverdatabinding"},"allowSwiping":{"name":"allowSwiping","description":"<p>Defines whether to enable date navigations via swipe in touch devices or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowswiping"},"blockData":{"name":"blockData","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#blockdata"},"blockProcessed":{"name":"blockProcessed","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#blockprocessed"},"calendarMode":{"name":"calendarMode","description":"<p>It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in <code>Gregorian</code> calendar mode.</p>\n<p>To change the mode, you can set either <code>Gregorian</code> or <code>Islamic</code> as a value to this <code>calendarMode</code> property.</p>\n","type":"CalendarType","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#calendarmode"},"calendarUtil":{"name":"calendarUtil","description":"","type":"CalendarUtil","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#calendarutil"},"cellHeaderTemplate":{"name":"cellHeaderTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\nthe month date cells. This template is only applicable for month view day cells.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cellheadertemplate"},"cellTemplate":{"name":"cellTemplate","description":"<p>The template option which is used to render the customized work cells on the Schedule. Here, the template accepts either\nthe string or HTMLElement as template design and then the parsed design is displayed onto the work cells.\nThe fields accessible via template are as follows.</p>\n<ul>\n<li><code>date</code>: Returns the date of the cell.</li>\n<li><code>groupIndex</code>: Returns the group index of the cell.</li>\n<li><code>type</code>: Returns the type of the work cell.\nRefer to the below code snippet.</li>\n</ul>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#celltemplate"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#context"},"crudModule":{"name":"crudModule","description":"","type":"Crud","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#crudmodule"},"cssClass":{"name":"cssClass","description":"<p>It is used to customize the Schedule which accepts custom CSS class names that defines specific user-defined styles and themes\nto be applied on the Schedule element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cssclass"},"currentAction":{"name":"currentAction","description":"","type":"CurrentAction","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentaction"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentcontext"},"currentTimezoneDate":{"name":"currentTimezoneDate","description":"","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currenttimezonedate"},"currentView":{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},"dataModule":{"name":"dataModule","description":"","type":"Data","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#datamodule"},"dateFormat":{"name":"dateFormat","description":"<p>By default, Schedule follows the date-format as per the default culture assigned to it.\nIt is also possible to manually set specific date format by using the <code>dateFormat</code> property.</p>\n<p>The format of the date range label in the header bar depends on the <code>dateFormat</code> value or else based on the\nlocale assigned to the Schedule.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dateformat"},"dateHeaderTemplate":{"name":"dateHeaderTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\nthe date header cells. The field that can be accessed via this template is <code>date</code>.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dateheadertemplate"},"dateRangeTemplate":{"name":"dateRangeTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto the header date range.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#daterangetemplate"},"dayHeaderTemplate":{"name":"dayHeaderTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\nthe day header cells. This template is only applicable for year view header cells.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dayheadertemplate"},"dayModule":{"name":"dayModule","description":"","type":"Day","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#daymodule"},"dragAndDropModule":{"name":"dragAndDropModule","description":"","type":"DragAndDrop","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#draganddropmodule"},"editorFooterTemplate":{"name":"editorFooterTemplate","description":"<p>The template option to render the customized footer of the editor window.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#editorfootertemplate"},"editorHeaderTemplate":{"name":"editorHeaderTemplate","description":"<p>The template option to render the customized header of the editor window.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#editorheadertemplate"},"editorTemplate":{"name":"editorTemplate","description":"<p>The template option to render the customized editor window. The form elements defined within this template should be accompanied\nwith <code>e-field</code> class, so as to fetch and process it from internally.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#editortemplate"},"editorTitles":{"name":"editorTitles","description":"","type":"EventFieldsMapping","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#editortitles"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#element"},"enableAdaptiveUI":{"name":"enableAdaptiveUI","description":"<p>When set to <code>true</code>, the header view navigations are listed under the popup and if we enable resource grouping, the compact view will be enabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enableadaptiveui"},"enableAllDayScroll":{"name":"enableAllDayScroll","description":"<p>When set to <code>true</code>, If valid, the scroll on the all day row is activated when the all day row\nheight reaches the max height when the all day row is expanded.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enablealldayscroll"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Schedule component.\nWhen this property is enabled, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enablepersistence"},"enableRecurrenceValidation":{"name":"enableRecurrenceValidation","description":"<p>The recurrence validation will be done by default. When this property is set to <code>false</code>, the recurrence validation will be skipped.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enablerecurrencevalidation"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#enablertl"},"endHour":{"name":"endHour","description":"<p>It is used to specify the end hour, at which the Schedule ends. It too accepts the time string in a short skeleton format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#endhour"},"eventBase":{"name":"eventBase","description":"","type":"EventBase","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventbase"},"eventDragArea":{"name":"eventDragArea","description":"<p>It enables the external drag and drop support for appointments on scheduler, to be able to move them out of the scheduler layout.\nWhen the drag area is explicitly set with specific DOM element name, the appointments can be dragged anywhere within the specified drag area location.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventdragarea"},"eventFields":{"name":"eventFields","description":"","type":"EventFieldsMapping","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventfields"},"eventSettings":{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},"eventTooltip":{"name":"eventTooltip","description":"","type":"EventTooltip","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventtooltip"},"eventWindow":{"name":"eventWindow","description":"","type":"EventWindow","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventwindow"},"eventsData":{"name":"eventsData","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsdata"},"eventsProcessed":{"name":"eventsProcessed","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsprocessed"},"excelExportModule":{"name":"excelExportModule","description":"","type":"ExcelExport","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#excelexportmodule"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>This option allows the user to set the first day of a week on Schedule. It should be based on the locale set to it and each culture\ndefines its own first day of week values. If needed, the user can set it manually on his own by defining the value through\nthis property. It usually accepts the integer values, whereby 0 is always denoted as Sunday, 1 as Monday and so on.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#firstdayofweek"},"firstMonthOfYear":{"name":"firstMonthOfYear","description":"<p>This property helps render the year view customized months. By default, it is set to <code>0</code>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#firstmonthofyear"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#forceupdate"},"globalize":{"name":"globalize","description":"","type":"Internationalization","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#globalize"},"group":{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},"headerIndentTemplate":{"name":"headerIndentTemplate","description":"<p>Template option to customize the header indent bar. Here, the template accepts either\nthe string or HTMLElement as template design and then the parsed design is displayed onto the header indent cell.\nRefer to the below code snippet.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#headerindenttemplate"},"headerModule":{"name":"headerModule","description":"","type":"HeaderRenderer","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#headermodule"},"headerRows":{"name":"headerRows","description":"<p>Allows defining the collection of custom header rows to display the year, month, week, date and hour label as an individual row\non the timeline view of the scheduler.</p>\n","type":"HeaderRowsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#headerrows"},"height":{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},"hideEmptyAgendaDays":{"name":"hideEmptyAgendaDays","description":"<p>The days which does not has even a single event to display will be hidden from the UI of Agenda View by default.\nWhen this property is set to <code>false</code>, the empty dates will also be displayed on the Schedule.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#hideemptyagendadays"},"iCalendarExportModule":{"name":"iCalendarExportModule","description":"","type":"ICalendarExport","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#icalendarexportmodule"},"iCalendarImportModule":{"name":"iCalendarImportModule","description":"","type":"ICalendarImport","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#icalendarimportmodule"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#initrendercalled"},"inlineModule":{"name":"inlineModule","description":"","type":"InlineEdit","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#inlinemodule"},"internalTimeFormat":{"name":"internalTimeFormat","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#internaltimeformat"},"isAdaptive":{"name":"isAdaptive","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isadaptive"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isdestroyed"},"isPrinting":{"name":"isPrinting","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isprinting"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isvue"},"keyboardInteractionModule":{"name":"keyboardInteractionModule","description":"","type":"KeyboardInteraction","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#keyboardinteractionmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#locale"},"localeObj":{"name":"localeObj","description":"","type":"L10n","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#localeobj"},"maxDate":{"name":"maxDate","description":"<p>To define the maximum date on the Schedule, <code>maxDate</code> property can be defined.\nUsually, it defaults to the new Date(2099, 11, 31).</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#maxdate"},"minDate":{"name":"minDate","description":"<p>To define the minimum date on the Schedule, <code>minDate</code> property can be defined.\nUsually, it defaults to the new Date(1900, 0, 1).</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#mindate"},"monthAgendaModule":{"name":"monthAgendaModule","description":"","type":"MonthAgenda","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#monthagendamodule"},"monthHeaderTemplate":{"name":"monthHeaderTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\nthe month header cells. This template is only applicable for year view header cells.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#monthheadertemplate"},"monthModule":{"name":"monthModule","description":"","type":"Month","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#monthmodule"},"monthsCount":{"name":"monthsCount","description":"<p>This option allows the user to set the number of months count to be displayed on the Schedule.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#monthscount"},"overlapAppointments":{"name":"overlapAppointments","description":"","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#overlapappointments"},"overscanCount":{"name":"overscanCount","description":"<p>Specifies the number of additional rows or columns to render outside the visible area during virtual scrolling.\nThis property helps in achieving smoother scrolling by pre-loading data just outside the visible region.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#overscancount"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#portals"},"printModule":{"name":"printModule","description":"","type":"Print","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#printmodule"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#props"},"quickInfoOnSelectionEnd":{"name":"quickInfoOnSelectionEnd","description":"<p>This property helps to show quick popup after multiple cell selection. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#quickinfoonselectionend"},"quickInfoTemplates":{"name":"quickInfoTemplates","description":"<p>The template option to customize the quick window. The three sections of the quick popup whereas the header, content,\nand footer can be easily customized with individual template option.</p>\n","type":"QuickInfoTemplatesModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#quickinfotemplates"},"quickPopup":{"name":"quickPopup","description":"","type":"QuickPopups","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#quickpopup"},"readonly":{"name":"readonly","description":"<p>When set to <code>true</code>, makes the Schedule to render in a read only mode. No CRUD actions will be allowed at this time.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#refs"},"registeredTemplate":{"name":"registeredTemplate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#registeredtemplate"},"renderModule":{"name":"renderModule","description":"","type":"Render","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#rendermodule"},"resizeModule":{"name":"resizeModule","description":"","type":"Resize","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resizemodule"},"resourceBase":{"name":"resourceBase","description":"","type":"ResourceBase","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resourcebase"},"resourceCollection":{"name":"resourceCollection","description":"","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resourcecollection"},"resourceHeaderTemplate":{"name":"resourceHeaderTemplate","description":"<p>Template option to customize the resource header bar. Here, the template accepts either\nthe string or HTMLElement as template design and then the parsed design is displayed onto the resource header cells.\nThe following can be accessible via template.</p>\n<ul>\n<li><code>resource</code> - All the resource fields.</li>\n<li><code>resourceData</code> - Object collection of current resource.\nRefer to the below code snippet.</li>\n</ul>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resourceheadertemplate"},"resources":{"name":"resources","description":"<p>Allows defining the collection of resources to be displayed on the Schedule. The resource collection needs to be defined\nwith unique resource names to identify it along with the respective dataSource and field mapping options.</p>\n","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resources"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#root"},"rowAutoHeight":{"name":"rowAutoHeight","description":"<p>when set to <code>true</code>, allows the height of the work-cells to adjust automatically\nbased on the number of appointments present in those time ranges.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#rowautoheight"},"scheduleTouchModule":{"name":"scheduleTouchModule","description":"","type":"ScheduleTouch","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scheduletouchmodule"},"scrollLeft":{"name":"scrollLeft","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scrollleft"},"scrollModule":{"name":"scrollModule","description":"","type":"Scroll","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scrollmodule"},"scrollTop":{"name":"scrollTop","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scrolltop"},"selectedDate":{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"},"selectedElements":{"name":"selectedElements","description":"","type":"Element[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selectedelements"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#setstate"},"showHeaderBar":{"name":"showHeaderBar","description":"<p>When set to <code>false</code>, hides the header bar of the Schedule from UI. By default,\nthe header bar holds the date and view navigation options, to which the user can add their own custom items onto it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showheaderbar"},"showQuickInfo":{"name":"showQuickInfo","description":"<p>When set to <code>true</code>, displays a quick popup with cell or event details on single clicking over the cells or on events.\nBy default, it is set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showquickinfo"},"showTimeIndicator":{"name":"showTimeIndicator","description":"<p>When set to <code>false</code>, hides the current time indicator from the Schedule. Otherwise,\nit visually depicts the live current system time appropriately on the user interface.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showtimeindicator"},"showWeekNumber":{"name":"showWeekNumber","description":"<p>When set to <code>true</code>, displays the week number of the current view date range. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showweeknumber"},"showWeekend":{"name":"showWeekend","description":"<p>When set to <code>false</code>, it hides the weekend days of a week from the Schedule. The days which are not defined in the working days\ncollection are usually treated as weekend days.\nNote: By default, this option is not applicable on <code>Work Week</code> view.\nFor example, if the working days are defined as [1, 2, 3, 4], then the remaining days of that week will be considered as\nthe weekend days and will be hidden on all the views.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showweekend"},"startHour":{"name":"startHour","description":"<p>It is used to specify the starting hour, from which the Schedule starts to display. It accepts the time string in a short skeleton\nformat and also, hides the time beyond the specified start time.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#starthour"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#state"},"timeFormat":{"name":"timeFormat","description":"<p>By default, Schedule follows the time-format as per the default culture assigned to it.\nIt is also possible to manually set specific time format by using the <code>timeFormat</code> property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timeformat"},"timeScale":{"name":"timeScale","description":"<p>Allows to set different time duration on Schedule along with the customized grid count. It also has template option to\ncustomize the time slots with required time values in its own format.</p>\n","type":"TimeScaleModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timescale"},"timelineMonthModule":{"name":"timelineMonthModule","description":"","type":"TimelineMonth","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timelinemonthmodule"},"timelineViewsModule":{"name":"timelineViewsModule","description":"","type":"TimelineViews","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timelineviewsmodule"},"timelineYearModule":{"name":"timelineYearModule","description":"","type":"TimelineYear","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timelineyearmodule"},"timezone":{"name":"timezone","description":"<p>Schedule will be assigned with specific timezone, so as to display the events in it accordingly. By default,\nSchedule dates are processed with System timezone, as no timezone will be assigned specifically to the Schedule at the initial time.\nWhenever the Schedule is bound to remote data services, it is always recommended to set specific timezone to Schedule to make the\nevents on it to display on the same time irrespective of the system timezone. It usually accepts\nthe valid <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">IANA</a> timezone names.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timezone"},"timezoneDataSource":{"name":"timezoneDataSource","description":"<p>Allows to define the collection of timezone items in the Schedule. Only the items bound to this property get listed out in the timezone dropdown of the appointment window.</p>\n","type":"TimezoneFields[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timezonedatasource"},"toolbarItems":{"name":"toolbarItems","description":"<p>To render the custom toolbar items, the <code>toolbarItems</code> property can be used. It contains built-in and custom toolbar items.\nTo avail the built-in toolbar items, the below string values are assigned to the <code>name</code> property of the <code>ToolbarItemModel</code>.</p>\n<ul>\n<li><code>Previous</code>: Schedule component navigates to the previous date from the current date.</li>\n<li><code>Next</code>: Schedule component navigates to the next date from the current date.</li>\n<li><code>Today</code>: Schedule component navigates to the current date from any date.</li>\n<li><code>Views</code>: Schedule component render the defined view options in the toolbar. If view option is not defined, then it will render default view options in the Schedule.</li>\n<li><code>DateRangeText</code>: Schedule component displays the current date text range.</li>\n<li><code>NewEvent</code>: Schedule component render the icon to add a new event.</li>\n</ul>\n","type":"ToolbarItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#toolbaritems"},"tzModule":{"name":"tzModule","description":"","type":"Timezone","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#tzmodule"},"uiStateValues":{"name":"uiStateValues","description":"","type":"UIStateArgs","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#uistatevalues"},"viewCollections":{"name":"viewCollections","description":"","type":"ViewsData[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#viewcollections"},"viewIndex":{"name":"viewIndex","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#viewindex"},"viewOptions":{"name":"viewOptions","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#viewoptions"},"views":{"name":"views","description":"<p>This property holds the views collection and its configurations. It accepts either the array of view names or the array of view\nobjects that holds different configurations for each views. By default,\nSchedule displays all the views namely <code>Day</code>, <code>Week</code>, <code>Work Week</code>, <code>Month</code> and <code>Agenda</code>.\nExample for array of views:</p>\n<p>Example for array of view objects:</p>\n","type":"View[]|ViewsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#views"},"virtualScrollModule":{"name":"virtualScrollModule","description":"","type":"VirtualScroll","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#virtualscrollmodule"},"weekModule":{"name":"weekModule","description":"","type":"Week","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#weekmodule"},"weekRule":{"name":"weekRule","description":"<p>It allows the Scheduler to display week numbers based on following available week options. The week\noption specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>FirstDay</code>: Denotes that the first week of the year starts on the first day of the year and ends before the following designated first day of the week.</li>\n<li><code>FirstFourDayWeek</code>:Denotes that the first week of the year is the first week with four or more days before the designated first day of the week.</li>\n<li><code>FirstFullWeek</code>:  Denotes that the first week of the year begins on the first occurrence of the designated first day of the week on or after the first day of the year.</li>\n</ul>\n","type":"WeekRule","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#weekrule"},"width":{"name":"width","description":"<p>Sets the <code>width</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string value can be either pixel or percentage format.\nWhen set to <code>auto</code>, the Schedule width gets auto-adjusted and display its content related to the viewable screen size.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#width"},"workCellAction":{"name":"workCellAction","description":"","type":"WorkCellInteraction","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#workcellaction"},"workDays":{"name":"workDays","description":"<p>It is used to set the working days on Schedule. The only days that are defined in this collection will be rendered on the <code>workWeek</code>\nview whereas on other views, it will display all the usual days and simply highlights the working days with different shade.</p>\n","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#workdays"},"workHours":{"name":"workHours","description":"<p>The working hours should be highlighted on Schedule with different color shade and an additional option must be provided to\nhighlight it or not. This functionality is handled through <code>workHours</code> property and the start work hour should be 9 AM by default\nand end work hour should point to 6 PM. The start and end working hours needs to be provided as Time value of short skeleton type.</p>\n","type":"WorkHoursModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#workhours"},"workWeekModule":{"name":"workWeekModule","description":"","type":"WorkWeek","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#workweekmodule"},"yearModule":{"name":"yearModule","description":"","type":"Year","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#yearmodule"},"addEvent":{"name":"addEvent","description":"<p>Adds the newly created event into the Schedule dataSource.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#addevent"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#addeventlistener"},"addResource":{"name":"addResource","description":"<p>Adds the resources to the specified index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#addresource"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#attachunloadevent"},"changeCurrentView":{"name":"changeCurrentView","description":"<p>Current View could be change based on the provided parameters.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#changecurrentview"},"closeEditor":{"name":"closeEditor","description":"<p>To manually close the event editor window</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#closeeditor"},"closeOverlapAlert":{"name":"closeOverlapAlert","description":"<p>To manually close the overlap validation Alert.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#closeoverlapalert"},"closeQuickInfoPopup":{"name":"closeQuickInfoPopup","description":"<p>To manually close the quick info popup</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#closequickinfopopup"},"closeTooltip":{"name":"closeTooltip","description":"<p>Closes the tooltip.\nFor example, when the context menu is opened for an event,\nthe tooltip can be closed by calling this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#closetooltip"},"collapseResource":{"name":"collapseResource","description":"<p>This method allows to collapse the resource that available on the scheduler.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#collapseresource"},"copy":{"name":"copy","description":"<p>Method to copy events from an HTMLElement or an array of HTMLElements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#copy"},"cut":{"name":"cut","description":"<p>Method to cut events from an HTMLElement or an array of HTMLElements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cut"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#databind"},"deleteEvent":{"name":"deleteEvent","description":"<p>Deletes the events based on the provided ID or event collection in the argument list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#deleteevent"},"destroy":{"name":"destroy","description":"<p>Destroys the Schedule component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#detachunloadevent"},"expandResource":{"name":"expandResource","description":"<p>This method allows to expand the resource that available on the scheduler.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#expandresource"},"exportToExcel":{"name":"exportToExcel","description":"<p>Allows the Scheduler events data to be exported as an Excel file either in .xlsx or .csv file formats.\nBy default, the whole event collection bound to the Scheduler gets exported as an Excel file.\nTo export only the specific events of Scheduler, you need to pass the custom data collection as\na parameter to this <code>exportToExcel</code> method. This method accepts the export options as arguments such as fileName,\nexportType, fields, customData, and includeOccurrences. The <code>fileName</code> denotes the name to be given for the exported\nfile and the <code>exportType</code> allows you to set the format of an Excel file to be exported either as .xlsx or .csv.\nThe custom or specific field collection of event dataSource to be exported can be provided through <code>fields</code> option\nand the custom data collection can be exported by passing them through the <code>customData</code> option. There also exists\noption to export each individual instances of the recurring events to an Excel file, by setting true or false to the\n<code>includeOccurrences</code> option, denoting either to include or exclude the occurrences as separate instances on an exported Excel file.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#exporttoexcel"},"exportToICalendar":{"name":"exportToICalendar","description":"<p>Exports the Scheduler events to a calendar (.ics) file. By default, the calendar is exported with a file name <code>Calendar.ics</code>.\nTo change this file name on export, pass the custom string value as <code>fileName</code> to get the file downloaded with this provided name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#exporttoicalendar"},"generateEventOccurrences":{"name":"generateEventOccurrences","description":"<p>Generates the occurrences of a single recurrence event based on the provided event.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#generateeventoccurrences"},"getBlockEvents":{"name":"getBlockEvents","description":"<p>Retrieves the entire collection of block events bound to the Schedule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getblockevents"},"getCellDetails":{"name":"getCellDetails","description":"<p>Retrieves the start and end time information of the specific cell element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getcelldetails"},"getCurrentViewDates":{"name":"getCurrentViewDates","description":"<p>Retrieves the dates that lies on active view of Schedule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getcurrentviewdates"},"getCurrentViewEvents":{"name":"getCurrentViewEvents","description":"<p>Retrieves the events that lies on the current date range of the active view of Schedule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getcurrentviewevents"},"getCurrentViewIndex":{"name":"getCurrentViewIndex","description":"<p>Return the current view Index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getcurrentviewindex"},"getDateRangeText":{"name":"getDateRangeText","description":"<p>Retrieves a formatted string representing the date range of the given date collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getdaterangetext"},"getDeletedOccurrences":{"name":"getDeletedOccurrences","description":"<p>Get deleted occurrences from given recurrence series.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getdeletedoccurrences"},"getEventDetails":{"name":"getEventDetails","description":"<p>To retrieve the appointment object from element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#geteventdetails"},"getEventMaxID":{"name":"getEventMaxID","description":"<p>Get the maximum id of an event.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#geteventmaxid"},"getEventTemplateName":{"name":"getEventTemplateName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#geteventtemplatename"},"getEvents":{"name":"getEvents","description":"<p>Retrieves the entire collection of events bound to the Schedule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getevents"},"getIndexFromResourceId":{"name":"getIndexFromResourceId","description":"<p>Select the resources to the based on id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getindexfromresourceid"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getlocaldata"},"getOccurrencesByID":{"name":"getOccurrencesByID","description":"<p>Retrieves the occurrences of a single recurrence event based on the provided parent ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getoccurrencesbyid"},"getOccurrencesByRange":{"name":"getOccurrencesByRange","description":"<p>Retrieves all the occurrences that lies between the specific start and end time range.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getoccurrencesbyrange"},"getResourceCollections":{"name":"getResourceCollections","description":"<p>To get the resource collection</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getresourcecollections"},"getResourcesByIndex":{"name":"getResourcesByIndex","description":"<p>Retrieves the resource details based on the provided resource index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getresourcesbyindex"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getrootelement"},"getSelectedElements":{"name":"getSelectedElements","description":"<p>Retrieves the selected cell elements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getselectedelements"},"getViewDates":{"name":"getViewDates","description":"<p>Retrieves an array of dates based on the specified date collection direction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#getviewdates"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#handleunload"},"hideSpinner":{"name":"hideSpinner","description":"<p>When the spinner is shown manually using <code>showSpinner</code> method, it can be hidden using this <code>hideSpinner</code> method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#hidespinner"},"importICalendar":{"name":"importICalendar","description":"<p>Imports the events from an .ics file downloaded from any of the calendars like Google or Outlook into the Scheduler.\nThis method accepts the blob object or string format of an .ics file to be imported as a mandatory argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#importicalendar"},"isSlotAvailable":{"name":"isSlotAvailable","description":"<p>To check whether the given time range slots are available for event creation or already occupied by other events.\nThis method currently focuses on validating appointments within the current view date range.\nHowever, it does not extend this availability check to recurrence occurrences outside of the current date range.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#isslotavailable"},"openEditor":{"name":"openEditor","description":"<p>To manually open the event editor on specific time or on certain events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#openeditor"},"openOverlapAlert":{"name":"openOverlapAlert","description":"<p>To manually open the overlap validation Alert.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#openoverlapalert"},"openQuickInfoPopup":{"name":"openQuickInfoPopup","description":"<p>To manually open the quick info popup based on cell or event details.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#openquickinfopopup"},"paste":{"name":"paste","description":"<p>Method to create a paste event with clipboard data</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#paste"},"print":{"name":"print","description":"<p>Method allows to print the scheduler.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#refresh"},"refreshEvents":{"name":"refreshEvents","description":"<p>Refreshes the event dataSource. This method may be useful when the events alone in the schedule needs to be re-rendered.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#refreshevents"},"refreshLayout":{"name":"refreshLayout","description":"<p>Refreshes the Schedule layout without re-render.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#refreshlayout"},"refreshTemplates":{"name":"refreshTemplates","description":"<p>Method to refresh the given Schedule templates</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#refreshtemplates"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#removeeventlistener"},"removeResource":{"name":"removeResource","description":"<p>Removes the specified resource.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#removeresource"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#render"},"resetWorkHours":{"name":"resetWorkHours","description":"<p>Removes or resets different working hours on the required working days by accepting the required start and end time as well as the\ndate collection as its parameters.\nif no parameters has been passed to this function, it will remove all the work hours.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resetworkhours"},"saveEvent":{"name":"saveEvent","description":"<p>Updates the changes made in the event object by passing it as an parameter into the dataSource.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#saveevent"},"scrollTo":{"name":"scrollTo","description":"<p>Scrolls the Schedule content area to the specified time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scrollto"},"scrollToResource":{"name":"scrollToResource","description":"<p>This method allows scroll to the position of the any resources that available on the scheduler.\nThis method is applicable for without Agenda and Month agenda views of the schedule.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#scrolltoresource"},"selectResourceByIndex":{"name":"selectResourceByIndex","description":"<p>Select the resource based on group index in mobile mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selectresourcebyindex"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#serverdatabind"},"setRecurrenceEditor":{"name":"setRecurrenceEditor","description":"<p>Set the recurrence editor instance from custom editor template.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#setrecurrenceeditor"},"setResourceCollections":{"name":"setResourceCollections","description":"<p>To set the resource collection</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#setresourcecollections"},"setWorkHours":{"name":"setWorkHours","description":"<p>Sets different working hours on the required working days by accepting the required start and end time as well as the date collection\nas its parameters.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#setworkhours"},"showSpinner":{"name":"showSpinner","description":"<p>Allows to show the spinner on schedule at the required scenarios.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#inject"}},"GridComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc., starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when any Grid action failed to achieve the desired results.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actionfailure"},"batchAdd":{"name":"batchAdd","description":"<p>Triggers when records are added in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#batchadd"},"batchCancel":{"name":"batchCancel","description":"<p>Triggers when cancel the batch edit changes batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#batchcancel"},"batchDelete":{"name":"batchDelete","description":"<p>Triggers when records are deleted in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#batchdelete"},"beforeAutoFill":{"name":"beforeAutoFill","description":"<p>Triggers before Grid autoFill action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforeautofill"},"beforeBatchAdd":{"name":"beforeBatchAdd","description":"<p>Triggers before records are added in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforebatchadd"},"beforeBatchDelete":{"name":"beforeBatchDelete","description":"<p>Triggers before records are deleted in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforebatchdelete"},"beforeBatchSave":{"name":"beforeBatchSave","description":"<p>Triggers before records are saved in batch mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforebatchsave"},"beforeCopy":{"name":"beforeCopy","description":"<p>Triggers before Grid copy action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforecopy"},"beforeDataBound":{"name":"beforeDataBound","description":"<p>Triggers before data is bound to Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforedatabound"},"beforeDetailTemplateDetach":{"name":"beforeDetailTemplateDetach","description":"<p>Event triggered before a detail template row is removed from the DOM.\nThis event allows executing necessary cleanup operations or additional actions before the detail row is detached.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforedetailtemplatedetach"},"beforeExcelExport":{"name":"beforeExcelExport","description":"<p>Triggers before Grid data is exported to Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforeexcelexport"},"beforeOpenAdaptiveDialog":{"name":"beforeOpenAdaptiveDialog","description":"<p>Triggers before adaptive filter and sort dialogs open.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforeopenadaptivedialog"},"beforeOpenColumnChooser":{"name":"beforeOpenColumnChooser","description":"<p>Triggers before the columnChooser open.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforeopencolumnchooser"},"beforePaste":{"name":"beforePaste","description":"<p>Triggers before Grid paste action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforepaste"},"beforePdfExport":{"name":"beforePdfExport","description":"<p>Triggers before Grid data is exported to PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforepdfexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print action starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beforeprint"},"beginEdit":{"name":"beginEdit","description":"<p>Triggers before the record is to be edit.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#beginedit"},"cellDeselected":{"name":"cellDeselected","description":"<p>Triggers when a particular selected cell is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#celldeselected"},"cellDeselecting":{"name":"cellDeselecting","description":"<p>Triggers before the selected cell is deselecting.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#celldeselecting"},"cellEdit":{"name":"cellEdit","description":"<p>Triggers when the cell is being edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#celledit"},"cellSave":{"name":"cellSave","description":"<p>Triggers when the cell is being saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cellsave"},"cellSaved":{"name":"cellSaved","description":"<p>Triggers after the cell is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cellsaved"},"cellSelected":{"name":"cellSelected","description":"<p>Triggers after a cell is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cellselected"},"cellSelecting":{"name":"cellSelecting","description":"<p>Triggers before any cell selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cellselecting"},"checkBoxChange":{"name":"checkBoxChange","description":"<p>Triggers when the check box state change in checkbox column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#checkboxchange"},"columnDataStateChange":{"name":"columnDataStateChange","description":"<p>Triggers when the grid actions such as Sorting, Paging, Grouping etc., are done to get column <code>dataSource</code>.\nIn this event,the current view column data and total record count should be assigned to the column <code>dataSource</code> based\non the action performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndatastatechange"},"columnDeselected":{"name":"columnDeselected","description":"<p>Triggers when a selected column is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndeselected"},"columnDeselecting":{"name":"columnDeselecting","description":"<p>Triggers before deselecting the selected column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndeselecting"},"columnDrag":{"name":"columnDrag","description":"<p>Triggers when column header element is dragged (moved) continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndrag"},"columnDragStart":{"name":"columnDragStart","description":"<p>Triggers when column header element drag (move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndragstart"},"columnDrop":{"name":"columnDrop","description":"<p>Triggers when a column header element is dropped on the target column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columndrop"},"columnMenuClick":{"name":"columnMenuClick","description":"<p>Triggers when click on column menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnmenuclick"},"columnMenuOpen":{"name":"columnMenuOpen","description":"<p>Triggers before column menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnmenuopen"},"columnSelected":{"name":"columnSelected","description":"<p>Triggers after a column is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnselected"},"columnSelecting":{"name":"columnSelecting","description":"<p>Triggers before column selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnselecting"},"commandClick":{"name":"commandClick","description":"<p>Triggers when command button is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#commandclick"},"contextMenuClick":{"name":"contextMenuClick","description":"<p>Triggers when click on context menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#contextmenuclick"},"contextMenuOpen":{"name":"contextMenuOpen","description":"<p>Triggers before context menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#contextmenuopen"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databound"},"dataSourceChanged":{"name":"dataSourceChanged","description":"<p>Triggers when the grid data is added, deleted and updated.\nInvoke the done method from the argument to start render after edit operation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasourcechanged"},"dataStateChange":{"name":"dataStateChange","description":"<p>Triggers when the grid actions such as Sorting, Paging, Grouping etc., are done.\nIn this event,the current view data and total record count should be assigned to the <code>dataSource</code> based on the action performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datastatechange"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#destroyed"},"detailDataBound":{"name":"detailDataBound","description":"<p>Triggers after detail row expands.</p>\n<blockquote>\n<p>This event triggers at initial expand.</p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detaildatabound"},"excelAggregateQueryCellInfo":{"name":"excelAggregateQueryCellInfo","description":"<p>Triggers before exporting aggregate cell to Excel document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelaggregatequerycellinfo"},"excelExportComplete":{"name":"excelExportComplete","description":"<p>Triggers after Grid data is exported to Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelexportcomplete"},"excelHeaderQueryCellInfo":{"name":"excelHeaderQueryCellInfo","description":"<p>Triggers before exporting each header cell to Excel file.\nYou can also customize the Excel cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelheaderquerycellinfo"},"excelQueryCellInfo":{"name":"excelQueryCellInfo","description":"<p>Triggers before exporting each cell to Excel file.\nYou can also customize the Excel cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelquerycellinfo"},"exportDetailDataBound":{"name":"exportDetailDataBound","description":"<p>Triggers before exporting each detail Grid to PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#exportdetaildatabound"},"exportDetailTemplate":{"name":"exportDetailTemplate","description":"<p>Triggers before exporting each detail template.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#exportdetailtemplate"},"exportGroupCaption":{"name":"exportGroupCaption","description":"<p>Triggers before exporting each caption row to PDF/Excel/CSV document. You can also customize the export caption row values.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#exportgroupcaption"},"headerCellInfo":{"name":"headerCellInfo","description":"<p>Triggered for stacked header.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#headercellinfo"},"keyPressed":{"name":"keyPressed","description":"<p>Triggers when any keyboard keys are pressed inside the grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#keypressed"},"lazyLoadGroupCollapse":{"name":"lazyLoadGroupCollapse","description":"<p>Triggers when collapse the caption row in lazy load grouping.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#lazyloadgroupcollapse"},"lazyLoadGroupExpand":{"name":"lazyLoadGroupExpand","description":"<p>Triggers when expand the caption row in lazy load grouping.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#lazyloadgroupexpand"},"load":{"name":"load","description":"<p>This event allows customization of Grid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#load"},"pdfAggregateQueryCellInfo":{"name":"pdfAggregateQueryCellInfo","description":"<p>Triggers before exporting aggregate cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfaggregatequerycellinfo"},"pdfExportComplete":{"name":"pdfExportComplete","description":"<p>Triggers after Grid data is exported to PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfexportcomplete"},"pdfHeaderQueryCellInfo":{"name":"pdfHeaderQueryCellInfo","description":"<p>Triggers before exporting each header cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfheaderquerycellinfo"},"pdfQueryCellInfo":{"name":"pdfQueryCellInfo","description":"<p>Triggers before exporting each cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfquerycellinfo"},"printComplete":{"name":"printComplete","description":"<p>Triggers after print action is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#printcomplete"},"queryCellInfo":{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},"recordClick":{"name":"recordClick","description":"<p>Triggers when record is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#recordclick"},"recordDoubleClick":{"name":"recordDoubleClick","description":"<p>Triggers when record is double clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#recorddoubleclick"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when column resize starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when column resize ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers on column resizing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#resizing"},"rowDataBound":{"name":"rowDataBound","description":"<p>Triggered every time a request is made to access row information, element, or data.\nThis will be triggered before the row element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdatabound"},"rowDeselected":{"name":"rowDeselected","description":"<p>Triggers when a selected row is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdeselected"},"rowDeselecting":{"name":"rowDeselecting","description":"<p>Triggers before deselecting the selected row.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdeselecting"},"rowDrag":{"name":"rowDrag","description":"<p>Triggers when row elements are dragged (moved) continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdrag"},"rowDragStart":{"name":"rowDragStart","description":"<p>Triggers when row element's drag(move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdragstart"},"rowDragStartHelper":{"name":"rowDragStartHelper","description":"<p>Triggers when row element's before drag(move).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdragstarthelper"},"rowDrop":{"name":"rowDrop","description":"<p>Triggers when row elements are dropped on the target row.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdrop"},"rowSelected":{"name":"rowSelected","description":"<p>Triggers after a row is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowselected"},"rowSelecting":{"name":"rowSelecting","description":"<p>Triggers before row selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowselecting"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbarclick"},"adaptiveDlgTarget":{"name":"adaptiveDlgTarget","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/grid/#adaptivedlgtarget"},"adaptiveUIMode":{"name":"adaptiveUIMode","description":"<p>One of the adaptiveUIMode enumeration that specifies the Adaptive Mode. The default value is Both.</p>\n","type":"AdaptiveMode","link":"//ej2.syncfusion.com/react/documentation/api/grid/#adaptiveuimode"},"aggregates":{"name":"aggregates","description":"<p>Configures the Grid aggregate rows.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/aggregates/\"><code>Aggregates</code></a> for its configuration.</p>\n</blockquote>\n","type":"AggregateRowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#aggregates"},"allowExcelExport":{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},"allowFiltering":{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},"allowGrouping":{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},"allowKeyboard":{"name":"allowKeyboard","description":"<p>Enables or disables the key board interaction of Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowkeyboard"},"allowMultiSorting":{"name":"allowMultiSorting","description":"<p>If <code>allowMultiSorting</code> set to true, then it will allow the user to sort multiple column in the grid.</p>\n<blockquote>\n<p><code>allowSorting</code> should be true.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowmultisorting"},"allowPaging":{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},"allowReordering":{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, Grid columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n<blockquote>\n<p>If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowreordering"},"allowResizing":{"name":"allowResizing","description":"<p>If <code>allowResizing</code> is set to true, Grid columns can be resized.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowresizing"},"allowRowDragAndDrop":{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> is set to true, you can drag and drop grid rows at another grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowrowdraganddrop"},"allowSelection":{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowserverdatabinding"},"allowSorting":{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},"allowTextWrap":{"name":"allowTextWrap","description":"<p>If <code>allowTextWrap</code> set to true,\nthen text content will wrap to the next line when its text content exceeds the width of the Column Cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowtextwrap"},"autoFit":{"name":"autoFit","description":"<p>If <code>autoFit</code> set to true, then it will auto fit the columns based on given width.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#autofit"},"childGrid":{"name":"childGrid","description":"<p>Defines Grid options to render child Grid.\nIt requires the <a href=\"./#querystring\"><code>queryString</code></a> for parent\nand child relationship.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/hierarchy-grid/\"><code>Child Grid</code></a> for its configuration.</p>\n</blockquote>\n","type":"GridModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#childgrid"},"clipMode":{"name":"clipMode","description":"<p>Defines the mode of clip. The available modes are,\n<code>Clip</code>: Truncates the cell content when it overflows its area.\n<code>Ellipsis</code>: Displays ellipsis when the cell content overflows its area.\n<code>EllipsisWithTooltip</code>:  Displays ellipsis when the cell content overflows its area,\nalso it will display the tooltip while hover on ellipsis is applied.</p>\n","type":"ClipMode","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clipmode"},"clipboardModule":{"name":"clipboardModule","description":"<p><code>clipboardModule</code> is used to handle Grid copy action.</p>\n","type":"Clipboard","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clipboardmodule"},"columnChooserSettings":{"name":"columnChooserSettings","description":"<p>Configures the column chooser in the Grid.</p>\n","type":"ColumnChooserSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnchoosersettings"},"columnMenuItems":{"name":"columnMenuItems","description":"<p><code>columnMenuItems</code> defines both built-in and custom column menu items.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the current column.</li>\n<li><code>Group</code> - Group by current column.</li>\n<li><code>Ungroup</code> - Ungroup by current column.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>Filter</code> - Filter options will show based on filterSettings property like checkbox filter, excel filter, menu filter.</li>\n</ul>\n","type":"ColumnMenuItem[]|ColumnMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnmenuitems"},"columnMenuModule":{"name":"columnMenuModule","description":"<p>The <code>columnMenuModule</code> is used to manipulate column menu items and its action in the Grid.</p>\n","type":"ColumnMenu","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnmenumodule"},"columnQueryMode":{"name":"columnQueryMode","description":"<p><code>columnQueryMode</code>provides options to retrive data from the datasource.Their types are</p>\n<ul>\n<li><code>All</code>: It Retrives whole datasource.</li>\n<li><code>Schema</code>: Retrives data for all the defined columns in grid from the datasource.</li>\n<li><code>ExcludeHidden</code>: Retrives data only for visible columns of grid from the dataSource.</li>\n</ul>\n","type":"ColumnQueryModeType","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columnquerymode"},"columns":{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/grid/#context"},"contextMenuItems":{"name":"contextMenuItems","description":"<p><code>contextMenuItems</code> defines both built-in and custom context menu items.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the current column.</li>\n<li><code>Group</code> - Group by current column.</li>\n<li><code>Ungroup</code> - Ungroup by current column.</li>\n<li><code>Edit</code> - Edit the current record.</li>\n<li><code>Delete</code> - Delete the current record.</li>\n<li><code>Save</code> - Save the edited record.</li>\n<li><code>Cancel</code> - Cancel the edited state.</li>\n<li><code>Copy</code> - Copy the selected records.</li>\n<li><code>PdfExport</code> - Export the grid as Pdf format.</li>\n<li><code>ExcelExport</code> - Export the grid as Excel format.</li>\n<li><code>CsvExport</code> - Export the grid as CSV format.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>FirstPage</code> - Go to the first page.</li>\n<li><code>PrevPage</code> - Go to the previous page.</li>\n<li><code>LastPage</code> - Go to the last page.</li>\n<li><code>NextPage</code> - Go to the next page.</li>\n</ul>\n","type":"ContextMenuItem[]|ContextMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#contextmenuitems"},"contextMenuModule":{"name":"contextMenuModule","description":"<p>The <code>contextMenuModule</code> is used to handle context menu items and its action in the Grid.</p>\n","type":"ContextMenu","link":"//ej2.syncfusion.com/react/documentation/api/grid/#contextmenumodule"},"cssClass":{"name":"cssClass","description":"<p>Defines the own class for the grid element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cssclass"},"currentAction":{"name":"currentAction","description":"<p>Gets or sets the current action details.</p>\n","type":"ActionArgs","link":"//ej2.syncfusion.com/react/documentation/api/grid/#currentaction"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/grid/#currentcontext"},"currentViewData":{"name":"currentViewData","description":"<p>Gets the currently visible records of the Grid.</p>\n","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#currentviewdata"},"dataSource":{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},"detailTemplate":{"name":"detailTemplate","description":"<p>The detail template allows you to show or hide additional information about a particular row.</p>\n<blockquote>\n<p>It accepts either the <a href=\"../../common/template-engine/\">template string</a> or the HTML element ID.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detailtemplate"},"editModule":{"name":"editModule","description":"<p>The <code>editModule</code> is used to handle Grid content manipulation.</p>\n","type":"Edit","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editmodule"},"editSettings":{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"<p>Defines the version for Grid persistence.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/grid/#element"},"emptyRecordTemplate":{"name":"emptyRecordTemplate","description":"<p>The empty record template that renders customized element or text or image instead of displaying the empty record message in the grid.</p>\n<blockquote>\n<p>It accepts either the <a href=\"../../common/template-engine/\">template string</a> or the HTML element ID.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#emptyrecordtemplate"},"enableAdaptiveUI":{"name":"enableAdaptiveUI","description":"<p>If <code>enableAdaptiveUI</code> set to true the grid filter, sort, and edit dialogs render adaptively.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableadaptiveui"},"enableAltRow":{"name":"enableAltRow","description":"<p>If <code>enableAltRow</code> is set to true, the grid will render with <code>e-altrow</code> CSS class to the alternative tr elements.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/row/#styling-alternate-rows/\"><code>AltRow</code></a> to customize the styles of alternative rows.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablealtrow"},"enableAutoFill":{"name":"enableAutoFill","description":"<p>If <code>enableAutoFill</code> is set to true, then the auto fill icon will displayed on cell selection for copy cells.\nIt requires the selection <code>mode</code> to be Cell and <code>cellSelectionMode</code> to be <code>Box</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableautofill"},"enableColumnVirtualization":{"name":"enableColumnVirtualization","description":"<p>If <code>enableColumnVirtualization</code> set to true, then the Grid will render only the columns visible within the view-port\nand load subsequent columns on horizontal scrolling. This helps to load large dataset of columns in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablecolumnvirtualization"},"enableHeaderFocus":{"name":"enableHeaderFocus","description":"<p>If <code>enableHeaderFocus</code> set to true, then header element will be focused when focus moves to grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableheaderfocus"},"enableHover":{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Grid component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehtmlsanitizer"},"enableImmutableMode":{"name":"enableImmutableMode","description":"<p>If <code>enableImmutableMode</code>  is set to true, the grid will reuse old rows if it exists in the new result instead of\nfull refresh while performing the grid actions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableimmutablemode"},"enableInfiniteScrolling":{"name":"enableInfiniteScrolling","description":"<p>If <code>enableInfiniteScrolling</code> set to true, then the data will be loaded in Grid when the scrollbar reaches the end.\nThis helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableinfinitescrolling"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablertl"},"enableStickyHeader":{"name":"enableStickyHeader","description":"<p>If 'enableStickyHeader' set to true, then the user can able to make the column headers visible when the document is scrolled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablestickyheader"},"enableVirtualMaskRow":{"name":"enableVirtualMaskRow","description":"<p>Specifies the shimmer effect for Grid virtual and infinite scrolling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualmaskrow"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},"excelExportModule":{"name":"excelExportModule","description":"<p>The <code>excelExportModule</code> is used to handle Excel exporting feature in the Grid.</p>\n","type":"ExcelExport","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelexportmodule"},"exportGrids":{"name":"exportGrids","description":"<p>Defines the id of the grids that needs to be exported</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#exportgrids"},"filterModule":{"name":"filterModule","description":"<p>The <code>filterModule</code> is used to manipulate filtering in the Grid.</p>\n","type":"Filter","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtermodule"},"filterSettings":{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/grid/#forceupdate"},"frozenColumns":{"name":"frozenColumns","description":"<p>Gets or sets the number of frozen columns.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozencolumns"},"frozenRows":{"name":"frozenRows","description":"<p>Gets or sets the number of frozen rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#frozenrows"},"gridLines":{"name":"gridLines","description":"<p>Defines the mode of grid lines. The available modes are,</p>\n<ul>\n<li><code>Both</code>: Displays both horizontal and vertical grid lines.</li>\n<li><code>None</code>: No grid lines are displayed.</li>\n<li><code>Horizontal</code>: Displays the horizontal grid lines only.</li>\n<li><code>Vertical</code>: Displays the vertical grid lines only.</li>\n<li><code>Default</code>: Displays grid lines based on the theme.</li>\n</ul>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gridlines"},"groupModule":{"name":"groupModule","description":"<p>The <code>groupModule</code> is used to manipulate grouping behavior in the Grid.</p>\n","type":"Group","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupmodule"},"groupSettings":{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},"height":{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},"hierarchyPrintMode":{"name":"hierarchyPrintMode","description":"<p>Defines the hierarchy grid print modes. The available modes are</p>\n<ul>\n<li><code>Expanded</code> - Prints the master grid with expanded child grids.</li>\n<li><code>All</code> - Prints the master grid with all the child grids.</li>\n<li><code>None</code> - Prints the master grid alone.</li>\n</ul>\n","type":"HierarchyGridPrintMode","link":"//ej2.syncfusion.com/react/documentation/api/grid/#hierarchyprintmode"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#ignorecollectionwatch"},"infiniteScrollModule":{"name":"infiniteScrollModule","description":"<p>The <code>infiniteScrollModule</code> is used to manipulate infinite scrolling in the Grid.</p>\n","type":"InfiniteScroll","link":"//ej2.syncfusion.com/react/documentation/api/grid/#infinitescrollmodule"},"infiniteScrollSettings":{"name":"infiniteScrollSettings","description":"<p>Configures the infinite scroll settings.</p>\n","type":"InfiniteScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#infinitescrollsettings"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isdestroyed"},"isPreventScrollEvent":{"name":"isPreventScrollEvent","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#ispreventscrollevent"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isreactcomponent"},"isSelectedRowIndexUpdating":{"name":"isSelectedRowIndexUpdating","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isselectedrowindexupdating"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isvue"},"keyboardModule":{"name":"keyboardModule","description":"<p>The <code>keyboardModule</code> is used to manipulate keyboard interactions in the Grid.</p>\n","type":"KeyboardEvents","link":"//ej2.syncfusion.com/react/documentation/api/grid/#keyboardmodule"},"loadingIndicator":{"name":"loadingIndicator","description":"<p>Configures the Loading Indicator of the Grid.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#loadingindicator"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/#locale"},"pageSettings":{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},"pagerModule":{"name":"pagerModule","description":"<p>The <code>pagerModule</code> is used to manipulate paging in the Grid.</p>\n","type":"Page","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagermodule"},"pagerTemplate":{"name":"pagerTemplate","description":"<p>It used to render pager template</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagertemplate"},"parentDetails":{"name":"parentDetails","description":"<p>Gets the parent Grid details.</p>\n","type":"ParentDetails","link":"//ej2.syncfusion.com/react/documentation/api/grid/#parentdetails"},"pdfExportModule":{"name":"pdfExportModule","description":"<p>The <code>pdfExportModule</code> is used to handle PDF exporting feature in the Grid.</p>\n","type":"PdfExport","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfexportmodule"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/grid/#portals"},"printMode":{"name":"printMode","description":"<p>Defines the print modes. The available print modes are</p>\n<ul>\n<li><code>AllPages</code>: Prints all pages of the Grid.</li>\n<li><code>CurrentPage</code>: Prints the current page of the Grid.</li>\n</ul>\n","type":"PrintMode","link":"//ej2.syncfusion.com/react/documentation/api/grid/#printmode"},"printModule":{"name":"printModule","description":"<p>The <code>printModule</code> is used to handle the printing feature of the Grid.</p>\n","type":"Print","link":"//ej2.syncfusion.com/react/documentation/api/grid/#printmodule"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/grid/#props"},"query":{"name":"query","description":"<p>Defines the external <a href=\"https://ej2.syncfusion.com/documentation/data/api-query.html\"><code>Query</code></a>\nthat will be executed along with data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/grid/#query"},"queryString":{"name":"queryString","description":"<p>Defines the relationship between parent and child datasource. It acts as the foreign key for parent datasource.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querystring"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/grid/#refs"},"reorderModule":{"name":"reorderModule","description":"<p>The <code>reorderModule</code> is used to manipulate reordering in the Grid.</p>\n","type":"Reorder","link":"//ej2.syncfusion.com/react/documentation/api/grid/#reordermodule"},"requireTemplateRef":{"name":"requireTemplateRef","description":"<ul>\n<li>If <code>requireTemplateRef</code> is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.</li>\n<li>By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.</li>\n<li>Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#requiretemplateref"},"resizeSettings":{"name":"resizeSettings","description":"<p>Defines the resizing behavior of the Grid.</p>\n","type":"ResizeSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#resizesettings"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/grid/#root"},"rowDragAndDropModule":{"name":"rowDragAndDropModule","description":"<p>The <code>rowDragAndDropModule</code> is used to manipulate row reordering in the Grid.</p>\n","type":"RowDD","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdraganddropmodule"},"rowDropSettings":{"name":"rowDropSettings","description":"<p>Configures the row drop settings.</p>\n","type":"RowDropSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowdropsettings"},"rowHeight":{"name":"rowHeight","description":"<p>Defines the height of Grid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowheight"},"rowRenderingMode":{"name":"rowRenderingMode","description":"<p>Defines the grid row elements rendering direction. The available directions are,</p>\n<ul>\n<li><code>Horizontal</code>: Renders the grid row elements in the horizontal direction</li>\n<li><code>Vertical</code>: Renders the grid row elements in the vertical direction</li>\n</ul>\n","type":"RowRenderingDirection","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowrenderingmode"},"rowTemplate":{"name":"rowTemplate","description":"<p>The row template that renders customized rows from the given template.\nBy default, Grid renders a table row for every data source item.</p>\n<blockquote>\n<ul>\n<li>It accepts either <a href=\"../../common/template-engine/\">template string</a> or HTML element ID.</li>\n<li>The row template must be a table row.\nCheck the <a href=\"../../grid/row/\"><code>Row Template</code></a> customization.</li>\n</ul>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowtemplate"},"scrollModule":{"name":"scrollModule","description":"<p>The <code>scrollModule</code> is used to manipulate scrolling in the Grid.</p>\n","type":"Scroll","link":"//ej2.syncfusion.com/react/documentation/api/grid/#scrollmodule"},"searchModule":{"name":"searchModule","description":"<p>The <code>searchModule</code> is used to manipulate searching in the Grid.</p>\n","type":"Search","link":"//ej2.syncfusion.com/react/documentation/api/grid/#searchmodule"},"searchSettings":{"name":"searchSettings","description":"<p>Configures the search behavior in the Grid.</p>\n","type":"SearchSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#searchsettings"},"selectedRowIndex":{"name":"selectedRowIndex","description":"<p>The <code>selectedRowIndex</code> allows you to select a row at initial rendering.\nYou can also get the currently selected row index.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectedrowindex"},"selectionModule":{"name":"selectionModule","description":"<p>The <code>selectionModule</code> is used to manipulate selection behavior in the Grid.</p>\n","type":"Selection","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionmodule"},"selectionSettings":{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setstate"},"showColumnChooser":{"name":"showColumnChooser","description":"<p>If <code>showColumnChooser</code> is set to true, it allows you to dynamically show or hide columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/columns/#column-chooser/\"><code>ColumnChooser</code></a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumnchooser"},"showColumnMenu":{"name":"showColumnMenu","description":"<p>If <code>showColumnMenu</code> set to true, then it will enable the column menu options in each columns.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/columns/#column-menu/\"><code>Column menu</code></a> for its configuration.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumnmenu"},"showHider":{"name":"showHider","description":"<p>The <code>showHider</code> is used to manipulate column's show/hide operation in the Grid.</p>\n","type":"ShowHide","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showhider"},"sortModule":{"name":"sortModule","description":"<p>The <code>sortModule</code> is used to manipulate sorting in the Grid.</p>\n","type":"Sort","link":"//ej2.syncfusion.com/react/documentation/api/grid/#sortmodule"},"sortSettings":{"name":"sortSettings","description":"<p>Configures the sort settings.</p>\n","type":"SortSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#sortsettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/grid/#state"},"textWrapSettings":{"name":"textWrapSettings","description":"<p>Configures the text wrap in the Grid.</p>\n","type":"TextWrapSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#textwrapsettings"},"toolbar":{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},"toolbarModule":{"name":"toolbarModule","description":"<p>The <code>toolbarModule</code> is used to manipulate ToolBar items and its action in the Grid.</p>\n","type":"Toolbar","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbarmodule"},"toolbarTemplate":{"name":"toolbarTemplate","description":"<p>It used to render toolbar template</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbartemplate"},"width":{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#addeventlistener"},"addRecord":{"name":"addRecord","description":"<p>Adds a new record to the Grid. Without passing parameters, it adds empty rows.</p>\n<blockquote>\n<p><code>editSettings.allowEditing</code> should be true.</p>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#addrecord"},"addShimmerEffect":{"name":"addShimmerEffect","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#addshimmereffect"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#attachunloadevent"},"autoFitColumns":{"name":"autoFitColumns","description":"<p>Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.</p>\n<blockquote>\n<ul>\n<li>This method ignores the hidden columns.</li>\n<li>Uses the <code>autoFitColumns</code> method in the <code>dataBound</code> event to resize at initial rendering.</li>\n<li>By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying <code>autoFitColumns</code>.</li>\n<li>The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.</li>\n</ul>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#autofitcolumns"},"batchAsyncUpdate":{"name":"batchAsyncUpdate","description":"<p>Apply the changes to the Grid in one batch after 50ms without refreshing the rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#batchasyncupdate"},"batchUpdate":{"name":"batchUpdate","description":"<p>Apply the changes to the Grid without refreshing the rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#batchupdate"},"calculatePageSizeByParentHeight":{"name":"calculatePageSizeByParentHeight","description":"<p>Calculates the page size by parent element height</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#calculatepagesizebyparentheight"},"changeDataSource":{"name":"changeDataSource","description":"<p>Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.</p>\n<blockquote>\n<ul>\n<li>If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.</li>\n</ul>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#changedatasource"},"clearCellSelection":{"name":"clearCellSelection","description":"<p>Deselects the currently selected cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clearcellselection"},"clearFiltering":{"name":"clearFiltering","description":"<p>Clears all the filtered rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clearfiltering"},"clearGrouping":{"name":"clearGrouping","description":"<p>Clears all the grouped columns of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#cleargrouping"},"clearRowSelection":{"name":"clearRowSelection","description":"<p>Deselects the currently selected rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clearrowselection"},"clearSelection":{"name":"clearSelection","description":"<p>Deselects the current selected rows and cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clearselection"},"clearSorting":{"name":"clearSorting","description":"<p>Clears all the sorted columns of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#clearsorting"},"closeEdit":{"name":"closeEdit","description":"<p>Cancels edited state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#closeedit"},"copy":{"name":"copy","description":"<p>Copy the selected rows or cells data into clipboard.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#copy"},"csvExport":{"name":"csvExport","description":"<p>Export Grid data to CSV file.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#csvexport"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databind"},"dataReady":{"name":"dataReady","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#dataready"},"deleteRecord":{"name":"deleteRecord","description":"<p>Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.</p>\n<blockquote>\n<p><code>editSettings.allowDeleting</code> should be true.</p>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#deleterecord"},"deleteRow":{"name":"deleteRow","description":"<p>Delete any visible row by TR element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#deleterow"},"destroy":{"name":"destroy","description":"<p>Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#destroy"},"destroyTemplate":{"name":"destroyTemplate","description":"<p>Destroys the given template reference.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#destroytemplate"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detachunloadevent"},"detailCollapseAll":{"name":"detailCollapseAll","description":"<p>Collapses all the detail rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detailcollapseall"},"detailExpandAll":{"name":"detailExpandAll","description":"<p>Expands all the detail rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#detailexpandall"},"editCell":{"name":"editCell","description":"<p>Changes a particular cell into edited state based on the row index and field name provided in the <code>batch</code> mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editcell"},"enableToolbarItems":{"name":"enableToolbarItems","description":"<p>Enables or disables ToolBar items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enabletoolbaritems"},"endEdit":{"name":"endEdit","description":"<p>If Grid is in editable state, you can save a record by invoking endEdit.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#endedit"},"excelExport":{"name":"excelExport","description":"<p>Export Grid data to Excel file(.xlsx).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#excelexport"},"extendRequiredModules":{"name":"extendRequiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#extendrequiredmodules"},"filterByColumn":{"name":"filterByColumn","description":"<p>Filters grid row by column name with the given options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filterbycolumn"},"getBatchChanges":{"name":"getBatchChanges","description":"<p>Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getbatchchanges"},"getCellFromIndex":{"name":"getCellFromIndex","description":"<p>Gets a cell by row and column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcellfromindex"},"getColumnByField":{"name":"getColumnByField","description":"<p>Gets a Column by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnbyfield"},"getColumnByUid":{"name":"getColumnByUid","description":"<p>Gets a column by UID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnbyuid"},"getColumnFieldNames":{"name":"getColumnFieldNames","description":"<p>Gets the collection of column fields.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnfieldnames"},"getColumnHeaderByField":{"name":"getColumnHeaderByField","description":"<p>Gets a column header by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnheaderbyfield"},"getColumnHeaderByIndex":{"name":"getColumnHeaderByIndex","description":"<p>Gets a column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnheaderbyindex"},"getColumnHeaderByUid":{"name":"getColumnHeaderByUid","description":"<p>Gets a column header by UID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnheaderbyuid"},"getColumnIndexByField":{"name":"getColumnIndexByField","description":"<p>Gets a column index by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnindexbyfield"},"getColumnIndexByUid":{"name":"getColumnIndexByUid","description":"<p>Gets a column index by UID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumnindexbyuid"},"getColumns":{"name":"getColumns","description":"<p>Gets the columns from the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcolumns"},"getContent":{"name":"getContent","description":"<p>Gets the content div of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcontent"},"getContentTable":{"name":"getContentTable","description":"<p>Gets the content table of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcontenttable"},"getCurrentViewRecords":{"name":"getCurrentViewRecords","description":"<p>Get current visible data of grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getcurrentviewrecords"},"getDataModule":{"name":"getDataModule","description":"<p>Gets the data module.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getdatamodule"},"getDataRows":{"name":"getDataRows","description":"<p>Gets all the Grid's data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getdatarows"},"getFilterUIInfo":{"name":"getFilterUIInfo","description":"<p>Get the current Filter operator and field.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfilteruiinfo"},"getFilteredRecords":{"name":"getFilteredRecords","description":"<p>Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfilteredrecords"},"getFooterContent":{"name":"getFooterContent","description":"<p>Gets the footer div of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfootercontent"},"getFooterContentTable":{"name":"getFooterContentTable","description":"<p>Gets the footer table element of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfootercontenttable"},"getForeignKeyColumns":{"name":"getForeignKeyColumns","description":"<p>Gets the foreign columns from Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getforeignkeycolumns"},"getFrozenDataRows":{"name":"getFrozenDataRows","description":"<p>Gets all the Grid's frozen table data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozendatarows"},"getFrozenLeftColumnHeaderByIndex":{"name":"getFrozenLeftColumnHeaderByIndex","description":"<p>Gets a frozen left column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenleftcolumnheaderbyindex"},"getFrozenLeftCount":{"name":"getFrozenLeftCount","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenleftcount"},"getFrozenMode":{"name":"getFrozenMode","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenmode"},"getFrozenRightCellFromIndex":{"name":"getFrozenRightCellFromIndex","description":"<p>Gets a frozen right table cell by row and column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrightcellfromindex"},"getFrozenRightColumnHeaderByIndex":{"name":"getFrozenRightColumnHeaderByIndex","description":"<p>Gets a frozen right column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrightcolumnheaderbyindex"},"getFrozenRightDataRows":{"name":"getFrozenRightDataRows","description":"<p>Gets all the Grid's frozen right table data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrightdatarows"},"getFrozenRightRowByIndex":{"name":"getFrozenRightRowByIndex","description":"<p>Gets a frozen right tables row element by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrightrowbyindex"},"getFrozenRightRows":{"name":"getFrozenRightRows","description":"<p>Gets the Grid's frozen right content rows from frozen grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrightrows"},"getFrozenRowByIndex":{"name":"getFrozenRowByIndex","description":"<p>Gets a frozen tables row by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getfrozenrowbyindex"},"getHeaderContent":{"name":"getHeaderContent","description":"<p>Gets the header div of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getheadercontent"},"getHeaderTable":{"name":"getHeaderTable","description":"<p>Gets the header table element of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getheadertable"},"getHiddenColumns":{"name":"getHiddenColumns","description":"<p>Gets the hidden columns from the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gethiddencolumns"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getlocaldata"},"getMediaColumns":{"name":"getMediaColumns","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmediacolumns"},"getMovableCellFromIndex":{"name":"getMovableCellFromIndex","description":"<p>Gets a movable table cell by row and column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmovablecellfromindex"},"getMovableColumnHeaderByIndex":{"name":"getMovableColumnHeaderByIndex","description":"<p>Gets a movable column header by column index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmovablecolumnheaderbyindex"},"getMovableDataRows":{"name":"getMovableDataRows","description":"<p>Gets all the Grid's movable table data rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmovabledatarows"},"getMovableRowByIndex":{"name":"getMovableRowByIndex","description":"<p>Gets a movable tables row by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmovablerowbyindex"},"getMovableRows":{"name":"getMovableRows","description":"<p>Gets the Grid's movable content rows from frozen grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getmovablerows"},"getPager":{"name":"getPager","description":"<p>Gets the pager of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getpager"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getpersistdata"},"getPrimaryKeyFieldNames":{"name":"getPrimaryKeyFieldNames","description":"<p>Get the names of the primary key columns of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getprimarykeyfieldnames"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrootelement"},"getRowByIndex":{"name":"getRowByIndex","description":"<p>Gets a row by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrowbyindex"},"getRowIndexByPrimaryKey":{"name":"getRowIndexByPrimaryKey","description":"<p>Get row index by primary key or row data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrowindexbyprimarykey"},"getRowInfo":{"name":"getRowInfo","description":"<p>Get a row information based on cell</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrowinfo"},"getRows":{"name":"getRows","description":"<p>Gets all the data rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrows"},"getRowsObject":{"name":"getRowsObject","description":"<p>Get an array of row objects.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getrowsobject"},"getSelectedColumnsUid":{"name":"getSelectedColumnsUid","description":"<p>Gets the collection of selected columns uid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getselectedcolumnsuid"},"getSelectedRecords":{"name":"getSelectedRecords","description":"<p>Gets the collection of selected records.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getselectedrecords"},"getSelectedRowCellIndexes":{"name":"getSelectedRowCellIndexes","description":"<p>Gets the collection of selected row and cell indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getselectedrowcellindexes"},"getSelectedRowIndexes":{"name":"getSelectedRowIndexes","description":"<p>Gets the collection of selected row indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getselectedrowindexes"},"getSelectedRows":{"name":"getSelectedRows","description":"<p>Gets the collection of selected rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getselectedrows"},"getSummaryValues":{"name":"getSummaryValues","description":"<p>To perform aggregate operation on a column.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getsummaryvalues"},"getUidByColumnField":{"name":"getUidByColumnField","description":"<p>Gets UID by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getuidbycolumnfield"},"getVisibleColumns":{"name":"getVisibleColumns","description":"<p>Gets the visible columns from the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#getvisiblecolumns"},"goToPage":{"name":"goToPage","description":"<p>Navigates to the specified target page.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#gotopage"},"groupCollapseAll":{"name":"groupCollapseAll","description":"<p>Collapses all the grouped rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupcollapseall"},"groupColumn":{"name":"groupColumn","description":"<p>Groups a column by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupcolumn"},"groupExpandAll":{"name":"groupExpandAll","description":"<p>Expands all the grouped rows of the Grid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupexpandall"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#handleunload"},"hideColumns":{"name":"hideColumns","description":"<p>Hides a column by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#hidecolumns"},"hideScroll":{"name":"hideScroll","description":"<p>Hides the scrollbar placeholder of Grid content when grid content is not overflown.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#hidescroll"},"hideSpinner":{"name":"hideSpinner","description":"<p>By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#hidespinner"},"isFrozenGrid":{"name":"isFrozenGrid","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#isfrozengrid"},"openColumnChooser":{"name":"openColumnChooser","description":"<p>Column chooser can be displayed on screen by given position(X and Y axis).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#opencolumnchooser"},"pdfExport":{"name":"pdfExport","description":"<p>Export Grid data to PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pdfexport"},"print":{"name":"print","description":"<p>By default, prints all the pages of the Grid and hides the pager.</p>\n<blockquote>\n<p>You can customize print options using the\n<a href=\"./#printmode\"><code>printMode</code></a>.</p>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#print"},"refresh":{"name":"refresh","description":"<p>Refreshes the Grid header and content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#refresh"},"refreshColumns":{"name":"refreshColumns","description":"<p>Refreshes the Grid column changes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#refreshcolumns"},"refreshHeader":{"name":"refreshHeader","description":"<p>Refreshes the Grid header.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#refreshheader"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#removeeventlistener"},"removeMaskRow":{"name":"removeMaskRow","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#removemaskrow"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#render"},"reorderColumnByIndex":{"name":"reorderColumnByIndex","description":"<p>Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\nthen you won't get the same results every time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#reordercolumnbyindex"},"reorderColumnByTargetIndex":{"name":"reorderColumnByTargetIndex","description":"<p>Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\nthen you will get the same results every time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#reordercolumnbytargetindex"},"reorderColumns":{"name":"reorderColumns","description":"<p>Changes the Grid column positions by field names.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#reordercolumns"},"reorderRows":{"name":"reorderRows","description":"<p>Changes the Grid Row position with given indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#reorderrows"},"saveCell":{"name":"saveCell","description":"<p>Saves the cell that is currently edited. It does not save the value to the DataSource.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#savecell"},"search":{"name":"search","description":"<p>Searches Grid records using the given key.\nYou can customize the default search option by using the\n<a href=\"./#searchsettings/\"><code>searchSettings</code></a>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#search"},"selectCell":{"name":"selectCell","description":"<p>Selects a cell by the given index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectcell"},"selectCells":{"name":"selectCells","description":"<p>Selects a collection of cells by row and column indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectcells"},"selectCellsByRange":{"name":"selectCellsByRange","description":"<p>Selects a range of cells from start and end indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectcellsbyrange"},"selectRow":{"name":"selectRow","description":"<p>Selects a row by given index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectrow"},"selectRows":{"name":"selectRows","description":"<p>Selects a collection of rows by indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectrows"},"selectRowsByRange":{"name":"selectRowsByRange","description":"<p>Selects a range of rows from start and end row indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectrowsbyrange"},"serverCsvExport":{"name":"serverCsvExport","description":"<p>Sends a Post request to export Grid to CSV file in server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#servercsvexport"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#serverdatabind"},"serverExcelExport":{"name":"serverExcelExport","description":"<p>Sends a Post request to export Grid to Excel file in server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#serverexcelexport"},"serverPdfExport":{"name":"serverPdfExport","description":"<p>Sends a Post request to export Grid to Pdf file in server side.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#serverpdfexport"},"setCellValue":{"name":"setCellValue","description":"<p>Updates particular cell value based on the given primary key value.</p>\n<blockquote>\n<p>Primary key column must be specified using <code>columns.isPrimaryKey</code> property.</p>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setcellvalue"},"setGridContent":{"name":"setGridContent","description":"<p>Sets the content div of the Grid to replace the old Grid content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setgridcontent"},"setGridContentTable":{"name":"setGridContentTable","description":"<p>Sets the content table of the Grid to replace the old content table.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setgridcontenttable"},"setGridHeaderContent":{"name":"setGridHeaderContent","description":"<p>Sets the header div of the Grid to replace the old header.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setgridheadercontent"},"setGridHeaderTable":{"name":"setGridHeaderTable","description":"<p>Sets the header table of the Grid to replace the old one.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setgridheadertable"},"setGridPager":{"name":"setGridPager","description":"<p>Sets the pager of the Grid to replace the old pager.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setgridpager"},"setRowData":{"name":"setRowData","description":"<p>Updates and refresh the particular row values based on the given primary key value.</p>\n<blockquote>\n<p>Primary key column must be specified using <code>columns.isPrimaryKey</code> property.</p>\n</blockquote>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#setrowdata"},"showAdaptiveFilterDialog":{"name":"showAdaptiveFilterDialog","description":"<p>To manually show the vertical row mode filter dialog</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showadaptivefilterdialog"},"showAdaptiveSortDialog":{"name":"showAdaptiveSortDialog","description":"<p>To manually show the vertical row sort filter dialog</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showadaptivesortdialog"},"showColumns":{"name":"showColumns","description":"<p>Shows a column by its column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showcolumns"},"showMaskRow":{"name":"showMaskRow","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showmaskrow"},"showSpinner":{"name":"showSpinner","description":"<p>By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#showspinner"},"sortColumn":{"name":"sortColumn","description":"<p>Sorts a column with the given options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#sortcolumn"},"startEdit":{"name":"startEdit","description":"<p>Starts edit the selected row. At least one row must be selected before invoking this method.\n<code>editSettings.allowEditing</code> should be true.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#startedit"},"ungroupColumn":{"name":"ungroupColumn","description":"<p>Ungroups a column by column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#ungroupcolumn"},"updateCell":{"name":"updateCell","description":"<p>To update the specified cell by given value without changing into edited state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#updatecell"},"updateExternalMessage":{"name":"updateExternalMessage","description":"<p>Defines the text of external message.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#updateexternalmessage"},"updateRow":{"name":"updateRow","description":"<p>To update the specified row by given values without changing into edited state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#updaterow"},"updateRowValue":{"name":"updateRowValue","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#updaterowvalue"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/grid/#inject"}},"PagerComponent":{"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#allowserverdatabinding"},"checkAll":{"name":"checkAll","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#checkall"},"click":{"name":"click","description":"<p>Triggers when click on the numeric items.</p>\n","type":"emittypeobject","link":"//ej2.syncfusion.com/react/documentation/api/pager/#click"},"containerModule":{"name":"containerModule","description":"<p><code>containerModule</code> is used to manipulate numeric container behavior of Pager.</p>\n","type":"NumericContainer","link":"//ej2.syncfusion.com/react/documentation/api/pager/#containermodule"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pager/#context"},"created":{"name":"created","description":"<p>Triggers when Pager is created.</p>\n","type":"emittypeobject","link":"//ej2.syncfusion.com/react/documentation/api/pager/#created"},"cssClass":{"name":"cssClass","description":"<p>Defines the own class for the pager element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pager/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pager/#currentcontext"},"currentPage":{"name":"currentPage","description":"<p>Defines the current page number of pager.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pager/#currentpage"},"customText":{"name":"customText","description":"<p>Defines the customized text to append with numeric items.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pager/#customtext"},"dropDownChanged":{"name":"dropDownChanged","description":"<p>Triggers after pageSize is selected in DropDownList.</p>\n","type":"emittypeobject","link":"//ej2.syncfusion.com/react/documentation/api/pager/#dropdownchanged"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pager/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/pager/#element"},"enableExternalMessage":{"name":"enableExternalMessage","description":"<p>If <code>enableExternalMessage</code> set to true, then it adds the message to Pager.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#enableexternalmessage"},"enablePagerMessage":{"name":"enablePagerMessage","description":"<p>If <code>enablePagerMessage</code> set to true, then it adds the pager information.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#enablepagermessage"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#enablepersistence"},"enableQueryString":{"name":"enableQueryString","description":"<p>If <code>enableQueryString</code> set to true,\nthen it pass current page information as a query string along with the URL while navigating to other page.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#enablequerystring"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#enablertl"},"externalMessage":{"name":"externalMessage","description":"<p>Defines the external message of Pager.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pager/#externalmessage"},"externalMessageModule":{"name":"externalMessageModule","description":"<p><code>externalMessageModule</code> is used to manipulate external message of Pager.</p>\n","type":"ExternalMessage","link":"//ej2.syncfusion.com/react/documentation/api/pager/#externalmessagemodule"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pager/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pager/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pager/#locale"},"pageCount":{"name":"pageCount","description":"<p>Defines the number of pages to display in pager container.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pager/#pagecount"},"pageSize":{"name":"pageSize","description":"<p>Defines the records count of visible page.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pager/#pagesize"},"pageSizes":{"name":"pageSizes","description":"<p>If <code>pageSizes</code> set to true or Array of values,\nIt renders DropDownList in the pager which allow us to select pageSize from DropDownList.</p>\n","type":"boolean|[]","link":"//ej2.syncfusion.com/react/documentation/api/pager/#pagesizes"},"pagerMessageModule":{"name":"pagerMessageModule","description":"<p><code>pagerMessageModule</code> is used to manipulate pager message of Pager.</p>\n","type":"PagerMessage","link":"//ej2.syncfusion.com/react/documentation/api/pager/#pagermessagemodule"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pager/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pager/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/pager/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pager/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/pager/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/pager/#state"},"template":{"name":"template","description":"<p>Defines the template as string or HTML element ID which renders customized elements in pager instead of default elements.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/pager/#template"},"totalRecordsCount":{"name":"totalRecordsCount","description":"<p>Gets or Sets the total records count which is used to render numeric container.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/pager/#totalrecordscount"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the Pager component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#destroy"},"destroyTemplate":{"name":"destroyTemplate","description":"<p>Destroys the given template reference.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#destroytemplate"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#getlocaldata"},"getLocalizedLabel":{"name":"getLocalizedLabel","description":"<p>Gets the localized label by locale keyword.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#getlocalizedlabel"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#getrootelement"},"goToPage":{"name":"goToPage","description":"<p>Navigate to target page by given number.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#gotopage"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#handleunload"},"refresh":{"name":"refresh","description":"<p>Refreshes page count, pager information and external message.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/pager/#inject"}},"AddDialogFieldDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldDirective#shouldcomponentupdate"}},"AddDialogFieldsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/addDialogFieldsDirective#shouldcomponentupdate"}},"DayWorkingTimeCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeCollectionDirective#shouldcomponentupdate"}},"DayWorkingTimeDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/dayWorkingTimeDirective#shouldcomponentupdate"}},"EditDialogFieldDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldDirective#shouldcomponentupdate"}},"EditDialogFieldsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/editDialogFieldsDirective#shouldcomponentupdate"}},"EventMarkerDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkerDirective#shouldcomponentupdate"}},"EventMarkersDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/eventMarkersDirective#shouldcomponentupdate"}},"GanttComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when Gantt actions such as sorting, filtering, searching etc., starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers when Gantt actions such as sorting, filtering, searching etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when actions are failed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#actionfailure"},"beforeExcelExport":{"name":"beforeExcelExport","description":"<p>Triggers before Gantt data is exported to Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#beforeexcelexport"},"beforePdfExport":{"name":"beforePdfExport","description":"<p>Triggers before Gantt data is exported to PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#beforepdfexport"},"beforeTooltipRender":{"name":"beforeTooltipRender","description":"<p>Triggers before tooltip get rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#beforetooltiprender"},"cellDeselected":{"name":"cellDeselected","description":"<p>Triggers when a particular selected cell is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#celldeselected"},"cellDeselecting":{"name":"cellDeselecting","description":"<p>Triggers before the selected cell is deselecting.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#celldeselecting"},"cellEdit":{"name":"cellEdit","description":"<p>This will be triggered a cell get begins to edit.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#celledit"},"cellSelected":{"name":"cellSelected","description":"<p>Triggers after a cell is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#cellselected"},"cellSelecting":{"name":"cellSelecting","description":"<p>Triggers before any cell selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#cellselecting"},"collapsed":{"name":"collapsed","description":"<p>This will be triggered after the row getting collapsed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapsed"},"collapsing":{"name":"collapsing","description":"<p>This will be triggered before the row getting collapsed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapsing"},"columnDrag":{"name":"columnDrag","description":"<p>Triggers when column header element is dragged (moved) continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columndrag"},"columnDragStart":{"name":"columnDragStart","description":"<p>Triggers when column header element drag (move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columndragstart"},"columnDrop":{"name":"columnDrop","description":"<p>Triggers when a column header element is dropped on the target column.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columndrop"},"columnMenuClick":{"name":"columnMenuClick","description":"<p>Triggers when click on column menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columnmenuclick"},"columnMenuOpen":{"name":"columnMenuOpen","description":"<p>Triggers before column menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columnmenuopen"},"contextMenuClick":{"name":"contextMenuClick","description":"<p>Triggers when click on context menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#contextmenuclick"},"contextMenuOpen":{"name":"contextMenuOpen","description":"<p>Triggers before context menu opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#contextmenuopen"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#databound"},"dataStateChange":{"name":"dataStateChange","description":"<p>Triggers when the Gantt actions such as Sorting, Editing etc., are done.\nIn this event,the current view data and total record count should be assigned to the <code>dataSource</code> based on the action performed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datastatechange"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#destroyed"},"endEdit":{"name":"endEdit","description":"<p>This will be triggered when a task get saved by cell edit.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#endedit"},"excelExportComplete":{"name":"excelExportComplete","description":"<p>Triggers after Gantt data is exported to Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#excelexportcomplete"},"excelHeaderQueryCellInfo":{"name":"excelHeaderQueryCellInfo","description":"<p>Triggers before exporting each header cell to Excel file.\nYou can also customize the Excel cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#excelheaderquerycellinfo"},"excelQueryCellInfo":{"name":"excelQueryCellInfo","description":"<p>Triggers before exporting each cell to Excel file.\nYou can also customize the Excel cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#excelquerycellinfo"},"expanded":{"name":"expanded","description":"<p>This will be triggered after the row getting expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expanded"},"expanding":{"name":"expanding","description":"<p>This will be triggered before the row getting expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expanding"},"headerCellInfo":{"name":"headerCellInfo","description":"<p>This will be triggered before the header cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#headercellinfo"},"load":{"name":"load","description":"<p>Triggered before the Gantt control gets rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#load"},"onMouseMove":{"name":"onMouseMove","description":"<p>This event will be triggered when mouse move on Gantt.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#onmousemove"},"onTaskbarClick":{"name":"onTaskbarClick","description":"<p>This event will be triggered when click on taskbar element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#ontaskbarclick"},"pdfColumnHeaderQueryCellInfo":{"name":"pdfColumnHeaderQueryCellInfo","description":"<p>Triggers before exporting each header cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfcolumnheaderquerycellinfo"},"pdfExportComplete":{"name":"pdfExportComplete","description":"<p>Triggers after TreeGrid data is exported to PDF document.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfexportcomplete"},"pdfQueryCellInfo":{"name":"pdfQueryCellInfo","description":"<p>Triggers before exporting each cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfquerycellinfo"},"pdfQueryTaskbarInfo":{"name":"pdfQueryTaskbarInfo","description":"<p>Triggers before exporting each taskbar to PDF document. You can also customize the taskbar.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfquerytaskbarinfo"},"pdfQueryTimelineCellInfo":{"name":"pdfQueryTimelineCellInfo","description":"<p>Triggers before exporting each cell to PDF document. You can also customize the PDF cells.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfquerytimelinecellinfo"},"queryCellInfo":{"name":"queryCellInfo","description":"<p>This will be triggered before the header cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#querycellinfo"},"queryTaskbarInfo":{"name":"queryTaskbarInfo","description":"<p>This will be triggered after the taskbar element is appended to the Gantt element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#querytaskbarinfo"},"recordDoubleClick":{"name":"recordDoubleClick","description":"<p>This event will be triggered when double click on record.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#recorddoubleclick"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when column resize starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when column resize ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers on column resizing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resizing"},"rowDataBound":{"name":"rowDataBound","description":"<p>This will be triggered before the row element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdatabound"},"rowDeselected":{"name":"rowDeselected","description":"<p>Triggers when a selected row is deselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdeselected"},"rowDeselecting":{"name":"rowDeselecting","description":"<p>Triggers before deselecting the selected row.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdeselecting"},"rowDrag":{"name":"rowDrag","description":"<p>Triggers when row elements are dragged (moved) continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdrag"},"rowDragStart":{"name":"rowDragStart","description":"<p>Triggers when row element’s drag(move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdragstart"},"rowDragStartHelper":{"name":"rowDragStartHelper","description":"<p>Triggers when row element’s before drag(move).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdragstarthelper"},"rowDrop":{"name":"rowDrop","description":"<p>Triggers when row elements are dropped on the target row.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdrop"},"rowSelected":{"name":"rowSelected","description":"<p>Triggers after row selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowselected"},"rowSelecting":{"name":"rowSelecting","description":"<p>Triggers before row selection occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowselecting"},"splitterResizeStart":{"name":"splitterResizeStart","description":"<p>Triggers when splitter resizing starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splitterresizestart"},"splitterResized":{"name":"splitterResized","description":"<p>Triggers when splitter resizing action completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splitterresized"},"splitterResizing":{"name":"splitterResizing","description":"<p>Triggers when splitter bar was dragging.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splitterresizing"},"taskbarEdited":{"name":"taskbarEdited","description":"<p>Triggered when a taskbar is dragged and dropped into a new position on the Gantt chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskbaredited"},"taskbarEditing":{"name":"taskbarEditing","description":"<p>Triggered when a taskbar is in the dragging state on the Gantt chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskbarediting"},"toolbarClick":{"name":"toolbarClick","description":"<p>Triggers when toolbar item was clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#toolbarclick"},"UpdateOffsetOnTaskbarEdit":{"name":"UpdateOffsetOnTaskbarEdit","description":"<p>Specifies whether to update offset value on a task for all the predecessor edit actions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updateoffsetontaskbaredit"},"addDialogFields":{"name":"addDialogFields","description":"<p>Defines the tabs and fields to be displayed in the add dialog.\nIf not specified, the fields will be derived from the <code>taskSettings</code> and <code>columns</code> values.</p>\n","type":"AddDialogFieldSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#adddialogfields"},"allowExcelExport":{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export Gantt chart to Excel and CSV file.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowexcelexport"},"allowFiltering":{"name":"allowFiltering","description":"<p>Enables or disables filtering functionality in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowfiltering"},"allowKeyboard":{"name":"allowKeyboard","description":"<p>Enables or disables keyboard interactions in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowkeyboard"},"allowParentDependency":{"name":"allowParentDependency","description":"<p>Specifies whether to allow dependency connection support for parent records.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowparentdependency"},"allowPdfExport":{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export Gantt chart to PDF file.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowpdfexport"},"allowReordering":{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, Gantt chart columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowreordering"},"allowResizing":{"name":"allowResizing","description":"<p>Enables column resizing in the Gantt chart when <code>allowResizing</code> is set to true.\nWhen enabled, users can adjust the width of columns by dragging the column borders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowresizing"},"allowRowDragAndDrop":{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> set to true, then it will allow the user to perform row drag and drop action in Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowrowdraganddrop"},"allowSelection":{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it enables row selection in the Gantt chart, and the selected rows are highlighted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowserverdatabinding"},"allowSorting":{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it enables sorting of Gantt chart tasks when the column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowsorting"},"allowTaskbarDragAndDrop":{"name":"allowTaskbarDragAndDrop","description":"<p>Defines whether to enable or disable the taskbar drag and drop action in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowtaskbardraganddrop"},"allowTaskbarOverlap":{"name":"allowTaskbarOverlap","description":"<p>Specifies whether taskbars can overlap in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowtaskbaroverlap"},"allowUnscheduledTasks":{"name":"allowUnscheduledTasks","description":"<p>Enables or disables the rendering of unscheduled tasks in the Gantt chart.\nWhen <code>allowUnscheduledTasks</code> set to true, unscheduled tasks will be displayed in the chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowunscheduledtasks"},"autoCalculateDateScheduling":{"name":"autoCalculateDateScheduling","description":"<p>Specifies whether to auto calculate the start and end dates based on factors such as working time, holidays, weekends, and task dependencies.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#autocalculatedatescheduling"},"autoFocusTasks":{"name":"autoFocusTasks","description":"<p>Enables or disables automatic focusing on the taskbar when a task is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#autofocustasks"},"baselineColor":{"name":"baselineColor","description":"<p>Specifies the color of the baseline bar in the Gantt chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#baselinecolor"},"collapseAllParentTasks":{"name":"collapseAllParentTasks","description":"<p>Defines whether all root tasks should be rendered in a collapsed state. When <code>collapseAllParentTasks</code> set to true, all parent tasks will be collapsed by default.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapseallparenttasks"},"columnLoop":{"name":"columnLoop","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columnloop"},"columnMenuItems":{"name":"columnMenuItems","description":"<p><code>columnMenuItems</code> defines both built-in and custom menu items for the Gantt chart column menu.\n&lt;br&gt;&lt;br&gt;\nThe available built-in items are,</p>\n<ul>\n<li><code>ColumnChooser</code> - To show/hide the TreeGrid columns.</li>\n<li><code>SortAscending</code> - Sort the current column in ascending order.</li>\n<li><code>SortDescending</code> - Sort the current column in descending order.</li>\n<li><code>AutoFitAll</code> - Auto fit the size of all columns.</li>\n<li><code>AutoFit</code> - Auto fit the size of the current column.</li>\n<li><code>Filter</code> - Displays filter options based on the <code>filterSettings</code> property.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columnmenuitems"},"columnMenuModule":{"name":"columnMenuModule","description":"<p>The <code>columnMenuModule</code> is used to manage and customize the column menu in the Gantt chart.</p>\n","type":"ColumnMenu","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columnmenumodule"},"columns":{"name":"columns","description":"<p>Defines the collection of columns displayed in the Gantt chart grid.\nIf the <code>columns</code> declaration is empty, the columns are automatically populated based on the <code>taskSettings</code> values.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},"connectorLineBackground":{"name":"connectorLineBackground","description":"<p>Defines the background color of the dependency lines (connector lines) in the Gantt chart.\nYou can set the color as a valid CSS color string (e.g., &quot;red&quot;, &quot;#FF5733&quot;, &quot;rgb(255,0,0)&quot;).</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#connectorlinebackground"},"connectorLineWidth":{"name":"connectorLineWidth","description":"<p>Defines the width of the dependency lines in the Gantt chart.\nThe value should be a positive integer, representing the thickness of the lines.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#connectorlinewidth"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#context"},"contextMenuItems":{"name":"contextMenuItems","description":"<p>Defines the built-in and custom items that appear in the context menu of the Gantt chart.\nYou can use this property to control the content and functionality of the right-click context menu.</p>\n","type":"ContextMenuItem[]|ContextMenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#contextmenuitems"},"contextMenuModule":{"name":"contextMenuModule","description":"<p>The <code>contextMenuModule</code> is responsible for managing and invoking the context menu in the Gantt chart.\nIt provides the functionality to display and interact with the context menu, which can be customized using the <code>contextMenuItems</code> property.</p>\n","type":"ContextMenu","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#contextmenumodule"},"criticalPathModule":{"name":"criticalPathModule","description":"<p>The <code>criticalPathModule</code> is used to determine the critical path in the Gantt chart.\nIt identifies the sequence of tasks that directly affect the project's duration and highlights them.</p>\n","type":"CriticalPath","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#criticalpathmodule"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#currentcontext"},"currentSelection":{"name":"currentSelection","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#currentselection"},"currentZoomingLevel":{"name":"currentZoomingLevel","description":"<p>Specifies the current zooming level of the Gantt chart.</p>\n","type":"ZoomTimelineSettings","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#currentzoominglevel"},"dataMap":{"name":"dataMap","description":"","type":"Map","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datamap"},"dataSource":{"name":"dataSource","description":"<p>Defines the data source for the Gantt chart, which is used to render rows and tasks.\nThe <code>dataSource</code> can be an array of JavaScript objects, an instance of <code>DataManager</code>, or a single object.\nThe array of objects should contain the task data with properties such as <code>TaskID</code>, <code>TaskName</code>, <code>StartDate</code>, <code>EndDate</code>, etc.\nThis allows dynamic binding of tasks and their relationships (e.g., dependencies, subtasks, progress) to the Gantt chart.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},"dateFormat":{"name":"dateFormat","description":"<p>Specifies the date format for displaying dates in the Gantt chart, including in tooltips and grid cells.\nBy default, the format is determined based on the current culture/locale settings.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#dateformat"},"dayMarkersModule":{"name":"dayMarkersModule","description":"<p>The <code>dayMarkersModule</code> is used to manage and manipulate event markers in the Gantt chart.\nIt allows customization of how markers are displayed on specific days, helping to highlight important dates or milestones.</p>\n","type":"DayMarkers","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#daymarkersmodule"},"dayWorkingTime":{"name":"dayWorkingTime","description":"<p>Defines the customized working time for the project.\nThis helps in accurately planning tasks based on available working hours and ensures proper task scheduling.</p>\n","type":"DayWorkingTimeModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#dayworkingtime"},"disableHtmlEncode":{"name":"disableHtmlEncode","description":"<p>If <code>disableHtmlEncode</code> is set to <code>true</code>, the Gantt component disables HTML entity encoding across the Gantt content, allowing custom HTML elements to be rendered.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#disablehtmlencode"},"durationUnit":{"name":"durationUnit","description":"<p><code>durationUnit</code> Specifies the duration unit for each task. The available options are:</p>\n<ul>\n<li><code>day</code>: Sets the duration unit to day.</li>\n<li><code>hour</code>: Sets the duration unit to hour.</li>\n<li><code>minute</code>: Sets the duration unit to minute.</li>\n</ul>\n","type":"DurationUnit","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#durationunit"},"editDialogFields":{"name":"editDialogFields","description":"<p>Defines the tabs and fields to be displayed in the edit dialog.\nIf not specified, the fields will be derived from the <code>taskSettings</code> and <code>columns</code> values.</p>\n","type":"EditDialogFieldSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editdialogfields"},"editModule":{"name":"editModule","description":"<p>The <code>editModule</code> handles the manipulation of Gantt chart records, including editing, updating, and deleting tasks.</p>\n","type":"Edit","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editmodule"},"editSettings":{"name":"editSettings","description":"<p>Configures the edit settings for the Gantt chart, such as enabling or disabling task modifications.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editsettings"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#element"},"enableAdaptiveUI":{"name":"enableAdaptiveUI","description":"<p>If <code>enableAdaptiveUI</code> is set to true, the pop-up UI becomes adaptive to smaller screens, enabling better usability for filtering and other features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enableadaptiveui"},"enableContextMenu":{"name":"enableContextMenu","description":"<p>If <code>enableContextMenu</code> is set to true, enables the context menu in the Gantt chart.\nThe context menu provides additional actions that can be accessed by right-clicking on Gantt chart elements</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablecontextmenu"},"enableCriticalPath":{"name":"enableCriticalPath","description":"<p>Enables the highlighting of critical tasks in the Gantt Chart that directly affect the project's end date.\nWhen enabled, tasks that are critical to the project timeline will be visually distinguished by colours.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablecriticalpath"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the TreeGrid component.\nIf <code>enableHtmlSanitizer</code> set to true, any potentially harmful strings and scripts are sanitized before rendering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablehtmlsanitizer"},"enableImmutableMode":{"name":"enableImmutableMode","description":"<p>If <code>enableImmutableMode</code> is set to true, the Gantt Chart will reuse existing rows from previous results instead of\nperforming a full refresh when Gantt actions are executed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enableimmutablemode"},"enableMultiTaskbar":{"name":"enableMultiTaskbar","description":"<p>Enables the rendering of child taskbars on the parent row when it is in a collapsed state in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablemultitaskbar"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablepersistence"},"enablePredecessorValidation":{"name":"enablePredecessorValidation","description":"<p>If <code>enablePredecessorValidation</code> is set to true, enables validation for predecessor links in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablepredecessorvalidation"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablertl"},"enableTimelineVirtualization":{"name":"enableTimelineVirtualization","description":"<p>Enables better performance for projects with a large time span by initially rendering only the visible timeline cells.\nSubsequent cells are loaded on horizontal scrolling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enabletimelinevirtualization"},"enableUndoRedo":{"name":"enableUndoRedo","description":"<p>Enables or disables the undo and redo functionality in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enableundoredo"},"enableVirtualMaskRow":{"name":"enableVirtualMaskRow","description":"<p>Specifies whether to display shimmer effect during scrolling action in virtual scrolling feature. If disabled, spinner is shown instead of shimmer effect.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablevirtualmaskrow"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> is set to true, the Gantt chart will render only the rows visible within the viewport.\nand load subsequent rows as the user scrolls vertically. This improves performance when dealing with large datasets.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablevirtualization"},"eventMarkers":{"name":"eventMarkers","description":"<p>Defines the events and milestones along the project timeline.\nThese event markers indicate significant events or milestones throughout the project's duration.</p>\n","type":"EventMarkerModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#eventmarkers"},"excelExportModule":{"name":"excelExportModule","description":"<p>The <code>excelExportModule</code> is used for exporting Gantt data to an Excel file.\nThis module provides the functionality to export task data, dependencies, and other Gantt-related information in Excel format.</p>\n","type":"ExcelExport","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#excelexportmodule"},"expandedRecords":{"name":"expandedRecords","description":"","type":"IGanttData[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expandedrecords"},"filterModule":{"name":"filterModule","description":"<p>The <code>filterModule</code> is used to manage and apply filtering operations in the Gantt chart.</p>\n","type":"Filter","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#filtermodule"},"filterSettings":{"name":"filterSettings","description":"<p>Configures the filter settings for the Gantt chart, enabling users to filter tasks based on specific columns or criteria.\nThe <code>filterSettings</code> property allows customization of filter behavior, such as which columns to filter and the filter type.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#filtersettings"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#forceupdate"},"gridLines":{"name":"gridLines","description":"<p>Configures the grid lines displayed in the TreeGrid and Gantt chart.\nThe <code>gridLines</code> property allows customization of the type of grid lines to be shown, either horizontal, vertical, or both.</p>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#gridlines"},"height":{"name":"height","description":"<p>Defines the height of the Gantt component container.\nThe <code>height</code> property can be set to a specific value (in pixels or percentage) or set to 'auto' for automatic height adjustment based on content.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},"highlightWeekends":{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> is set to true, it highlights all weekend days in the week-day timeline mode.\nThis makes weekends visually distinct in the timeline view.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},"holidays":{"name":"holidays","description":"<p>Defines holidays within the project timeline, allowing you to mark specific dates as holidays.\nThis helps in accounting for non-working days in scheduling and task planning.</p>\n","type":"HolidayModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#holidays"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#ignorecollectionwatch"},"includeWeekend":{"name":"includeWeekend","description":"<p>Defines whether weekend days should be considered as working days in the Gantt chart.\nWhen <code>includeWeekend</code> set to true, weekends (Saturday and Sunday) are treated as regular working days.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#includeweekend"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#initrendercalled"},"initialLoadData":{"name":"initialLoadData","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#initialloaddata"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isdestroyed"},"isLocaleChanged":{"name":"isLocaleChanged","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#islocalechanged"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isserverrendered"},"isToolBarClick":{"name":"isToolBarClick","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#istoolbarclick"},"isVirtualScroll":{"name":"isVirtualScroll","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isvirtualscroll"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#isvue"},"keyboardModule":{"name":"keyboardModule","description":"<p>The <code>keyboardModule</code> is responsible for managing keyboard interactions in the Gantt chart.\nIt handles events such as navigating, selecting, and performing actions using the keyboard.</p>\n","type":"KeyboardEvents","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#keyboardmodule"},"labelSettings":{"name":"labelSettings","description":"<p>Configures the labels displayed on the right, left, and inside the taskbars in the Gantt chart.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},"loadChildOnDemand":{"name":"loadChildOnDemand","description":"<p>Gets or sets whether to load child records on demand in remote data binding. When <code>loadChildOnDemand</code> set to true, child records are loaded only when expanded, and parent records are rendered in a collapsed state initially.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#loadchildondemand"},"loadingIndicator":{"name":"loadingIndicator","description":"<p>Configures the loading indicator for the Gantt Chart. Specifies the type of indicator to display (spinner or shimmer effect) during waiting periods when actions are performed in the Gantt Chart.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#loadingindicator"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#locale"},"milestoneTemplate":{"name":"milestoneTemplate","description":"<p>Defines a custom template for rendering milestone tasks in the Gantt chart. This template allows you to customize the appearance of milestone tasks.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#milestonetemplate"},"parentTaskbarTemplate":{"name":"parentTaskbarTemplate","description":"<p>Defines a custom template for rendering parent task bars in the Gantt chart. This template allows you to customize the appearance of parent task bars.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#parenttaskbartemplate"},"pdfExportModule":{"name":"pdfExportModule","description":"<p>The <code>pdfExportModule</code> is used for exporting the Gantt chart data to a PDF format.\nThis module provides functionality for exporting the entire chart or specific data to a PDF document.</p>\n","type":"PdfExport","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfexportmodule"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#portals"},"previousFlatData":{"name":"previousFlatData","description":"","type":"IGanttData[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#previousflatdata"},"previousGanttColumns":{"name":"previousGanttColumns","description":"","type":"ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#previousganttcolumns"},"previousZoomingLevel":{"name":"previousZoomingLevel","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#previouszoominglevel"},"projectEndDate":{"name":"projectEndDate","description":"<p>Defines the end date of the project. If the <code>projectEndDate</code> is not set, it will be automatically calculated based on the data source.\nThe date can be provided as a <code>Date</code> object or a string in a valid date format.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},"projectStartDate":{"name":"projectStartDate","description":"<p>Defines the start date of the project. If the <code>projectStartDate</code> is not set, it will be automatically calculated based on the data source.\nThe date can be provided as a <code>Date</code> object or a string in a valid date format.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#props"},"query":{"name":"query","description":"<p>Defines an external <a href=\"https://ej2.syncfusion.com/documentation/data/api-query.html\"><code>Query</code></a>\nthat will be executed in conjunction with data processing to filter, sort the data.\nThis allows for advanced data manipulation before binding the data to the Gantt chart.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#query"},"readOnly":{"name":"readOnly","description":"<p>If <code>readOnly</code> is set to true, the Gantt chart becomes read-only, meaning tasks and other elements cannot be edited.\nThis setting disables all editing features, including task updates, dependency management, and any editing acions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#refs"},"renderBaseline":{"name":"renderBaseline","description":"<p>If <code>renderBaseline</code> is set to <code>true</code>, baselines will be rendered for tasks in the Gantt chart.\nBaselines provide a visual reference to track the planned vs. actual progress of tasks.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#renderbaseline"},"resourceFields":{"name":"resourceFields","description":"<p>Defines the mapping properties to extract resource values, such as <code>id</code>, <code>name</code>, <code>unit</code>, and <code>group</code> from the resource collection in the Gantt chart.\nThis helps to map data from a custom resource collection to the appropriate fields for resource allocation.</p>\n","type":"ResourceFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resourcefields"},"resourceIDMapping":{"name":"resourceIDMapping","description":"<p>Defines the mapping property to retrieve the resource ID value from the resource collection.\nThis is used to map the resource ID from the resource data to the Gantt chart for resource allocation.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resourceidmapping"},"resourceNameMapping":{"name":"resourceNameMapping","description":"<p>Defines the mapping property to retrieve the resource name value from the resource collection.\nThis is used to map the resource name from the resource data to the Gantt chart for task allocation.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resourcenamemapping"},"resources":{"name":"resources","description":"<p>Defines the collection of resources assigned to the project.</p>\n","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resources"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#root"},"rowDragAndDropModule":{"name":"rowDragAndDropModule","description":"<p>The <code>rowDragAndDropModule</code> manages the row reordering functionality in the Gantt chart.\nIt allows users to drag and drop rows to reorder tasks within the Gantt chart view.</p>\n","type":"RowDD","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowdraganddropmodule"},"rowHeight":{"name":"rowHeight","description":"<p>Defines the height of grid and chart rows in the Gantt chart.\nThis property sets the vertical space allocated for each task or row, allowing customization of row sizes.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#rowheight"},"scrollLeftValue":{"name":"scrollLeftValue","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#scrollleftvalue"},"searchSettings":{"name":"searchSettings","description":"<p>Configures the search functionality within the Gantt chart.</p>\n","type":"SearchSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#searchsettings"},"segmentData":{"name":"segmentData","description":"<p>Defines the collection of segments assigned to tasks in the Gantt chart.</p>\n","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#segmentdata"},"selectedRowIndex":{"name":"selectedRowIndex","description":"<p>The <code>selectedRowIndex</code> allows you to specify the index of the row to be selected at the time of initial rendering.\nIt can also be used to get the currently selected row index after selection.\nA value of <code>-1</code> indicates no row is selected.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectedrowindex"},"selectionModule":{"name":"selectionModule","description":"<p>The <code>selectionModule</code> is used to manipulate selection operation in the Gantt chart.</p>\n","type":"Selection","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectionmodule"},"selectionSettings":{"name":"selectionSettings","description":"<p>Configures the settings for selection in the Gantt chart.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#setstate"},"showColumnMenu":{"name":"showColumnMenu","description":"<p>If <code>showColumnMenu</code> set to true, enables the column menu options for each column in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showcolumnmenu"},"showIndicator":{"name":"showIndicator","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showindicator"},"showInlineNotes":{"name":"showInlineNotes","description":"<p>To show notes column cell values inside the cell or in tooltip.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showinlinenotes"},"showOverAllocation":{"name":"showOverAllocation","description":"<p>If <code>showOverAllocation</code> set to <code>true</code>, enables the rendering of the overallocation container in the Gantt chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showoverallocation"},"singleTier":{"name":"singleTier","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#singletier"},"sortModule":{"name":"sortModule","description":"<p>The <code>sortModule</code> is used to manipulate sorting operation in Gantt.</p>\n","type":"Sort","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#sortmodule"},"sortSettings":{"name":"sortSettings","description":"<p>Configures the sort settings for the Gantt chart.</p>\n","type":"SortSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#sortsettings"},"splitterSettings":{"name":"splitterSettings","description":"<p>Configures the splitter settings for the Gantt chart.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#state"},"taskFields":{"name":"taskFields","description":"<p>Defines the mapping properties to extract task-related values, such as ID, start date, end date, duration, and progress, from the data source.\nThis allows the Gantt chart to properly map the provided data to the corresponding task fields and render them accordingly.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},"taskMode":{"name":"taskMode","description":"<p>Specifies task schedule mode for a project.</p>\n","type":"ScheduleMode","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskmode"},"taskType":{"name":"taskType","description":"<p><code>taskType</code> Specifies the task type for task whether fixedUnit or fixedWork or fixedDuration.</p>\n<ul>\n<li><code>fixedUnit</code>: Sets the task type as fixedUnit.</li>\n<li><code>fixedWork</code>: Sets the task type as fixedWork.</li>\n<li><code>fixedDuration</code>: Sets the task type as fixedDuration.</li>\n</ul>\n","type":"TaskType","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#tasktype"},"taskbarEditModule":{"name":"taskbarEditModule","description":"","type":"TaskbarEdit","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskbareditmodule"},"taskbarHeight":{"name":"taskbarHeight","description":"<p>Defines height of the taskbar element in the Gantt chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskbarheight"},"taskbarTemplate":{"name":"taskbarTemplate","description":"<p>The task bar template that renders customized child task bars from the given template.\nThis property allows users to define a custom template for rendering child task bars in the Gantt chart.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskbartemplate"},"timelineSettings":{"name":"timelineSettings","description":"<p>Configures timeline settings of Gantt.\nDefines default timeline modes or customized top tier mode and bottom tier mode or single tier only.</p>\n","type":"TimelineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinesettings"},"timelineTemplate":{"name":"timelineTemplate","description":"<p>Renders customized html elements for timeline cell from the given template.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinetemplate"},"timezone":{"name":"timezone","description":"<p>By default, task schedule dates are calculated with system time zone. If the Gantt chart is assigned with a specific time zone,\nthen schedule dates are calculated based on the given time zone date value.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timezone"},"toolbar":{"name":"toolbar","description":"<p><code>toolbar</code> defines the toolbar items of the Gantt.\nIt contains built-in and custom toolbar items.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Gantt's toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in toolbar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected task.</li>\n<li>Update: Updates the edited task.</li>\n<li>Delete: Deletes the selected task.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches tasks by the given key.</li>\n<li>ExpandAll: Expands all the task of Gantt.</li>\n<li>CollapseAll: Collapses all the task of Gantt.</li>\n<li>PrevTimeSpan: Extends timeline with one unit before the timeline start date.</li>\n<li>NextTimeSpan: Extends timeline with one unit after the timeline finish date.</li>\n<li>ZoomIn: ZoomIn the Gantt control.</li>\n<li>ZoomOut: ZoomOut the Gantt control.</li>\n<li>ZoomToFit: Display the all tasks within the viewable Gantt chart.</li>\n<li>ExcelExport: To export in Excel format.</li>\n<li>CsvExport : To export in CSV format.</li>\n<li>Indent: To indent a task to one level.</li>\n<li>Outdent: To outdent a task from one level.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#toolbar"},"tooltipSettings":{"name":"tooltipSettings","description":"<p>Enables or disables default tooltip of Gantt element and defines customized tooltip for Gantt elements.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#tooltipsettings"},"treeColumnIndex":{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},"undoRedoActions":{"name":"undoRedoActions","description":"<p><code>undoRedoActions</code> Defines action items that retain for undo and redo operation.</p>\n","type":"GanttAction[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#undoredoactions"},"undoRedoModule":{"name":"undoRedoModule","description":"<p>The <code>undoRedoModule</code> manages the undo and redo functionality in the Gantt chart.</p>\n","type":"UndoRedo","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#undoredomodule"},"undoRedoStepsCount":{"name":"undoRedoStepsCount","description":"<p>Defines number of undo/redo actions that should be stored.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#undoredostepscount"},"updateOffsetOnTaskbarEdit":{"name":"updateOffsetOnTaskbarEdit","description":"<p>Specifies whether to update offset value on a task for all the predecessor edit actions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updateoffsetontaskbaredit"},"validateManualTasksOnLinking":{"name":"validateManualTasksOnLinking","description":"<p>If <code>validateManualTasksOnLinking</code> is set to true,\nit enables date validation while connecting manually scheduled tasks with predecessor.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#validatemanualtasksonlinking"},"viewType":{"name":"viewType","description":"<p>Defines the view type of the Gantt.</p>\n","type":"ViewType","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#viewtype"},"virtualScrollModule":{"name":"virtualScrollModule","description":"<p>The <code>virtualScrollModule</code> is used to handle virtual scroll in Gantt.</p>\n","type":"VirtualScroll","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#virtualscrollmodule"},"weekWorkingTime":{"name":"weekWorkingTime","description":"<p>Specifies unique working hours for each weekday in gantt chart to tailor schedules precisely.</p>\n","type":"WeekWorkingTimeModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#weekworkingtime"},"width":{"name":"width","description":"<p>Defines the width of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#width"},"workUnit":{"name":"workUnit","description":"<p><code>workUnit</code> Specifies the work unit for each tasks whether day or hour or minute.</p>\n<ul>\n<li><code>day</code>: Sets the work unit as day.</li>\n<li><code>hour</code>: Sets the work unit as hour.</li>\n<li><code>minute</code>: Sets the work unit as minute.</li>\n</ul>\n","type":"WorkUnit","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#workunit"},"workWeek":{"name":"workWeek","description":"<p>Defines workweek of project.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#workweek"},"zoomingLevels":{"name":"zoomingLevels","description":"<p>Configure zooming levels of Gantt Timeline.</p>\n","type":"ZoomTimelineSettings[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#zoominglevels"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#addeventlistener"},"addPredecessor":{"name":"addPredecessor","description":"<p>To add dependency for Task.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#addpredecessor"},"addRecord":{"name":"addRecord","description":"<p>Method to add record.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#addrecord"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#attachunloadevent"},"cancelEdit":{"name":"cancelEdit","description":"<p>Cancels the current edit operation and reverts the changes made during editing.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#canceledit"},"changeTaskMode":{"name":"changeTaskMode","description":"<p>To change the mode of a record.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#changetaskmode"},"clearFiltering":{"name":"clearFiltering","description":"<p>Clears the filtered columns in Gantt.\nCan also be used to clear filtering of a specific column in Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#clearfiltering"},"clearRedoCollection":{"name":"clearRedoCollection","description":"<p>Clears the stack collection for redo action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#clearredocollection"},"clearSelection":{"name":"clearSelection","description":"<p>Deselects the current selected rows and cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#clearselection"},"clearSorting":{"name":"clearSorting","description":"<p>Clears all the sorted columns of the Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#clearsorting"},"clearUndoCollection":{"name":"clearUndoCollection","description":"<p>Clears the stack collection for undo action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#clearundocollection"},"collapseAll":{"name":"collapseAll","description":"<p>Method to collapse all the rows of Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapseall"},"collapseByID":{"name":"collapseByID","description":"<p>Collapse the record by id value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapsebyid"},"collapseByIndex":{"name":"collapseByIndex","description":"<p>Collapse the record by index value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#collapsebyindex"},"convertToMilestone":{"name":"convertToMilestone","description":"<p>Method to convert task data to milestone data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#converttomilestone"},"csvExport":{"name":"csvExport","description":"<p>Export Gantt data to CSV file.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#csvexport"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#databind"},"deleteRecord":{"name":"deleteRecord","description":"<p>Method to delete record.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#deleterecord"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#detachunloadevent"},"enableItems":{"name":"enableItems","description":"<p>Enables or disables ToolBar items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enableitems"},"excelExport":{"name":"excelExport","description":"<p>Export Gantt data to Excel file(.xlsx).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#excelexport"},"expandAll":{"name":"expandAll","description":"<p>Method to expand all the rows of Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expandall"},"expandByID":{"name":"expandByID","description":"<p>Expand the record by task id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expandbyid"},"expandByIndex":{"name":"expandByIndex","description":"<p>Expand the records by index value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#expandbyindex"},"filterByColumn":{"name":"filterByColumn","description":"<p>Filters TreeGrid row by column name with the given options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#filterbycolumn"},"fitToProject":{"name":"fitToProject","description":"<p>To show all project task in available chart width.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#fittoproject"},"getCriticalTasks":{"name":"getCriticalTasks","description":"<p>To get all the critical tasks in Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getcriticaltasks"},"getDurationString":{"name":"getDurationString","description":"<p>Get duration value as string combined with duration and unit values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getdurationstring"},"getExpandedRecords":{"name":"getExpandedRecords","description":"<p>Get expanded records from given record collection.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getexpandedrecords"},"getFormatedDate":{"name":"getFormatedDate","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getformateddate"},"getGanttColumns":{"name":"getGanttColumns","description":"<p>Gets the Gantt columns.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getganttcolumns"},"getGridColumns":{"name":"getGridColumns","description":"<p>Gets the columns from the TreeGrid.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getgridcolumns"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getmodulename"},"getRecordByID":{"name":"getRecordByID","description":"<p>Method to get record by id value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getrecordbyid"},"getRedoActions":{"name":"getRedoActions","description":"<p>To retrieve the collection of actions to reapply.\n<code>modifiedRecords</code> - retrieves the modified records.\n<code>action</code> - shows the current performed action such as 'sorting','columnReorder','columnResize','progressResizing','rightResizing','leftResizing','add','delete','search','filtering','zoomIn','zoomOut','zoomToFit','columnState','previousTimeSpan','nextTimeSpan','indent','outdent','rowDragAndDrop','taskbarDragAndDrop','dialogEdit'</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getredoactions"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getrootelement"},"getRowByID":{"name":"getRowByID","description":"<p>Method to get the row element by task id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getrowbyid"},"getRowByIndex":{"name":"getRowByIndex","description":"<p>Method to get chart row value by index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getrowbyindex"},"getTaskByUniqueID":{"name":"getTaskByUniqueID","description":"<p>Method to get task by uniqueId value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#gettaskbyuniqueid"},"getTaskbarHeight":{"name":"getTaskbarHeight","description":"<p>Method to get taskbarHeight.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#gettaskbarheight"},"getUndoActions":{"name":"getUndoActions","description":"<p>To retrieve the collection of previously recorded actions. This method returns an object as a collection that holds the following details.\n<code>modifiedRecords</code> - retrieves the modified records.\n<code>action</code> - shows the current performed action such as 'sorting','columnReorder','columnResize','progressResizing','rightResizing','leftResizing','add','delete','search','filtering','zoomIn','zoomOut','zoomToFit','columnState','previousTimeSpan','nextTimeSpan','indent','outdent','rowDragAndDrop','taskbarDragAndDrop','dialogEdit'</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getundoactions"},"getWorkString":{"name":"getWorkString","description":"<p>Get work value as string combined with work and unit values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#getworkstring"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#handleunload"},"hideColumn":{"name":"hideColumn","description":"<p>Hides one or more columns in the Gantt chart based on the specified column names or header texts.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#hidecolumn"},"hideMaskRow":{"name":"hideMaskRow","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#hidemaskrow"},"hideSpinner":{"name":"hideSpinner","description":"<p>Method used to hide spinner.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#hidespinner"},"indent":{"name":"indent","description":"<p>To indent the level of selected task to the hierarchical Gantt task.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#indent"},"keyActionHandler":{"name":"keyActionHandler","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#keyactionhandler"},"mergeTask":{"name":"mergeTask","description":"<p>Merge the split taskbar with the given segment indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#mergetask"},"nextTimeSpan":{"name":"nextTimeSpan","description":"<p>To update timeline at end point with one unit.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#nexttimespan"},"openAddDialog":{"name":"openAddDialog","description":"<p>Method to open Add dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#openadddialog"},"openEditDialog":{"name":"openEditDialog","description":"<p>Method to open Edit dialog.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#openeditdialog"},"outdent":{"name":"outdent","description":"<p>To outdent the level of selected task from the hierarchical Gantt task.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#outdent"},"pdfExport":{"name":"pdfExport","description":"<p>Export Gantt data to PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#pdfexport"},"previousTimeSpan":{"name":"previousTimeSpan","description":"<p>Updates the Gantt timeline to the previous time span by one unit.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#previoustimespan"},"redo":{"name":"redo","description":"<p>Initiates a redo action to reapply the most recent undone change performed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#redo"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#refresh"},"removeCriticalPathStyles":{"name":"removeCriticalPathStyles","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#removecriticalpathstyles"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#removeeventlistener"},"removePredecessor":{"name":"removePredecessor","description":"<p>To remove dependency from task.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#removepredecessor"},"removeSortColumn":{"name":"removeSortColumn","description":"<p>To remove sorted records of particular column.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#removesortcolumn"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#render"},"reorderColumns":{"name":"reorderColumns","description":"<p>Changes the TreeGrid column positions by field names.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#reordercolumns"},"reorderRows":{"name":"reorderRows","description":"<p>Reorder the rows based on given indexes and position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#reorderrows"},"scrollToDate":{"name":"scrollToDate","description":"<p>To move horizontal scroll bar of Gantt to specific date.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#scrolltodate"},"scrollToTask":{"name":"scrollToTask","description":"<p>To move horizontal scroll bar of Gantt to specific task id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#scrolltotask"},"search":{"name":"search","description":"<p>Method to perform search action in Gantt.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#search"},"selectCell":{"name":"selectCell","description":"<p>Selects a cell by the given index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectcell"},"selectCells":{"name":"selectCells","description":"<p>Selects a collection of cells by row and column indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectcells"},"selectRow":{"name":"selectRow","description":"<p>Selects a row by given index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectrow"},"selectRows":{"name":"selectRows","description":"<p>Selects a collection of rows by indexes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectrows"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#serverdatabind"},"setScrollTop":{"name":"setScrollTop","description":"<p>To set scroll top for chart scroll container.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#setscrolltop"},"setSplitterPosition":{"name":"setSplitterPosition","description":"<p>Method to set splitter position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#setsplitterposition"},"showColumn":{"name":"showColumn","description":"<p>Shows a column by its column name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showcolumn"},"showMaskRow":{"name":"showMaskRow","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showmaskrow"},"showSpinner":{"name":"showSpinner","description":"<p>Method used to show spinner.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#showspinner"},"sortColumn":{"name":"sortColumn","description":"<p>Sorts a column with the given options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#sortcolumn"},"splitTask":{"name":"splitTask","description":"<p>Splits the taskbar of a specified task into segments based on the given date.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittask"},"undo":{"name":"undo","description":"<p>Initiates an undo action to revert the most recent change performed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#undo"},"updateChartScrollOffset":{"name":"updateChartScrollOffset","description":"<p>To update the horizontal (left) and vertical (top) scroll positions of the Gantt chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updatechartscrolloffset"},"updateDataSource":{"name":"updateDataSource","description":"<p>Method to update data source.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updatedatasource"},"updatePredecessor":{"name":"updatePredecessor","description":"<p>To modify current dependency values of Task by task id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updatepredecessor"},"updateProjectDates":{"name":"updateProjectDates","description":"<p>To validate project start date and end date.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updateprojectdates"},"updateRecordByID":{"name":"updateRecordByID","description":"<p>Method to update record by ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updaterecordbyid"},"updateRecordByIndex":{"name":"updateRecordByIndex","description":"<p>Method to update record by Index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updaterecordbyindex"},"updateTaskId":{"name":"updateTaskId","description":"<p>To update existing taskId with new unique Id.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#updatetaskid"},"zoomIn":{"name":"zoomIn","description":"<p>To perform Zoom in action on Gantt timeline.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#zoomin"},"zoomOut":{"name":"zoomOut","description":"<p>To perform zoom out action on Gantt timeline.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#zoomout"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#inject"}},"HolidayDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidayDirective#shouldcomponentupdate"}},"HolidaysDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/holidaysDirective#shouldcomponentupdate"}},"WeekWorkingTimeDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimeDirective#shouldcomponentupdate"}},"WeekWorkingTimesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/gantt/weekWorkingTimesDirective#shouldcomponentupdate"}},"ButtonComponent":{"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/button/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#allowserverdatabinding"},"content":{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/button/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the Button is <code>disabled</code> or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Button component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/button/#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions the icon before/after the text content in the Button.\nThe possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Right: The icon will be positioned to the right of the text content.</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/button/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isdestroyed"},"isPrimary":{"name":"isPrimary","description":"<p>Allows the appearance of the Button to be enhanced and visually appealing when set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isprimary"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isserverrendered"},"isToggle":{"name":"isToggle","description":"<p>Makes the Button toggle, when set to <code>true</code>. When you click it, the state changes from normal to active.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#istoggle"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isvue"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/button/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/button/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the button element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to Button\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/button/#serverdatabind"}},"CheckBoxComponent":{"change":{"name":"change","description":"<p>Triggers when the CheckBox state has been changed by user interaction.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#change"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#allowserverdatabinding"},"checked":{"name":"checked","description":"<p>Specifies a value that indicates whether the CheckBox is <code>checked</code> or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#checked"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the CheckBox element.\nYou can add custom styles to the CheckBox by using this property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the CheckBox is <code>disabled</code> or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>disabled</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the CheckBox component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#ignorecollectionwatch"},"indeterminate":{"name":"indeterminate","description":"<p>Specifies a value that indicates whether the CheckBox is in <code>indeterminate</code> state or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>indeterminate</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#indeterminate"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#isvue"},"label":{"name":"label","description":"<p>Defines the caption for the CheckBox, that describes the purpose of the CheckBox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#label"},"labelPosition":{"name":"labelPosition","description":"<p>Positions label <code>before</code>/<code>after</code> the CheckBox.\nThe possible values are:</p>\n<ul>\n<li>Before - The label is positioned to left of the CheckBox.</li>\n<li>After - The label is positioned to right of the CheckBox.</li>\n</ul>\n","type":"LabelPosition","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#labelposition"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#locale"},"name":{"name":"name","description":"<p>Defines <code>name</code> attribute for the CheckBox.\nIt is used to reference form data (CheckBox value) after a form is submitted.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#name"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#state"},"value":{"name":"value","description":"<p>Defines <code>value</code> attribute for the CheckBox.\nIt is a form data passed to the server when submitting the form.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the CheckBox element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to CheckBox\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#inject"}},"ChipListComponent":{"beforeClick":{"name":"beforeClick","description":"<p>Triggers before the click event of the chip is fired.\nThis event can be used to prevent the further process and restrict the click action over a chip.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#beforeclick"},"click":{"name":"click","description":"<p>Triggers when a chip is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#click"},"created":{"name":"created","description":"<p>Triggers when the component is created successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#created"},"delete":{"name":"delete","description":"<p>Fires before removing the chip element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#delete"},"deleted":{"name":"deleted","description":"<p>Triggers when the chip item is removed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#deleted"},"dragStart":{"name":"dragStart","description":"<p>Fires when a chip item starts moving due to a drag action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#dragstart"},"dragStop":{"name":"dragStop","description":"<p>Fires when a chip item is reordered after completing a drag action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#dragstop"},"dragging":{"name":"dragging","description":"<p>Fires while a chip item is being dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#dragging"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Specifies a boolean value that indicates whether the chip item can be dragged and reordered.\nThis enables drag-and-drop functionality within a single container or across multiple containers of chips when dragging is enabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#allowdraganddrop"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#allowserverdatabinding"},"avatarIconCss":{"name":"avatarIconCss","description":"<p>Specifies the icon CSS class for the avatar in the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#avatariconcss"},"avatarText":{"name":"avatarText","description":"<p>Specifies the customized text value for the avatar in the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#avatartext"},"chips":{"name":"chips","description":"<p>This chips property helps to render ChipList component.</p>\n","type":"string[]|number[]|ChipModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#chips"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the custom classes to be added to the chip element used to customize the ChipList component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#currentcontext"},"dragArea":{"name":"dragArea","description":"<p>Specifies the target in which the draggable element can be moved and dropped.\nBy default, the draggable element movement occurs in the page.</p>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#dragarea"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#element"},"enableDelete":{"name":"enableDelete","description":"<p>Enables or disables the delete functionality of a chip.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#enabledelete"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the chip component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#enabled"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as aria labels, title, name, etc., and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#isvue"},"leadingIconCss":{"name":"leadingIconCss","description":"<p>Specifies the leading icon CSS class for the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#leadingiconcss"},"leadingIconUrl":{"name":"leadingIconUrl","description":"<p>Specifies the leading icon url for the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#leadingiconurl"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#locale"},"multiSelectedChip":{"name":"multiSelectedChip","description":"","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#multiselectedchip"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#root"},"selectedChips":{"name":"selectedChips","description":"<p>Sets or gets the selected chip items in the chip list.</p>\n","type":"string[]|number[]|number","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#selectedchips"},"selection":{"name":"selection","description":"<p>Defines the selection type of the chip. The available types are:</p>\n<ol>\n<li>Input chip</li>\n<li>Choice chip</li>\n<li>Filter chip</li>\n<li>Action chip</li>\n</ol>\n","type":"Selection","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#selection"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#state"},"text":{"name":"text","description":"<p>Specifies the text content for the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#text"},"trailingIconCss":{"name":"trailingIconCss","description":"<p>Specifies the trailing icon CSS class for the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#trailingiconcss"},"trailingIconUrl":{"name":"trailingIconUrl","description":"<p>Specifies the trailing icon url for the chip.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#trailingiconurl"},"add":{"name":"add","description":"<p>Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#add"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#detachunloadevent"},"find":{"name":"find","description":"<p>A function that finds chip based on given input.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#find"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#getmodulename"},"getPersistData":{"name":"getPersistData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#getrootelement"},"getSelectedChips":{"name":"getSelectedChips","description":"<p>Returns the selected chip(s) data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#getselectedchips"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#refresh"},"remove":{"name":"remove","description":"<p>Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#remove"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#render"},"select":{"name":"select","description":"<p>Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#select"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipListComponent#inject"}},"ChipDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipDirective#shouldcomponentupdate"}},"ChipsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chips/chipsDirective#shouldcomponentupdate"}},"FabComponent":{"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#allowserverdatabinding"},"content":{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the Button is <code>disabled</code> or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Button component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions the icon before/after the text content in the Button.\nThe possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Right: The icon will be positioned to the right of the text content.</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isdestroyed"},"isPrimary":{"name":"isPrimary","description":"<p>Defines whether to apply primary style for FAB.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isprimary"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isserverrendered"},"isToggle":{"name":"isToggle","description":"<p>Makes the Button toggle, when set to <code>true</code>. When you click it, the state changes from normal to active.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#istoggle"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isvue"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#portals"},"position":{"name":"position","description":"<p>Defines the position of the FAB relative to target.\nThe possible values are:</p>\n<ul>\n<li>TopLeft: Positions the FAB at the target's top left corner.</li>\n<li>TopCenter: Positions the FAB at the target's top left corner.</li>\n<li>TopRight: Positions the FAB at the target's top left corner.</li>\n<li>MiddleLeft: Positions the FAB at the target's top left corner.</li>\n<li>MiddleCenter: Positions the FAB at the target's top left corner.</li>\n<li>MiddleRight: Positions the FAB at the target's top left corner.</li>\n<li>BottomLeft: Positions the FAB at the target's top left corner.</li>\n<li>BottomCenter: Places the FAB on the bottom-center position of the target.</li>\n<li>BottomRight: Positions the FAB at the target's bottom right corner.</li>\n</ul>\n","type":"string|FabPosition","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#state"},"target":{"name":"target","description":"<p>Defines the selector that points to an element in which the FAB will be positioned.\nBy default, FAB is positioned based on viewport of browser.\nThe target element must have relative position, else FAB will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#target"},"visible":{"name":"visible","description":"<p>Defines whether the fab is visible or hidden.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#visible"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#attachunloadevent"},"click":{"name":"click","description":"<p>Click the button element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the FAB instance.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to Button\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#refresh"},"refreshPosition":{"name":"refreshPosition","description":"<p>Refreshes the FAB position. You can call this method to re-position FAB when target is resized.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#refreshposition"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#serverdatabind"}},"RadioButtonComponent":{"change":{"name":"change","description":"<p>Event trigger when the RadioButton state has been changed by user interaction.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#change"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#allowserverdatabinding"},"checked":{"name":"checked","description":"<p>Specifies a value that indicates whether the RadioButton is <code>checked</code> or not.\nWhen set to <code>true</code>, the RadioButton will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#checked"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the RadioButton element.\nYou can add custom styles to the RadioButton by using this property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the RadioButton is <code>disabled</code> or not.\nWhen set to <code>true</code>, the RadioButton will be in <code>disabled</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Radio Button component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#isvue"},"label":{"name":"label","description":"<p>Defines the caption for the RadioButton, that describes the purpose of the RadioButton.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#label"},"labelPosition":{"name":"labelPosition","description":"<p>Positions label <code>before</code>/<code>after</code> the RadioButton.\nThe possible values are:</p>\n<ul>\n<li>Before: The label is positioned to left of the RadioButton.</li>\n<li>After: The label is positioned to right of the RadioButton.</li>\n</ul>\n","type":"RadioLabelPosition","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#labelposition"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#locale"},"name":{"name":"name","description":"<p>Defines <code>name</code> attribute for the RadioButton.\nIt is used to reference form data (RadioButton value) after a form is submitted.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#name"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#state"},"value":{"name":"value","description":"<p>Defines <code>value</code> attribute for the RadioButton.\nIt is a form data passed to the server when submitting the form.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the RadioButton element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to RadioButton\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#getrootelement"},"getSelectedValue":{"name":"getSelectedValue","description":"<p>To get the value of selected radio button in a group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#getselectedvalue"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#inject"}},"SmartPasteButtonComponent":{"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#created"},"aiAssistHandler":{"name":"aiAssistHandler","description":"<p>Callback function to get the form response data from the server to process the smart paste.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#aiassisthandler"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#allowserverdatabinding"},"content":{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the Button is <code>disabled</code> or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Button component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#forceupdate"},"iconCss":{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#iconcss"},"iconPosition":{"name":"iconPosition","description":"<p>Positions the icon before/after the text content in the Button.\nThe possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Right: The icon will be positioned to the right of the text content.</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isdestroyed"},"isPrimary":{"name":"isPrimary","description":"<p>Allows the appearance of the Button to be enhanced and visually appealing when set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isprimary"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isserverrendered"},"isToggle":{"name":"isToggle","description":"<p>Makes the Button toggle, when set to <code>true</code>. When you click it, the state changes from normal to active.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#istoggle"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#isvue"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the button element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to Button\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-paste-button/#serverdatabind"}},"SpeedDialItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemDirective#shouldcomponentupdate"}},"SpeedDialItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/speedDialItemsDirective#shouldcomponentupdate"}},"SpeedDialComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Event callback that is raised before the speed dial popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#beforeclose"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Event callback that is raised before rendering the speed dial item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#beforeitemrender"},"beforeOpen":{"name":"beforeOpen","description":"<p>Event callback that is raised before the speed dial popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#beforeopen"},"clicked":{"name":"clicked","description":"<p>Event callback that is raised when a speed dial action item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#clicked"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the speed dial.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#created"},"onClose":{"name":"onClose","description":"<p>Event callback that is raised when the SpeedDial popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#onclose"},"onOpen":{"name":"onOpen","description":"<p>Event callback that is raised when the SpeedDial popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#onopen"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Provides options to customize the animation applied while opening and closing the popup of speed dial</p>\n","type":"SpeedDialAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#animation"},"closeIconCss":{"name":"closeIconCss","description":"<p>Defines one or more CSS classes to include an icon or image to denote the speed dial is opened and displaying menu items.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#closeiconcss"},"content":{"name":"content","description":"<p>Defines the content for the button of SpeedDial.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#content"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines one or more CSS classes to customize the appearance of SpeedDial.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#currentcontext"},"direction":{"name":"direction","description":"<p>Defines the speed dial item display direction when mode is linear .\nThe possible values are</p>\n<ul>\n<li>Up</li>\n<li>Down</li>\n<li>Left</li>\n<li>Right</li>\n<li>Auto</li>\n</ul>\n","type":"string|LinearDirection","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#direction"},"disabled":{"name":"disabled","description":"<p>Defines whether to enable or disable the SpeedDial.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLButtonElement","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#forceupdate"},"iconPosition":{"name":"iconPosition","description":"<p>Defines the position of icon in the button of speed dial.\nThe possible values are:</p>\n<ul>\n<li>Left</li>\n<li>Right</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#iconposition"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isdestroyed"},"isPrimary":{"name":"isPrimary","description":"<p>Specifies whether the SpeedDial acts as the primary.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isprimary"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Defines the template content for the speed dial item.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#itemtemplate"},"items":{"name":"items","description":"<p>Defines the list of SpeedDial items.</p>\n","type":"SpeedDialItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#locale"},"modal":{"name":"modal","description":"<p>Defines whether the speed dial popup can be displayed as modal or modal less.\nWhen enabled, the Speed dial creates an overlay that disables interaction with other elements other than speed dial items.\nIf user clicks anywhere other than speed dial items then popup will get closed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#modal"},"mode":{"name":"mode","description":"<p>Defines the display mode of speed dial action items.\nThe possible values are:</p>\n<ul>\n<li>Linear</li>\n<li>Radial</li>\n</ul>\n","type":"string|SpeedDialMode","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#mode"},"openIconCss":{"name":"openIconCss","description":"<p>Defines one or more CSS classes to include an icon or image for the button of SpeedDial when it's closed.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#openiconcss"},"opensOnHover":{"name":"opensOnHover","description":"<p>Defines whether to open the popup when the button of SpeedDial is hovered.\nBy default, SpeedDial opens popup on click action.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#opensonhover"},"popupTemplate":{"name":"popupTemplate","description":"<p>Defines a template content for popup of SpeedDial.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#popuptemplate"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#portals"},"position":{"name":"position","description":"<p>Defines the position of the button of Speed Dial relative to target.\nDefines the position of the FAB relative to target.\nThe possible values are:</p>\n<ul>\n<li>TopLeft: Positions the FAB at the target's top left corner.</li>\n<li>TopCenter: Positions the FAB at the target's top left corner.</li>\n<li>TopRight: Positions the FAB at the target's top left corner.</li>\n<li>MiddleLeft: Positions the FAB at the target's top left corner.</li>\n<li>MiddleCenter: Positions the FAB at the target's top left corner.</li>\n<li>MiddleRight: Positions the FAB at the target's top left corner.</li>\n<li>BottomLeft: Positions the FAB at the target's top left corner.</li>\n<li>BottomCenter: Places the FAB on the bottom-center position of the target.</li>\n<li>BottomRight: Positions the FAB at the target's bottom right corner.\nTo refresh the position of FAB on target resize, use refreshPosition method.\nThe position will be refreshed automatically when browser resized.</li>\n</ul>\n","type":"string|FabPosition","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#props"},"radialSettings":{"name":"radialSettings","description":"<p>Provides the options to customize the speed dial action buttons when mode of speed dial is radial</p>\n","type":"RadialSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#radialsettings"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#state"},"target":{"name":"target","description":"<p>Defines the selector that points to the element in which the button of SpeedDial will be positioned.\nBy default button is positioned based on viewport of browser.\nThe target element must have relative position, else Button will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#target"},"visible":{"name":"visible","description":"<p>Defines whether the SpeedDial is visible or hidden.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#visible"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#attachunloadevent"},"createPopup":{"name":"createPopup","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#createpopup"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#handleunload"},"hide":{"name":"hide","description":"<p>Closes the SpeedDial popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#refresh"},"refreshPosition":{"name":"refreshPosition","description":"<p>Refreshes the button position of speed dial. You can call this method to re-position button when the target is resized.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#refreshposition"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#serverdatabind"},"show":{"name":"show","description":"<p>Opens the SpeedDial popup to display to display the speed dial items or the popupTemplate.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speed-dial/#inject"}},"SwitchComponent":{"beforeChange":{"name":"beforeChange","description":"<p>This event is triggered before the state of the switch is changed in the Switch component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/switch/#beforechange"},"change":{"name":"change","description":"<p>Triggers when Switch state has been changed by user interaction.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/switch/#change"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/switch/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#allowserverdatabinding"},"checked":{"name":"checked","description":"<p>Specifies a value that indicates whether the Switch is <code>checked</code> or not.\nWhen set to <code>true</code>, the Switch will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#checked"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#context"},"cssClass":{"name":"cssClass","description":"<p>You can add custom styles to the Switch by using this property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the Switch is <code>disabled</code> or not.\nWhen set to <code>true</code>, the Switch will be in <code>disabled</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/switch/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#locale"},"name":{"name":"name","description":"<p>Defines <code>name</code> attribute for the Switch.\nIt is used to reference form data (Switch value) after a form is submitted.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#name"},"offLabel":{"name":"offLabel","description":"<p>Specifies a text that indicates the Switch is in unchecked state.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#offlabel"},"onLabel":{"name":"onLabel","description":"<p>Specifies a text that indicates the Switch is in checked state.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#onlabel"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/switch/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/switch/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/switch/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/switch/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/switch/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/switch/#state"},"value":{"name":"value","description":"<p>Defines <code>value</code> attribute for the Switch.\nIt is a form data passed to the server when submitting the form.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/switch/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#attachunloadevent"},"click":{"name":"click","description":"<p>Click the switch element\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#click"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the Switch widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to Switch\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#serverdatabind"},"toggle":{"name":"toggle","description":"<p>Toggle the Switch component state into checked/unchecked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/switch/#inject"}},"CellDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellDirective#shouldcomponentupdate"}},"CellsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/cellsDirective#shouldcomponentupdate"}},"ChartDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartDirective#shouldcomponentupdate"}},"ChartsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/chartsDirective#shouldcomponentupdate"}},"ConditionalFormatDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatDirective#shouldcomponentupdate"}},"ConditionalFormatsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/conditionalFormatsDirective#shouldcomponentupdate"}},"DefinedNameDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNameDirective#shouldcomponentupdate"}},"DefinedNamesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/definedNamesDirective#shouldcomponentupdate"}},"ImageDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imageDirective#shouldcomponentupdate"}},"ImagesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/imagesDirective#shouldcomponentupdate"}},"RowDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowDirective#shouldcomponentupdate"}},"RowsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rowsDirective#shouldcomponentupdate"}},"SheetDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetDirective#shouldcomponentupdate"}},"SheetsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/sheetsDirective#shouldcomponentupdate"}},"SpreadsheetComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers when the Spreadsheet actions (such as editing, formatting, sorting etc..) are starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers when the spreadsheet actions (such as editing, formatting, sorting etc..) gets completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#actioncomplete"},"afterHyperlinkClick":{"name":"afterHyperlinkClick","description":"<p>Triggers when the Hyperlink function gets completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#afterhyperlinkclick"},"afterHyperlinkCreate":{"name":"afterHyperlinkCreate","description":"<p>Triggers after the hyperlink inserted.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#afterhyperlinkcreate"},"beforeCellFormat":{"name":"beforeCellFormat","description":"<p>Triggers before the cell format applied to the cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforecellformat"},"beforeCellRender":{"name":"beforeCellRender","description":"<p>Triggers before the cell appended to the DOM.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforecellrender"},"beforeCellSave":{"name":"beforeCellSave","description":"<p>Triggers when before the cell is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforecellsave"},"beforeCellUpdate":{"name":"beforeCellUpdate","description":"<p>Triggers before changing any cell properties.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforecellupdate"},"beforeConditionalFormat":{"name":"beforeConditionalFormat","description":"<p>Triggers before apply or remove the conditional format from a cell in a range.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforeconditionalformat"},"beforeDataBound":{"name":"beforeDataBound","description":"<p>Triggers before the data is populated to the worksheet.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforedatabound"},"beforeHyperlinkClick":{"name":"beforeHyperlinkClick","description":"<p>Triggers when the Hyperlink is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforehyperlinkclick"},"beforeHyperlinkCreate":{"name":"beforeHyperlinkCreate","description":"<p>Triggers before insert a hyperlink.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforehyperlinkcreate"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening an Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforeopen"},"beforeSave":{"name":"beforeSave","description":"<p>Triggers before saving the Spreadsheet as Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforesave"},"beforeSelect":{"name":"beforeSelect","description":"<p>Triggers before the cell or range of cells being selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforeselect"},"beforeSort":{"name":"beforeSort","description":"<p>Triggers before sorting the specified range.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforesort"},"cellEdit":{"name":"cellEdit","description":"<p>Triggers when the cell is being edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#celledit"},"cellEdited":{"name":"cellEdited","description":"<p>Triggers when the cell has been edited.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#celledited"},"cellEditing":{"name":"cellEditing","description":"<p>Triggers every time a request is made to access cell information.\nThis will be triggered when editing a cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cellediting"},"cellSave":{"name":"cellSave","description":"<p>Triggers when the edited cell is saved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cellsave"},"contextMenuBeforeClose":{"name":"contextMenuBeforeClose","description":"<p>Triggers before closing the context menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#contextmenubeforeclose"},"contextMenuBeforeOpen":{"name":"contextMenuBeforeOpen","description":"<p>Triggers before opening the context menu and it allows customizing the menu items.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#contextmenubeforeopen"},"contextMenuItemSelect":{"name":"contextMenuItemSelect","description":"<p>Triggers when the context menu item is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#contextmenuitemselect"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when the data is populated in the worksheet.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#databound"},"dataSourceChanged":{"name":"dataSourceChanged","description":"<p>Triggers during data changes when the data is provided as <code>dataSource</code> in the Spreadsheet.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#datasourcechanged"},"dialogBeforeOpen":{"name":"dialogBeforeOpen","description":"<p>Triggers before opening the dialog box.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#dialogbeforeopen"},"fileMenuBeforeClose":{"name":"fileMenuBeforeClose","description":"<p>Triggers before closing the file menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#filemenubeforeclose"},"fileMenuBeforeOpen":{"name":"fileMenuBeforeOpen","description":"<p>Triggers before opening the file menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#filemenubeforeopen"},"fileMenuItemSelect":{"name":"fileMenuItemSelect","description":"<p>Triggers when the file menu item is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#filemenuitemselect"},"openComplete":{"name":"openComplete","description":"<p>Triggers when the spreadsheet importing gets completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#opencomplete"},"openFailure":{"name":"openFailure","description":"<p>Triggers when the opened Excel file fails to load.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#openfailure"},"queryCellInfo":{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#querycellinfo"},"saveComplete":{"name":"saveComplete","description":"<p>Triggers after saving the Spreadsheet as Excel file.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#savecomplete"},"select":{"name":"select","description":"<p>Triggers after the cell or range of cells is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#select"},"sortComplete":{"name":"sortComplete","description":"<p>Triggers after sorting action is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sortcomplete"},"activeSheetIndex":{"name":"activeSheetIndex","description":"<p>Specifies the active sheet index in the workbook.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#activesheetindex"},"allowAutoFill":{"name":"allowAutoFill","description":"<p>It allows to enable/disable AutoFill functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowautofill"},"allowCellFormatting":{"name":"allowCellFormatting","description":"<p>It allows you to apply styles (font size, font weight, font family, fill color, and more) to the spreadsheet cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowcellformatting"},"allowChart":{"name":"allowChart","description":"<p>It allows you to insert the chart in a spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowchart"},"allowConditionalFormat":{"name":"allowConditionalFormat","description":"<p>It allows you to apply conditional formatting to the sheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowconditionalformat"},"allowDataValidation":{"name":"allowDataValidation","description":"<p>It allows you to apply data validation to the spreadsheet cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowdatavalidation"},"allowDelete":{"name":"allowDelete","description":"<p>It allows you to delete rows, columns, and sheets from a spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowdelete"},"allowEditing":{"name":"allowEditing","description":"<p>It allows you to add new data or update existing cell data. If it is false, it will act as read only mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowediting"},"allowFiltering":{"name":"allowFiltering","description":"<p>It allows to enable/disable filter and its functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowfiltering"},"allowFindAndReplace":{"name":"allowFindAndReplace","description":"<p>It allows to enable/disable find and replace with its functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowfindandreplace"},"allowFreezePane":{"name":"allowFreezePane","description":"<p>It allows to enable/disable freeze pane functionality in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowfreezepane"},"allowHyperlink":{"name":"allowHyperlink","description":"<p>It allows to enable/disable Hyperlink and its functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowhyperlink"},"allowImage":{"name":"allowImage","description":"<p>It allows you to insert the image in a spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowimage"},"allowInsert":{"name":"allowInsert","description":"<p>It allows you to insert rows, columns, and sheets into the spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowinsert"},"allowMerge":{"name":"allowMerge","description":"<p>It allows you to merge the range of cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowmerge"},"allowNumberFormatting":{"name":"allowNumberFormatting","description":"<p>It allows formatting a raw number into different types of formats (number, currency, accounting, percentage, short date,\nlong date, time, fraction, scientific, and text) with built-in format codes.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allownumberformatting"},"allowOpen":{"name":"allowOpen","description":"<p>It allows you to open an Excel file (.xlsx, .xls, and .csv) in Spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowopen"},"allowPrint":{"name":"allowPrint","description":"<p>Enables or disables the printing functionality in the spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowprint"},"allowResizing":{"name":"allowResizing","description":"<p>If <code>allowResizing</code> is set to true, spreadsheet columns and rows can be resized.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowresizing"},"allowSave":{"name":"allowSave","description":"<p>It allows you to save Spreadsheet with all data as Excel file (.xlsx, .xls, and .csv).</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowsave"},"allowScrolling":{"name":"allowScrolling","description":"<p>It specifies whether the Spreadsheet should be rendered with scrolling or not.\nTo customize the Spreadsheet scrolling behavior, use the <a href=\"https://ej2.syncfusion.com/documentation/api/spreadsheet/#scrollSettings\"><code>scrollSettings</code></a> property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowscrolling"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowserverdatabinding"},"allowSorting":{"name":"allowSorting","description":"<p>It allows to enable/disable sort and its functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowsorting"},"allowUndoRedo":{"name":"allowUndoRedo","description":"<p>It allows to enable/disable undo and redo functionalities.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowundoredo"},"allowWrap":{"name":"allowWrap","description":"<p>It allows to enable/disable wrap text feature. By using this feature the wrapping applied cell text can wrap to the next line,\nif the text width exceeds the column width.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#allowwrap"},"autoFillSettings":{"name":"autoFillSettings","description":"<p>Configures the auto fill settings.\nThe autoFillSettings <code>fillType</code> property has FOUR types and it is described below:</p>\n<ul>\n<li>CopyCells: To update the copied cells for the selected range.</li>\n<li>FillSeries: To update the filled series for the selected range.</li>\n<li>FillFormattingOnly: To fill the formats only for the selected range.</li>\n<li>FillWithoutFormatting: To fill without the format for the selected range.</li>\n</ul>\n<blockquote>\n<p>The <code>allowAutoFill</code> property should be <code>true</code>.</p>\n</blockquote>\n","type":"AutoFillSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#autofillsettings"},"calculationMode":{"name":"calculationMode","description":"<p>Specifies the mode of calculation within the spreadsheet.\nSetting the calculation mode to <code>Manual</code> can enhance performance,\nparticularly when working with multiple sheets at the same time.</p>\n<ul>\n<li><code>Automatic</code>: Calculations are performed automatically whenever a cell value changes.</li>\n<li><code>Manual</code>: Calculations are performed only when explicitly triggered, improving performance\nwhen loading or working with large spreadsheets.</li>\n</ul>\n","type":"CalculationMode","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#calculationmode"},"cellStyle":{"name":"cellStyle","description":"<p>Specifies the cell style options.</p>\n","type":"CellStyleModel","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cellstyle"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#context"},"cssClass":{"name":"cssClass","description":"<p>To specify a CSS class or multiple CSS class separated by a space, add it in the Spreadsheet root element.\nThis allows you to customize the appearance of component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#currentcontext"},"definedNames":{"name":"definedNames","description":"<p>Specifies the name of a range and uses it in a formula for calculation.</p>\n","type":"DefineNameModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#definednames"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#element"},"enableClipboard":{"name":"enableClipboard","description":"<p>It enables or disables the clipboard operations (cut, copy, and paste) of the Spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enableclipboard"},"enableContextMenu":{"name":"enableContextMenu","description":"<p>It enables or disables the context menu option of spreadsheet. By default, context menu will opens for row header,\ncolumn header, sheet tabs, and cell.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablecontextmenu"},"enableKeyboardNavigation":{"name":"enableKeyboardNavigation","description":"<p>It allows you to interact with cell, sheet tabs, formula bar, and ribbon through the keyboard device.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablekeyboardnavigation"},"enableKeyboardShortcut":{"name":"enableKeyboardShortcut","description":"<p>It enables shortcut keys to perform Spreadsheet operations like open, save, copy, paste, and more.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablekeyboardshortcut"},"enableNotes":{"name":"enableNotes","description":"<p>Enables or disables the ability to add or show notes in the Spreadsheet. If the property is set to false, the Spreadsheet will not add notes in the cells and the notes in the existing cells will not be visible.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablenotes"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#forceupdate"},"height":{"name":"height","description":"<p>Defines the height of the Spreadsheet. It accepts height as pixels, number, and percentage.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isdestroyed"},"isProtected":{"name":"isProtected","description":"<p>Specifies to  protect the workbook.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isprotected"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isvue"},"listSeparator":{"name":"listSeparator","description":"<p>Specifies the list separator which is used as the formula argument separator.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#listseparator"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#locale"},"openSettings":{"name":"openSettings","description":"<p>Specifies the options for configuration when opening a document.</p>\n","type":"OpenSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#opensettings"},"openUrl":{"name":"openUrl","description":"<p>Specifies the service URL to open excel file in spreadsheet.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#openurl"},"password":{"name":"password","description":"<p>Specifies the password.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#password"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#refs"},"ribbonModule":{"name":"ribbonModule","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#ribbonmodule"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#root"},"saveUrl":{"name":"saveUrl","description":"<p>Specifies the service URL to save spreadsheet as Excel file.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#saveurl"},"scrollSettings":{"name":"scrollSettings","description":"<p>Configures the scroll settings.</p>\n<blockquote>\n<p>The <code>allowScrolling</code> property should be <code>true</code>.</p>\n</blockquote>\n","type":"ScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#scrollsettings"},"selectionSettings":{"name":"selectionSettings","description":"<p>Configures the selection settings.\nThe selectionSettings <code>mode</code> property has three values and is described below:</p>\n<ul>\n<li>None: Disables UI selection.</li>\n<li>Single: Allows single selection of cell, row, or column and disables multiple selection.</li>\n<li>Multiple: Allows multiple selection of cell, row, or column and disables single selection.</li>\n</ul>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setstate"},"sheets":{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},"showAggregate":{"name":"showAggregate","description":"<p>If <code>showAggregate</code> is set to true, spreadsheet will show the AVERAGE, SUM, COUNT, MIN and MAX values based on the selected cells.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showaggregate"},"showFormulaBar":{"name":"showFormulaBar","description":"<p>It shows or hides the formula bar and its features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showformulabar"},"showRibbon":{"name":"showRibbon","description":"<p>It shows or hides the ribbon in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showribbon"},"showSheetTabs":{"name":"showSheetTabs","description":"<p>It shows or hides the sheets tabs, this is used to navigate among the sheets and create or delete sheets by UI interaction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showsheettabs"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#state"},"width":{"name":"width","description":"<p>Defines the width of the Spreadsheet. It accepts width as pixels, number, and percentage.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#width"},"Unfreeze":{"name":"Unfreeze","description":"<p>This method is used to unfreeze the frozen rows and columns from the active sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#unfreeze"},"addContextMenuItems":{"name":"addContextMenuItems","description":"<p>To add context menu items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addcontextmenuitems"},"addCustomFunction":{"name":"addCustomFunction","description":"<p>To add custom library function.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addcustomfunction"},"addDataValidation":{"name":"addDataValidation","description":"<p>This method is used to add data validation.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#adddatavalidation"},"addDefinedName":{"name":"addDefinedName","description":"<p>Adds the defined name to the Spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#adddefinedname"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addeventlistener"},"addFileMenuItems":{"name":"addFileMenuItems","description":"<p>To add custom file menu items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addfilemenuitems"},"addHyperlink":{"name":"addHyperlink","description":"<p>To add the hyperlink in the cell</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addhyperlink"},"addInvalidHighlight":{"name":"addInvalidHighlight","description":"<p>This method is used to highlight the invalid data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addinvalidhighlight"},"addRibbonTabs":{"name":"addRibbonTabs","description":"<p>To add custom ribbon tabs.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addribbontabs"},"addToolbarItems":{"name":"addToolbarItems","description":"<p>To add the custom items in Spreadsheet ribbon toolbar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#addtoolbaritems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML Div element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#appendto"},"applyFilter":{"name":"applyFilter","description":"<p>Applies the filter UI in the range of cells in the sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#applyfilter"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#attachunloadevent"},"autoFill":{"name":"autoFill","description":"<p>Used to perform autofill action based on the specified range in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#autofill"},"autoFit":{"name":"autoFit","description":"<p>This method is used to autofit the range of rows or columns</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#autofit"},"calculateNow":{"name":"calculateNow","description":"<p>The <code>calculateNow</code> method is used to calculate any uncalculated formulas in a spreadsheet.\nThis method accepts an option to specify whether the calculation should be performed for the entire workbook or a specific sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#calculatenow"},"cellFormat":{"name":"cellFormat","description":"<p>Applies the style (font family, font weight, background color, etc...) to the specified range of cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cellformat"},"clear":{"name":"clear","description":"<p>This method is used to Clear contents, formats and hyperlinks in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#clear"},"clearConditionalFormat":{"name":"clearConditionalFormat","description":"<p>This method is used for remove conditional formatting.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#clearconditionalformat"},"clearFilter":{"name":"clearFilter","description":"<p>Clears the filter changes of the sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#clearfilter"},"closeEdit":{"name":"closeEdit","description":"<p>Cancels the edited state, this will not update any value in the cell.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#closeedit"},"computeExpression":{"name":"computeExpression","description":"<p>Used to compute the specified expression/formula.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#computeexpression"},"conditionalFormat":{"name":"conditionalFormat","description":"<p>This method is used to add conditional formatting.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#conditionalformat"},"copy":{"name":"copy","description":"<p>To copy the specified cell or cells properties such as value, format, style etc...</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#copy"},"cut":{"name":"cut","description":"<p>To cut the specified cell or cells properties such as value, format, style etc...</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#cut"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#databind"},"delete":{"name":"delete","description":"<p>Used to delete rows, columns and sheets from the spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#delete"},"deleteChart":{"name":"deleteChart","description":"<p>Used to delete the chart from spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#deletechart"},"deleteImage":{"name":"deleteImage","description":"<p>Used to delete the image in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#deleteimage"},"deselectChart":{"name":"deselectChart","description":"<p>Allows you to remove a selection from the active chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#deselectchart"},"deselectImage":{"name":"deselectImage","description":"<p>Allows you to remove a selection from the active image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#deselectimage"},"destroy":{"name":"destroy","description":"<p>Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#detachunloadevent"},"duplicateSheet":{"name":"duplicateSheet","description":"<p>Used to make a duplicate/copy of the sheet in the spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#duplicatesheet"},"enableContextMenuItems":{"name":"enableContextMenuItems","description":"<p>To enable / disable context menu items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablecontextmenuitems"},"enableFileMenuItems":{"name":"enableFileMenuItems","description":"<p>To enable / disable file menu items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enablefilemenuitems"},"enableRibbonTabs":{"name":"enableRibbonTabs","description":"<p>To enable / disable the existing ribbon tabs.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enableribbontabs"},"enableToolbarItems":{"name":"enableToolbarItems","description":"<p>Enables or disables the specified ribbon toolbar items or all ribbon items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#enabletoolbaritems"},"endEdit":{"name":"endEdit","description":"<p>If Spreadsheet is in editable state, you can save the cell by invoking endEdit.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#endedit"},"find":{"name":"find","description":"<p>To find the specified cell value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#find"},"findAll":{"name":"findAll","description":"<p>To Find All the Match values Address within Sheet or Workbook.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#findall"},"freezePanes":{"name":"freezePanes","description":"<p>This method is used to freeze rows and columns after the specified cell in the Spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#freezepanes"},"getData":{"name":"getData","description":"<p>Gets the range of data as JSON from the specified address.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getdata"},"getDisplayText":{"name":"getDisplayText","description":"<p>Gets the formatted text of the cell.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getdisplaytext"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getrootelement"},"getRowData":{"name":"getRowData","description":"<p>Used to get a row data from the data source with updated cell value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getrowdata"},"getSelectAllContent":{"name":"getSelectAllContent","description":"<p>Get the select all div of spreadsheet</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#getselectallcontent"},"goTo":{"name":"goTo","description":"<p>Used to navigate to cell address within workbook.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#goto"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#handleunload"},"hideColumn":{"name":"hideColumn","description":"<p>Used to hide/show the columns in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hidecolumn"},"hideFileMenuItems":{"name":"hideFileMenuItems","description":"<p>To show/hide the file menu items in Spreadsheet ribbon.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hidefilemenuitems"},"hideRibbonTabs":{"name":"hideRibbonTabs","description":"<p>To show/hide the existing ribbon tabs.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hideribbontabs"},"hideRow":{"name":"hideRow","description":"<p>Used to hide/show the rows in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hiderow"},"hideSpinner":{"name":"hideSpinner","description":"<p>To hide showed spinner manually.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hidespinner"},"hideToolbarItems":{"name":"hideToolbarItems","description":"<p>To show/hide the existing Spreadsheet ribbon toolbar items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#hidetoolbaritems"},"insertChart":{"name":"insertChart","description":"<p>Used to set the chart in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#insertchart"},"insertColumn":{"name":"insertColumn","description":"<p>Used to insert columns in to the spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#insertcolumn"},"insertImage":{"name":"insertImage","description":"<p>Used to set the image in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#insertimage"},"insertRow":{"name":"insertRow","description":"<p>Used to insert rows in to the spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#insertrow"},"insertSheet":{"name":"insertSheet","description":"<p>Used to insert sheets in to the spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#insertsheet"},"isValidCell":{"name":"isValidCell","description":"<p>To determine whether the cell value in a data validation applied cell is valid or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#isvalidcell"},"lockCells":{"name":"lockCells","description":"<p>Applies cell lock to the specified range of cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#lockcells"},"merge":{"name":"merge","description":"<p>Used to merge the range of cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#merge"},"moveSheet":{"name":"moveSheet","description":"<p>Used to move the sheets to the specified position in the list of sheets.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#movesheet"},"numberFormat":{"name":"numberFormat","description":"<p>Applies the number format (number, currency, percentage, short date, etc...) to the specified range of cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#numberformat"},"open":{"name":"open","description":"<p>Opens the Excel file.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#open"},"openFromJson":{"name":"openFromJson","description":"<p>Opens the specified JSON object.</p>\n<p>The available arguments in options are:</p>\n<ul>\n<li>file: Specifies the spreadsheet model as object or string. And the object contains the jsonObject,\nwhich is saved from spreadsheet using saveAsJson method.</li>\n<li>triggerEvent: Specifies whether to trigger the <code>openComplete</code> event or not.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#openfromjson"},"paste":{"name":"paste","description":"<p>This method is used to paste the cut or copied cells in to specified address.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#paste"},"print":{"name":"print","description":"<p>This method is used to print the active sheet or the entire workbook.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#print"},"protectSheet":{"name":"protectSheet","description":"<p>To protect the particular sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#protectsheet"},"redo":{"name":"redo","description":"<p>To perform the redo operation in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#redo"},"refresh":{"name":"refresh","description":"<p>Used to refresh the spreadsheet in UI level.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#refresh"},"removeContextMenuItems":{"name":"removeContextMenuItems","description":"<p>To remove existing context menu items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removecontextmenuitems"},"removeDataValidation":{"name":"removeDataValidation","description":"<p>This method is used for remove validation.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removedatavalidation"},"removeDefinedName":{"name":"removeDefinedName","description":"<p>Removes the defined name from the Spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removedefinedname"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removeeventlistener"},"removeHyperlink":{"name":"removeHyperlink","description":"<p>To remove the hyperlink in the cell</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removehyperlink"},"removeInvalidHighlight":{"name":"removeInvalidHighlight","description":"<p>This method is used for remove highlight from invalid data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#removeinvalidhighlight"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#render"},"replace":{"name":"replace","description":"<p>To replace the specified cell value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#replace"},"resize":{"name":"resize","description":"<p>Used to resize the Spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#resize"},"save":{"name":"save","description":"<p>Saves the Spreadsheet data to Excel file.</p>\n<p>The available arguments in saveOptions are:</p>\n<ul>\n<li>url: Specifies the save URL.</li>\n<li>fileName: Specifies the file name.</li>\n<li>saveType: Specifies the file type need to be saved.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#save"},"saveAsJson":{"name":"saveAsJson","description":"<p>Saves the Spreadsheet data as JSON object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#saveasjson"},"selectChart":{"name":"selectChart","description":"<p>Allows you to select a chart from the active sheet. To select a specific chart from the active sheet, pass the chart <code>id</code>.\nIf you pass an empty argument, the chart present in the active cell will be selected. If the active cell does not have a chart,\nthe initially rendered chart will be selected from the active sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#selectchart"},"selectImage":{"name":"selectImage","description":"<p>Allows you to select an image from the active sheet. To select a specific image from the active sheet, pass the image <code>id</code>.\nIf you pass an empty argument, the image present in the active cell will be selected. If the active cell does not have an image,\nthe initially rendered image will be selected from the active sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#selectimage"},"selectRange":{"name":"selectRange","description":"<p>Selects the cell / range of cells with specified address.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#selectrange"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#serverdatabind"},"setBorder":{"name":"setBorder","description":"<p>Sets the border to specified range of cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setborder"},"setColWidth":{"name":"setColWidth","description":"<p>Set the width of column.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setcolwidth"},"setColumnsWidth":{"name":"setColumnsWidth","description":"<p>Allows you to set the width to the single or multiple columns.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setcolumnswidth"},"setRangeReadOnly":{"name":"setRangeReadOnly","description":"<p>Sets or releases the read-only status for a specified range in the given sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setrangereadonly"},"setRowHeight":{"name":"setRowHeight","description":"<p>Set the height of row.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setrowheight"},"setRowsHeight":{"name":"setRowsHeight","description":"<p>Allows you to set the height to the single or multiple rows.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#setrowsheight"},"showSpinner":{"name":"showSpinner","description":"<p>By default, Spreadsheet shows the spinner for all its actions. To manually show spinner you this method at your needed time.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showspinner"},"sort":{"name":"sort","description":"<p>Sorts the range of cells in the active sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sort"},"startEdit":{"name":"startEdit","description":"<p>Start edit the active cell.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#startedit"},"unMerge":{"name":"unMerge","description":"<p>Used to split the merged cell into multiple cells.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#unmerge"},"undo":{"name":"undo","description":"<p>To perform the undo operation in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#undo"},"unfreezePanes":{"name":"unfreezePanes","description":"<p>This method is used to unfreeze the frozen rows and columns from spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#unfreezepanes"},"unprotectSheet":{"name":"unprotectSheet","description":"<p>To unprotect the particular sheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#unprotectsheet"},"updateAction":{"name":"updateAction","description":"<p>To update the action which need to perform.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#updateaction"},"updateCell":{"name":"updateCell","description":"<p>Updates the properties of a specified cell.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#updatecell"},"updateRange":{"name":"updateRange","description":"<p>This method is used to update the Range property in specified sheet index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#updaterange"},"updateUndoRedoCollection":{"name":"updateUndoRedoCollection","description":"<p>To update the undo redo collection in spreadsheet.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#updateundoredocollection"},"wrap":{"name":"wrap","description":"<p>This method is used to wrap/unwrap the text content of the cell.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#wrap"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#inject"}},"CalendarComponent":{"change":{"name":"change","description":"<p>Triggers when the Calendar value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#change"},"created":{"name":"created","description":"<p>Triggers when Calendar is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when Calendar is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#destroyed"},"navigated":{"name":"navigated","description":"<p>Triggers when the Calendar is navigated to another level or within the same level of view.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#navigated"},"renderDayCell":{"name":"renderDayCell","description":"<p>Triggers when each day cell of the Calendar is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#renderdaycell"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#allowserverdatabinding"},"calendarMode":{"name":"calendarMode","description":"<p>Gets or sets the Calendar's Type like gregorian or islamic.</p>\n","type":"CalendarType","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#calendarmode"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the Calendar that allows to\ncustomize the appearance by overriding the styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#currentcontext"},"dayHeaderFormat":{"name":"dayHeaderFormat","description":"<p>Specifies the format of the day that to be displayed in header. By default, the format is ‘short’.\nPossible formats are:</p>\n<ul>\n<li><code>Short</code> - Sets the short format of day name (like Su ) in day header.</li>\n<li><code>Narrow</code> - Sets the single character of day name (like S ) in day header.</li>\n<li><code>Abbreviated</code> - Sets the min format of day name (like Sun ) in day header.</li>\n<li><code>Wide</code> - Sets the long format of day name (like Sunday ) in day header.</li>\n</ul>\n","type":"DayHeaderFormats","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#dayheaderformat"},"depth":{"name":"depth","description":"<p>Sets the maximum level of view such as month, year, and decade in the Calendar.\nDepth view should be smaller than the start view to restrict its view navigation.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#depth"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies the component to be disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#enabled"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#firstdayofweek"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isdestroyed"},"isMultiSelection":{"name":"isMultiSelection","description":"<p>Specifies the option to enable the multiple dates selection of the calendar.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#ismultiselection"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#isvue"},"islamicModule":{"name":"islamicModule","description":"","type":"Islamic","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#islamicmodule"},"keyConfigs":{"name":"keyConfigs","description":"<p>Customizes the key actions in Calendar.\nFor example, when using German keyboard, the key actions can be customized using these shortcuts.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+38&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+40&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nselect&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolHome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+home&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolEnd&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+end&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nspacebar&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nspace&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltRightArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+rightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltLeftArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+leftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveLeft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveRight&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#keyconfigs"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#locale"},"max":{"name":"max","description":"<p>Gets or sets the maximum date that can be selected in the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#max"},"min":{"name":"min","description":"<p>Gets or sets the minimum date that can be selected in the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#min"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#root"},"serverTimezoneOffset":{"name":"serverTimezoneOffset","description":"<p>By default, the date value will be processed based on system time zone.\nIf you want to process the initial date value using server time zone\nthen specify the time zone value to <code>serverTimezoneOffset</code> property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#servertimezoneoffset"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#setstate"},"showTodayButton":{"name":"showTodayButton","description":"<p>Specifies whether the today button is to be displayed or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#showtodaybutton"},"start":{"name":"start","description":"<p>Specifies the initial view of the Calendar when it is opened.\nWith the help of this property, initial view can be changed to year or decade view.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#start"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#state"},"value":{"name":"value","description":"<p>Gets or sets the selected date of the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#value"},"values":{"name":"values","description":"<p>Gets or sets multiple selected dates of the calendar.</p>\n","type":"Date[]","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#values"},"weekNumber":{"name":"weekNumber","description":"<p>Determines whether the week number of the year is to be displayed in the calendar or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#weeknumber"},"weekRule":{"name":"weekRule","description":"<p>Specifies the rule for defining the first week of the year.</p>\n","type":"WeekRule","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#weekrule"},"addDate":{"name":"addDate","description":"<p>This method is used to add the single or multiple dates to the values property of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#adddate"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#attachunloadevent"},"createContent":{"name":"createContent","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#createcontent"},"currentView":{"name":"currentView","description":"<p>Gets the current view of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#currentview"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained upon browser refresh.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#handleunload"},"navigateTo":{"name":"navigateTo","description":"<p>This method is used to navigate to the month/year/decade view of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#navigateto"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#refresh"},"removeDate":{"name":"removeDate","description":"<p>This method is used to remove the single or multiple dates from the values property of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#removedate"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#inject"}},"DatePickerComponent":{"blur":{"name":"blur","description":"<p>Triggers when the input loses the focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#blur"},"change":{"name":"change","description":"<p>Triggers when the Calendar value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#change"},"cleared":{"name":"cleared","description":"<p>Triggers when datepicker value is cleared using clear button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#cleared"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the input gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#focus"},"navigated":{"name":"navigated","description":"<p>Triggers when the Calendar is navigated to another level or within the same level of view.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#navigated"},"open":{"name":"open","description":"<p>Triggers when the popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#open"},"renderDayCell":{"name":"renderDayCell","description":"<p>Triggers when each day cell of the Calendar is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#renderdaycell"},"allowEdit":{"name":"allowEdit","description":"<blockquote>\n<p>Support for <code>allowEdit</code> has been provided from\n<a href=\"https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#datepicker\"><code>v16.2.46</code></a>.\nSpecifies whether the input textbox is editable or not. Here the user can select the value from the\npopup and cannot edit in the input textbox.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#allowedit"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#allowserverdatabinding"},"calendarMode":{"name":"calendarMode","description":"<p>Gets or sets the Calendar's Type like gregorian or islamic.</p>\n","type":"CalendarType","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#calendarmode"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the DatePicker that allows to\ncustomize the appearance by overriding the styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#currentcontext"},"dayHeaderFormat":{"name":"dayHeaderFormat","description":"<p>Specifies the format of the day that to be displayed in header. By default, the format is ‘short’.\nPossible formats are:</p>\n<ul>\n<li><code>Short</code> - Sets the short format of day name (like Su ) in day header.</li>\n<li><code>Narrow</code> - Sets the single character of day name (like S ) in day header.</li>\n<li><code>Abbreviated</code> - Sets the min format of day name (like Sun ) in day header.</li>\n<li><code>Wide</code> - Sets the long format of day name (like Sunday ) in day header.</li>\n</ul>\n","type":"DayHeaderFormats","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#dayheaderformat"},"depth":{"name":"depth","description":"<p>Sets the maximum level of view such as month, year, and decade in the Calendar.\nDepth view should be smaller than the start view to restrict its view navigation.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#depth"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#element"},"enableMask":{"name":"enableMask","description":"<p>Specifies whether it is a masked datepicker or not.\nBy default the datepicker component render without masked input.\nIf you need masked datepicker input then specify it as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#enablemask"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies the component to be disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#enabled"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#firstdayofweek"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the placeholder text to be floated.\nPossible values are:\nNever: The label will never float in the input when the placeholder is available.\nAlways: The floating label will always float above the input.\nAuto: The floating label will float above the input after focusing or entering a value in the input.</p>\n","type":"FloatLabelType|string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#forceupdate"},"format":{"name":"format","description":"<p>Specifies the format of the value that to be displayed in component. By default, the format is based on the culture. You can set\nthe format to &quot;format:'dd/MM/yyyy hh:mm'&quot; or &quot;format:{skeleton:'medium'}&quot; either in string or object.</p>\n<blockquote>\n<p>To know more about the date format standards, refer to the Internationalization Date Format\n<a href=\"../../common/internationalization/#custom-formats\"><code>Internationalization</code></a> section.</p>\n</blockquote>\n","type":"string|FormatObject","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#format"},"fullScreenMode":{"name":"fullScreenMode","description":"<p>Specifies the component popup display full screen in mobile devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#fullscreenmode"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#initrendercalled"},"inputFormats":{"name":"inputFormats","description":"<p>Specifies an array of acceptable date input formats for parsing user input.</p>\n","type":"string[]|FormatObject[]","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#inputformats"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#isvue"},"islamicModule":{"name":"islamicModule","description":"","type":"Islamic","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#islamicmodule"},"keyConfigs":{"name":"keyConfigs","description":"<p>Customizes the key actions in DatePicker.\nFor example, when using German keyboard, the key actions can be customized using these shortcuts.\nInput Navigation\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltDownArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+downarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>Calendar Navigation\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+38&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+40&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveLeft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveRight&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nselect&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolHome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+home&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolEnd&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+end&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nspacebar&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nspace&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltRightArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+rightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltLeftArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+leftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#keyconfigs"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#locale"},"maskPlaceholder":{"name":"maskPlaceholder","description":"<p>Specifies the mask placeholder to be displayed on masked datepicker.</p>\n","type":"MaskPlaceholderModel","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#maskplaceholder"},"max":{"name":"max","description":"<p>Gets or sets the maximum date that can be selected in the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#max"},"min":{"name":"min","description":"<p>Gets or sets the minimum date that can be selected in the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#min"},"openOnFocus":{"name":"openOnFocus","description":"<p>By default, the popup opens while clicking on the datepicker icon.\nIf you want to open the popup while focusing the date input then specify its value as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#openonfocus"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text that displayed in textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the component in readonly state. When the Component is readonly it does not allow user input.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#root"},"serverTimezoneOffset":{"name":"serverTimezoneOffset","description":"<p>By default, the date value will be processed based on system time zone.\nIf you want to process the initial date value using server time zone\nthen specify the time zone value to <code>serverTimezoneOffset</code> property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#servertimezoneoffset"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon in textbox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#showclearbutton"},"showTodayButton":{"name":"showTodayButton","description":"<p>Specifies whether the today button is to be displayed or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#showtodaybutton"},"start":{"name":"start","description":"<p>Specifies the initial view of the Calendar when it is opened.\nWith the help of this property, initial view can be changed to year or decade view.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#start"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#state"},"strictMode":{"name":"strictMode","description":"<p>Specifies the component to act as strict. So that, it allows to enter only a valid date  value within a specified range or else it\nwill resets to previous value. By default, strictMode is in false.\nit allows invalid or out-of-range date value with highlighted error class.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#strictmode"},"value":{"name":"value","description":"<p>Gets or sets the selected date of the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#value"},"weekNumber":{"name":"weekNumber","description":"<p>Determines whether the week number of the year is to be displayed in the calendar or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#weeknumber"},"weekRule":{"name":"weekRule","description":"<p>Specifies the rule for defining the first week of the year.</p>\n","type":"WeekRule","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#weekrule"},"width":{"name":"width","description":"<p>Specifies the width of the DatePicker component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the datePicker popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#attachunloadevent"},"createContent":{"name":"createContent","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#createcontent"},"currentView":{"name":"currentView","description":"<p>Gets the current view of the DatePicker.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#currentview"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained upon browser refresh.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#handleunload"},"hide":{"name":"hide","description":"<p>Hide the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#hide"},"navigateTo":{"name":"navigateTo","description":"<p>Navigates to specified month or year or decade view of the DatePicker.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#navigateto"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#refresh"},"removeDate":{"name":"removeDate","description":"<p>This method is used to remove the single or multiple dates from the values property of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#removedate"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#serverdatabind"},"show":{"name":"show","description":"<p>Shows the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#inject"}},"DateRangePickerComponent":{"blur":{"name":"blur","description":"<p>Triggers when the control loses the focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#blur"},"change":{"name":"change","description":"<p>Triggers when the Calendar value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#change"},"cleared":{"name":"cleared","description":"<p>Triggers when daterangepicker value is cleared using clear button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#cleared"},"close":{"name":"close","description":"<p>Triggers when the DateRangePicker is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#close"},"created":{"name":"created","description":"<p>Triggers when Calendar is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when Calendar is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the control gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#focus"},"navigated":{"name":"navigated","description":"<p>Triggers when the Calendar is navigated to another view or within the same level of view.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#navigated"},"open":{"name":"open","description":"<p>Triggers when the DateRangePicker is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#open"},"renderDayCell":{"name":"renderDayCell","description":"<p>Triggers when each day cell of the Calendar is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#renderdaycell"},"select":{"name":"select","description":"<p>Triggers on selecting the start and end date.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#select"},"allowEdit":{"name":"allowEdit","description":"<blockquote>\n<p>Support for <code>allowEdit</code> has been provided from\n<a href=\"https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#daterangepicker\"><code>v16.2.46</code></a>.\nSpecifies whether the input textbox is editable or not. Here the user can select the value from the\npopup and cannot edit in the input textbox.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#allowedit"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets the root CSS class to the DateRangePicker which allows you to customize the appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#currentcontext"},"dayHeaderFormat":{"name":"dayHeaderFormat","description":"<p>Specifies the format of the day that to be displayed in header. By default, the format is ‘short’.\nPossible formats are:</p>\n<ul>\n<li><code>Short</code> - Sets the short format of day name (like Su ) in day header.</li>\n<li><code>Narrow</code> - Sets the single character of day name (like S ) in day header.</li>\n<li><code>Abbreviated</code> - Sets the min format of day name (like Sun ) in day header.</li>\n<li><code>Wide</code> - Sets the long format of day name (like Sunday ) in day header.</li>\n</ul>\n","type":"DayHeaderFormats","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#dayheaderformat"},"depth":{"name":"depth","description":"<p>Sets the maximum level of view (month, year, decade) in the Calendar.\nDepth view should be smaller than the start view to restrict its view navigation.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#depth"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable the persisting component's state between the page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>startDate</li>\n<li>endDate</li>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies the component to be disabled which prevents the DateRangePicker from user interactions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#enabled"},"endDate":{"name":"endDate","description":"<p>Gets or sets the end date of the date range selection.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#enddate"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.</p>\n<blockquote>\n<p>For more details about firstDayOfWeek refer to\n<a href=\"../../daterangepicker/customization#first-day-of-week\"><code>First day of week</code></a> documentation.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#firstdayofweek"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the placeholder text to be floated.\nPossible values are:\nNever: The label will never float in the input when the placeholder is available.\nAlways: The floating label will always float above the input.\nAuto: The floating label will float above the input after focusing or entering a value in the input.</p>\n","type":"FloatLabelType|string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#forceupdate"},"format":{"name":"format","description":"<p>Sets or gets the required date format to the start and end date string.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"https://ej2.syncfusion.com/demos/#/material/daterangepicker/format.html\"><code>Format</code></a>sample.</p>\n</blockquote>\n","type":"string|RangeFormatObject","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#format"},"fullScreenMode":{"name":"fullScreenMode","description":"<p>Specifies the component popup display full screen in mobile devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#fullscreenmode"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#isvue"},"islamicModule":{"name":"islamicModule","description":"","type":"Islamic","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#islamicmodule"},"keyConfigs":{"name":"keyConfigs","description":"<p>Customizes the key actions in DateRangePicker.\nFor example, when using German keyboard, the key actions can be customized using these shortcuts.\nInput Navigation\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltDownArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+downarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>Calendar Navigation (Use the following list of keys to navigate the currently focused Calendar after the popup has opened).\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+38&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+40&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveLeft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveRight&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nselect&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolHome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+home&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolEnd&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+end&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nspacebar&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nspace&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltRightArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+rightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltLeftArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+leftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#keyconfigs"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#locale"},"max":{"name":"max","description":"<p>Gets or sets the maximum date that can be selected in the calendar-popup.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#max"},"maxDays":{"name":"maxDays","description":"<p>Specifies the maximum span of days that can be allowed in a date range selection.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../daterangepicker/range-restriction/#range-span\"><code>Range Span</code></a> documentation.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#maxdays"},"min":{"name":"min","description":"<p>Gets or sets the minimum date that can be selected in the calendar-popup.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#min"},"minDays":{"name":"minDays","description":"<p>Specifies the minimum span of days that can be allowed in date range selection.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../daterangepicker/range-restriction/#range-span\"><code>Range Span</code></a> documentation.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#mindays"},"openOnFocus":{"name":"openOnFocus","description":"<p>By default, the popup opens while clicking on the daterangepicker icon.\nIf you want to open the popup while focusing the daterange input then specify its value as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#openonfocus"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text that need to be displayed in the DateRangePicker component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#portals"},"presets":{"name":"presets","description":"<p>Set the predefined ranges which let the user pick required range easily in a component.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../daterangepicker/customization#preset-ranges\"><code>Preset Ranges</code></a> documentation.</p>\n</blockquote>\n","type":"PresetsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#presets"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#props"},"readonly":{"name":"readonly","description":"<p>Denies the editing the ranges in the DateRangePicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#root"},"separator":{"name":"separator","description":"<p>Sets or gets the string that used between the start and end date string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#separator"},"serverTimezoneOffset":{"name":"serverTimezoneOffset","description":"<p>By default, the date value will be processed based on system time zone.\nIf you want to process the initial date value using server time zone\nthen specify the time zone value to <code>serverTimezoneOffset</code> property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#servertimezoneoffset"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#showclearbutton"},"start":{"name":"start","description":"<p>Specifies the initial view of the Calendar when it is opened.\nWith the help of this property, initial view can be changed to year or decade view.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#start"},"startDate":{"name":"startDate","description":"<p>Gets or sets the start date of the date range selection.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#startdate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#state"},"strictMode":{"name":"strictMode","description":"<p>Specifies the component to act as strict which allows entering only a valid date range in a DateRangePicker.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../daterangepicker/range-restriction#strict-mode\"><code>Strict Mode</code></a>documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#strictmode"},"value":{"name":"value","description":"<p>Gets or sets the start and end date of the Calendar.</p>\n","type":"Date[]|DateRange","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#value"},"weekNumber":{"name":"weekNumber","description":"<p>Determines whether the week number of the Calendar is to be displayed or not.\nThe week number is displayed in every week row.</p>\n<blockquote>\n<p>For more details about weekNumber refer to\n<a href=\"../../calendar/how-to/render-the-calendar-with-week-numbers\"><code>Calendar with week number</code></a>documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#weeknumber"},"weekRule":{"name":"weekRule","description":"<p>Specifies the rule for defining the first week of the year.</p>\n","type":"WeekRule","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#weekrule"},"width":{"name":"width","description":"<p>Specifies the width of the DateRangePicker component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the dateRangePicker popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Return the properties that are maintained upon browser refresh.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#getrootelement"},"getSelectedRange":{"name":"getSelectedRange","description":"<p>Return the selected range and day span in the DateRangePicker.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#getselectedrange"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#handleunload"},"hide":{"name":"hide","description":"<p>To close the Popup container in the DateRangePicker component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#serverdatabind"},"show":{"name":"show","description":"<p>To open the Popup container in the DateRangePicker component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#inject"}},"PresetDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetDirective#shouldcomponentupdate"}},"PresetsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/presetsDirective#shouldcomponentupdate"}},"DateTimePickerComponent":{"blur":{"name":"blur","description":"<p>Triggers when input loses the focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#blur"},"change":{"name":"change","description":"<p>Triggers when the Calendar value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#change"},"cleared":{"name":"cleared","description":"<p>Triggers when datetimepicker value is cleared using clear button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#cleared"},"close":{"name":"close","description":"<p>Triggers when popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#close"},"created":{"name":"created","description":"<p>Triggers when DateTimePicker is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when DateTimePicker is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when input gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#focus"},"navigated":{"name":"navigated","description":"<p>Triggers when the Calendar is navigated to another level or within the same level of view.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#navigated"},"open":{"name":"open","description":"<p>Triggers when popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#open"},"renderDayCell":{"name":"renderDayCell","description":"<p>Triggers when each day cell of the Calendar is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#renderdaycell"},"allowEdit":{"name":"allowEdit","description":"<blockquote>\n<p>Support for <code>allowEdit</code> has been provided from\n<a href=\"https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#datetimepicker\"><code>v16.2.46</code></a>.\nSpecifies whether the input textbox is editable or not. Here the user can select the value from the\npopup and cannot edit in the input textbox.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#allowedit"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#allowserverdatabinding"},"calendarMode":{"name":"calendarMode","description":"<p>Gets or sets the Calendar's Type like gregorian or islamic.</p>\n","type":"CalendarType","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#calendarmode"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the DatePicker that allows to\ncustomize the appearance by overriding the styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#currentcontext"},"dayHeaderFormat":{"name":"dayHeaderFormat","description":"<p>Specifies the format of the day that to be displayed in header. By default, the format is ‘short’.\nPossible formats are:</p>\n<ul>\n<li><code>Short</code> - Sets the short format of day name (like Su ) in day header.</li>\n<li><code>Narrow</code> - Sets the single character of day name (like S ) in day header.</li>\n<li><code>Abbreviated</code> - Sets the min format of day name (like Sun ) in day header.</li>\n<li><code>Wide</code> - Sets the long format of day name (like Sunday ) in day header.</li>\n</ul>\n","type":"DayHeaderFormats","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#dayheaderformat"},"depth":{"name":"depth","description":"<p>Sets the maximum level of view such as month, year, and decade in the Calendar.\nDepth view should be smaller than the start view to restrict its view navigation.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#depth"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#element"},"enableMask":{"name":"enableMask","description":"<p>Specifies whether it is a masked datetimepicker or not.\nBy default the datetimepicker component render without masked input.\nIf you need masked datetimepicker input then specify it as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#enablemask"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies the component to be disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#enabled"},"firstDayOfWeek":{"name":"firstDayOfWeek","description":"<p>Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#firstdayofweek"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the placeholder text to be floated.\nPossible values are:\nNever: The label will never float in the input when the placeholder is available.\nAlways: The floating label will always float above the input.\nAuto: The floating label will float above the input after focusing or entering a value in the input.</p>\n","type":"FloatLabelType|string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#forceupdate"},"format":{"name":"format","description":"<p>Specifies the format of the value that to be displayed in component. By default, the format is based on the culture. You can set\nthe format to &quot;format:'dd/MM/yyyy hh:mm'&quot; or &quot;format:{skeleton:'medium'}&quot; either in string or object.</p>\n<blockquote>\n<p>To know more about the date format standards, refer to the Internationalization Date Format\n<a href=\"../../common/internationalization/#custom-formats\"><code>Internationalization</code></a> section.</p>\n</blockquote>\n","type":"string|FormatObject","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#format"},"fullScreenMode":{"name":"fullScreenMode","description":"<p>Specifies the component popup display full screen in mobile devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#fullscreenmode"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#initrendercalled"},"inputFormats":{"name":"inputFormats","description":"<p>Specifies an array of acceptable date input formats for parsing user input.</p>\n","type":"string[]|FormatObject[]","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#inputformats"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#isvue"},"islamicModule":{"name":"islamicModule","description":"","type":"Islamic","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#islamicmodule"},"keyConfigs":{"name":"keyConfigs","description":"<p>Customizes the key actions in DateTimePicker.\nFor example, when using German keyboard, the key actions can be customized using these shortcuts.\nInput Navigation\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltDownArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+downarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>Calendar Navigation (Use the following list of keys to navigate the currently focused Calendar after the popup has opened).\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+38&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+40&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveLeft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nmoveRight&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nselect&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\npageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\npagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageUp&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pageup&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nshiftPageDown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nshift+pagedown&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolHome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+home&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncontrolEnd&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nctrl+end&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltUpArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nspacebar&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nspace&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltRightArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+rightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\naltLeftArrow&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+leftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>TimePicker Navigation (Use the below list of shortcut keys to interact with the TimePicker after the TimePicker Popup has opened).\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ndown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nup&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nleft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nright&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#keyconfigs"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#locale"},"maskPlaceholder":{"name":"maskPlaceholder","description":"<p>Specifies the mask placeholder to be displayed on masked datetimepicker.</p>\n","type":"MaskPlaceholderModel","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#maskplaceholder"},"max":{"name":"max","description":"<p>Gets or sets the maximum date that can be selected in the DateTimePicker.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#max"},"maxTime":{"name":"maxTime","description":"<p>Gets or sets the maximum time that can be selected in the time popup of the DateTimePicker.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#maxtime"},"min":{"name":"min","description":"<p>Gets or sets the minimum date that can be selected in the DateTimePicker.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#min"},"minTime":{"name":"minTime","description":"<p>Gets or sets the minimum time that can be selected in the time popup of the DateTimePicker.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#mintime"},"openOnFocus":{"name":"openOnFocus","description":"<p>By default, the popup opens while clicking on the datetimepicker icon.\nIf you want to open the popup while focusing the datetime input then specify its value as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#openonfocus"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text that to be is displayed in textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the component in readonly state. When the Component is readonly it does not allow user input.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#root"},"scrollTo":{"name":"scrollTo","description":"<p>Specifies the scroll bar position if there is no value is selected in the timepicker popup list or\nthe given value is not present in the timepicker popup list.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#scrollto"},"serverTimezoneOffset":{"name":"serverTimezoneOffset","description":"<p>By default, the date value will be processed based on system time zone.\nIf you want to process the initial date value using server time zone\nthen specify the time zone value to <code>serverTimezoneOffset</code> property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#servertimezoneoffset"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon in textbox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#showclearbutton"},"showTodayButton":{"name":"showTodayButton","description":"<p>Specifies whether the today button is to be displayed or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#showtodaybutton"},"start":{"name":"start","description":"<p>Specifies the initial view of the Calendar when it is opened.\nWith the help of this property, initial view can be changed to year or decade view.</p>\n","type":"CalendarView","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#start"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#state"},"step":{"name":"step","description":"<p>Specifies the time interval between the two adjacent time values in the time popup list .</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#step"},"strictMode":{"name":"strictMode","description":"<p>Specifies the component to act as strict. So that, it allows to enter only a valid\ndate and time value within a specified range or else it\nwill resets to previous value. By default, strictMode is in false.\nit allows invalid or out-of-range value with highlighted error class.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#strictmode"},"timeFormat":{"name":"timeFormat","description":"<p>Specifies the format of the time value that to be displayed in time popup list.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#timeformat"},"value":{"name":"value","description":"<p>Gets or sets the selected date of the Calendar.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#value"},"weekNumber":{"name":"weekNumber","description":"<p>Determines whether the week number of the year is to be displayed in the calendar or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#weeknumber"},"weekRule":{"name":"weekRule","description":"<p>Specifies the rule for defining the first week of the year.</p>\n","type":"WeekRule","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#weekrule"},"width":{"name":"width","description":"<p>Specifies the width of the DatePicker component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#attachunloadevent"},"createContent":{"name":"createContent","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#createcontent"},"currentView":{"name":"currentView","description":"<p>Gets the current view of the DatePicker.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#currentview"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained upon browser refresh.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#handleunload"},"hide":{"name":"hide","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#hide"},"navigateTo":{"name":"navigateTo","description":"<p>Navigates to specified month or year or decade view of the DatePicker.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#navigateto"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>Called internally if any of the property value changed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#refresh"},"removeDate":{"name":"removeDate","description":"<p>This method is used to remove the single or multiple dates from the values property of the Calendar.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#removedate"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#serverdatabind"},"show":{"name":"show","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#show"},"toggle":{"name":"toggle","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#inject"}},"TimePickerComponent":{"blur":{"name":"blur","description":"<p>Triggers when the control loses the focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#blur"},"change":{"name":"change","description":"<p>Triggers when the value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#change"},"cleared":{"name":"cleared","description":"<p>Triggers when timepicker value is cleared using clear button.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#cleared"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the control gets focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#focus"},"itemRender":{"name":"itemRender","description":"<p>Triggers while rendering the each popup list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#itemrender"},"open":{"name":"open","description":"<p>Triggers when the popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#open"},"allowEdit":{"name":"allowEdit","description":"<blockquote>\n<p>Support for <code>allowEdit</code> has been provided from\n<a href=\"https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#timepicker\"><code>v16.2.46</code></a>.\nSpecifies whether the input textbox is editable or not. Here the user can select the value from the\npopup and cannot edit in the input textbox.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#allowedit"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the root CSS class of the TimePicker that allows to\ncustomize the appearance by overriding the styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#element"},"enableMask":{"name":"enableMask","description":"<p>Specifies whether it is a masked timepicker or not.\nBy default the timepicker component render without masked input.\nIf you need masked timepicker input then specify it as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#enablemask"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable the persisting component's state between the page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>Value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies whether the component to be disabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the placeholder text to be floated.\nPossible values are:\nNever: The label will never float in the input when the placeholder is available.\nAlways: The floating label will always float above the input.\nAuto: The floating label will float above the input after focusing or entering a value in the input.</p>\n","type":"FloatLabelType|string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#forceupdate"},"format":{"name":"format","description":"<p>Specifies the format of value that is to be displayed in component. By default, the format is\nbased on the culture.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../timepicker/getting-started#setting-the-time-format\"><code>Format</code></a> documentation.</p>\n</blockquote>\n","type":"string|TimeFormatObject","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#format"},"fullScreenMode":{"name":"fullScreenMode","description":"<p>Specifies the component popup display full screen in mobile devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#fullscreenmode"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#isvue"},"keyConfigs":{"name":"keyConfigs","description":"<p>Customizes the key actions in TimePicker.\nFor example, when using German keyboard, the key actions can be customized using these shortcuts.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nKey action&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nKey&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nenter&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nescape&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nend&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ntab&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ntab&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nhome&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ndown&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\ndownarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nup&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nuparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nleft&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nleftarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nright&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nrightarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nopen&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+downarrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nclose&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nalt+uparrow&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#keyconfigs"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#locale"},"maskPlaceholder":{"name":"maskPlaceholder","description":"<p>Specifies the mask placeholder to be displayed on masked timepicker.</p>\n","type":"TimeMaskPlaceholderModel","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#maskplaceholder"},"max":{"name":"max","description":"<p>Gets or sets the maximum time value that can be allowed to select in TimePicker.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../timepicker/time-range/\"><code>Time Range</code></a> documentation.</p>\n</blockquote>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#max"},"min":{"name":"min","description":"<p>Gets or sets the minimum time value that can be allowed to select in TimePicker.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../timepicker/time-range/\"><code>Time Range</code></a> documentation.</p>\n</blockquote>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#min"},"openOnFocus":{"name":"openOnFocus","description":"<p>By default, the popup opens while clicking on the timepicker icon.\nIf you want to open the popup while focusing the time input then specify its value as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#openonfocus"},"placeholder":{"name":"placeholder","description":"<p>Specifies the placeholder text that is displayed in textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the component in readonly state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#root"},"scrollTo":{"name":"scrollTo","description":"<p>Specifies the scroll bar position if there is no value is selected in the popup list or\nthe given value is not present in the popup list.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"https://ej2.syncfusion.com/demos/#/material/timepicker/list-formatting.html\"><code>Time Duration</code></a> sample.</p>\n</blockquote>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#scrollto"},"serverTimezoneOffset":{"name":"serverTimezoneOffset","description":"<p>By default, the time value will be processed based on system time zone.\nIf you want to process the initial time value using server time zone\nthen specify the time zone value to <code>serverTimezoneOffset</code> property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#servertimezoneoffset"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#showclearbutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#state"},"step":{"name":"step","description":"<p>Specifies the time interval between the two adjacent time values in the popup list.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../timepicker/getting-started#setting-the-time-format\"><code>Format</code></a>documentation.</p>\n</blockquote>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#step"},"strictMode":{"name":"strictMode","description":"<p>Specifies the component to act as strict so that, it allows to enter only a valid time value within a specified range or else\nresets to previous value. By default, strictMode is in false.</p>\n<blockquote>\n<p>For more details refer to\n<a href=\"../../timepicker/strict-mode/\"><code>Strict Mode</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#strictmode"},"value":{"name":"value","description":"<p>Gets or sets the value of the component. The value is parsed based on the culture specific time format.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#value"},"width":{"name":"width","description":"<p>Gets or sets the width of the TimePicker component. The width of the popup is based on the width of the component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the timePicker popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Focused the TimePicker textbox element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Focuses out the TimePicker textbox element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained upon browser refresh.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#handleunload"},"hide":{"name":"hide","description":"<p>Hides the TimePicker popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#serverdatabind"},"show":{"name":"show","description":"<p>Opens the popup to show the list items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#show"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#inject"}},"ConnectorAnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationDirective#shouldcomponentupdate"}},"ConnectorAnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorAnnotationsDirective#shouldcomponentupdate"}},"ConnectorFixedUserHandleDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandleDirective#shouldcomponentupdate"}},"ConnectorFixedUserHandlesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorFixedUserHandlesDirective#shouldcomponentupdate"}},"ConnectorDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorDirective#shouldcomponentupdate"}},"ConnectorsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/connectorsDirective#shouldcomponentupdate"}},"CustomCursorDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorDirective#shouldcomponentupdate"}},"CustomCursorsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/customCursorsDirective#shouldcomponentupdate"}},"DiagramComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after animation is completed for the diagram elements.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#animationcomplete"},"click":{"name":"click","description":"<p>Triggers when a node, connector or diagram is clicked</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#click"},"collectionChange":{"name":"collectionChange","description":"<p>Triggers when a node/connector is added/removed to/from the diagram.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#collectionchange"},"commandExecute":{"name":"commandExecute","description":"<p>Triggers when a command executed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#commandexecute"},"connectionChange":{"name":"connectionChange","description":"<p>Triggers when the connection is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#connectionchange"},"contextMenuBeforeItemRender":{"name":"contextMenuBeforeItemRender","description":"<p>Triggers before rendering the context menu item</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#contextmenubeforeitemrender"},"contextMenuClick":{"name":"contextMenuClick","description":"<p>Triggers when a context menu item is clicked</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#contextmenuclick"},"contextMenuOpen":{"name":"contextMenuOpen","description":"<p>Triggers before opening the context menu</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#contextmenuopen"},"created":{"name":"created","description":"<p>Triggered when the diagram is rendered completely.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#created"},"dataLoaded":{"name":"dataLoaded","description":"<p>Triggers after diagram is populated from the external data source</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dataloaded"},"doubleClick":{"name":"doubleClick","description":"<p>Triggers when a node, connector or diagram model is clicked twice</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#doubleclick"},"dragEnter":{"name":"dragEnter","description":"<p>Triggers when a symbol is dragged into diagram from symbol palette</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dragenter"},"dragLeave":{"name":"dragLeave","description":"<p>Triggers when a symbol is dragged outside of the diagram.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dragleave"},"dragOver":{"name":"dragOver","description":"<p>Triggers when a symbol is dragged over diagram</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dragover"},"drop":{"name":"drop","description":"<p>Triggers when a symbol is dragged and dropped from symbol palette to drawing area</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#drop"},"elementDraw":{"name":"elementDraw","description":"<p>Triggered when an element is drawn using drawing Tool</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#elementdraw"},"expandStateChange":{"name":"expandStateChange","description":"<p>Triggers when the state of the expand and collapse icon change for a node.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#expandstatechange"},"fixedUserHandleClick":{"name":"fixedUserHandleClick","description":"<p>Triggers when a node/connector fixedUserHandle is clicked in the diagram.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#fixeduserhandleclick"},"historyChange":{"name":"historyChange","description":"<p>Triggers when a change is reverted or restored(undo/redo)</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#historychange"},"historyStateChange":{"name":"historyStateChange","description":"<p>Triggers when a custom entry change is reverted or restored(undo/redo)</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#historystatechange"},"keyDown":{"name":"keyDown","description":"<p>Triggers when a user is pressing a key.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#keydown"},"keyUp":{"name":"keyUp","description":"<p>Triggers when a user releases a key.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#keyup"},"load":{"name":"load","description":"<p>This event triggers before the diagram load.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#load"},"loaded":{"name":"loaded","description":"<p>This event triggers after the diagram elements finished loading using loadDiagram method</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#loaded"},"mouseEnter":{"name":"mouseEnter","description":"<p>Triggered when mouse enters a node/connector.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mouseenter"},"mouseLeave":{"name":"mouseLeave","description":"<p>Triggered when mouse leaves node/connector.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mouseleave"},"mouseOver":{"name":"mouseOver","description":"<p>Triggered when mouse hovers a node/connector.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mouseover"},"mouseWheel":{"name":"mouseWheel","description":"<p>Event triggers whenever the user rotate the mouse wheel either upwards or downwards</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mousewheel"},"onFixedUserHandleMouseDown":{"name":"onFixedUserHandleMouseDown","description":"<p>Triggers when a mouseDown on the fixed user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onfixeduserhandlemousedown"},"onFixedUserHandleMouseEnter":{"name":"onFixedUserHandleMouseEnter","description":"<p>Triggers when a mouseEnter on the fixed user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onfixeduserhandlemouseenter"},"onFixedUserHandleMouseLeave":{"name":"onFixedUserHandleMouseLeave","description":"<p>Triggers when a mouseLeave on the fixed user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onfixeduserhandlemouseleave"},"onFixedUserHandleMouseUp":{"name":"onFixedUserHandleMouseUp","description":"<p>Triggers when a mouseUp on the fixed user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onfixeduserhandlemouseup"},"onImageLoad":{"name":"onImageLoad","description":"<p>Triggers when the image node is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onimageload"},"onUserHandleMouseDown":{"name":"onUserHandleMouseDown","description":"<p>Triggers when a mouseDown on the user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onuserhandlemousedown"},"onUserHandleMouseEnter":{"name":"onUserHandleMouseEnter","description":"<p>Triggers when a mouseEnter on the user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onuserhandlemouseenter"},"onUserHandleMouseLeave":{"name":"onUserHandleMouseLeave","description":"<p>Triggers when a mouseLeave on the user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onuserhandlemouseleave"},"onUserHandleMouseUp":{"name":"onUserHandleMouseUp","description":"<p>Triggers when a mouseUp on the user handle.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onuserhandlemouseup"},"positionChange":{"name":"positionChange","description":"<p>Triggers while dragging the elements in diagram</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#positionchange"},"propertyChange":{"name":"propertyChange","description":"<p>Triggers once the node or connector property changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#propertychange"},"rotateChange":{"name":"rotateChange","description":"<p>Triggers when the diagram elements are rotated</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#rotatechange"},"scrollChange":{"name":"scrollChange","description":"<p>Triggers when the diagram is zoomed or panned</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#scrollchange"},"segmentChange":{"name":"segmentChange","description":"<p>This event is triggered when we drag the segment thumb of Orthogonal/ Straight /Bezier connector</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#segmentchange"},"segmentCollectionChange":{"name":"segmentCollectionChange","description":"<p>Triggers when a segment is added/removed to/from the connector.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#segmentcollectionchange"},"selectionChange":{"name":"selectionChange","description":"<p>Triggers when the selection is changed in diagram</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#selectionchange"},"sizeChange":{"name":"sizeChange","description":"<p>Triggers when a node is resized</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#sizechange"},"sourcePointChange":{"name":"sourcePointChange","description":"<p>Triggers when the connector's source point is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#sourcepointchange"},"targetPointChange":{"name":"targetPointChange","description":"<p>Triggers when the connector's target point is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#targetpointchange"},"textEdit":{"name":"textEdit","description":"<p>Triggers when editor got focus at the time of node’s label or text node editing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#textedit"},"addInfo":{"name":"addInfo","description":"<p>Allows the user to save custom information/data about diagram</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addinfo"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#allowserverdatabinding"},"annotationTemplate":{"name":"annotationTemplate","description":"<p>Customizes the annotation template</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#annotationtemplate"},"backgroundColor":{"name":"backgroundColor","description":"<p>Defines the background color of the diagram</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#backgroundcolor"},"bridgeDirection":{"name":"bridgeDirection","description":"<p>Defines the direction of the bridge that is inserted when the segments are intersected</p>\n<ul>\n<li>Top - Defines the direction of the bridge as Top</li>\n<li>Bottom - Defines the direction of the bridge as Bottom</li>\n<li>Left - Sets the bridge direction as left</li>\n<li>Right - Sets the bridge direction as right</li>\n</ul>\n","type":"BridgeDirection","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#bridgedirection"},"canLayout":{"name":"canLayout","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#canlayout"},"cancelPositionChange":{"name":"cancelPositionChange","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#cancelpositionchange"},"commandManager":{"name":"commandManager","description":"<p>Defines a set of custom commands and binds them with a set of desired key gestures</p>\n","type":"CommandManagerModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#commandmanager"},"connectorDefaults":{"name":"connectorDefaults","description":"<p>Helps to assign the default properties of connector</p>\n","type":"ConnectorModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#connectordefaults"},"connectors":{"name":"connectors","description":"<p>Defines a collection of objects, used to create link between two points, nodes or ports to represent the relationships between them</p>\n","type":"ConnectorModel[]","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#connectors"},"constraints":{"name":"constraints","description":"<p>Constraints are used to enable/disable certain behaviors of the diagram.</p>\n<ul>\n<li>None - Disables DiagramConstraints constraints</li>\n<li>Bridging - Enables/Disables Bridging support for connector</li>\n<li>UndoRedo - Enables/Disables the Undo/Redo support</li>\n<li>Tooltip - Enables/Disables Tooltip support</li>\n<li>UserInteraction - Enables/Disables editing diagram interactively</li>\n<li>ApiUpdate - Enables/Disables editing diagram through code</li>\n<li>PageEditable - Enables/Disables editing diagrams both interactively and through code</li>\n<li>Zoom - Enables/Disables Zoom support for the diagram</li>\n<li>PanX - Enables/Disable PanX support for the diagram</li>\n<li>PanY - Enables/Disable PanY support for the diagram</li>\n<li>Pan - Enables/Disable Pan support the diagram</li>\n</ul>\n","type":"DiagramConstraints","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#constraints"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#context"},"contextMenuSettings":{"name":"contextMenuSettings","description":"<p>Defines type of menu that appears when you perform right-click operation\nAn object to customize the context menu of diagram</p>\n","type":"ContextMenuSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#contextmenusettings"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#currentcontext"},"customCursor":{"name":"customCursor","description":"<p>A collection of JSON objects where each object represents a custom cursor action. Layer is a named category of diagram shapes.</p>\n","type":"CustomCursorActionModel[]","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#customcursor"},"dataSourceSettings":{"name":"dataSourceSettings","description":"<p>Configures the data source that is to be bound with diagram</p>\n","type":"DataSourceModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#datasourcesettings"},"diagramSettings":{"name":"diagramSettings","description":"<p>Represents the diagram settings</p>\n","type":"DiagramSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#diagramsettings"},"drawingObject":{"name":"drawingObject","description":"<p>Defines the object to be drawn using drawing tool</p>\n","type":"NodeModel|ConnectorModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#drawingobject"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#element"},"enableConnectorSplit":{"name":"enableConnectorSplit","description":"<p>Split the connector, when the node is dropped onto it and establish connection with that dropped node.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#enableconnectorsplit"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#enablertl"},"fixedUserHandleTemplate":{"name":"fixedUserHandleTemplate","description":"<p>This property allows us to define HTML elements for fixed user handle</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#fixeduserhandletemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#forceupdate"},"getConnectorDefaults":{"name":"getConnectorDefaults","description":"<p>Helps to return the default properties of connector</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getconnectordefaults"},"getCustomCursor":{"name":"getCustomCursor","description":"","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getcustomcursor"},"getCustomProperty":{"name":"getCustomProperty","description":"<p>Allows to get the custom properties that have to be serialized</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getcustomproperty"},"getCustomTool":{"name":"getCustomTool","description":"","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getcustomtool"},"getDescription":{"name":"getDescription","description":"","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getdescription"},"getNodeDefaults":{"name":"getNodeDefaults","description":"<p>Helps to return the default properties of node</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getnodedefaults"},"height":{"name":"height","description":"<p>Defines the height of the diagram model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#height"},"historyManager":{"name":"historyManager","description":"<p>Customizes the undo redo functionality</p>\n","type":"History","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#historymanager"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#isvue"},"layers":{"name":"layers","description":"<p>A collection of JSON objects where each object represents a layer. Layer is a named category of diagram shapes.</p>\n","type":"LayerModel[]","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#layers"},"layout":{"name":"layout","description":"<p>Layout is used to auto-arrange the nodes in the Diagram area</p>\n","type":"LayoutModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#layout"},"lineDistributionModule":{"name":"lineDistributionModule","description":"<p><code>lineDistributionModule</code> is used to connect the node's without overlapping in automatic layout</p>\n","type":"LineDistribution","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#linedistributionmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#locale"},"mindMapChartModule":{"name":"mindMapChartModule","description":"<p><code>mindMapChartModule</code> is used to arrange the nodes in a mind map like structure</p>\n","type":"MindMap","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mindmapchartmodule"},"mode":{"name":"mode","description":"<p>Defines the diagram rendering mode.</p>\n<ul>\n<li>SVG - Renders the diagram objects as SVG elements</li>\n<li>Canvas - Renders the diagram in a canvas</li>\n</ul>\n","type":"RenderingMode","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#mode"},"nodeDefaults":{"name":"nodeDefaults","description":"<p>Helps to assign the default properties of nodes</p>\n","type":"NodeModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#nodedefaults"},"nodeTemplate":{"name":"nodeTemplate","description":"<p>Customizes the node template</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#nodetemplate"},"nodes":{"name":"nodes","description":"<p>Defines the collection of nodes</p>\n","type":"NodeModel[]","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#nodes"},"pageSettings":{"name":"pageSettings","description":"<p>Page settings enable to customize the appearance, width, and height of the Diagram page.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#pagesettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#props"},"radialTreeModule":{"name":"radialTreeModule","description":"<p><code>radialTreeModule</code> is used to arrange the nodes in a radial tree like structure</p>\n","type":"RadialTree","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#radialtreemodule"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#root"},"rulerSettings":{"name":"rulerSettings","description":"<p>Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.</p>\n","type":"RulerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#rulersettings"},"scrollSettings":{"name":"scrollSettings","description":"<p>Defines the current zoom value, zoom factor, scroll status and view port size of the diagram</p>\n","type":"ScrollSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#scrollsettings"},"segmentThumbShape":{"name":"segmentThumbShape","description":"<p>Defines the segmentThumbShape</p>\n","type":"SegmentThumbShapes","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#segmentthumbshape"},"segmentThumbSize":{"name":"segmentThumbSize","description":"<p>Specifies the size of the segment thumb. When not set, it defaults to matching the underlying path data.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#segmentthumbsize"},"selectedItems":{"name":"selectedItems","description":"<p>Defines the collection of selected items, size and position of the selector</p>\n","type":"SelectorModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#selecteditems"},"serializationSettings":{"name":"serializationSettings","description":"<p>Defines the serialization settings of diagram.</p>\n","type":"SerializationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#serializationsettings"},"setNodeTemplate":{"name":"setNodeTemplate","description":"<p>setNodeTemplate helps to customize the content of a node\nfunction setNodeTemplate() {\nsetNodeTemplate: (obj: NodeModel, diagram: Diagram): StackPanel =&gt; {\nif (obj.id === 'node2') {\nlet table: StackPanel = new StackPanel();\ntable.orientation = 'Horizontal';\nlet column1: StackPanel = new StackPanel();\ncolumn1.children = [];\ncolumn1.children.push(getTextElement('Column1'));\naddRows(column1);\nlet column2: StackPanel = new StackPanel();\ncolumn2.children = [];\ncolumn2.children.push(getTextElement('Column2'));\naddRows(column2);\ntable.children = [column1, column2];\nreturn table;\n}\nreturn null;\n}\n...\n}</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#setnodetemplate"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#setstate"},"snapSettings":{"name":"snapSettings","description":"<p>Defines the gridlines and defines how and when the objects have to be snapped</p>\n","type":"SnapSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#snapsettings"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#state"},"tool":{"name":"tool","description":"<p>Defines the precedence of the interactive tools. They are,</p>\n<ul>\n<li>None - Disables selection, zooming and drawing tools</li>\n<li>SingleSelect - Enables/Disables single select support for the diagram</li>\n<li>MultipleSelect - Enables/Disable MultipleSelect select support for the diagram</li>\n<li>ZoomPan - Enables/Disable ZoomPan support for the diagram</li>\n<li>DrawOnce - Enables/Disable ContinuousDraw support for the diagram</li>\n<li>ContinuousDraw - Enables/Disable ContinuousDraw support for the diagram</li>\n</ul>\n","type":"DiagramTools","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#tool"},"tooltip":{"name":"tooltip","description":"<p>Defines the tooltip that should be shown when the mouse hovers over a node or connector\nAn object that defines the description, appearance and alignments of tooltip</p>\n","type":"DiagramTooltipModel","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#tooltip"},"updateSelection":{"name":"updateSelection","description":"<p>Helps to set the undo and redo node selection</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#updateselection"},"userHandleTemplate":{"name":"userHandleTemplate","description":"<p>This property represents the template content of a user handle. The user can define any HTML element as a template.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#userhandletemplate"},"width":{"name":"width","description":"<p>Defines the width of the diagram model.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#width"},"add":{"name":"add","description":"<p>Adds the provided object, which can be a node, group, or connector, onto the diagram canvas.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#add"},"addChildToGroup":{"name":"addChildToGroup","description":"<p>Adds the specified diagram object to the specified group node.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addchildtogroup"},"addChildToUmlNode":{"name":"addChildToUmlNode","description":"<p>addChildToUmlNode - Add methods, members and attributes into a UML class runtime. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addchildtoumlnode"},"addConnector":{"name":"addConnector","description":"<p>Adds the given connector to diagram control</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addconnector"},"addConnectorLabels":{"name":"addConnectorLabels","description":"<p>Adds labels to a connector at runtime in the Blazor platform.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addconnectorlabels"},"addConstraints":{"name":"addConstraints","description":"<p>Adds constraints at run time. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addconstraints"},"addCustomHistoryEntry":{"name":"addCustomHistoryEntry","description":"<p>Adds the given custom change in the diagram control to the track</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addcustomhistoryentry"},"addElements":{"name":"addElements","description":"<p>AddElements method allows us to add diagram elements such as nodes and connectors as a collection into the diagram canvas.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addelements"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addeventlistener"},"addHistoryEntry":{"name":"addHistoryEntry","description":"<p>Adds a history entry for a change in the diagram control to the track.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addhistoryentry"},"addLabels":{"name":"addLabels","description":"<p>Adds labels to a node or connector at runtime. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addlabels"},"addLanes":{"name":"addLanes","description":"<p>Dynamically add lanes to a swimlane at runtime. You can specify the swimlane (node), the lanes to be added (lane), and an optional index to determine where the lanes should be inserted. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addlanes"},"addLayer":{"name":"addLayer","description":"<p>add the layer into diagram\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addlayer"},"addNode":{"name":"addNode","description":"<p>Adds the specified node to the diagram control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addnode"},"addNodeLabels":{"name":"addNodeLabels","description":"<p>Add labels in node at the run time in the blazor platform  \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addnodelabels"},"addNodeToLane":{"name":"addNodeToLane","description":"<p>Adds the specified node to a lane within a swimlane.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addnodetolane"},"addPhases":{"name":"addPhases","description":"<p>Adds phases to a swimlane at runtime.  \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addphases"},"addPorts":{"name":"addPorts","description":"<p>Adds ports to a node or connector at runtime. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addports"},"addProcess":{"name":"addProcess","description":"<p>Adds a process into the sub-process. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addprocess"},"addTextAnnotation":{"name":"addTextAnnotation","description":"<p>Adds the given annotation to the specified node.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#addtextannotation"},"align":{"name":"align","description":"<p>Aligns a group of objects with reference to the first object in the group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#align"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#attachunloadevent"},"bringIntoView":{"name":"bringIntoView","description":"<p>Brings the specified bounds into view within the diagram's viewport. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#bringintoview"},"bringLayerForward":{"name":"bringLayerForward","description":"<p>Moves the specified layer forward in the drawing order. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#bringlayerforward"},"bringToCenter":{"name":"bringToCenter","description":"<p>Brings the specified bounds to the center of the viewport. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#bringtocenter"},"bringToFront":{"name":"bringToFront","description":"<p>Brings the selected nodes or connectors to the front of the drawing order. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#bringtofront"},"clear":{"name":"clear","description":"<p>Clears all nodes and objects in the diagram, effectively resetting the diagram to an empty state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#clear"},"clearHistory":{"name":"clearHistory","description":"<p>Clears the history of the diagram, removing all the recorded actions from the undo and redo history.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#clearhistory"},"clearSelection":{"name":"clearSelection","description":"<p>Removes all elements from the selection list, clearing the current selection.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#clearselection"},"cloneLayer":{"name":"cloneLayer","description":"<p>Clones a layer along with its objects.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#clonelayer"},"copy":{"name":"copy","description":"<p>Copies the selected nodes and connectors from the diagram to the diagram clipboard for copying. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#copy"},"cut":{"name":"cut","description":"<p>Removes the selected nodes and connectors from the diagram and moves them to the diagram clipboard for cutting. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#cut"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the diagram, freeing up its resources.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#detachunloadevent"},"distribute":{"name":"distribute","description":"<p>Arranges a group of objects with equal intervals within the group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#distribute"},"doLayout":{"name":"doLayout","description":"<p>Automatically updates the diagram objects based on the type of the layout.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dolayout"},"drag":{"name":"drag","description":"<p>Drags the given object (nodes, connectors, or selector) by the specified horizontal and vertical distances.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#drag"},"dragSourceEnd":{"name":"dragSourceEnd","description":"<p>Moves the source point of the given connector by the specified horizontal and vertical distances.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dragsourceend"},"dragTargetEnd":{"name":"dragTargetEnd","description":"<p>Moves the target point of the given connector by the specified horizontal and vertical distances.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#dragtargetend"},"editSegment":{"name":"editSegment","description":"<p>Used to add or remove intermediate segments to the straight connector.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#editsegment"},"endGroupAction":{"name":"endGroupAction","description":"<p>Closes the grouping of actions that will be undone/restored as a whole.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#endgroupaction"},"exportDiagram":{"name":"exportDiagram","description":"<p>Exports the diagram as an image or SVG element based on the specified options.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#exportdiagram"},"exportImage":{"name":"exportImage","description":"<p>Exports a diagram as a image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#exportimage"},"findElementUnderMouse":{"name":"findElementUnderMouse","description":"<p>Finds the child element of the given object at the given position based on specified criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#findelementundermouse"},"findObjectUnderMouse":{"name":"findObjectUnderMouse","description":"<p>Finds the object that is under the given mouse position based on specified criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#findobjectundermouse"},"findObjectsUnderMouse":{"name":"findObjectsUnderMouse","description":"<p>Finds all the objects that are under the given mouse position based on specified criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#findobjectsundermouse"},"findTargetObjectUnderMouse":{"name":"findTargetObjectUnderMouse","description":"<p>Finds the object that is under the given active object (source) based on specified criteria.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#findtargetobjectundermouse"},"fitToPage":{"name":"fitToPage","description":"<p>Fits the diagram to the page with respect to mode and region. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#fittopage"},"getActiveLayer":{"name":"getActiveLayer","description":"<p>Retrieves the active layer. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getactivelayer"},"getConnectorObject":{"name":"getConnectorObject","description":"<p>Retrieves the connector object for the given node ID. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getconnectorobject"},"getCursor":{"name":"getCursor","description":"<p>Defines the cursor that corresponds to the given action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getcursor"},"getDiagramAction":{"name":"getDiagramAction","description":"<p>Returns the diagram action as a string representation.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getdiagramaction"},"getDiagramBounds":{"name":"getDiagramBounds","description":"<p>Retrieves the bounding rectangle that encloses the entire diagram.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getdiagrambounds"},"getDiagramContent":{"name":"getDiagramContent","description":"<p>To  get the html diagram content</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getdiagramcontent"},"getEdges":{"name":"getEdges","description":"<p>Returns the edges connected to the given node.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getedges"},"getHistoryStack":{"name":"getHistoryStack","description":"<p>Retrieves the history stack values for either undo or redo actions.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#gethistorystack"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Retrieves the module name associated with the diagram.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getmodulename"},"getNodeObject":{"name":"getNodeObject","description":"<p>Retrieves the node object for the given node ID.  \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getnodeobject"},"getObject":{"name":"getObject","description":"<p>gets the node or connector having the given name \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getobject"},"getParentId":{"name":"getParentId","description":"<p>Returns the parent id for the node</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getparentid"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#getrootelement"},"getTool":{"name":"getTool","description":"<p>Returns the tool that handles the given action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#gettool"},"group":{"name":"group","description":"<p>Groups the selected nodes and connectors in the diagram. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#group"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#handleunload"},"hideTooltip":{"name":"hideTooltip","description":"<p>Hides the tooltip for the corresponding diagram object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#hidetooltip"},"insertData":{"name":"insertData","description":"<p>Inserts a newly added element into the database. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#insertdata"},"loadDiagram":{"name":"loadDiagram","description":"<p>Converts the given string into a Diagram Control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#loaddiagram"},"loadDiagramFromMermaid":{"name":"loadDiagramFromMermaid","description":"<p>Loads a diagram from a string containing Mermaid syntax.\nThis method parses the provided Mermaid text data and updates the current diagram accordingly.\nCurrently, only Mindmap and Flowchart diagrams can be loaded.\nTo render the diagram properly, you should set the <code>Layout.type</code> to either <code>MindMap</code> or <code>FlowChart</code>, and ensure that the respective modules are injected.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#loaddiagramfrommermaid"},"moveForward":{"name":"moveForward","description":"<p>Sends the selected nodes or connectors forward in the visual order.  \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#moveforward"},"moveObjects":{"name":"moveObjects","description":"<p>Moves objects from one layer to another layer within the diagram. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#moveobjects"},"moveObjectsUp":{"name":"moveObjectsUp","description":"<p>Moves the node or connector forward within the given layer. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#moveobjectsup"},"nudge":{"name":"nudge","description":"<p>Moves the selected objects towards the given direction by a specified distance.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#nudge"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>Updates the diagram control when the objects are changed by comparing new and old property values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#onpropertychanged"},"pan":{"name":"pan","description":"<p>Pans the diagram control to the given horizontal and vertical offsets.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#pan"},"paste":{"name":"paste","description":"<p>Adds the given objects or the objects in the diagram clipboard to the diagram control. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#paste"},"print":{"name":"print","description":"<p>Prints the diagram.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#print"},"printImage":{"name":"printImage","description":"<p>Prints the native or HTML nodes of the diagram as an image.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#printimage"},"redo":{"name":"redo","description":"<p>Reverse an undo action, essentially restoring the state of the component to a previous state after an undo operation has been performed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#redo"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#refresh"},"remove":{"name":"remove","description":"<p>Removes the specified object from the diagram.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#remove"},"removeChildFromGroup":{"name":"removeChildFromGroup","description":"<p>Removes the specified diagram object from the specified group node.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removechildfromgroup"},"removeConstraints":{"name":"removeConstraints","description":"<p>Remove constraints at run time. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removeconstraints"},"removeData":{"name":"removeData","description":"<p>Removes the user-deleted element from the existing database.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removedata"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removeeventlistener"},"removeLabels":{"name":"removeLabels","description":"<p>Removes labels from a node or connector at runtime. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removelabels"},"removeLane":{"name":"removeLane","description":"<p>Removes a dynamic lane from a swimlane at runtime. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removelane"},"removeLayer":{"name":"removeLayer","description":"<p>remove the layer from diagram \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removelayer"},"removePhase":{"name":"removePhase","description":"<p>Removes a phase from a swimlane at runtime.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removephase"},"removePorts":{"name":"removePorts","description":"<p>Removes Ports at run time. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removeports"},"removeProcess":{"name":"removeProcess","description":"<p>Removes a process from the BPMN sub-process. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#removeprocess"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#render"},"reset":{"name":"reset","description":"<p>Resets the zoom and scroller offsets to their default values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#reset"},"resetSegments":{"name":"resetSegments","description":"<p>Resets the segments of the connectors to their default state. This removes any custom segments and restores the connectors to their original configuration.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#resetsegments"},"rotate":{"name":"rotate","description":"<p>Rotates the specified nodes, connectors, or selector by the given angle.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#rotate"},"sameSize":{"name":"sameSize","description":"<p>Scales the specified objects to match the size of the first object in the group.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#samesize"},"saveDiagram":{"name":"saveDiagram","description":"<p>Serializes the diagram control as a string.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#savediagram"},"saveDiagramAsMermaid":{"name":"saveDiagramAsMermaid","description":"<p>Exports the current diagram to a string in Mermaid format.\nThis method converts the current state of the diagram into Mermaid syntax, allowing it to be saved or shared.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#savediagramasmermaid"},"scale":{"name":"scale","description":"<p>Use this method to scale one or more objects in the diagram by specifying the horizontal and vertical scaling ratios. You can also provide a pivot point as a reference for scaling.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#scale"},"select":{"name":"select","description":"<p>Select a specified collection of nodes and connectors in the diagram. You can specify whether to clear the existing selection and provide an old value if needed. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#select"},"selectAll":{"name":"selectAll","description":"<p>Select all objects, including nodes and connectors, in the diagram. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#selectall"},"sendBackward":{"name":"sendBackward","description":"<p>Sends the selected nodes or connectors one step backward in the z-order.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#sendbackward"},"sendLayerBackward":{"name":"sendLayerBackward","description":"<p>Use this method to change the order of layers in the diagram. This moves the specified layer behind the layer that comes after it in the layer order. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#sendlayerbackward"},"sendToBack":{"name":"sendToBack","description":"<p>Use this method to move the currently selected nodes or connectors to the back of the drawing order. This effectively places them behind other elements in the diagram. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#sendtoback"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#serverdatabind"},"setActiveLayer":{"name":"setActiveLayer","description":"<p>Specify which layer in the diagram should be considered the active layer. The active layer is the one where new elements will be added and where user interactions are primarily focused. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#setactivelayer"},"setStackLimit":{"name":"setStackLimit","description":"<p>Define a limit on the number of history entries that the diagram's history manager can store. This can help manage memory usage and control the undo/redo history size. Or\nSets the limit for the history entries in the diagram.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#setstacklimit"},"showTooltip":{"name":"showTooltip","description":"<p>Displays a tooltip for the specified diagram object.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#showtooltip"},"startGroupAction":{"name":"startGroupAction","description":"<p>Use this method to start a group action, allowing multiple actions to be treated as a single unit during undo/redo operations. This is useful when you want to group related actions together.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#startgroupaction"},"startTextEdit":{"name":"startTextEdit","description":"<p>Initiate the editing mode for a specific annotation within a node or connector.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#starttextedit"},"unGroup":{"name":"unGroup","description":"<p>UnGroup the selected nodes and connectors in diagram \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#ungroup"},"unSelect":{"name":"unSelect","description":"<p>Remove a specific object from the current selection in the diagram. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#unselect"},"undo":{"name":"undo","description":"<p>Restores the last action that was performed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#undo"},"updateData":{"name":"updateData","description":"<p>Updates user-defined element properties in the existing database. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#updatedata"},"updateViewPort":{"name":"updateViewPort","description":"<p>Updates the dimensions of the diagram viewport. \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#updateviewport"},"zoom":{"name":"zoom","description":"<p>Scales the diagram control based on the provided zoom factor. You can optionally specify a focused point around which the diagram will be zoomed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#zoom"},"zoomTo":{"name":"zoomTo","description":"<p>Scales the diagram control based on the provided options, which include the desired zoom factor, focus point, and zoom type.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#zoomto"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/#inject"}},"NodeAnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationDirective#shouldcomponentupdate"}},"NodeAnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeAnnotationsDirective#shouldcomponentupdate"}},"NodeFixedUserHandleDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandleDirective#shouldcomponentupdate"}},"NodeFixedUserHandlesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeFixedUserHandlesDirective#shouldcomponentupdate"}},"NodeDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodeDirective#shouldcomponentupdate"}},"NodesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/nodesDirective#shouldcomponentupdate"}},"PortDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portDirective#shouldcomponentupdate"}},"PortsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/diagram/portsDirective#shouldcomponentupdate"}},"OverviewComponent":{"created":{"name":"created","description":"<p>Triggers after render the diagram elements</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/overview/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/overview/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/overview/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/overview/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/overview/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/overview/#forceupdate"},"height":{"name":"height","description":"<p>Defines the height of the overview</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/overview/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/overview/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/overview/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/overview/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/overview/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/overview/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/overview/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/overview/#setstate"},"sourceID":{"name":"sourceID","description":"<p>Defines the ID of the overview</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/overview/#sourceid"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/overview/#state"},"width":{"name":"width","description":"<p>Defines the width of the overview</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/overview/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the overview</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>Updates the overview control when the objects are changed</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#serverdatabind"},"updateHtmlLayer":{"name":"updateHtmlLayer","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#updatehtmllayer"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/overview/#inject"}},"PaletteDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/paletteDirective#shouldcomponentupdate"}},"PalettesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/palettesDirective#shouldcomponentupdate"}},"SymbolPaletteComponent":{"paletteExpanding":{"name":"paletteExpanding","description":"<p>Triggers when the icon is expanded</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#paletteexpanding"},"paletteSelectionChange":{"name":"paletteSelectionChange","description":"<p>Triggers after the selection changes in the symbol palette</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#paletteselectionchange"},"accessKey":{"name":"accessKey","description":"<p>Configures the key, when it pressed the symbol palette will be focused</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#accesskey"},"allowDrag":{"name":"allowDrag","description":"<p>Defines whether the symbols can be dragged from palette or not</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#allowdrag"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#allowserverdatabinding"},"connectorDefaults":{"name":"connectorDefaults","description":"<p>Helps to return the default properties of connectors</p>\n","type":"ConnectorModel","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#connectordefaults"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#element"},"enableAnimation":{"name":"enableAnimation","description":"<p>Enables/Disables animation when the palette header is expanded/collapsed</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#enableanimation"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#enablertl"},"enableSearch":{"name":"enableSearch","description":"<p>Enables/Disables search option in symbol palette</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#enablesearch"},"expandMode":{"name":"expandMode","description":"<p>Defines how many palettes can be at expanded mode at a time</p>\n","type":"ExpandMode","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#expandmode"},"filterSymbols":{"name":"filterSymbols","description":"<p>Defines the symbols to be added in search palette</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#filtersymbols"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#forceupdate"},"getConnectorDefaults":{"name":"getConnectorDefaults","description":"<p>Helps to return the default properties of connector</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getconnectordefaults"},"getNodeDefaults":{"name":"getNodeDefaults","description":"<p>Helps to return the default properties of node</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getnodedefaults"},"getSymbolInfo":{"name":"getSymbolInfo","description":"","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getsymbolinfo"},"getSymbolTemplate":{"name":"getSymbolTemplate","description":"<p>Defines the content of a symbol</p>\n","type":"Function|string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getsymboltemplate"},"height":{"name":"height","description":"<p>Defines the height of the symbol palette</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#ignorecollectionwatch"},"ignoreSymbolsOnSearch":{"name":"ignoreSymbolsOnSearch","description":"<p>Defines the symbols to be added in search palette</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#ignoresymbolsonsearch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#locale"},"nodeDefaults":{"name":"nodeDefaults","description":"<p>Helps to return the default properties of node</p>\n","type":"NodeModel","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#nodedefaults"},"palettes":{"name":"palettes","description":"<p>Defines the collection of symbol groups</p>\n","type":"PaletteModel[]","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#palettes"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#state"},"symbolDragSize":{"name":"symbolDragSize","description":"<p>Defines the size of a drop symbol</p>\n","type":"SymbolDragSizeModel","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symboldragsize"},"symbolHeight":{"name":"symbolHeight","description":"<p>Defines the height of the symbol</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symbolheight"},"symbolInfo":{"name":"symbolInfo","description":"<p>Defines the size, appearance and description of a symbol</p>\n","type":"SymbolInfo","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symbolinfo"},"symbolMargin":{"name":"symbolMargin","description":"<p>Defines the space to be left around a symbol</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symbolmargin"},"symbolPreview":{"name":"symbolPreview","description":"<p>Defines the size and position of the symbol preview</p>\n","type":"SymbolPreviewModel","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symbolpreview"},"symbolTooltipObject":{"name":"symbolTooltipObject","description":"","type":"Tooltip","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symboltooltipobject"},"symbolWidth":{"name":"symbolWidth","description":"<p>Defines the width of the symbol</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#symbolwidth"},"width":{"name":"width","description":"<p>Defines the width of the symbol palette</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#addeventlistener"},"addPaletteItem":{"name":"addPaletteItem","description":"<p>Used to add the palette item as nodes or connectors in palettes \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#addpaletteitem"},"addPalettes":{"name":"addPalettes","description":"<p>Add particular palettes to symbol palette at runtime.\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#addpalettes"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the ruler</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Get the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>Refreshes the panel when the symbol palette properties are updated\\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#removeeventlistener"},"removePaletteItem":{"name":"removePaletteItem","description":"<p>Used to remove the palette item as nodes or connectors in palettes \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#removepaletteitem"},"removePalettes":{"name":"removePalettes","description":"<p>Remove particular palettes to symbol palette at runtime \\</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#removepalettes"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/symbol-palette/#inject"}},"ColorPickerComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers before closing the ColorPicker popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#beforeclose"},"beforeModeSwitch":{"name":"beforeModeSwitch","description":"<p>Triggers before Switching between ColorPicker mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#beforemodeswitch"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening the ColorPicker popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#beforeopen"},"beforeTileRender":{"name":"beforeTileRender","description":"<p>Trigger while rendering each palette tile.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#beforetilerender"},"change":{"name":"change","description":"<p>Triggers while changing the colors. It will be triggered based on the showButtons property.\nIf the property is false, the event will be triggered while selecting the colors.\nIf the property is true, the event will be triggered while apply the selected color.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#change"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#created"},"onModeSwitch":{"name":"onModeSwitch","description":"<p>Triggers after Switching between ColorPicker mode.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#onmodeswitch"},"open":{"name":"open","description":"<p>Triggers while opening the ColorPicker popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#open"},"select":{"name":"select","description":"<p>Triggers while selecting the color in picker / palette, when showButtons property is enabled.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#allowserverdatabinding"},"columns":{"name":"columns","description":"<p>It is used to render the ColorPicker palette with specified columns.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#context"},"createPopupOnClick":{"name":"createPopupOnClick","description":"<p>Specifies the popup element creation on open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#createpopuponclick"},"cssClass":{"name":"cssClass","description":"<p>This property sets the CSS classes to root element of the ColorPicker\nwhich helps to customize the UI styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#currentcontext"},"disabled":{"name":"disabled","description":"<p>It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#element"},"enableOpacity":{"name":"enableOpacity","description":"<p>It is used to enable / disable the opacity option of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#enableopacity"},"enablePersistence":{"name":"enablePersistence","description":"<p>To enable or disable persisting component's state between page reloads and it is extended from component class.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#initrendercalled"},"inline":{"name":"inline","description":"<p>It is used to render the ColorPicker component as inline.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#inline"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#locale"},"mode":{"name":"mode","description":"<p>It is used to render the ColorPicker with the specified mode.</p>\n","type":"ColorPickerMode","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#mode"},"modeSwitcher":{"name":"modeSwitcher","description":"<p>It is used to show / hide the mode switcher button of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#modeswitcher"},"noColor":{"name":"noColor","description":"<p>It is used to enable / disable the no color option of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#nocolor"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#portals"},"presetColors":{"name":"presetColors","description":"<p>It is used to load custom colors to palette.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#presetcolors"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#setstate"},"showButtons":{"name":"showButtons","description":"<p>It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#showbuttons"},"showRecentColors":{"name":"showRecentColors","description":"<p>Specifies to show the recent color options in the color picker in the palate mode.\nIt accepts boolean value to configure recent colors. The default value is false.\nIf this property value is false, then the recent color user interface is not rendered in color picker component.\nThis recent color option is rendered only in the palette mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#showrecentcolors"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#state"},"value":{"name":"value","description":"<p>It is used to set the color value for ColorPicker. It should be specified as Hex code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it maintains the initial input element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to Colorpicker\nits native method</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#focusin"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#getrootelement"},"getValue":{"name":"getValue","description":"<p>To get color value in specified type.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#getvalue"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#serverdatabind"},"toggle":{"name":"toggle","description":"<p>To show/hide ColorPicker popup based on current state of the SplitButton.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#inject"}},"MaskedTextBoxComponent":{"blur":{"name":"blur","description":"<p>Triggers when the MaskedTextBox got focus out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#blur"},"change":{"name":"change","description":"<p>Triggers when the value of the MaskedTextBox changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#change"},"created":{"name":"created","description":"<p>Triggers when the MaskedTextBox component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the MaskedTextBox component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the MaskedTextBox got focus in.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#focus"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#context"},"cssClass":{"name":"cssClass","description":"<p>Gets or sets the CSS classes to root element of the MaskedTextBox which helps to customize the\ncomplete UI styles for the MaskedTextBox component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#currentcontext"},"customCharacters":{"name":"customCharacters","description":"<p>Sets the collection of values to be mapped for non-mask elements(literals)\nwhich have been set in the mask of MaskedTextBox.\nIn the below example, non-mask elements &quot;P&quot; accepts values\n&quot;P&quot; , &quot;A&quot; , &quot;p&quot; , &quot;a&quot; and &quot;M&quot; accepts values &quot;M&quot;, &quot;m&quot; mentioned in the custom characters collection.</p>\n<blockquote>\n<p>For more information on customCharacters, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\">customCharacters</a>.</p>\n</blockquote>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#customcharacters"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Sets a value that enables or disables the persisting state of the MaskedTextBox after reloading the page.\nIf enabled, the 'value' state will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#enablertl"},"enabled":{"name":"enabled","description":"<p>Sets a value that enables or disables the MaskedTextBox component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>The &lt;b&gt;&lt;a href=&quot;#placeholder&quot; target=&quot;_blank&quot;&gt;placeholder&lt;/a&gt;&lt;/b&gt; acts as a label\nand floats above the MaskedTextBox based on the below values.\nPossible values are:</p>\n<ul>\n<li>Never - The floating label will not be enable when the placeholder is available.</li>\n<li>Always - The floating label always floats above the MaskedTextBox.</li>\n<li>Auto - The floating label floats above the MaskedTextBox after focusing it or when enters the value in it.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#locale"},"mask":{"name":"mask","description":"<p>Sets a value that masks the MaskedTextBox to allow/validate the user input.</p>\n<ul>\n<li>Mask allows <a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\"><code>standard mask elements</code></a>\n&lt;/b&gt;, &lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\"><code>custom characters</code></a>&lt;/b&gt; and\n&lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#regular-expression\"><code>regular expression</code></a>&lt;/b&gt; as mask\nelements.\nFor more information on mask, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\">mask</a>.</li>\n<li>If the mask value is empty, the MaskedTextBox will behave as an input element with text type.</li>\n</ul>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#mask"},"placeholder":{"name":"placeholder","description":"<p>Gets or sets the string shown as a hint/placeholder when the MaskedTextBox is empty.\nIt acts as a label and floats above the MaskedTextBox based on the\n&lt;b&gt;&lt;a href=&quot;#floatlabeltype&quot; target=&quot;_blank&quot;&gt;floatLabelType.&lt;/a&gt;&lt;/b&gt;</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#portals"},"promptChar":{"name":"promptChar","description":"<p>Gets or sets a value that will be shown as a prompting symbol for the masked value.\nThe symbol used to show input positions in the MaskedTextBox.\nFor more information on prompt-character, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#prompt-character\">prompt-character</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#promptchar"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the boolean value whether the Masked TextBox allows the user to change the text.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#showclearbutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#state"},"value":{"name":"value","description":"<p>Gets or sets the value of the MaskedTextBox. It is a raw value of the MaskedTextBox excluding literals\nand prompt characters. By using <code>getMaskedValue</code> property, you can get the value of MaskedTextBox with the masked format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#value"},"width":{"name":"width","description":"<p>Sets the width of the MaskedTextBox.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it maintains the initial input element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#getlocaldata"},"getMaskedValue":{"name":"getMaskedValue","description":"<p>Gets the value of the MaskedTextBox with the masked format.\nBy using <code>value</code> property, you can get the raw value of maskedtextbox without literals and prompt characters.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#getmaskedvalue"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#inject"}},"NumericTextBoxComponent":{"blur":{"name":"blur","description":"<p>Triggers when the NumericTextBox got focus out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#blur"},"change":{"name":"change","description":"<p>Triggers when the value of the NumericTextBox changes.\nThe change event of the NumericTextBox component will be triggered in the following scenarios:</p>\n<ul>\n<li>Changing the previous value using keyboard interaction and then focusing out of the component.</li>\n<li>Focusing on the component and scrolling within the input.</li>\n<li>Changing the value using the spin buttons.</li>\n<li>Programmatically changing the value using the value property.</li>\n</ul>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#change"},"created":{"name":"created","description":"<p>Triggers when the NumericTextBox component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the NumericTextBox component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the NumericTextBox got focus in.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#focus"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#context"},"cssClass":{"name":"cssClass","description":"<p>Gets or Sets the CSS classes to root element of the NumericTextBox which helps to customize the\ncomplete UI styles for the NumericTextBox component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#cssclass"},"currency":{"name":"currency","description":"<p>Specifies the currency code to use in currency formatting.\nPossible values are the ISO 4217 currency codes, such as 'USD' for the US dollar,'EUR' for the euro.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#currency"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#currentcontext"},"decimals":{"name":"decimals","description":"<p>Specifies the number precision applied to the textbox value when the NumericTextBox is focused.\nFor more information on decimals, refer to\n<a href=\"../../numerictextbox/formats/#precision-of-numbers\">decimals</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#decimals"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting NumericTextBox state between page reloads. If enabled, the <code>value</code> state will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#enablertl"},"enabled":{"name":"enabled","description":"<p>Sets a value that enables or disables the NumericTextBox control.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>The &lt;b&gt;&lt;a href=&quot;#placeholder&quot; target=&quot;_blank&quot;&gt;placeholder&lt;/a&gt;&lt;/b&gt; acts as a label\nand floats above the NumericTextBox based on the below values.\nPossible values are:</p>\n<ul>\n<li><code>Never</code> - Never floats the label in the NumericTextBox when the placeholder is available.</li>\n<li><code>Always</code> - The floating label always floats above the NumericTextBox.</li>\n<li><code>Auto</code> - The floating label floats above the NumericTextBox after focusing it or when enters the value in it.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#forceupdate"},"format":{"name":"format","description":"<p>Specifies the number format that indicates the display format for the value of the NumericTextBox.\nFor more information on formats, refer to\n<a href=\"../../numerictextbox/formats/#standard-formats\">formats</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#format"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#locale"},"max":{"name":"max","description":"<p>Specifies a maximum value that is allowed a user can enter.\nFor more information on max, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">max</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#max"},"min":{"name":"min","description":"<p>Specifies a minimum value that is allowed a user can enter.\nFor more information on min, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">min</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#min"},"placeholder":{"name":"placeholder","description":"<p>Gets or sets the string shown as a hint/placeholder when the NumericTextBox is empty.\nIt acts as a label and floats above the NumericTextBox based on the\n&lt;b&gt;&lt;a href=&quot;#floatlabeltype&quot; target=&quot;_blank&quot;&gt;floatLabelType.&lt;/a&gt;&lt;/b&gt;</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#props"},"readonly":{"name":"readonly","description":"<p>Sets a value that enables or disables the readonly state on the NumericTextBox. If it is true,\nNumericTextBox will not allow your input.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#showclearbutton"},"showSpinButton":{"name":"showSpinButton","description":"<p>Specifies whether the up and down spin buttons should be displayed in NumericTextBox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#showspinbutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#state"},"step":{"name":"step","description":"<p>Specifies the incremental or decremental step size for the NumericTextBox.\nFor more information on step, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">step</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#step"},"strictMode":{"name":"strictMode","description":"<p>Specifies a value that indicates whether the NumericTextBox control allows the value for the specified range.\nIf it is true, the input value will be restricted between the min and max range.\nThe typed value gets modified to fit the range on focused out state.\nElse, it allows any value even out of range value,\nAt that time of wrong value entered, the error class will be added to the component to highlight the error.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#strictmode"},"validateDecimalOnType":{"name":"validateDecimalOnType","description":"<p>Specifies whether the decimals length should be restricted during typing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#validatedecimalontype"},"value":{"name":"value","description":"<p>Sets the value of the NumericTextBox.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#value"},"width":{"name":"width","description":"<p>Specifies the width of the NumericTextBox.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#databind"},"decrement":{"name":"decrement","description":"<p>Decrements the NumericTextBox value with specified step value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#decrement"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it maintains the initial input element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#getrootelement"},"getText":{"name":"getText","description":"<p>Returns the value of NumericTextBox with the format applied to the NumericTextBox.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#gettext"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#handleunload"},"increment":{"name":"increment","description":"<p>Increments the NumericTextBox value with the specified step value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#increment"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#inject"}},"OtpInputComponent":{"blur":{"name":"blur","description":"<p>Event triggers when the Otp input is focused out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#blur"},"created":{"name":"created","description":"<p>Event triggers after the creation of the Otp Input.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#created"},"focus":{"name":"focus","description":"<p>Event triggers when the Otp input is focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#focus"},"input":{"name":"input","description":"<p>Event triggers each time when the value of each Otp input is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#input"},"valueChanged":{"name":"valueChanged","description":"<p>Event triggers after the value is changed and the Otp input is focused out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#valuechanged"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#allowserverdatabinding"},"ariaLabels":{"name":"ariaLabels","description":"<p>Defines the ARIA-label attribute for each input field in the Otp (One-Time Password) input component.\nEach string in the array corresponds to the ARIA-label attribute for each input field.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#arialabels"},"autoFocus":{"name":"autoFocus","description":"<p>Specifies whether the OTP input field should automatically receive focus when the component is rendered.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#autofocus"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines one or more CSS classes that can be used to customize the appearance of the Otp (One-Time Password) input component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies whether the Otp input component is disabled.\nWhen set to true, the component is disabled and user input is not allowed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Specifies additional HTML attributes to be applied to the Otp (One-Time Password) input component.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#isvue"},"length":{"name":"length","description":"<p>Specifies the length of the Otp (One-Time Password) to be entered by the user.\nThis determines the number of input fields in the Otp Input.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#length"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#locale"},"placeholder":{"name":"placeholder","description":"<p>Specifies the text that is shown as a hint/placeholder until the user focuses on or enters a value in the Otp Input.\nIf a single text is provided, it will be used for all input fields; otherwise, each text letter will be used for each field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#root"},"separator":{"name":"separator","description":"<p>Specifies the separator used to separate each input field in the Otp Input component.\nThe separator is displayed between each input field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#separator"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#state"},"stylingMode":{"name":"stylingMode","description":"<p>Specifies the style variant for the input fields in the Otp Input component.</p>\n","type":"string|OtpInputStyle","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#stylingmode"},"textTransform":{"name":"textTransform","description":"<p>Specifies the case transformation for the OTP input text.\nValid values are:</p>\n<ul>\n<li><code>TextTransform.Uppercase</code> for uppercase transformation.</li>\n<li><code>TextTransform.Lowercase</code> for lowercase transformation.</li>\n<li><code>TextTransform.None</code> for no transformation.</li>\n</ul>\n","type":"string|TextTransform","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#texttransform"},"type":{"name":"type","description":"<p>Specifies the input type of the Otp.</p>\n","type":"string|OtpInputType","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#type"},"value":{"name":"value","description":"<p>Specifies the value of the Otp (One-Time Password) input.\nThis can be a string or a number, representing the Otp value entered by the user.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#databind"},"destroy":{"name":"destroy","description":"<p>Destroy the Otp input.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to the Otp input for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from Otp input, if it is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#inject"}},"RatingComponent":{"beforeItemRender":{"name":"beforeItemRender","description":"<p>Event callback that is raised before rendering each item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rating/#beforeitemrender"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the rating.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rating/#created"},"onItemHover":{"name":"onItemHover","description":"<p>Event callback that is raised when a user hovers over an item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rating/#onitemhover"},"valueChanged":{"name":"valueChanged","description":"<p>Event callback that is raised when the value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rating/#valuechanged"},"allowReset":{"name":"allowReset","description":"<p>Defines whether to show or hide the reset button in a rating component.\nWhen set to &quot;true&quot;, the reset button will be visible to the user, and they will be able to click it to reset the rating value to its default value.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#allowreset"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rating/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines one or more CSS classes that can be used to customize the appearance of a rating component.\nOne or more CSS classes to customize the appearance of the rating component, such as by changing its colors, fonts, sizes, or other visual aspects.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rating/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rating/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Defines whether a rating component is enabled or disabled.\nA disabled rating component may have a different visual appearance than an enabled one.\nWhen set to &quot;true&quot;, the rating component will be disabled, and the user will not be able to interact with it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rating/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/rating/#element"},"emptyTemplate":{"name":"emptyTemplate","description":"<p>Defines the template that defines the appearance of each un-rated item in a rating component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/rating/#emptytemplate"},"enableAnimation":{"name":"enableAnimation","description":"<p>Defines whether to add animation (to provide visual feedback to the user) when an item in a rating component is hovered.\nWhen set to &quot;true&quot;, an animation will be added when the user hovers their cursor over an item in the rating component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#enableanimation"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#enablertl"},"enableSingleSelection":{"name":"enableSingleSelection","description":"<p>Defines whether to select all the items before the selected item should be in selected state in a rating component.\nWhen set to &quot;true&quot;, only the selected item will be in the selected state, and all other items will be un-selected.\nWhen set to &quot;false&quot;, all items before the selected one will be in the selected state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#enablesingleselection"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rating/#forceupdate"},"fullTemplate":{"name":"fullTemplate","description":"<p>Defines the template that defines the appearance of each rated item in a rating component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/rating/#fulltemplate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#isvue"},"itemsCount":{"name":"itemsCount","description":"<p>Defines the specific number of items (symbols) in rating component.\nThe rating component typically consists of a number of items, such as stars or other symbols, that represent the rating value.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rating/#itemscount"},"labelPosition":{"name":"labelPosition","description":"<p>Defines the position of the label in rating component.\nThe possible values are:</p>\n<ul>\n<li>Top</li>\n<li>Bottom</li>\n<li>Left</li>\n<li>Right</li>\n</ul>\n","type":"string|LabelPosition","link":"//ej2.syncfusion.com/react/documentation/api/rating/#labelposition"},"labelTemplate":{"name":"labelTemplate","description":"<p>Defines the template that used as label over default label of the rating. The current value of rating passed as context to build the content.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/rating/#labeltemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rating/#locale"},"min":{"name":"min","description":"<p>Defines the value that specifies minimum rating that a user can select.\nThe value is set to 0, which means that the minimum possible rating is 0.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rating/#min"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rating/#portals"},"precision":{"name":"precision","description":"<p>Defines the precision type of the rating which used to component the granularity of the rating,\nallowing users to provide ratings with varying levels of precision.\nThe possible values are:</p>\n<ul>\n<li>Full</li>\n<li>Half</li>\n<li>Quarter</li>\n<li>Exact</li>\n</ul>\n","type":"string|PrecisionType","link":"//ej2.syncfusion.com/react/documentation/api/rating/#precision"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/rating/#props"},"readOnly":{"name":"readOnly","description":"<p>Defines a boolean value that specifies whether the read-only mode is enabled for a rating component,\nwhich prevents the user from modifying or interacting with the rating value but allows them to read it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/rating/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rating/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/rating/#setstate"},"showLabel":{"name":"showLabel","description":"<p>Defines a value that specifies whether to display a label that shows the current value of a rating.\nWhen set to &quot;true&quot;, a label will be displayed that shows the current value of the rating; otherwise false.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#showlabel"},"showTooltip":{"name":"showTooltip","description":"<p>Defines a value that defines whether to show tooltip for the items.\nWhen set to &quot;true&quot;, show tooltip for the items.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#showtooltip"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/rating/#state"},"tooltipTemplate":{"name":"tooltipTemplate","description":"<p>Defines the template that used as tooltip content over default tooltip content of the rating.\nThe current value of rating passed as context to build the content.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/rating/#tooltiptemplate"},"value":{"name":"value","description":"<p>Defines the current rating value which used to display and update the rating selected by the user.\nBased on &quot;PrecisionType&quot;, users can select ratings with varying levels of precision.\nThe &quot;value&quot; is a decimal value that ranges from the minimum value to the items count,\nas specified by the &quot;min&quot; and &quot;itemsCount&quot; properties of the rating.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rating/#value"},"visible":{"name":"visible","description":"<p>Defines a value that indicates whether the rating component is visible or hidden.\nWhen set to &quot;true&quot;, if the rating component is visible.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rating/#visible"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the Rating instance.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#render"},"reset":{"name":"reset","description":"<p>Reset’s the value to minimum.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#reset"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rating/#inject"}},"SignatureComponent":{"beforeSave":{"name":"beforeSave","description":"<p>Gets or sets an event callback that is raised while saving the signature.\nThe file name and the file type can be changed using SignatureBeforeSaveEventArgs and SignatureFileType.\nThe event callback is raised only for the keyboard action (Ctrl + S).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/signature/#beforesave"},"change":{"name":"change","description":"<p>Gets or sets an event callback that is raised for the actions like undo, redo, clear and while user complete signing on signature component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/signature/#change"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/signature/#created"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#allowserverdatabinding"},"backgroundColor":{"name":"backgroundColor","description":"<p>Gets or sets the background color of the component.\nThe background color of the component that accepts hex value, rgb and text (like 'red'). The default value is ''.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/signature/#backgroundcolor"},"backgroundImage":{"name":"backgroundImage","description":"<p>Gets or sets the background image for the component.\nAn image that used to fill the background of the component. The default value is ''.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/signature/#backgroundimage"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/signature/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/signature/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Gets or sets whether to disable the signature component where the opacity is set to show disabled state.\nTrue, if the signature component is disabled for user interaction. The default value is false.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/signature/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLCanvasElement","link":"//ej2.syncfusion.com/react/documentation/api/signature/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Gets or sets whether to persist component's state between page reloads.\nTrue, if the component's state persistence is enabled. The default value is false.\nComponent's property will be stored in browser local storage to persist component's state when page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#enablepersistence"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/signature/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isreactcomponent"},"isReadOnly":{"name":"isReadOnly","description":"<p>Gets or sets whether to prevent the interaction in signature component.\nTrue, if the signature component is read only state where the user interaction is prevented. The default value is false.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isreadonly"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isvue"},"maxStrokeWidth":{"name":"maxStrokeWidth","description":"<p>Gets or sets the maximum stroke width for signature.\nThe signature component calculates stroke width based on Velocity, MinStrokeWidth and MaxStrokeWidth.\nThe maximum width of stroke. The default value is 2.0.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/signature/#maxstrokewidth"},"minStrokeWidth":{"name":"minStrokeWidth","description":"<p>Gets or sets the minimum stroke width for signature.\nThe signature component calculates stroke width based on Velocity, MinStrokeWidth and MaxStrokeWidth.\nThe minimum width of stroke. The default value is 0.5.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/signature/#minstrokewidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/signature/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/signature/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/signature/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/signature/#root"},"saveWithBackground":{"name":"saveWithBackground","description":"<p>Gets or sets whether to save the signature along with Background Color and background Image while saving.\nTrue, if signature component to save with background. The default value is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/signature/#savewithbackground"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/signature/#setstate"},"signatureValue":{"name":"signatureValue","description":"<p>Gets or sets the last signature url to maintain the persist state.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/signature/#signaturevalue"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/signature/#state"},"strokeColor":{"name":"strokeColor","description":"<p>Gets or sets the stroke color of the signature.\nThe color of the signature stroke that accepts hex value, rgb and text (like 'red'). The default value is &quot;#000000&quot;.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/signature/#strokecolor"},"velocity":{"name":"velocity","description":"<p>Gets or sets the velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface.\nThe Signature component calculates stroke thickness based on Velocity, MinStrokeWidth and MaxStrokeWidth.\nThe default value is 0.7.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/signature/#velocity"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#attachunloadevent"},"canRedo":{"name":"canRedo","description":"<p>To check whether the redo collection is empty or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#canredo"},"canUndo":{"name":"canUndo","description":"<p>To check whether the undo collection is empty or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#canundo"},"clear":{"name":"clear","description":"<p>Erases all the signature strokes signed by user.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it maintains the initial input element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#detachunloadevent"},"draw":{"name":"draw","description":"<p>To draw the signature based on the given text, with the font family and font size.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#draw"},"getBlob":{"name":"getBlob","description":"<p>To get the signature as Blob.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#getblob"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#getrootelement"},"getSignature":{"name":"getSignature","description":"<p>Gets the signature as a Base 64 string.\nThis method is used to retrieve the current signature on the canvas as a Base 64-encoded string, in the specified image format.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#getsignature"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#handleunload"},"initialize":{"name":"initialize","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#initialize"},"isEmpty":{"name":"isEmpty","description":"<p>To check whether the signature is empty or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#isempty"},"load":{"name":"load","description":"<p>To load the signature with the given base 64 string, height and width.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#load"},"redo":{"name":"redo","description":"<p>Redo the last user action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#redo"},"refresh":{"name":"refresh","description":"<p>To refresh the signature.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#render"},"save":{"name":"save","description":"<p>To save the signature with the given file type and file name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#save"},"saveAsBlob":{"name":"saveAsBlob","description":"<p>To save the signature as Blob.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#saveasblob"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#serverdatabind"},"undo":{"name":"undo","description":"<p>Undo the last user action.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#undo"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/signature/#inject"}},"SliderComponent":{"change":{"name":"change","description":"<p>We can trigger change event whenever Slider value is changed.\nIn other term, this event will be triggered while drag the slider thumb.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#change"},"changed":{"name":"changed","description":"<p>Fires whenever the Slider value is changed.\nIn other term, this event will be triggered, while drag the slider thumb completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#changed"},"created":{"name":"created","description":"<p>Triggers when the Slider is successfully created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#created"},"renderedTicks":{"name":"renderedTicks","description":"<p>Triggers when the ticks are rendered on the Slider.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderedticks"},"renderingTicks":{"name":"renderingTicks","description":"<p>Triggers on rendering the ticks element in the Slider,\nwhich is used to customize the ticks labels dynamically.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderingticks"},"tooltipChange":{"name":"tooltipChange","description":"<p>Triggers when the Sider tooltip value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#tooltipchange"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#allowserverdatabinding"},"colorRange":{"name":"colorRange","description":"<p>Specifies the color to the slider based on given value.</p>\n","type":"ColorRangeDataModel[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#colorrange"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/slider/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the custom classes to be added to the element used to customize the slider.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/slider/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/slider/#currentcontext"},"customValues":{"name":"customValues","description":"<p>Specifies an array of slider values in number or string type.\nThe min and max step values are not considered.</p>\n","type":"string[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#customvalues"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/slider/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/slider/#element"},"enableAnimation":{"name":"enableAnimation","description":"<p>Enable or Disable the animation for slider movement.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enableanimation"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Slider component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enablertl"},"enabled":{"name":"enabled","description":"<p>Enable or Disable the slider.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enabled"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/slider/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#initrendercalled"},"initialTooltip":{"name":"initialTooltip","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#initialtooltip"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#isvue"},"limits":{"name":"limits","description":"<p>Specified the limit within which the slider to be moved.\nRefer the documentation <a href=\"../../slider/limits\">here</a>\nto know more about this property.</p>\n","type":"LimitDataModel","link":"//ej2.syncfusion.com/react/documentation/api/slider/#limits"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/slider/#locale"},"max":{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},"min":{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},"orientation":{"name":"orientation","description":"<p>Specifies whether to render the slider in vertical or horizontal orientation.\nRefer the documentation <a href=\"../../slider/orientation/\">here</a>\nto know more about this property.</p>\n","type":"SliderOrientation","link":"//ej2.syncfusion.com/react/documentation/api/slider/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/slider/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/slider/#props"},"readonly":{"name":"readonly","description":"<p>Specifies whether the render the slider in read-only mode to restrict any user interaction.\nThe slider rendered with user defined values and can’t be interacted with user actions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/slider/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/slider/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/slider/#setstate"},"showButtons":{"name":"showButtons","description":"<p>Specifies whether to show or hide the increase/decrease buttons\nof Slider to change the slider value.\nRefer the documentation <a href=\"../../slider/getting-started#buttons\">here</a>\nto know more about this property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#showbuttons"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/slider/#state"},"step":{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},"ticks":{"name":"ticks","description":"<p>It is used to render the slider ticks options such as placement and step values.\nRefer the documentation <a href=\"../../slider/ticks\">here</a>\nto know more about this property with demo.</p>\n","type":"TicksDataModel","link":"//ej2.syncfusion.com/react/documentation/api/slider/#ticks"},"tooltip":{"name":"tooltip","description":"<p>Specifies the visibility, position of the tooltip over the slider element.</p>\n","type":"TooltipDataModel","link":"//ej2.syncfusion.com/react/documentation/api/slider/#tooltip"},"type":{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},"value":{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},"width":{"name":"width","description":"<p>Specifies the width of the Slider.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/slider/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#render"},"reposition":{"name":"reposition","description":"<p>It is used to reposition slider.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#reposition"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#serverdatabind"},"setTooltip":{"name":"setTooltip","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#settooltip"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#inject"}},"SmartTextAreaComponent":{"blur":{"name":"blur","description":"<p>Triggers when the TextArea has focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#blur"},"change":{"name":"change","description":"<p>Triggers when the content of TextArea has changed and gets focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#change"},"created":{"name":"created","description":"<p>Triggers when the TextArea component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the TextArea component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the TextArea gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#focus"},"input":{"name":"input","description":"<p>Triggers each time when the value of TextArea has changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#input"},"UserPhrases":{"name":"UserPhrases","description":"<p>Specifies a collection of phrases commonly used by the user, which can be leveraged for auto-completion and suggestions.\nProvide an array of string phrases commonly used by the user to enhance auto-completion and suggestions. Include preferred tone, voice, and any relevant information such as policies, URLs, or keywords for improved suggestions.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#userphrases"},"aiSuggestionHandler":{"name":"aiSuggestionHandler","description":"<p>Callback function to get suggestion text from server to display smart suggestion.</p>\n","type":"Function","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#aisuggestionhandler"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#allowserverdatabinding"},"cols":{"name":"cols","description":"<p>specifies the visible width of the textarea, measured in average character widths.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#cols"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class value that is appended to wrapper of Textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLTextAreaElement","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting TextArea state between page reloads. If enabled, the <code>value</code> state will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a Boolean value that indicates whether the TextArea allow user to interact with it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the floating label behavior of the TextArea that the placeholder text floats above the TextArea based on the below values.\nPossible values are:</p>\n<ul>\n<li><code>Never</code> - The placeholder text should not be float ever.</li>\n<li><code>Always</code> - The placeholder text floats above the TextArea always.</li>\n<li><code>Auto</code> - The placeholder text floats above the TextArea while focusing or enter a value in TextArea.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#locale"},"maxLength":{"name":"maxLength","description":"<p>Specifies the maximum number of characters allowed in TextArea.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#maxlength"},"placeholder":{"name":"placeholder","description":"<p>Specifies the text that is shown as a hint/placeholder until the user focus or enter a value in TextArea.\nThe property is depending on the floatLabelType property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the boolean value whether the TextArea allows user to change the text.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#refs"},"resizeMode":{"name":"resizeMode","description":"<p>Specifies the resize mode of textarea.\npossible values are:</p>\n<ul>\n<li><code>Vertical</code> - The textarea element can be resized vertically.</li>\n<li><code>Horizontal</code> - The textarea element can be resized horizontally.</li>\n<li><code>Both</code> - The textarea element can be resized both vertically and horizontally.</li>\n<li><code>None</code> - The textarea element cannot be resized.</li>\n</ul>\n","type":"Resize","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#resizemode"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#root"},"rows":{"name":"rows","description":"<p>specifies the visible height of the textarea, measured in lines</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#rows"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies a Boolean value that indicates whether the clear button is displayed in TextArea.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#showclearbutton"},"showSuggestionOnPopup":{"name":"showSuggestionOnPopup","description":"<p>Specifies whether suggestions should appear in a popup or inline within the text area.\npossible values are:</p>\n<ul>\n<li><code>Enable</code> - Suggestions are always shown as a floating overlay, which can be tapped or clicked.</li>\n<li><code>Disable</code> - Suggestions are always shown inline and can be accepted by pressing <code>Tab</code> key.</li>\n<li><code>None</code> - Touch devices display suggestions as an overlay, while non-touch devices use inline suggestions.</li>\n</ul>\n","type":"SuggestionMode","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#showsuggestiononpopup"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#state"},"userRole":{"name":"userRole","description":"<p>Represents the user's role or designation, which can be used to provide role-specific suggestions or content within the smart textarea.\nProvide a string that describes who is typing and for what reason, optionally giving other contextual information.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#userrole"},"value":{"name":"value","description":"<p>Sets the content of the TextArea.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#value"},"width":{"name":"width","description":"<p>Specifies the width of the TextArea component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#width"},"addAttributes":{"name":"addAttributes","description":"<p>Adding the multiple attributes as key-value pair to the TextArea element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#addattributes"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#getmodulename"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#refresh"},"removeAttributes":{"name":"removeAttributes","description":"<p>Removing the multiple attributes as key-value pair to the TextArea element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#removeattributes"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smart-textarea/#inject"}},"SpeechToTextComponent":{"created":{"name":"created","description":"<p>Triggered when the SpeechToText component is initialized and ready for interaction.\nThis event indicates that the component is fully loaded and can start processing user input.\nUse this event to execute initialization logic or show the component's ready state.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#created"},"onError":{"name":"onError","description":"<p>Triggered when an error occurs during speech recognition or listening, this event provides details to handle exceptions, display messages, and troubleshoot issues like microphone failures, network errors, or unsupported browsers and language models.\nCommon error strings may include:</p>\n<ul>\n<li><code>no-speech</code>: No speech detected. Please speak into the microphone.</li>\n<li><code>aborted</code>: Speech recognition was aborted.</li>\n<li><code>audio-capture</code>: No microphone detected. Ensure your microphone is connected.</li>\n<li><code>not-allowed</code>: Microphone access denied. Allow microphone permissions.</li>\n<li><code>service-not-allowed</code>: Speech recognition service is not allowed in this context.</li>\n<li><code>network</code>: Network error occurred. Check your internet connection.</li>\n<li><code>unsupported-browser</code>: The browser does not support the SpeechRecognition API.</li>\n</ul>\n<p>In addition to handling common speech recognition errors, it is essential to handle unsupported browser errors. For example, if the browser does not support the <code>SpeechRecognition</code> API, the <code>unsupported-browser</code> error string will be triggered. This can help notify users to switch to a compatible browser.</p>\n<p>For more details on the error strings and how to handle them, refer to the documentation:\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionErrorEvent/error\">SpeechRecognitionErrorEvent error</a></p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#onerror"},"onStart":{"name":"onStart","description":"<p>Triggered when speech recognition begins listening for audio input.\nThis event fires when the user starts the speech-to-text process.\nUse this event to execute logic or display feedback (e.g., a &quot;Listening...&quot; message).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#onstart"},"onStop":{"name":"onStop","description":"<p>Triggered when speech recognition stops listening for audio input.\nThis event marks the end of the listening session, either due to user action or completion of recognition.\nUse this event to trigger post-processing logic or indicate that listening has ended (e.g., show &quot;Listening stopped&quot;).</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#onstop"},"transcriptChanged":{"name":"transcriptChanged","description":"<p>Triggered when the transcript is updated during the speech recognition process.\nThis event delivers updated text as the user speaks. It can be used to update the UI with real-time transcription.\nThe event provides both interim and final transcript results, depending on the configuration.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#transcriptchanged"},"allowInterimResults":{"name":"allowInterimResults","description":"<p>Determines whether interim results should be provided during speech recognition.\nIf true, partial results are delivered in real-time, allowing for a dynamic user experience.\nIf false, only final results will be provided after the recognition process is complete.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#allowinterimresults"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#allowserverdatabinding"},"buttonSettings":{"name":"buttonSettings","description":"<p>Customizes the appearance and functionality of the record button.\nThis allows for customization of button content, icons, and positions.\nUse it to adjust the button's visual and functional properties according to your needs.</p>\n","type":"ButtonSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#buttonsettings"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies additional CSS classes for customizing the component's appearance.\nAllows applying custom styles to match application requirements\nThis property can be used to extend the component's default style.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Indicates whether the component is disabled.\nWhen true, all interactions with the component (e.g., clicking, listening) are disabled.\nUseful for preventing user interaction in specific states, such as during processing or error handling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes to be added to the root element of the SpeechToText button.\nThis property accepts a key-value pair format for attributes such as name, aria-label, and others.\nThis helps to make the button more accessible and adaptable to specific requirements.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#isvue"},"lang":{"name":"lang","description":"<p>The language and locale used for speech recognition.\nThis ensures proper transcription by selecting the correct language model.\nCommon formats: 'en-US' (English, United States), 'es-ES' (Spanish, Spain), 'fr-FR' (French, France).</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#lang"},"listeningState":{"name":"listeningState","description":"<p>Represents the current operational state of the component.\nThis state helps manage transitions and control the component's behavior.\nPossible values:</p>\n<ul>\n<li>'Inactive': Component is idle.</li>\n<li>'Listening': The component is actively listening for speech input.</li>\n<li>'Stopped': Listening has stopped.</li>\n</ul>\n","type":"SpeechToTextState","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#listeningstate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#setstate"},"showTooltip":{"name":"showTooltip","description":"<p>Determines whether the tooltip should be displayed on hover over the SpeechToText button.\nIf true, the tooltip will be shown to provide additional information about the current state or action.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#showtooltip"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#state"},"tooltipSettings":{"name":"tooltipSettings","description":"<p>Defines tooltip content and positioning for guiding user interactions.\nTooltips provide helpful instructions or descriptions for button actions, improving user experience.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#tooltipsettings"},"transcript":{"name":"transcript","description":"<p>The transcribed text from the speech-to-text process.\nThis property updates dynamically during speech recognition, providing both interim and final results.\nIt can be used to display or process the transcribed speech.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#transcript"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#databind"},"destroy":{"name":"destroy","description":"<p>Destroy the SpeechToText.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#serverdatabind"},"startListening":{"name":"startListening","description":"<p>Begins the audio capture process by listening to the user's microphone input.\nThis method initiates the speech-to-text process and continuously updates the <code>transcript</code> property with interim and final recognition results.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#startlistening"},"stopListening":{"name":"stopListening","description":"<p>Stops the audio capture process and finalizes the speech recognition.\nThis method ends the ongoing speech-to-text operation and completes the recognition process, storing the final transcription.\nIt is typically called to stop listening when the user is finished speaking.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#stoplistening"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/speech-to-text/#inject"}},"TextAreaComponent":{"blur":{"name":"blur","description":"<p>Triggers when the TextArea has focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#blur"},"change":{"name":"change","description":"<p>Triggers when the content of TextArea has changed and gets focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#change"},"created":{"name":"created","description":"<p>Triggers when the TextArea component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the TextArea component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the TextArea gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#focus"},"input":{"name":"input","description":"<p>Triggers each time when the value of TextArea has changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#input"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#allowserverdatabinding"},"cols":{"name":"cols","description":"<p>specifies the visible width of the textarea, measured in average character widths.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#cols"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class value that is appended to wrapper of Textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLTextAreaElement","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting TextArea state between page reloads. If enabled, the <code>value</code> state will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a Boolean value that indicates whether the TextArea allow user to interact with it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the floating label behavior of the TextArea that the placeholder text floats above the TextArea based on the below values.\nPossible values are:</p>\n<ul>\n<li><code>Never</code> - The placeholder text should not be float ever.</li>\n<li><code>Always</code> - The placeholder text floats above the TextArea always.</li>\n<li><code>Auto</code> - The placeholder text floats above the TextArea while focusing or enter a value in TextArea.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#locale"},"maxLength":{"name":"maxLength","description":"<p>Specifies the maximum number of characters allowed in TextArea.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#maxlength"},"placeholder":{"name":"placeholder","description":"<p>Specifies the text that is shown as a hint/placeholder until the user focus or enter a value in TextArea.\nThe property is depending on the floatLabelType property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the boolean value whether the TextArea allows user to change the text.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#refs"},"resizeMode":{"name":"resizeMode","description":"<p>Specifies the resize mode of textarea.\npossible values are:</p>\n<ul>\n<li><code>Vertical</code> - The textarea element can be resized vertically.</li>\n<li><code>Horizontal</code> - The textarea element can be resized horizontally.</li>\n<li><code>Both</code> - The textarea element can be resized both vertically and horizontally.</li>\n<li><code>None</code> - The textarea element cannot be resized.</li>\n</ul>\n","type":"Resize","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#resizemode"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#root"},"rows":{"name":"rows","description":"<p>specifies the visible height of the textarea, measured in lines</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#rows"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies a Boolean value that indicates whether the clear button is displayed in TextArea.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#showclearbutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#state"},"value":{"name":"value","description":"<p>Sets the content of the TextArea.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#value"},"width":{"name":"width","description":"<p>Specifies the width of the TextArea component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#width"},"addAttributes":{"name":"addAttributes","description":"<p>Adding the multiple attributes as key-value pair to the TextArea element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#addattributes"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso, it maintains the initial TextArea element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#getmodulename"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#refresh"},"removeAttributes":{"name":"removeAttributes","description":"<p>Removing the multiple attributes as key-value pair to the TextArea element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#removeattributes"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textarea/#inject"}},"TextBoxComponent":{"blur":{"name":"blur","description":"<p>Triggers when the TextBox has focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#blur"},"change":{"name":"change","description":"<p>Triggers when the content of TextBox has changed and gets focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#change"},"created":{"name":"created","description":"<p>Triggers when the TextBox component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the TextBox component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#destroyed"},"focus":{"name":"focus","description":"<p>Triggers when the TextBox gets focus.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#focus"},"input":{"name":"input","description":"<p>Triggers each time when the value of TextBox has changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#input"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#allowserverdatabinding"},"autocomplete":{"name":"autocomplete","description":"<p>Specifies whether the browser is allow to automatically enter or select a value for the textbox.\nBy default, autocomplete is enabled for textbox.\nPossible values are:\n<code>on</code> - Specifies that autocomplete is enabled.\n<code>off</code> - Specifies that autocomplete is disabled.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#autocomplete"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class value that is appended to wrapper of Textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement|HTMLTextAreaElement","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting TextBox state between page reloads. If enabled, the <code>value</code> state will be persisted.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a Boolean value that indicates whether the TextBox allow user to interact with it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#enabled"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the below values.\nPossible values are:</p>\n<ul>\n<li><code>Never</code> - The placeholder text should not be float ever.</li>\n<li><code>Always</code> - The placeholder text floats above the TextBox always.</li>\n<li><code>Auto</code> - The placeholder text floats above the TextBox while focusing or enter a value in Textbox.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#floatlabeltype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#locale"},"multiline":{"name":"multiline","description":"<p>Specifies a boolean value that enable or disable the multiline on the TextBox.\nThe TextBox changes from single line to multiline when enable this multiline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#multiline"},"placeholder":{"name":"placeholder","description":"<p>Specifies the text that is shown as a hint/placeholder until the user focus or enter a value in Textbox.\nThe property is depending on the floatLabelType property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#placeholder"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#props"},"readonly":{"name":"readonly","description":"<p>Specifies the boolean value whether the TextBox allows user to change the text.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies a Boolean value that indicates whether the clear button is displayed in Textbox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#showclearbutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#state"},"type":{"name":"type","description":"<p>Specifies the behavior of the TextBox such as text, password, email, etc.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#type"},"value":{"name":"value","description":"<p>Sets the content of the TextBox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#value"},"width":{"name":"width","description":"<p>Specifies the width of the Textbox component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#width"},"addAttributes":{"name":"addAttributes","description":"<p>Adding the multiple attributes as key-value pair to the TextBox element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#addattributes"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#addeventlistener"},"addIcon":{"name":"addIcon","description":"<p>Adding the icons to the TextBox component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#addicon"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers.\nAlso, it maintains the initial TextBox element from the DOM.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#detachunloadevent"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#focusout"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#getlocaldata"},"getPersistData":{"name":"getPersistData","description":"<p>Gets the properties to be maintained in the persisted state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#getpersistdata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#refresh"},"removeAttributes":{"name":"removeAttributes","description":"<p>Removing the multiple attributes as key-value pair to the TextBox element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#removeattributes"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/textbox/#inject"}},"FilesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/filesDirective#shouldcomponentupdate"}},"UploadedFilesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/uploadedFilesDirective#shouldcomponentupdate"}},"UploaderComponent":{"actionComplete":{"name":"actionComplete","description":"<p>Triggers after all the selected files has processed to upload successfully or failed to server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#actioncomplete"},"beforeRemove":{"name":"beforeRemove","description":"<p>Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#beforeremove"},"beforeUpload":{"name":"beforeUpload","description":"<p>Triggers when the upload process before. This event is used to add additional parameter with upload request.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#beforeupload"},"canceling":{"name":"canceling","description":"<p>Fires if cancel the chunk file uploading.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#canceling"},"change":{"name":"change","description":"<p>Triggers when changes occur in uploaded file list by selecting or dropping files.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is successfully uploaded to server or removed in server.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#change"},"chunkFailure":{"name":"chunkFailure","description":"<p>Fires if the chunk file failed to upload.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nchunkIndex&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nReturns current chunk index.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nchunkSize&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nReturns the size of the chunk file.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is uploading to server.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ntotalChunk&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nReturns the total chunk count&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\ncancel&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nPrevent triggering of failure event when we pass true to this attribute&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#chunkfailure"},"chunkSuccess":{"name":"chunkSuccess","description":"<p>Fires when the chunk file uploaded successfully.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nchunkIndex&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nReturns current chunk index.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nchunkSize&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nReturns the size of the chunk file.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is uploading to server.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#chunksuccess"},"chunkUploading":{"name":"chunkUploading","description":"<p>Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#chunkuploading"},"clearing":{"name":"clearing","description":"<p>Triggers before clearing the items in file list when clicking “clear”.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#clearing"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#created"},"failure":{"name":"failure","description":"<p>Triggers when the AJAX request fails on uploading or removing files.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nevent&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nAjax progress event arguments.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is failed from upload/remove.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\noperation&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nIt indicates the failure of the operation whether its upload or remove&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#failure"},"fileListRendering":{"name":"fileListRendering","description":"<p>Triggers before rendering each file item from the file list in a page.\nIt helps to customize specific file item structure.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#filelistrendering"},"pausing":{"name":"pausing","description":"<p>Fires if pause the chunk file uploading.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#pausing"},"progress":{"name":"progress","description":"<p>Triggers when uploading a file to the server using the AJAX request.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nevent&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nAjax progress event arguments.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is uploading to server.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#progress"},"removing":{"name":"removing","description":"<p>Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#removing"},"rendering":{"name":"rendering","description":"<p>DEPRECATED-Triggers before rendering each file item from the file list in a page.\nIt helps to customize specific file item structure.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#rendering"},"resuming":{"name":"resuming","description":"<p>Fires if resume the paused chunk file upload.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#resuming"},"selected":{"name":"selected","description":"<p>Triggers after selecting or dropping the files by adding the files in upload queue.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#selected"},"success":{"name":"success","description":"<p>Triggers when the AJAX request gets success on uploading files or removing files.\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEvent arguments&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nevent&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nAjax progress event arguments.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nfile&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nFile information which is uploaded/removed.&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nname&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nName of the event&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\noperation&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nIt indicates the success of the operation whether its uploaded or removed&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#success"},"uploading":{"name":"uploading","description":"<p>Triggers when the upload process gets started. This event is used to add additional parameter with upload request.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#uploading"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#allowserverdatabinding"},"allowedExtensions":{"name":"allowedExtensions","description":"<p>Specifies the extensions of the file types allowed in the uploader component and pass the extensions\nwith comma separators. For example,\nif you want to upload specific image files,  pass allowedExtensions as “.jpg,.png”.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#allowedextensions"},"asyncSettings":{"name":"asyncSettings","description":"<p>Configures the save and remove URL to perform the upload operations in the server asynchronously.</p>\n","type":"AsyncSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#asyncsettings"},"autoUpload":{"name":"autoUpload","description":"<p>By default, the uploader component initiates automatic upload when the files are added in upload queue.\nIf you want to manipulate the files before uploading to server, disable the autoUpload property.\nThe buttons “upload” and “clear” will be hided from file list when autoUpload property is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#autoupload"},"buttons":{"name":"buttons","description":"<p>You can customize the default text of “browse, clear, and upload” buttons with plain text or HTML elements.\nThe buttons’ text can be customized from localization also. If you configured both locale and buttons property,\nthe uploader component considers the buttons property value.</p>\n","type":"ButtonsPropsModel","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#buttons"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS class name that can be appended with root element of the uploader.\nOne or more custom CSS classes can be added to a uploader.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#currentcontext"},"directoryUpload":{"name":"directoryUpload","description":"<p>Specifies a Boolean value that indicates whether the folder of files can be browsed in the uploader component.</p>\n<blockquote>\n<p>When enabled this property, it allows only files of folder to select or drop to upload and\nit cannot be allowed to select or drop files.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#directoryupload"},"dropArea":{"name":"dropArea","description":"<p>Specifies the drop target to handle the drag-and-drop upload.\nBy default, the component creates wrapper around file input that will act as drop target.</p>\n<blockquote>\n<p>For more information, refer to the <a href=\"../../uploader/file-source/#drag-and-drop\">drag-and-drop</a> section from the documentation.</p>\n</blockquote>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#droparea"},"dropEffect":{"name":"dropEffect","description":"<p>Specifies the drag operation effect to the uploader component. Possible values are Copy , Move, Link and None.\nBy default, the uploader component works based on the browser drag operation effect.</p>\n","type":"DropEffect","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#dropeffect"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLInputElement","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies Boolean value that indicates whether to prevent the cross site scripting code in filename or not.\nThe uploader component removes the cross-site scripting code or functions from the filename and shows the validation error message to the user when enableHtmlSanitizer is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies Boolean value that indicates whether the component is enabled or disabled.\nThe uploader component does not allow to interact when this property is disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#enabled"},"files":{"name":"files","description":"<p>Specifies the list of files that will be preloaded on rendering of uploader component.\nThe property used to view and remove the uploaded files from server. By default, the files are configured with\nuploaded successfully state. The following properties are mandatory to configure the preload files:</p>\n<ul>\n<li>Name</li>\n<li>Size</li>\n<li>Type</li>\n</ul>\n","type":"FilesPropModel[]","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#files"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>You can add the additional html attributes such as disabled, value etc., to the element.\nIf you configured both property and equivalent html attribute then the component considers the property value.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#locale"},"maxFileSize":{"name":"maxFileSize","description":"<p>Specifies the maximum allowed file size to be uploaded in bytes.\nThe property used to make sure that you cannot upload too large files.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#maxfilesize"},"minFileSize":{"name":"minFileSize","description":"<p>Specifies the minimum file size to be uploaded in bytes.\nThe property used to make sure that you cannot upload empty files and small files.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#minfilesize"},"multiple":{"name":"multiple","description":"<p>Specifies a Boolean value that indicates whether the multiple files can be browsed or\ndropped simultaneously in the uploader component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#multiple"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#root"},"sequentialUpload":{"name":"sequentialUpload","description":"<p>By default, the file uploader component is processing the multiple files simultaneously.\nIf sequentialUpload property is enabled, the file upload component performs the upload one after the other.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#sequentialupload"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#setstate"},"showFileList":{"name":"showFileList","description":"<p>Specifies a Boolean value that indicates whether the default file list can be rendered.\nThe property used to prevent default file list and design own template for file list.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#showfilelist"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#state"},"template":{"name":"template","description":"<p>Specifies the HTML string that used to customize the content of each file in the list.</p>\n<blockquote>\n<p>For more information, refer to the <a href=\"../../uploader/template/\">template</a> section from the documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#template"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#attachunloadevent"},"bytesToSize":{"name":"bytesToSize","description":"<p>It is used to convert bytes value into kilobytes or megabytes depending on the size based\non <a href=\"https://en.wikipedia.org/wiki/Binary_prefix\">binary prefix</a>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#bytestosize"},"cancel":{"name":"cancel","description":"<p>Stops the in-progress chunked upload based on the file data.\nWhen the file upload is canceled, the partially uploaded file is removed from server.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#cancel"},"clearAll":{"name":"clearAll","description":"<p>Clear all the file entries from list that can be uploaded files or added in upload queue.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#clearall"},"createFileList":{"name":"createFileList","description":"<p>Create the file list for specified files data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#createfilelist"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#detachunloadevent"},"getFilesData":{"name":"getFilesData","description":"<p>Get the data of files which are shown in file list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#getfilesdata"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Return the module name of the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#handleunload"},"pause":{"name":"pause","description":"<p>Pauses the in-progress chunked upload based on the file data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#pause"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#refresh"},"remove":{"name":"remove","description":"<p>Remove the uploaded file from server manually by calling the remove URL action.\nIf you pass an empty argument to this method, the complete file list can be cleared,\notherwise remove the specific file based on its argument (“file_data”).</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#remove"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#render"},"resume":{"name":"resume","description":"<p>Resumes the chunked upload that is previously paused based on the file data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#resume"},"retry":{"name":"retry","description":"<p>Retries the canceled or failed file upload based on the file data.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#retry"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#serverdatabind"},"sortFileList":{"name":"sortFileList","description":"<p>Allows you to sort the file data alphabetically based on its file name clearly.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#sortfilelist"},"traverseFileTree":{"name":"traverseFileTree","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#traversefiletree"},"upload":{"name":"upload","description":"<p>Allows you to call the upload process manually by calling save URL action.\nTo process the selected files (added in upload queue), pass an empty argument otherwise\nupload the specific file based on its argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#upload"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/uploader/#inject"}},"AccordionComponent":{"clicked":{"name":"clicked","description":"<p>The event will be fired while clicking anywhere within the Accordion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#clicked"},"created":{"name":"created","description":"<p>The event will be fired once the control rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#created"},"destroyed":{"name":"destroyed","description":"<p>The event will be fired when the control gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#destroyed"},"expanded":{"name":"expanded","description":"<p>The event will be fired after the item gets collapsed/expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expanded"},"expanding":{"name":"expanding","description":"<p>The event will be fired before the item gets collapsed/expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expanding"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Specifies the animation configuration settings for expanding and collapsing the panel.</p>\n","type":"AccordionAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#animation"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Specifies the datasource for the accordion items.</p>\n","type":"Object[]","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Accordion component.\nWhen this property is enabled, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#enablertl"},"expandMode":{"name":"expandMode","description":"<p>Specifies the options to expand single or multiple panel at a time.\nThe possible values are:</p>\n<ul>\n<li><code>Single</code>: Sets to expand only one Accordion item at a time.</li>\n<li><code>Multiple</code>: Sets to expand more than one Accordion item at a time.</li>\n</ul>\n","type":"ExpandMode","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expandmode"},"expandedIndices":{"name":"expandedIndices","description":"<p>Specifies the expanded items at initial load.</p>\n","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expandedindices"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#forceupdate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Specifies the header title template option for accordion items.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#headertemplate"},"height":{"name":"height","description":"<p>Specifies the height of the Accordion in pixels/number/percentage. Number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template option for accordion items.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#itemtemplate"},"items":{"name":"items","description":"<p>An array of item that is used to specify Accordion items.</p>\n","type":"AccordionItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#state"},"width":{"name":"width","description":"<p>Specifies the width of the Accordion in pixels/number/percentage. Number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds new item to the Accordion with the specified index of the Accordion.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and also removes all its related events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#detachunloadevent"},"enableItem":{"name":"enableItem","description":"<p>Enables/Disables the specified Accordion item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#enableitem"},"expandItem":{"name":"expandItem","description":"<p>Expands/Collapses the specified Accordion item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expanditem"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#handleunload"},"hideItem":{"name":"hideItem","description":"<p>Shows or hides the specified item from Accordion.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#hideitem"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#removeeventlistener"},"removeItem":{"name":"removeItem","description":"<p>Dynamically removes item from Accordion.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#removeitem"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#render"},"select":{"name":"select","description":"<p>Sets focus to the specified index item header in Accordion.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#select"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#inject"}},"AccordionItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemDirective#shouldcomponentupdate"}},"AccordionItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accordion/accordionItemsDirective#shouldcomponentupdate"}},"AppBarComponent":{"created":{"name":"created","description":"<p>Triggers after the AppBar component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the AppBar component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#destroyed"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#allowserverdatabinding"},"colorMode":{"name":"colorMode","description":"<p>Specifies the color mode that defines the color of the AppBar component. The possible values for this property are as follows:</p>\n<ul>\n<li><code>Light</code>: Specifies the AppBar in light color.</li>\n<li><code>Dark</code>: Specifies the AppBar in dark color.</li>\n<li><code>Primary</code>: Specifies the AppBar in a primary color.</li>\n<li><code>Inherit</code>: Inherit color from parent for AppBar. AppBar background and colors are inherited from its parent element.</li>\n</ul>\n","type":"AppBarColor","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#colormode"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#context"},"cssClass":{"name":"cssClass","description":"<p>Accepts single/multiple CSS classes (separated by a space) to be used for AppBar customization.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#forceupdate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Accepts HTML attributes/custom attributes that will be applied to the AppBar element.</p>\n","type":"Record","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isserverrendered"},"isSticky":{"name":"isSticky","description":"<p>Defines whether the AppBar position is fixed or not while scrolling the page.\nWhen set to <code>true</code>, the AppBar will be sticky while scrolling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#issticky"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#isvue"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#locale"},"mode":{"name":"mode","description":"<p>Specifies the mode of the AppBar that defines the AppBar height. The possible values for this property are as follows:</p>\n<ul>\n<li><code>Regular</code>: Specifies default height for the AppBar.</li>\n<li><code>Prominent</code>: Specifies longer height for the AppBar to show the longer titles and images, or to provide a stronger presence.</li>\n<li><code>Dense</code>: Specifies compressed (short) height for the AppBar to accommodate all the app bar content in a denser layout.</li>\n</ul>\n","type":"AppBarMode","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#mode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#portals"},"position":{"name":"position","description":"<p>Specifies the position of the AppBar. The possible values for this property are as follows:</p>\n<ul>\n<li><code>Top</code>: Position the AppBar at the top.</li>\n<li><code>Bottom</code>: Position the AppBar at the bottom.</li>\n</ul>\n","type":"AppBarPosition","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and also removes all its related events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#onpropertychanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/appbar/#inject"}},"BreadcrumbComponent":{"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each breadcrumb item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#beforeitemrender"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#created"},"itemClick":{"name":"itemClick","description":"<p>Triggers while clicking the breadcrumb item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#itemclick"},"activeItem":{"name":"activeItem","description":"<p>Specifies the Url of the active Breadcrumb item.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#activeitem"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Breadcrumb element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Enable or disable the breadcrumb, when set to true, the breadcrumb will be disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#disabled"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#element"},"enableActiveItemNavigation":{"name":"enableActiveItemNavigation","description":"<p>Enable or disable the active item navigation, when set to true, active item will be navigable.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#enableactiveitemnavigation"},"enableNavigation":{"name":"enableNavigation","description":"<p>Enable or disable the item's navigation, when set to false, each item navigation will be prevented.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#enablenavigation"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template for Breadcrumb item.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#itemtemplate"},"items":{"name":"items","description":"<p>Defines the list of Breadcrumb items.</p>\n","type":"BreadcrumbItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#items"},"maxItems":{"name":"maxItems","description":"<p>Specifies an integer to enable overflow behavior when the Breadcrumb items count exceeds and it is based on the overflowMode property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#maxitems"},"overflowMode":{"name":"overflowMode","description":"<p>Specifies the overflow mode of the Breadcrumb item when it exceeds maxItems count. The possible values are,</p>\n<ul>\n<li>Default: Specified maxItems count will be visible and the remaining items will be hidden. While clicking on the previous item, the hidden item will become visible.</li>\n<li>Collapsed: Only the first and last items will be visible, and the remaining items will be hidden in the collapsed icon. When the collapsed icon is clicked, all items become visible.</li>\n<li>Menu: Shows the number of breadcrumb items that can be accommodated within the container space, and creates a sub menu with the remaining items.</li>\n<li>Wrap: Wraps the items on multiple lines when the Breadcrumb’s width exceeds the container space.</li>\n<li>Scroll: Shows an HTML scroll bar when the Breadcrumb’s width exceeds the container space.</li>\n<li>None: Shows all the items on a single line.</li>\n</ul>\n","type":"string|BreadcrumbOverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#overflowmode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#root"},"separatorTemplate":{"name":"separatorTemplate","description":"<p>Specifies the separator template for Breadcrumb.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#separatortemplate"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#state"},"url":{"name":"url","description":"<p>Defines the Url based on which the Breadcrumb items are generated.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#url"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#inject"}},"BreadcrumbItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemDirective#shouldcomponentupdate"}},"BreadcrumbItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/breadcrumbItemsDirective#shouldcomponentupdate"}},"CarouselComponent":{"slideChanged":{"name":"slideChanged","description":"<p>The event will be fired after the slide changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#slidechanged"},"slideChanging":{"name":"slideChanging","description":"<p>The event will be fired before the slide change.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#slidechanging"},"allowKeyboardInteraction":{"name":"allowKeyboardInteraction","description":"<p>Defines whether to enable keyboard actions or not.</p>\n<ul>\n<li>@remarks\nIf any form input component is placed on the carousel slide, interacting with it may cause\nthe left/right arrow keys to navigate to other slides. Disabling keyboard interaction helps\nprevent this unintended navigation, leading to a smoother user experience.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#allowkeyboardinteraction"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#allowserverdatabinding"},"animationEffect":{"name":"animationEffect","description":"<p>Specifies the type of animation effects. The possible values for this property as follows</p>\n<ul>\n<li><code>None</code>: The carousel item transition happens without animation.</li>\n<li><code>Slide</code>: The carousel item transition happens with slide animation.</li>\n<li><code>Fade</code>: The Carousel item transition happens with fade animation.</li>\n<li><code>Custom</code>: The Carousel item transition happens with custom animation.</li>\n</ul>\n","type":"CarouselAnimationEffect","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#animationeffect"},"autoPlay":{"name":"autoPlay","description":"<p>Defines whether the slide transition is automatic or manual.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#autoplay"},"buttonsVisibility":{"name":"buttonsVisibility","description":"<p>Defines how to show the previous, next and play pause buttons visibility. The possible values for this property as follows</p>\n<ul>\n<li><code>Hidden</code>: Navigation buttons are hidden.</li>\n<li><code>Visible</code>: Navigation buttons are visible.</li>\n<li><code>VisibleOnHover</code>: Navigation buttons are visible only when we hover the carousel.</li>\n</ul>\n","type":"CarouselButtonVisibility","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#buttonsvisibility"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#context"},"cssClass":{"name":"cssClass","description":"<p>Accepts single/multiple classes (separated by a space) to be used for carousel customization.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Specifies the datasource for the carousel items.</p>\n","type":"Record[]","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#enablertl"},"enableTouchSwipe":{"name":"enableTouchSwipe","description":"<p>Defines whether to enable swipe action in touch devices or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#enabletouchswipe"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the Carousel in pixels/number/percentage. The number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#height"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Accepts HTML attributes/custom attributes to add in individual carousel item.</p>\n","type":"Record","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#htmlattributes"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#ignorecollectionwatch"},"indicatorsTemplate":{"name":"indicatorsTemplate","description":"<p>Accepts the template for indicator buttons.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#indicatorstemplate"},"indicatorsType":{"name":"indicatorsType","description":"<p>Specifies the type of indicators. The available values for this property are:</p>\n<ul>\n<li><code>Default</code>: Displays the indicators with a bullet design.</li>\n<li><code>Dynamic</code>: Applies a dynamic animation design to the indicators.</li>\n<li><code>Fraction</code>: Displays the slides numerically as indicators.</li>\n<li><code>Progress</code>: Represents the slides using a progress bar design.</li>\n</ul>\n","type":"CarouselIndicatorsType","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#indicatorstype"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#initrendercalled"},"interval":{"name":"interval","description":"<p>Specifies the interval duration in milliseconds for carousel item transition.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#interval"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template option for carousel items.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#itemtemplate"},"items":{"name":"items","description":"<p>Allows defining the collection of carousel item to be displayed on the Carousel.</p>\n","type":"CarouselItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#locale"},"loop":{"name":"loop","description":"<p>Defines whether the slide transitions loop end or not. When set to false, the transition stops at last slide.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#loop"},"nextButtonTemplate":{"name":"nextButtonTemplate","description":"<p>Accepts the template for next navigation button.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#nextbuttontemplate"},"partialVisible":{"name":"partialVisible","description":"<p>Enables active slide with partial previous/next slides.\nSlide animation only applicable if the partialVisible is enabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#partialvisible"},"pauseOnHover":{"name":"pauseOnHover","description":"<p>Defines whether the slide transition gets pause on hover or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#pauseonhover"},"playButtonTemplate":{"name":"playButtonTemplate","description":"<p>Accepts the template for play/pause button.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#playbuttontemplate"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#portals"},"previousButtonTemplate":{"name":"previousButtonTemplate","description":"<p>Accepts the template for previous navigation button.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#previousbuttontemplate"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#root"},"selectedIndex":{"name":"selectedIndex","description":"<p>Specifies index of the current carousel item.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#selectedindex"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#setstate"},"showIndicators":{"name":"showIndicators","description":"<p>Defines whether to show the indicator positions or not. The indicator positions allow to know the current slide position of the carousel component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#showindicators"},"showPlayButton":{"name":"showPlayButton","description":"<p>Defines whether to show play button or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#showplaybutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#state"},"swipeMode":{"name":"swipeMode","description":"<p>Specifies whether the slide transition should occur while performing swiping via touch/mouse.\nThe slide swiping is enabled or disabled using bitwise operators. The swiping is disabled using ‘~’ bitwise operator.</p>\n<ul>\n<li>Touch - Enables or disables the swiping action in touch interaction.</li>\n<li>Mouse - Enables or disables the swiping action in mouse interaction.</li>\n</ul>\n","type":"CarouselSwipeMode","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#swipemode"},"width":{"name":"width","description":"<p>Specifies the width of the Carousel in pixels/number/percentage. The number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#databind"},"destroy":{"name":"destroy","description":"<p>Method for destroy the carousel component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#handleunload"},"next":{"name":"next","description":"<p>Method to transit from the current slide to the next slide.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#next"},"onPropertyChanged":{"name":"onPropertyChanged","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#onpropertychanged"},"pause":{"name":"pause","description":"<p>Method to pause the slides programmatically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#pause"},"play":{"name":"play","description":"<p>Method to play the slides programmatically.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#play"},"prev":{"name":"prev","description":"<p>Method to transit from the current slide to the previous slide.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#prev"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/#inject"}},"CarouselItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemDirective#shouldcomponentupdate"}},"CarouselItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/carousel/carouselItemsDirective#shouldcomponentupdate"}},"ContextMenuComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers before closing the menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#beforeclose"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#beforeitemrender"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening the menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#beforeopen"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#created"},"onClose":{"name":"onClose","description":"<p>Triggers while closing the menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#onclose"},"onOpen":{"name":"onOpen","description":"<p>Triggers while opening the menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#onopen"},"select":{"name":"select","description":"<p>Triggers while selecting menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings for the sub menu open.</p>\n","type":"MenuAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#animationsettings"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Menu wrapper.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLUListElement","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Context Menu component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#enablertl"},"enableScrolling":{"name":"enableScrolling","description":"<p>Specifies whether to enable / disable the scrollable option in ContextMenu.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#enablescrolling"},"filter":{"name":"filter","description":"<p>Specifies the filter selector for elements inside the target in that the context menu will be opened.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#filter"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#forceupdate"},"hoverDelay":{"name":"hoverDelay","description":"<p>If hoverDelay is set by particular number, the menu will open after that period.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#hoverdelay"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>This property allows you to define custom templates for items in the ContextMenu.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#itemtemplate"},"items":{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as ContextMenu.</p>\n","type":"MenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#locale"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#setstate"},"showItemOnClick":{"name":"showItemOnClick","description":"<p>Specifies whether to show the sub menu or not on click.\nWhen set to true, the sub menu will open only on mouse click.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#showitemonclick"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#state"},"target":{"name":"target","description":"<p>Specifies target element selector in which the ContextMenu should be opened.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#target"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#attachunloadevent"},"close":{"name":"close","description":"<p>Closes the ContextMenu if it is opened.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#close"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#detachunloadevent"},"enableItems":{"name":"enableItems","description":"<p>This method is used to enable or disable the menu items in the Menu based on the items and enable argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#enableitems"},"getItemIndex":{"name":"getItemIndex","description":"<p>This method is used to get the index of the menu item in the Menu based on the argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#getitemindex"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#getlocaldata"},"getMenuWidth":{"name":"getMenuWidth","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#getmenuwidth"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#handleunload"},"hideItems":{"name":"hideItems","description":"<p>This method is used to hide the menu items in the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#hideitems"},"insertAfter":{"name":"insertAfter","description":"<p>It is used to insert the menu items after the specified menu item text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#insertafter"},"insertBefore":{"name":"insertBefore","description":"<p>It is used to insert the menu items before the specified menu item text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#insertbefore"},"open":{"name":"open","description":"<p>This method is used to open the ContextMenu in specified position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#open"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#removeeventlistener"},"removeItems":{"name":"removeItems","description":"<p>It is used to remove the menu items from the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#serverdatabind"},"setItem":{"name":"setItem","description":"<p>This method is used to set the menu item in the Menu based on the argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#setitem"},"showItems":{"name":"showItems","description":"<p>This method is used to show the menu items in the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#showitems"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#inject"}},"MenuItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemDirective#shouldcomponentupdate"}},"MenuItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/menuItemsDirective#shouldcomponentupdate"}},"MenuComponent":{"beforeClose":{"name":"beforeClose","description":"<p>Triggers before closing the menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#beforeclose"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#beforeitemrender"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before opening the menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#beforeopen"},"created":{"name":"created","description":"<p>Triggers once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#created"},"onClose":{"name":"onClose","description":"<p>Triggers while closing the menu.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#onclose"},"onOpen":{"name":"onOpen","description":"<p>Triggers while opening the menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#onopen"},"select":{"name":"select","description":"<p>Triggers while selecting menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#select"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#allowserverdatabinding"},"animationSettings":{"name":"animationSettings","description":"<p>Specifies the animation settings for the sub menu open.</p>\n","type":"MenuAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/menu/#animationsettings"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/menu/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Menu wrapper.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/menu/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLUListElement","link":"//ej2.syncfusion.com/react/documentation/api/menu/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Menu component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enablertl"},"enableScrolling":{"name":"enableScrolling","description":"<p>Specifies whether to enable / disable the scrollable option in Menu.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enablescrolling"},"fields":{"name":"fields","description":"<p>Specifies mapping fields from the dataSource.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/menu/#fields"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/menu/#forceupdate"},"hamburgerMode":{"name":"hamburgerMode","description":"<p>Specifies whether to enable / disable the hamburger mode in Menu.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#hamburgermode"},"hoverDelay":{"name":"hoverDelay","description":"<p>If hoverDelay is set by particular number, the menu will open after that period.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/menu/#hoverdelay"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#isvue"},"items":{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#locale"},"orientation":{"name":"orientation","description":"<p>Specified the orientation of Menu whether it can be horizontal or vertical.</p>\n","type":"Orientation","link":"//ej2.syncfusion.com/react/documentation/api/menu/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/menu/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/menu/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/menu/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/menu/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/menu/#setstate"},"showItemOnClick":{"name":"showItemOnClick","description":"<p>Specifies whether to show the sub menu or not on click.\nWhen set to true, the sub menu will open only on mouse click.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#showitemonclick"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/menu/#state"},"target":{"name":"target","description":"<p>Specifies target element to open/close Menu while click in Hamburger mode.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#target"},"template":{"name":"template","description":"<p>Specifies the template for Menu item.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/menu/#template"},"title":{"name":"title","description":"<p>Specifies the title text for hamburger mode in Menu.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#title"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#attachunloadevent"},"close":{"name":"close","description":"<p>Closes the Menu if it is opened in hamburger mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#close"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#databind"},"destroy":{"name":"destroy","description":"<p>Destroys the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#detachunloadevent"},"enableItems":{"name":"enableItems","description":"<p>This method is used to enable or disable the menu items in the Menu based on the items and enable argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enableitems"},"getItemIndex":{"name":"getItemIndex","description":"<p>This method is used to get the index of the menu item in the Menu based on the argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#getitemindex"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#getlocaldata"},"getMenuWidth":{"name":"getMenuWidth","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#getmenuwidth"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#handleunload"},"hideItems":{"name":"hideItems","description":"<p>This method is used to hide the menu items in the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#hideitems"},"insertAfter":{"name":"insertAfter","description":"<p>It is used to insert the menu items after the specified menu item text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#insertafter"},"insertBefore":{"name":"insertBefore","description":"<p>It is used to insert the menu items before the specified menu item text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#insertbefore"},"open":{"name":"open","description":"<p>This method is used to open the Menu in hamburger mode.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#open"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#removeeventlistener"},"removeItems":{"name":"removeItems","description":"<p>It is used to remove the menu items from the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#serverdatabind"},"setItem":{"name":"setItem","description":"<p>This method is used to set the menu item in the Menu based on the argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#setitem"},"showItems":{"name":"showItems","description":"<p>This method is used to show the menu items in the Menu based on the items text.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#showitems"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#inject"}},"SidebarComponent":{"change":{"name":"change","description":"<p>Triggers when the state(expand/collapse) of the component is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#change"},"close":{"name":"close","description":"<p>Triggers when component is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#close"},"created":{"name":"created","description":"<p>Triggers when component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#created"},"destroyed":{"name":"destroyed","description":"<p>Triggers when component gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#destroyed"},"open":{"name":"open","description":"<p>Triggers when component is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#open"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#allowserverdatabinding"},"animate":{"name":"animate","description":"<p>Enable or disable the animation transitions on expanding or collapsing the Sidebar.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#animate"},"closeOnDocumentClick":{"name":"closeOnDocumentClick","description":"<p>Specifies whether the Sidebar need to be closed or not when document area is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#closeondocumentclick"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#currentcontext"},"defaultBackdropDiv":{"name":"defaultBackdropDiv","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#defaultbackdropdiv"},"dockSize":{"name":"dockSize","description":"<p>Specifies the size of the Sidebar in dock state.</p>\n<blockquote>\n<p>For more details about dockSize refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/docking-sidebar/\"><code>Dock</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#docksize"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#element"},"enableDock":{"name":"enableDock","description":"<p>Specifies the docking state of the component.</p>\n<blockquote>\n<p>For more details about enableDock refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/docking-sidebar/\"><code>Dock</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#enabledock"},"enableGestures":{"name":"enableGestures","description":"<p>Enables the expand or collapse while swiping in touch devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#enablegestures"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.</p>\n<ol>\n<li>Position</li>\n<li>Type</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Specifies the Sidebar in RTL mode that displays the content in the right-to-left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isdestroyed"},"isOpen":{"name":"isOpen","description":"<p>Gets or sets the Sidebar component is open or close.</p>\n<blockquote>\n<p>When the Sidebar type is set to <code>Auto</code>,\nthe component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isopen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#isvue"},"mediaQuery":{"name":"mediaQuery","description":"<p>Specifies the media query string for resolution, which when met opens the Sidebar.</p>\n<blockquote>\n<p>For more details about mediaQuery refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/auto-close/\"><code>Auto Close</code></a> documentation.</p>\n</blockquote>\n","type":"string|MediaQueryList","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#mediaquery"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#portals"},"position":{"name":"position","description":"<p>Specifies the position of the Sidebar (Left/Right) corresponding to the main content.</p>\n<blockquote>\n<p>For more details about SidebarPosition refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/getting-started/#position\"><code>position</code></a> documentation.</p>\n</blockquote>\n","type":"SidebarPosition","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#position"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#setstate"},"showBackdrop":{"name":"showBackdrop","description":"<p>Specifies the whether to apply overlay options to main content when the Sidebar is in an open state.</p>\n<blockquote>\n<p>For more details about showBackdrop refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/getting-started/#enable-backdrop\"><code>Backdrop</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#showbackdrop"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#state"},"target":{"name":"target","description":"<p>Allows to place the sidebar inside the target element.</p>\n<blockquote>\n<p>For more details about target refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/custom-context/\"><code>Custom Context</code></a> documentation.</p>\n</blockquote>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#target"},"type":{"name":"type","description":"<p>Specifies the expanding types of the Sidebar.</p>\n<ul>\n<li><code>Over</code> - The sidebar floats over the main content area.</li>\n<li><code>Push</code> - The sidebar pushes the main content area to appear side-by-side, and shrinks the main content within the screen width.</li>\n<li><code>Slide</code> - The sidebar translates the x and y positions of main content area based on the sidebar width.\nThe main content area will not be adjusted within the screen width.</li>\n<li><code>Auto</code> - Sidebar with <code>Over</code> type in mobile resolution and <code>Push</code> type in other higher resolutions.</li>\n</ul>\n<blockquote>\n<p>For more details about SidebarType refer to\n<a href=\"../../sidebar/variations/\"><code>SidebarType</code></a> documentation.</p>\n</blockquote>\n","type":"SidebarType","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#type"},"width":{"name":"width","description":"<p>Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.\nWidth can also be set in pixel values.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#width"},"zIndex":{"name":"zIndex","description":"<p>Specifies the z-index of the Sidebar. It is applicable only when sidebar act as overlay type.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#handleunload"},"hide":{"name":"hide","description":"<p>Hide the Sidebar component, if it is in an open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#hide"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#serverdatabind"},"show":{"name":"show","description":"<p>Shows the Sidebar component, if it is in closed state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#show"},"toggle":{"name":"toggle","description":"<p>Shows or hides the Sidebar based on the current state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#toggle"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#inject"}},"StepperComponent":{"beforeStepRender":{"name":"beforeStepRender","description":"<p>Event triggers before rendering each step.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#beforesteprender"},"created":{"name":"created","description":"<p>Event callback that is raised after rendering the stepper.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#created"},"stepChanged":{"name":"stepChanged","description":"<p>Event triggers after active step changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#stepchanged"},"stepChanging":{"name":"stepChanging","description":"<p>Event triggers before active step change.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#stepchanging"},"stepClick":{"name":"stepClick","description":"<p>Event triggers when clicked on step.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#stepclick"},"activeStep":{"name":"activeStep","description":"<p>Defines the current step index of the Stepper.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#activestep"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Defines the step progress animation of the Stepper.</p>\n","type":"StepperAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#animation"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines the CSS class to customize the Stepper appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#forceupdate"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#isvue"},"labelPosition":{"name":"labelPosition","description":"<p>Defines the label position in the Stepper.\nThe possible values are:</p>\n<ul>\n<li>Top</li>\n<li>Bottom</li>\n<li>Start</li>\n<li>End</li>\n</ul>\n","type":"string|StepLabelPosition","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#labelposition"},"linear":{"name":"linear","description":"<p>Defines whether allows to complete one step in order to move to the next or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#linear"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#locale"},"orientation":{"name":"orientation","description":"<p>Defines the orientation type of the Stepper.\nThe possible values are:</p>\n<ul>\n<li>Horizontal</li>\n<li>vertical</li>\n</ul>\n","type":"string|StepperOrientation","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#props"},"readOnly":{"name":"readOnly","description":"<p>Defines whether the read-only mode is enabled for a Stepper control, which means that the user will not be able to interact with it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#setstate"},"showTooltip":{"name":"showTooltip","description":"<p>Defines a value that defines whether to show tooltip or not on each step.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#showtooltip"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#state"},"stepType":{"name":"stepType","description":"<p>Defines whether steps are display with only indicator, only labels or combination of both.\nThe possible values are:</p>\n<ul>\n<li>Default</li>\n<li>Label</li>\n<li>Indicator</li>\n</ul>\n","type":"string|StepType","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#steptype"},"steps":{"name":"steps","description":"<p>Defines the list of steps.</p>\n","type":"StepModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#steps"},"template":{"name":"template","description":"<p>Defines the template content for each step.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#template"},"tooltipTemplate":{"name":"tooltipTemplate","description":"<p>Defines the template content for the tooltip.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#tooltiptemplate"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#databind"},"destroy":{"name":"destroy","description":"<p>Destroy the stepper control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#handleunload"},"nextStep":{"name":"nextStep","description":"<p>Move to next step from current step in Stepper.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#nextstep"},"previousStep":{"name":"previousStep","description":"<p>Move to previous step from current step in Stepper.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#previousstep"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#refresh"},"refreshProgressbar":{"name":"refreshProgressbar","description":"<p>Refreshes the position of the progress bar programmatically when the dimensions of the parent container are changed.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#refreshprogressbar"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#render"},"reset":{"name":"reset","description":"<p>Reset the state of the Stepper and move to the first step.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#reset"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/#inject"}},"StepDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepDirective#shouldcomponentupdate"}},"StepsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stepper/stepsDirective#shouldcomponentupdate"}},"TabItemDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemDirective#shouldcomponentupdate"}},"TabItemsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/tabItemsDirective#shouldcomponentupdate"}},"TabComponent":{"added":{"name":"added","description":"<p>The event will be fired after adding the item to the Tab.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#added"},"adding":{"name":"adding","description":"<p>The event will be fired before adding the item to the Tab.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#adding"},"created":{"name":"created","description":"<p>The event will be fired once the component rendering is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#created"},"destroyed":{"name":"destroyed","description":"<p>The event will be fired when the component gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#destroyed"},"dragged":{"name":"dragged","description":"<p>The event will be fired after dropping the Tab item</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#dragged"},"dragging":{"name":"dragging","description":"<p>The event will be fired while dragging the Tab item</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#dragging"},"onDragStart":{"name":"onDragStart","description":"<p>The event will be fired before dragging the item from Tab</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#ondragstart"},"removed":{"name":"removed","description":"<p>The event will be fired after removing the item from the Tab.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#removed"},"removing":{"name":"removing","description":"<p>The event will be fired before removing the item from the Tab.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#removing"},"selected":{"name":"selected","description":"<p>The event will be fired after the item gets selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#selected"},"selecting":{"name":"selecting","description":"<p>The event will be fired before the item gets selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#selecting"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Sets true to allow drag and drop the Tab items</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#allowdraganddrop"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Specifies the animation configuration settings while showing the content of the Tab.</p>\n","type":"TabAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/tab/#animation"},"clearTemplates":{"name":"clearTemplates","description":"<p>Specifies whether the templates need to be cleared or not while changing the Tab items dynamically.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#cleartemplates"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tab/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets the CSS classes to root element of the Tab that helps to customize component styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tab/#currentcontext"},"dragArea":{"name":"dragArea","description":"<p>Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted\nfor the draggable element movement. By default, the draggable element movement occurs in the toolbar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/#dragarea"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/tab/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to enable the rendering of untrusted HTML values in the Tab component.\nWhen this property is enabled, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>selectedItem</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tab/#forceupdate"},"headerPlacement":{"name":"headerPlacement","description":"<p>Specifies the orientation of Tab header.\nThe possible values for this property as follows</p>\n<ul>\n<li><code>Top</code>: Places the Tab header on the top.</li>\n<li><code>Bottom</code>: Places the Tab header at the bottom.</li>\n<li><code>Left</code>: Places the Tab header on the left.</li>\n<li><code>Right</code>: Places the Tab header at the right.</li>\n</ul>\n","type":"HeaderPosition","link":"//ej2.syncfusion.com/react/documentation/api/tab/#headerplacement"},"height":{"name":"height","description":"<p>Specifies the height of the Tab component. By default, Tab height is set based on the height of its parent.\nTo use height property, heightAdjustMode must be set to 'None'.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tab/#height"},"heightAdjustMode":{"name":"heightAdjustMode","description":"<p>Specifies the height style for Tab content.\nThe possible values for this property as follows</p>\n<ul>\n<li><code>None</code>: Based on the given height property, the content panel height is set.</li>\n<li><code>Auto</code>: Tallest panel height of a given Tab content is set to all the other panels.</li>\n<li><code>Content</code>: Based on the corresponding content height, the content panel height is set.</li>\n<li><code>Fill</code>: Based on the parent height, the content panel height is set.</li>\n</ul>\n","type":"HeightStyles","link":"//ej2.syncfusion.com/react/documentation/api/tab/#heightadjustmode"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#isvue"},"items":{"name":"items","description":"<p>An array of object that is used to configure the Tab component.</p>\n","type":"TabItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/tab/#items"},"loadOn":{"name":"loadOn","description":"<p>Specifies the modes for Tab content.\nThe possible modes are:</p>\n<ul>\n<li><code>Demand</code> - The content of the selected tab alone is loaded initially. The content of the tabs which were loaded once will be maintained in the DOM.</li>\n<li><code>Dynamic</code> - Only the content of the selected tab is loaded and available in the DOM, and it will be replaced with the corresponding content if the tab is selected dynamically.</li>\n<li><code>Init</code> - The content of all the tabs are rendered on the initial load and maintained in the DOM.</li>\n</ul>\n","type":"ContentLoad","link":"//ej2.syncfusion.com/react/documentation/api/tab/#loadon"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/#locale"},"overflowMode":{"name":"overflowMode","description":"<p>Specifies the Tab display mode when Tab content exceeds the viewing area.\nThe possible modes are:</p>\n<ul>\n<li><code>Scrollable</code>: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li><code>Popup</code>: Tab container holds the items that can be placed within the available space and rest of the items are moved to the popup.\nIf the popup content overflows the height of the page, the rest of the elements can be viewed by scrolling the popup.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/tab/#overflowmode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tab/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/tab/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/tab/#refs"},"reorderActiveTab":{"name":"reorderActiveTab","description":"<p>Determines whether to re-order tab items to show active tab item in the header area or popup when OverflowMode is Popup.\nTrue, if active tab item should be visible in header area instead of pop-up. The default value is true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#reorderactivetab"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tab/#root"},"scrollStep":{"name":"scrollStep","description":"<p>Specifies the scrolling distance in scroller.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tab/#scrollstep"},"selectedItem":{"name":"selectedItem","description":"<p>Specifies the index for activating the current Tab item.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tab/#selecteditem"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/tab/#setstate"},"showCloseButton":{"name":"showCloseButton","description":"<p>Specifies whether to show the close button for header items to remove the item from the Tab.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#showclosebutton"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/tab/#state"},"swipeMode":{"name":"swipeMode","description":"<p>Defines whether the tab transition should occur or not when performing Touch/Mouse swipe action.</p>\n","type":"TabSwipeMode","link":"//ej2.syncfusion.com/react/documentation/api/tab/#swipemode"},"tabId":{"name":"tabId","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tab/#tabid"},"width":{"name":"width","description":"<p>Specifies the width of the Tab component. Default, Tab width sets based on the width of its parent.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tab/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#addeventlistener"},"addTab":{"name":"addTab","description":"<p>Adds new items to the Tab that accepts an array as Tab items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#addtab"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers, attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#detachunloadevent"},"disable":{"name":"disable","description":"<p>Specifies the value to disable/enable the Tab component.\nWhen set to <code>true</code>, the component will be disabled.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#disable"},"enableTab":{"name":"enableTab","description":"<p>Enables or disables the specified Tab item. On passing value as <code>false</code>, the item will be disabled.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#enabletab"},"getItemIndex":{"name":"getItemIndex","description":"<p>Gets the item index from the Tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#getitemindex"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#handleunload"},"hideTab":{"name":"hideTab","description":"<p>Shows or hides the Tab that is in the specified index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#hidetab"},"refresh":{"name":"refresh","description":"<p>Refresh the tab component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#refresh"},"refreshActiveTab":{"name":"refreshActiveTab","description":"<p>To refresh the active tab contents.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#refreshactivetab"},"refreshActiveTabBorder":{"name":"refreshActiveTabBorder","description":"<p>To refresh the active tab indicator.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#refreshactivetabborder"},"refreshOverflow":{"name":"refreshOverflow","description":"<p>Reorganizes and adjusts the Tab headers to fit the available width without re-rendering the entire Tab component.\nThis method is useful for optimizing the layout when:</p>\n<ul>\n<li>A hidden tab item becomes visible.</li>\n<li>The number of tab items changes dynamically.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#refreshoverflow"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#removeeventlistener"},"removeTab":{"name":"removeTab","description":"<p>Removes the items in the Tab from the specified index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#removetab"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#render"},"select":{"name":"select","description":"<p>Specifies the index or HTMLElement to select an item from the Tab.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#select"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tab/#inject"}},"ToolbarComponent":{"beforeCreate":{"name":"beforeCreate","description":"<p>The event will be fired before the control is rendered on a page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#beforecreate"},"clicked":{"name":"clicked","description":"<p>The event will be fired on clicking the Toolbar elements.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#clicked"},"created":{"name":"created","description":"<p>The event will be fired when the control is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#created"},"destroyed":{"name":"destroyed","description":"<p>The event will be fired when the control gets destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#destroyed"},"allowKeyboard":{"name":"allowKeyboard","description":"<p>When this property is set to true, it allows the keyboard interaction in toolbar.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#allowkeyboard"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets the CSS classes to root element of the Tab that helps to customize component styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#element"},"enableCollision":{"name":"enableCollision","description":"<p>Enable or disable the popup collision.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#enablecollision"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#forceupdate"},"height":{"name":"height","description":"<p>Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#isvue"},"items":{"name":"items","description":"<p>An array of items that is used to configure Toolbar commands.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#items"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#locale"},"overflowMode":{"name":"overflowMode","description":"<p>Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\nThe possible values for this property as follows</p>\n<ul>\n<li>Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li>Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the <em>popup</em>.</li>\n<li>MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.</li>\n<li>Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\nIf the popup content overflows the height of the page, the rest of the elements will be hidden.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#overflowmode"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#root"},"scrollStep":{"name":"scrollStep","description":"<p>Specifies the scrolling distance in scroller.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#scrollstep"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#state"},"width":{"name":"width","description":"<p>Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#addeventlistener"},"addItems":{"name":"addItems","description":"<p>Adds new items to the Toolbar that accepts an array as Toolbar items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#additems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the control from the DOM and also removes all its related events.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#detachunloadevent"},"disable":{"name":"disable","description":"<p>Specifies the value to disable/enable the Toolbar component.\nWhen set to <code>true</code>, the component will be disabled.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#disable"},"enableItems":{"name":"enableItems","description":"<p>Enables or disables the specified Toolbar item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#enableitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#handleunload"},"hideItem":{"name":"hideItem","description":"<p>Shows or hides the Toolbar item that is in the specified index.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#hideitem"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#refresh"},"refreshOverflow":{"name":"refreshOverflow","description":"<p>Refresh the whole Toolbar component without re-rendering.</p>\n<ul>\n<li>It is used to manually refresh the Toolbar overflow modes such as scrollable, popup, multi row, and extended.</li>\n<li>It will refresh the Toolbar component after loading items dynamically.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#refreshoverflow"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#removeeventlistener"},"removeItems":{"name":"removeItems","description":"<p>Removes the items from the Toolbar. Acceptable arguments are index of item/HTMLElement/node list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#inject"}},"TreeViewComponent":{"actionFailure":{"name":"actionFailure","description":"<p>Event callback that is raised while any TreeView action failed to fetch the desired results.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#actionfailure"},"created":{"name":"created","description":"<p>Event callback that is raised when the TreeView component is created successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#created"},"dataBound":{"name":"dataBound","description":"<p>Event callback that is raised when data source is populated in the TreeView.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#databound"},"dataSourceChanged":{"name":"dataSourceChanged","description":"<p>Event callback that is raised when data source is changed in the TreeView. The data source will be changed after performing some operation like\ndrag and drop, node editing, adding and removing node.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#datasourcechanged"},"destroyed":{"name":"destroyed","description":"<p>Event callback that is raised when the TreeView control is destroyed successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#destroyed"},"drawNode":{"name":"drawNode","description":"<p>Event callback that is raised before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#drawnode"},"keyPress":{"name":"keyPress","description":"<p>Event callback that is raised when key press is successful. It helps to customize the operations at key press.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#keypress"},"nodeChecked":{"name":"nodeChecked","description":"<p>Event callback that is raised when the TreeView node is checked/unchecked successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodechecked"},"nodeChecking":{"name":"nodeChecking","description":"<p>Event callback that is raised before the TreeView node is to be checked/unchecked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodechecking"},"nodeClicked":{"name":"nodeClicked","description":"<p>Event callback that is raised when the TreeView node is clicked successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeclicked"},"nodeCollapsed":{"name":"nodeCollapsed","description":"<p>Event callback that is raised when the TreeView node collapses successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodecollapsed"},"nodeCollapsing":{"name":"nodeCollapsing","description":"<p>Event callback that is raised before the TreeView node collapses.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodecollapsing"},"nodeDragStart":{"name":"nodeDragStart","description":"<p>Event callback that is raised when the TreeView node drag (move) starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodedragstart"},"nodeDragStop":{"name":"nodeDragStop","description":"<p>Event callback that is raised when the TreeView node drag (move) is stopped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodedragstop"},"nodeDragging":{"name":"nodeDragging","description":"<p>Event callback that is raised when the TreeView node is dragged (moved) continuously.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodedragging"},"nodeDropped":{"name":"nodeDropped","description":"<p>Event callback that is raised when the TreeView node is dropped on target element successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodedropped"},"nodeEdited":{"name":"nodeEdited","description":"<p>Event callback that is raised when the TreeView node is renamed successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeedited"},"nodeEditing":{"name":"nodeEditing","description":"<p>Event callback that is raised before the TreeView node is renamed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeediting"},"nodeExpanded":{"name":"nodeExpanded","description":"<p>Event callback that is raised when the TreeView node expands successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeexpanded"},"nodeExpanding":{"name":"nodeExpanding","description":"<p>Event callback that is raised before the TreeView node is to be expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeexpanding"},"nodeSelected":{"name":"nodeSelected","description":"<p>Event callback that is raised when the TreeView node is selected/unselected successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeselected"},"nodeSelecting":{"name":"nodeSelecting","description":"<p>Event callback that is raised before the TreeView node is selected/unselected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodeselecting"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in\ndesktop, hold the mouse on the node, drag it to the target node and drop the node by releasing\nthe mouse. For touch devices, drag and drop operation is performed by touch, touch move\nand touch end. For more information on drag and drop nodes concept, refer to\n<a href=\"../../treeview/drag-and-drop/\">Drag and Drop</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowdraganddrop"},"allowEditing":{"name":"allowEditing","description":"<p>Enables or disables editing of the text in the TreeView node. When <code>allowEditing</code> property is set\nto true, the TreeView allows you to edit the node by double clicking the node or by navigating to\nthe node and pressing <strong>F2</strong> key. For more information on node editing, refer\nto <a href=\"../../treeview/node-editing/\">Node Editing</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowediting"},"allowMultiSelection":{"name":"allowMultiSelection","description":"<p>Enables or disables multi-selection of nodes. To select multiple nodes:</p>\n<ul>\n<li>Select the nodes by holding down the <strong>Ctrl</strong> key while clicking on the nodes.</li>\n<li>Select consecutive nodes by clicking the first node to select and hold down the <strong>Shift</strong> key\nand click the last node to select.\nFor more information on multi-selection, refer to\n<a href=\"../../treeview/multiple-selection/\">Multi-Selection</a>.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowmultiselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowserverdatabinding"},"allowTextWrap":{"name":"allowTextWrap","description":"<p>Enables or disables text wrapping when text exceeds the bounds in the TreeView node.\nWhen the allowTextWrap property is set to true, the TreeView node text content will wrap to the next line\nwhen it exceeds the width of the TreeView node.\nThe TreeView node height will be adjusted automatically based on the TreeView node content.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowtextwrap"},"animation":{"name":"animation","description":"<p>Specifies the type of animation applied on expanding and collapsing the nodes along with duration.</p>\n","type":"NodeAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#animation"},"autoCheck":{"name":"autoCheck","description":"<p>Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#autocheck"},"checkDisabledChildren":{"name":"checkDisabledChildren","description":"<p>Determines whether the disabled children will be checked or not if their parent is checked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#checkdisabledchildren"},"checkedNodes":{"name":"checkedNodes","description":"<p>The <code>checkedNodes</code> property is used to set the nodes that need to be checked.\nThis property returns the checked nodes ID in the TreeView component.\nThe <code>checkedNodes</code> property depends upon the value of <code>showCheckBox</code> property.\nFor more information on checkedNodes, refer to\n<a href=\"../../treeview/check-box#checked-nodes\">checkedNodes</a>.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#checkednodes"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies one or more than one CSS classes to be added with root element of the TreeView to help customize the appearance of the component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#currentcontext"},"disabled":{"name":"disabled","description":"<p>Specifies a value that indicates whether the TreeView component is disabled or not.\nWhen set to true, user interaction will not be occurred in TreeView.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#disabled"},"dragArea":{"name":"dragArea","description":"<p>Specifies the target in which the draggable element can be moved and dropped.\nBy default, the draggable element movement occurs in the page.</p>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#dragarea"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the TreeView component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.</p>\n<ol>\n<li><code>selectedNodes</code> - Represents the nodes that are selected in the TreeView component.</li>\n<li><code>checkedNodes</code>  - Represents the nodes that are checked in the TreeView component.</li>\n<li><code>expandedNodes</code> - Represents the nodes that are expanded in the TreeView component.</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#enablertl"},"expandOn":{"name":"expandOn","description":"<p>Specifies the action on which the node expands or collapses.\nThe available actions :\n<code>Click</code> - The expand/collapse operation happens when you single-click on the node in desktop.\n<code>DblClick</code> - The expand/collapse operation happens when you double-click on the node in desktop.\n<code>None</code> - The expand/collapse operation will not happen.\nIn mobile devices, the node expand/collapse action happens on single tap.\nHere ExpandOn attribute is set to single click property also can use double click and none property.</p>\n","type":"ExpandOnSettings","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#expandon"},"expandedNodes":{"name":"expandedNodes","description":"<p>Represents the expanded nodes in the TreeView component. We can set the nodes that need to be\nexpanded or get the ID of the nodes that are currently expanded by using this property.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#expandednodes"},"fields":{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#forceupdate"},"fullRowNavigable":{"name":"fullRowNavigable","description":"<p>If this property is set to true, then the entire TreeView node will be navigate-able instead of text element.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fullrownavigable"},"fullRowSelect":{"name":"fullRowSelect","description":"<p>On enabling this property, the entire row of the TreeView node gets selected by clicking a node.\nWhen disabled only the corresponding node's text gets selected.\nFor more information on Fields concept, refer to\n<a href=\"../../treeview/data-binding#local-data\">Fields</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fullrowselect"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isdestroyed"},"isFilter":{"name":"isFilter","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isfilter"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#isvue"},"loadOnDemand":{"name":"loadOnDemand","description":"<p>By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the\nbeginning itself.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#loadondemand"},"nodeTemplate":{"name":"nodeTemplate","description":"<p>Specifies a template to render customized content for all the nodes. If the <code>nodeTemplate</code> property\nis set, the template content overrides the displayed node text. The property accepts template string\n<a href=\"https://ej2.syncfusion.com/documentation/common/template-engine/\">template string</a>\nor HTML element ID holding the content. For more information on template concept, refer to\n<a href=\"../../treeview/template/\">Template</a>.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodetemplate"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#root"},"selectedNodes":{"name":"selectedNodes","description":"<p>Represents the selected nodes in the TreeView component. We can set the nodes that need to be\nselected or get the ID of the nodes that are currently selected by using this property.\nOn enabling <code>allowMultiSelection</code> property we can select multiple nodes and on disabling\nit we can select only a single node.\nFor more information on selectedNodes, refer to\n<a href=\"../../treeview/multiple-selection#selected-nodes\">selectedNodes</a>.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#selectednodes"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#setstate"},"showCheckBox":{"name":"showCheckBox","description":"<p>Indicates that the nodes will display CheckBoxes in the TreeView.\nThe CheckBox will be displayed next to the expand/collapse icon of the node. For more information on CheckBoxes, refer to\n<a href=\"../../treeview/check-box/\">CheckBox</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#showcheckbox"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,\nor are not sorted at all. The available types of sort order are,</p>\n<ul>\n<li><code>None</code> - The nodes are not sorted.</li>\n<li><code>Ascending</code> - The nodes are sorted in the ascending order.</li>\n<li><code>Descending</code> - The nodes are sorted in the ascending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#state"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#addeventlistener"},"addNodes":{"name":"addNodes","description":"<p>Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\nthen the nodes are added as children of the given parentID or in the root level of TreeView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#addnodes"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#attachunloadevent"},"beginEdit":{"name":"beginEdit","description":"<p>Editing can also be enabled by using the <code>beginEdit</code> property, instead of clicking on the\nTreeView node. On passing the node ID or element through this property, the edit textBox\nwill be created for the particular node thus allowing us to edit it.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#beginedit"},"checkAll":{"name":"checkAll","description":"<p>Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\nas argument to this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#checkall"},"collapseAll":{"name":"collapseAll","description":"<p>Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\nYou can also collapse all the nodes excluding the hidden nodes by setting <strong>excludeHiddenNodes</strong> to true. If you want to collapse\na specific level of nodes, set <strong>level</strong> as argument to collapseAll method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#collapseall"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#detachunloadevent"},"disableNodes":{"name":"disableNodes","description":"<p>Disables the collection of nodes by passing the ID of nodes or node elements in the array.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#disablenodes"},"enableNodes":{"name":"enableNodes","description":"<p>Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#enablenodes"},"ensureVisible":{"name":"ensureVisible","description":"<p>Ensures visibility of the TreeView node by using node ID or node element.\nWhen many TreeView nodes are present and we need to find a particular node, <code>ensureVisible</code> property\nhelps bring the node to visibility by expanding the TreeView and scrolling to the specific node.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#ensurevisible"},"expandAll":{"name":"expandAll","description":"<p>Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\nas argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\n<strong>excludeHiddenNodes</strong> to true to this method. To expand a specific level of nodes, set <strong>level</strong> as argument to expandAll method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#expandall"},"getAllCheckedNodes":{"name":"getAllCheckedNodes","description":"<p>Gets all the checked nodes including child, whether it is loaded or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#getallcheckednodes"},"getDisabledNodes":{"name":"getDisabledNodes","description":"<p>Gets all the disabled nodes including child, whether it is loaded or not.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#getdisablednodes"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#getlocaldata"},"getNode":{"name":"getNode","description":"<p>Gets the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#getnode"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#getrootelement"},"getTreeData":{"name":"getTreeData","description":"<p>To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\nnode selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.</p>\n<ul>\n<li>If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\nof the corresponding node otherwise it will return the entire updated data source of TreeView.</li>\n<li>The updated data source also contains custom attributes if you specified in data source.</li>\n</ul>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#gettreedata"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#handleunload"},"moveNodes":{"name":"moveNodes","description":"<p>Moves the collection of nodes within the same TreeView based on target or its index position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#movenodes"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#refresh"},"refreshNode":{"name":"refreshNode","description":"<p>Refreshes a particular node of the TreeView.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#refreshnode"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#removeeventlistener"},"removeNodes":{"name":"removeNodes","description":"<p>Removes the collection of TreeView nodes by passing the array of node details as argument to this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#removenodes"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#serverdatabind"},"uncheckAll":{"name":"uncheckAll","description":"<p>Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\nas argument to this method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#uncheckall"},"updateNode":{"name":"updateNode","description":"<p>Replaces the text of the TreeView node with the given text only when the <code>allowEditing</code> property is enabled.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#updatenode"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#inject"}},"AutoCompleteComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers when the popup before opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#beforeopen"},"blur":{"name":"blur","description":"<p>Triggers when focus moves out from the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#blur"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected or when the model value is changed by user.\nUse change event to\n<a href=\"../../drop-down-list/how-to/cascading\"><code>Configure the Cascading DropDownList</code></a></p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#change"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#created"},"customValueSpecifier":{"name":"customValueSpecifier","description":"<p>Triggers on set a\n<a href=\"../../combo-box/getting-started#custom-values\"><code>custom value</code></a> to this component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#customvaluespecifier"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the popup list..</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#filtering"},"focus":{"name":"focus","description":"<p>Triggers when the component is focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#focus"},"open":{"name":"open","description":"<p>Triggers when the popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#open"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when the user starts resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the user finishes resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers continuously while the DropDown popup is being resized by the user.\nThis event provides live updates on the width and height of the popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#resizing"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup list content of the component\nwhen the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#actionfailuretemplate"},"allowCustom":{"name":"allowCustom","description":"<p>Specifies whether the component allows user defined value which does not exist in data source.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#allowcustom"},"allowObjectBinding":{"name":"allowObjectBinding","description":"<p>Defines whether the object binding is allowed or not in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#allowobjectbinding"},"allowResize":{"name":"allowResize","description":"<p>Gets or sets a value that indicates whether the DropDownList popup can be resized.\nWhen set to <code>true</code>, a resize handle appears in the bottom-right corner of the popup,\nallowing the user to resize the width and height of the popup.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#allowresize"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#allowserverdatabinding"},"autofill":{"name":"autofill","description":"<p>Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#autofill"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets CSS classes to the root element of the component that allows customization of appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of\n<code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Defines whether to enable virtual scrolling in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#enablevirtualization"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#enabled"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item</li>\n<li>value - Maps the value column from data table for each list item</li>\n<li>iconCss - Maps the icon class column from data table for each list item</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field</li>\n</ul>\n<blockquote>\n<p>For more details about the field mapping refer to <a href=\"../../auto-complete/data-binding\"><code>Data binding</code></a> documentation.</p>\n</blockquote>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#fields"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe available <a href=\"../../auto-complete/filtering/#change-the-filter-type\"><code>FilterType</code></a>\nand its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>Contains</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never: The label will never float in the input when the placeholder is available.</li>\n<li>Always: The floating label will always float above the input.</li>\n<li>Auto: The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Accepts the template design and assigns it to the footer container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#grouptemplate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Accepts the template design and assigns it to the header container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#headertemplate"},"highlight":{"name":"highlight","description":"<p>When set to ‘true’, highlight the searched characters on suggested list items.</p>\n<blockquote>\n<p>For more details about the highlight refer to <a href=\"../../auto-complete/how-to/custom-search\"><code>Custom highlight search</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#highlight"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as title, name, etc., and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#htmlattributes"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>When set to ‘false’, consider the <a href=\"../../auto-complete/filtering/#case-sensitive-filtering\"><code>case-sensitive</code></a>\non performing the search to find suggestions.\nBy default consider the casing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isdestroyed"},"isDeviceFullScreen":{"name":"isDeviceFullScreen","description":"<p>Defines whether the popup opens in fullscreen mode on mobile devices when filtering is enabled. When set to false, the popup will display similarly on both mobile and desktop devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isdevicefullscreen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each list item present in the popup.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#locale"},"minLength":{"name":"minLength","description":"<p>Allows you to set [`the minimum search character length']\n(../../auto-complete/filtering#limit-the-minimum-filter-character),\nthe search action will perform after typed minimum characters.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#minlength"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of component\nwhen no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#norecordstemplate"},"placeholder":{"name":"placeholder","description":"<p>Specifies a short hint that describes the expected value of the DropDownList component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the popup list.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup list. By default, the popup width sets based on the width of\nthe component.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#props"},"query":{"name":"query","description":"<p>Accepts the external <code>query</code>\nthat execute along with data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#query"},"readonly":{"name":"readonly","description":"<p>When set to true, the user interactions on the component are disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear button.\nWhen the clear button is clicked, <code>value</code>, <code>text</code>, and <code>index</code> properties are reset to null.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#showclearbutton"},"showPopupButton":{"name":"showPopupButton","description":"<p>Allows you to either show or hide the popup button on the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#showpopupbutton"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the <code>sortOrder</code> to sort the data source. The available type of sort orders are</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#state"},"suggestionCount":{"name":"suggestionCount","description":"<p>Supports the <a href=\"../../auto-complete/filtering#filter-item-count\"><code>specified number</code></a>\nof list items on the suggestion popup.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#suggestioncount"},"value":{"name":"value","description":"<p>Gets or sets the value of the selected item in the component.</p>\n","type":"number|string|boolean|object|null","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#value"},"width":{"name":"width","description":"<p>Specifies the width of the component. By default, the component width sets based on the width of\nits parent container. You can also set the width in pixel values.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the component popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#attachunloadevent"},"clear":{"name":"clear","description":"<p>Allows you to clear the selected values from the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Method to disable specific item in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#disableitem"},"filter":{"name":"filter","description":"<p>To filter the data from given data source by using query</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#filter"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to the component for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Moves the focus from the component if the component is already focused.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#focusout"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#getdatabyvalue"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup if it is in open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#hidepopup"},"hideSpinner":{"name":"hideSpinner","description":"<p>Hides the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#hidespinner"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Search the entered text and show it in the suggestion list if available.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#showpopup"},"showSpinner":{"name":"showSpinner","description":"<p>Shows the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/auto-complete/#inject"}},"ComboBoxComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers when the popup before opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#beforeopen"},"blur":{"name":"blur","description":"<p>Triggers when focus moves out from the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#blur"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected or when the model value is changed by user.\nUse change event to\n<a href=\"../../drop-down-list/how-to/cascading\"><code>Configure the Cascading DropDownList</code></a></p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#change"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#created"},"customValueSpecifier":{"name":"customValueSpecifier","description":"<p>Triggers on set a\n<a href=\"../../combo-box/getting-started#custom-values\"><code>custom value</code></a> to this component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#customvaluespecifier"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the popup list..</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the component.</p>\n<blockquote>\n<p>For more details about the filtering refer to <a href=\"../../combo-box/filtering\"><code>Filtering</code></a> documentation.</p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#filtering"},"focus":{"name":"focus","description":"<p>Triggers when the component is focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#focus"},"open":{"name":"open","description":"<p>Triggers when the popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#open"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when the user starts resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the user finishes resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers continuously while the DropDown popup is being resized by the user.\nThis event provides live updates on the width and height of the popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#resizing"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup list content of the component\nwhen the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#actionfailuretemplate"},"allowCustom":{"name":"allowCustom","description":"<p>Specifies whether the component allows user defined value which does not exist in data source.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#allowcustom"},"allowFiltering":{"name":"allowFiltering","description":"<p>When allowFiltering is set to true, show the filter bar (search box) of the component.\nThe filter action retrieves matched items through the <code>filtering</code> event based on\nthe characters typed in the search TextBox.\nIf no match is found, the value of the <code>noRecordsTemplate</code> property will be displayed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#allowfiltering"},"allowObjectBinding":{"name":"allowObjectBinding","description":"<p>Defines whether the object binding is allowed or not in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#allowobjectbinding"},"allowResize":{"name":"allowResize","description":"<p>Gets or sets a value that indicates whether the DropDownList popup can be resized.\nWhen set to <code>true</code>, a resize handle appears in the bottom-right corner of the popup,\nallowing the user to resize the width and height of the popup.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#allowresize"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#allowserverdatabinding"},"autofill":{"name":"autofill","description":"<p>Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#autofill"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets CSS classes to the root element of the component that allows customization of appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of\n<code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Defines whether to enable virtual scrolling in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#enablevirtualization"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#enabled"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item.</li>\n<li>value - Maps the value column from data table for each list item.</li>\n<li>iconCss - Maps the icon class column from data table for each list item.</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#fields"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe <code>FilterType</code> and its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>StartsWith</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never: The label will never float in the input when the placeholder is available.</li>\n<li>Always: The floating label will always float above the input.</li>\n<li>Auto: The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Accepts the template design and assigns it to the footer container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#grouptemplate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Accepts the template design and assigns it to the header container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#headertemplate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as title, name, etc., and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#htmlattributes"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>When set to ‘false’, consider the <code>case-sensitive</code> on performing the search to find suggestions.\nBy default consider the casing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#ignorecollectionwatch"},"index":{"name":"index","description":"<p>Gets or sets the index of the selected item in the component.</p>\n","type":"number|null","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#index"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isdestroyed"},"isDeviceFullScreen":{"name":"isDeviceFullScreen","description":"<p>Defines whether the popup opens in fullscreen mode on mobile devices when filtering is enabled. When set to false, the popup will display similarly on both mobile and desktop devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isdevicefullscreen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each list item present in the popup.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#locale"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of component\nwhen no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#norecordstemplate"},"placeholder":{"name":"placeholder","description":"<p>Specifies a short hint that describes the expected value of the DropDownList component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the popup list.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup list. By default, the popup width sets based on the width of\nthe component.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#props"},"query":{"name":"query","description":"<p>Accepts the external <code>Query</code>\nthat execute along with <a href=\"../../combo-box/data-binding\"><code>data processing</code></a>.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#query"},"readonly":{"name":"readonly","description":"<p>When set to true, the user interactions on the component are disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear button.\nWhen the clear button is clicked, <code>value</code>, <code>text</code>, and <code>index</code> properties are reset to null.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#showclearbutton"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the <code>sortOrder</code> to sort the data source. The available type of sort orders are</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#state"},"text":{"name":"text","description":"<p>Gets or sets the display text of the selected item in the component.</p>\n","type":"string|null","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#text"},"value":{"name":"value","description":"<p>Gets or sets the value of the selected item in the component.</p>\n","type":"number|string|boolean|object|null","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#value"},"width":{"name":"width","description":"<p>Specifies the width of the component. By default, the component width sets based on the width of\nits parent container. You can also set the width in pixel values.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the component popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#attachunloadevent"},"clear":{"name":"clear","description":"<p>Allows you to clear the selected values from the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Method to disable specific item in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#disableitem"},"filter":{"name":"filter","description":"<p>To filter the data from given data source by using query</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#filter"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to the component for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Moves the focus from the component if the component is already focused.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#focusout"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#getdatabyvalue"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup if it is in open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#hidepopup"},"hideSpinner":{"name":"hideSpinner","description":"<p>Hides the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#hidespinner"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Opens the popup that displays the list of items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#showpopup"},"showSpinner":{"name":"showSpinner","description":"<p>Shows the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/combo-box/#inject"}},"DropDownListComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers when the popup before opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#beforeopen"},"blur":{"name":"blur","description":"<p>Triggers when focus moves out from the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#blur"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected or when the model value is changed by user.\nUse change event to\n<a href=\"../../drop-down-list/how-to/cascading\"><code>Configure the Cascading DropDownList</code></a></p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#change"},"close":{"name":"close","description":"<p>Triggers when the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the popup list..</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the filter bar when the\n<a href=\"./#allowfiltering\"><code>allowFiltering</code></a>\nis enabled.</p>\n<blockquote>\n<p>For more details about the filtering refer to <a href=\"../../drop-down-list/filtering\"><code>Filtering</code></a> documentation.</p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#filtering"},"focus":{"name":"focus","description":"<p>Triggers when the component is focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#focus"},"open":{"name":"open","description":"<p>Triggers when the popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#open"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when the user starts resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the user finishes resizing the DropDown popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers continuously while the DropDown popup is being resized by the user.\nThis event provides live updates on the width and height of the popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#resizing"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup list content of the component\nwhen the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#actionfailuretemplate"},"allowFiltering":{"name":"allowFiltering","description":"<p>When allowFiltering is set to true, show the filter bar (search box) of the component.\nThe filter action retrieves matched items through the <code>filtering</code> event based on\nthe characters typed in the search TextBox.\nIf no match is found, the value of the <code>noRecordsTemplate</code> property will be displayed.</p>\n<blockquote>\n<p>For more details about the filtering refer to <a href=\"../../drop-down-list/filtering\"><code>Filtering</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#allowfiltering"},"allowObjectBinding":{"name":"allowObjectBinding","description":"<p>Defines whether the object binding is allowed or not in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#allowobjectbinding"},"allowResize":{"name":"allowResize","description":"<p>Gets or sets a value that indicates whether the DropDownList popup can be resized.\nWhen set to <code>true</code>, a resize handle appears in the bottom-right corner of the popup,\nallowing the user to resize the width and height of the popup.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#allowresize"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets CSS classes to the root element of the component that allows customization of appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of\n<code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#enablertl"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Defines whether to enable virtual scrolling in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#enablevirtualization"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#enabled"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item.</li>\n<li>value - Maps the value column from data table for each list item.</li>\n<li>iconCss - Maps the icon class column from data table for each list item.</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#fields"},"filterBarPlaceholder":{"name":"filterBarPlaceholder","description":"<p>Accepts the value to be displayed as a watermark text on the filter bar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#filterbarplaceholder"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe <code>FilterType</code> and its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>StartsWith</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never: The label will never float in the input when the placeholder is available.</li>\n<li>Always: The floating label will always float above the input.</li>\n<li>Auto: The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Accepts the template design and assigns it to the footer container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#grouptemplate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Accepts the template design and assigns it to the header container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#headertemplate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as title, name, etc., and\naccepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#htmlattributes"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>When set to ‘false’, consider the <code>case-sensitive</code> on performing the search to find suggestions.\nBy default consider the casing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#ignorecollectionwatch"},"index":{"name":"index","description":"<p>Gets or sets the index of the selected item in the component.</p>\n","type":"number|null","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#index"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isdestroyed"},"isDeviceFullScreen":{"name":"isDeviceFullScreen","description":"<p>Defines whether the popup opens in fullscreen mode on mobile devices when filtering is enabled. When set to false, the popup will display similarly on both mobile and desktop devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isdevicefullscreen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each list item present in the popup.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#locale"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of component\nwhen no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#norecordstemplate"},"placeholder":{"name":"placeholder","description":"<p>Specifies a short hint that describes the expected value of the DropDownList component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the popup list.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup list. By default, the popup width sets based on the width of\nthe component.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../drop-down-list/getting-started#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#props"},"query":{"name":"query","description":"<p>Accepts the external <code>Query</code>\nthat execute along with data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#query"},"readonly":{"name":"readonly","description":"<p>When set to true, the user interactions on the component are disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear button.\nWhen the clear button is clicked, <code>value</code>, <code>text</code>, and <code>index</code> properties are reset to null.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#showclearbutton"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the <code>sortOrder</code> to sort the data source. The available type of sort orders are</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#state"},"text":{"name":"text","description":"<p>Gets or sets the display text of the selected item in the component.</p>\n","type":"string|null","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#text"},"value":{"name":"value","description":"<p>Gets or sets the value of the selected item in the component.</p>\n","type":"number|string|boolean|object|null","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#value"},"valueTemplate":{"name":"valueTemplate","description":"<p>Accepts the template design and assigns it to the selected list item in the input element of the component.\nFor more details about the available template options refer to\n<a href=\"../../drop-down-list/templates\"><code>Template</code></a> documentation.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#valuetemplate"},"width":{"name":"width","description":"<p>Specifies the width of the component. By default, the component width sets based on the width of\nits parent container. You can also set the width in pixel values.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the component popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds a new item to the popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#attachunloadevent"},"clear":{"name":"clear","description":"<p>Allows you to clear the selected values from the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Method to disable specific item in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#disableitem"},"filter":{"name":"filter","description":"<p>To filter the data from given data source by using query</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#filter"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus on the component for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Moves the focus from the component if the component is already focused.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#focusout"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#getdatabyvalue"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup if it is in an open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#hidepopup"},"hideSpinner":{"name":"hideSpinner","description":"<p>Hides the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#hidespinner"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#requiredmodules"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Opens the popup that displays the list of items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#showpopup"},"showSpinner":{"name":"showSpinner","description":"<p>Shows the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-list/#inject"}},"DropDownTreeComponent":{"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Fires when popup opens before animation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#beforeopen"},"blur":{"name":"blur","description":"<p>Triggers when the Dropdown Tree input element gets focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#blur"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected or when the model value is changed by user.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#change"},"close":{"name":"close","description":"<p>Fires when popup close after animation completion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#close"},"created":{"name":"created","description":"<p>Triggers when the Dropdown Tree is created successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the Dropdown Tree.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the Dropdown Tree is destroyed successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the filter bar when the <strong>allowFiltering</strong> is enabled.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#filtering"},"focus":{"name":"focus","description":"<p>Triggers when the Dropdown Tree input element is focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#focus"},"keyPress":{"name":"keyPress","description":"<p>Triggers when key press is successful. It helps to customize the operations at key press.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#keypress"},"open":{"name":"open","description":"<p>Fires when popup opens after animation completion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#open"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Specifies the template that renders to the popup list content of the\nDropdown Tree component when the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#actionfailuretemplate"},"allowFiltering":{"name":"allowFiltering","description":"<p>When allowFiltering is set to true, it shows the filter bar (search text box) of the component.\nThe filter action retrieves matched items through the <strong>filtering</strong> event based on the characters typed in the search text box.\nIf no match is found, the value of the <strong>noRecordsTemplate</strong> property will be displayed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#allowfiltering"},"allowMultiSelection":{"name":"allowMultiSelection","description":"<p>Enables or disables the multi-selection of items. To select multiple items:</p>\n<ul>\n<li>Select the items by holding down the <strong>Ctrl</strong> key when clicking on the items.</li>\n<li>Select consecutive items by clicking the first item to select and hold down the <strong>Shift</strong> key and click the last item to select.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#allowmultiselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#allowserverdatabinding"},"changeOnBlur":{"name":"changeOnBlur","description":"<p>By default, the Dropdown Tree component fires the change event while focusing out the component.\nIf you want to fire the change event on every value selection and remove, then disable this property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#changeonblur"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#context"},"cssClass":{"name":"cssClass","description":"<p>Specifies the CSS classes to be added with the root and popup element of the Dropdown Tree component.\nthat allows customization of appearance.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#currentcontext"},"customTemplate":{"name":"customTemplate","description":"<p>This property is used to customize the display text of the selected items in the Dropdown Tree. The given custom template is\nadded to the input instead of the selected item text in the Dropdown Tree when the multi-selection or checkbox support is enabled.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#customtemplate"},"delimiterChar":{"name":"delimiterChar","description":"<p>Defines the value separator character in the input element when multi-selection or checkbox is enabled in the Dropdown Tree.\nThe delimiter character is applicable only for <strong>default</strong> and <strong>delimiter</strong> visibility modes.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#delimiterchar"},"destroyPopupOnHide":{"name":"destroyPopupOnHide","description":"<p>Specifies whether to destroy the popup or to maintain it in DOM when it is closed.\nWhen this property is set to false, then the popup will not be removed from DOM once it is closed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#destroypopuponhide"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#element"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Dropdown Tree component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the Dropdown Tree component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#enabled"},"fields":{"name":"fields","description":"<p>Specifies the data source and mapping fields to render Dropdown Tree items.</p>\n","type":"FieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#fields"},"filterBarPlaceholder":{"name":"filterBarPlaceholder","description":"<p>Accepts the value to be displayed as a watermark text on the filter bar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#filterbarplaceholder"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe <strong>TreeFilterType</strong> and its supported data types are,\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;&lt;b&gt;\nTreeFilterType&lt;/b&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;&lt;b&gt;\nDescription&lt;/b&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;&lt;b&gt;\nSupported Types&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <strong>StartsWith</strong>, all the suggestion items which starts with typed characters to listed in the\nsuggestion popup.</p>\n","type":"TreeFilterType","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never: The label will never float in the input when the placeholder is available.</li>\n<li>Always: The floating label will always float above the input.</li>\n<li>Auto: The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Specifies the template that renders a customized footer container at the bottom of the pop-up list.\nBy default, the footerTemplate will be null and there will be no footer container for the pop-up list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#forceupdate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Specifies the template that renders a customized header container at the top of the pop-up list.\nBy default, the headerTemplate will be null and there will be no header container for the pop-up list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#headertemplate"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Allows additional HTML attributes such as title, name, etc., and accepts n number of attributes in a key-value pair format.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#htmlattributes"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>When <strong>ignoreAccent</strong> is set to true, then it ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>When set to false, consider the case-sensitive on performing the search to find suggestions. By default, consider the casing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies a template to render customized content for all the items.\nIf the <strong>itemTemplate</strong> property is set, the template content overrides the displayed item text.\nThe property accepts <a href=\"https://ej2.syncfusion.com/documentation/common/template-engine/\">template string</a>\nor HTML element ID holding the content.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#locale"},"mode":{"name":"mode","description":"<p>Configures visibility mode for component interaction when allowMultiSelection or checkbox is enabled.\nDifferent modes are:</p>\n<ul>\n<li>Box : Selected items will be visualized in chip.</li>\n<li>Delimiter : Selected items will be visualized in the text content.</li>\n<li>Default : On focus in component will act in the box mode. On blur component will act in the delimiter mode.</li>\n<li>Custom : Selected items will be visualized with the given custom template value. The given custom template\nis added to the input instead of the selected item text in the Dropdown Tree when the multi-selection or checkbox support is enabled.</li>\n</ul>\n","type":"Mode","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#mode"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Specifies the template that renders a customized pop-up list content when there is no data available\nto be displayed within the pop-up.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#norecordstemplate"},"placeholder":{"name":"placeholder","description":"<p>Specifies a short hint that describes the expected value of the Dropdown Tree component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the pop-up list.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup list. By default, the popup width sets based on the width of the Dropdown Tree element.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#props"},"readonly":{"name":"readonly","description":"<p>When set to true, the user interactions on the component will be disabled.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#root"},"selectAllText":{"name":"selectAllText","description":"<p>Specifies the display text for the selectAll checkbox in the pop-up.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#selectalltext"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#setstate"},"showCheckBox":{"name":"showCheckBox","description":"<p>Enables or disables the checkbox option in the Dropdown Tree component.\nIf enabled, the Checkbox will be displayed next to the expand or collapse icon of the tree items.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#showcheckbox"},"showClearButton":{"name":"showClearButton","description":"<p>Specifies whether to show or hide the clear icon in textbox.\nWhen the clear button is clicked, <code>value</code>, <code>text</code> properties will be reset to null.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#showclearbutton"},"showDropDownIcon":{"name":"showDropDownIcon","description":"<p>Specifies whether to show or hide the Dropdown button.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#showdropdownicon"},"showSelectAll":{"name":"showSelectAll","description":"<p>Specifies whether to show or hide the selectAll checkbox in the pop-up which allows you to select all the items in the pop-up.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#showselectall"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies a value that indicates whether the items are sorted in the ascending or descending order, or not sorted at all.\nThe available types of sort order are,</p>\n<ul>\n<li><code>None</code> - The items are not sorted.</li>\n<li><code>Ascending</code> - The items are sorted in the ascending order.</li>\n<li><code>Descending</code> - The items are sorted in the descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#state"},"text":{"name":"text","description":"<p>Gets or sets the display text of the selected item which maps the data <strong>text</strong> field in the component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#text"},"treeSettings":{"name":"treeSettings","description":"<p>Configures the pop-up tree settings.</p>\n","type":"TreeSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#treesettings"},"unSelectAllText":{"name":"unSelectAllText","description":"<p>Specifies the display text for the unselect all checkbox in the pop-up.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#unselectalltext"},"value":{"name":"value","description":"<p>Gets or sets the value of selected item(s) which maps the data <strong>value</strong> field in the component.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#value"},"valueTemplate":{"name":"valueTemplate","description":"<p>Specifies the way to customize the selected values in the Dropdown Tree component based on application needs. If the <strong>valueTemplate</strong> property is set, the template content overrides the displayed item text.\nThe property accepts [template string] (https://ej2.syncfusion.com/documentation/common/template-engine/) or HTML element ID holding the content. The context for the valueTemplate comes from the data object passed to it.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#valuetemplate"},"width":{"name":"width","description":"<p>Specifies the width of the component. By default, the component width sets based on the width of its parent container.\nYou can also set the width in pixel values.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#width"},"wrapText":{"name":"wrapText","description":"<p>Defines whether to enable or disable the feature called wrap the selected items into multiple lines when the selected item's text\ncontent exceeded the input width limit.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#wraptext"},"zIndex":{"name":"zIndex","description":"<p>Specifies the z-index value of the pop-up element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#attachunloadevent"},"clear":{"name":"clear","description":"<p>Allows you to clear the selected values from the Dropdown Tree component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#detachunloadevent"},"ensureVisible":{"name":"ensureVisible","description":"<p>Ensures visibility of the Dropdown Tree item by using item value or item element.\nIf many Dropdown Tree items are present, and we are in need to find a particular item, then the <code>ensureVisible</code> property\nhelps you to bring the item to visibility by expanding the Dropdown Tree and scrolling to the specific item.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#ensurevisible"},"getData":{"name":"getData","description":"<p>To get the updated data source of the Dropdown Tree.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#getdata"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#getlocaldata"},"getLocaleName":{"name":"getLocaleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#getlocalename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Close the Dropdown tree pop-up.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#hidepopup"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#render"},"selectAll":{"name":"selectAll","description":"<p>Based on the state parameter, entire list item will be selected or deselected.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#selectall"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Opens the popup that displays the Dropdown Tree items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#showpopup"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-tree/#inject"}},"ListBoxComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#actionfailure"},"beforeDrop":{"name":"beforeDrop","description":"<p>Triggers before dropping the list item on another list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#beforedrop"},"beforeItemRender":{"name":"beforeItemRender","description":"<p>Triggers while rendering each list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#beforeitemrender"},"change":{"name":"change","description":"<p>Triggers while select / unselect the list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#change"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the list.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#destroyed"},"drag":{"name":"drag","description":"<p>Triggers while dragging the list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#drag"},"dragStart":{"name":"dragStart","description":"<p>Triggers after dragging the list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#dragstart"},"drop":{"name":"drop","description":"<p>Triggers before dropping the list item on another list item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#drop"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#filtering"},"allowDragAndDrop":{"name":"allowDragAndDrop","description":"<p>If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.\nListBox contains same 'scope' property enables drag and drop between multiple ListBox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#allowdraganddrop"},"allowFiltering":{"name":"allowFiltering","description":"<p>To enable the filtering option in this component.\nFilter action performs when type in search box and collect the matched item through <code>filtering</code> event.\nIf searching character does not match, <code>noRecordsTemplate</code> property value will be shown.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#allowfiltering"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#allowserverdatabinding"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets the CSS classes to root element of this component, which helps to customize the\ncomplete styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of\n<code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#enablertl"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#enabled"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item.</li>\n<li>value - Maps the value column from data table for each list item.</li>\n<li>iconCss - Maps the icon class column from data table for each list item.</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#fields"},"filterBarPlaceholder":{"name":"filterBarPlaceholder","description":"<p>Accepts the value to be displayed as a watermark text on the filter bar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#filterbarplaceholder"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nThe <code>FilterType</code> and its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>StartsWith</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#filtertype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#forceupdate"},"height":{"name":"height","description":"<p>Sets the height of the ListBox component.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each list item present in the popup.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#locale"},"maximumSelectionLength":{"name":"maximumSelectionLength","description":"<p>Sets limitation to the value selection.\nbased on the limitation, list selection will be prevented.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#maximumselectionlength"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of component\nwhen no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#norecordstemplate"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#props"},"query":{"name":"query","description":"<p>Accepts the external <code>Query</code>\nwhich will execute along with the data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#query"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#root"},"scope":{"name":"scope","description":"<p>Defines the scope value to group sets of draggable and droppable ListBox.\nA draggable with the same scope value will be accepted by the droppable.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#scope"},"selectionSettings":{"name":"selectionSettings","description":"<p>Specifies the selection mode and its type.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#selectionsettings"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#setstate"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the <code>sortOrder</code> to sort the data source. The available type of sort orders are</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#state"},"toolbarSettings":{"name":"toolbarSettings","description":"<p>Specifies the toolbar items and its position.</p>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#toolbarsettings"},"value":{"name":"value","description":"<p>Sets the specified item to the selected state or gets the selected item in the ListBox.</p>\n","type":"string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#value"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#addeventlistener"},"addItems":{"name":"addItems","description":"<p>Adds a new item to the list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#additems"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#databind"},"destroy":{"name":"destroy","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#detachunloadevent"},"enableItems":{"name":"enableItems","description":"<p>This method is used to enable or disable the items in the ListBox based on the items and enable argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#enableitems"},"filter":{"name":"filter","description":"<p>To filter the data from given data source by using query.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#filter"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getdatabyvalue"},"getDataByValues":{"name":"getDataByValues","description":"<p>Gets the array of data Object that matches the given array of values.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getdatabyvalues"},"getDataList":{"name":"getDataList","description":"<p>Gets the updated dataSource in ListBox.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getdatalist"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getrootelement"},"getSortedList":{"name":"getSortedList","description":"<p>Returns the sorted Data in ListBox.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#getsortedlist"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#handleunload"},"hideSpinner":{"name":"hideSpinner","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#hidespinner"},"moveAllTo":{"name":"moveAllTo","description":"<p>Moves all the values from one ListBox to the scoped ListBox.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#moveallto"},"moveBottom":{"name":"moveBottom","description":"<p>Moves the given value(s) / selected value(s) in bottom of the list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#movebottom"},"moveDown":{"name":"moveDown","description":"<p>Moves the given value(s) / selected value(s) downwards.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#movedown"},"moveTo":{"name":"moveTo","description":"<p>Moves the given value(s) / selected value(s) to the given / default scoped ListBox.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#moveto"},"moveTop":{"name":"moveTop","description":"<p>Moves the given value(s) / selected value(s) in Top of the list.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#movetop"},"moveUp":{"name":"moveUp","description":"<p>Moves the given value(s) / selected value(s) upwards.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#moveup"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#removeeventlistener"},"removeItem":{"name":"removeItem","description":"<p>Removes a item from the list. By default, removed the last item in the list,\nbut you can remove based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#removeitem"},"removeItems":{"name":"removeItems","description":"<p>Removes a item from the list. By default, removed the last item in the list,\nbut you can remove based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#removeitems"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#requiredmodules"},"selectAll":{"name":"selectAll","description":"<p>Based on the state parameter, entire list item will be selected/deselected.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#selectall"},"selectItems":{"name":"selectItems","description":"<p>Based on the state parameter, specified list item will be selected/deselected.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#selectitems"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#serverdatabind"},"showSpinner":{"name":"showSpinner","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-box/#inject"}},"MentionComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Triggers before the popup is opened.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#beforeopen"},"change":{"name":"change","description":"<p>Triggers when an item in a popup is selected and updated in an editor.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#change"},"closed":{"name":"closed","description":"<p>Triggers after the popup is closed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#closed"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#created"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the popup list..</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers on typing a character in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#filtering"},"opened":{"name":"opened","description":"<p>Triggers after the popup opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#opened"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with the mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/mention/#select"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup list content of the component\nwhen the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/mention/#actionfailuretemplate"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#allowserverdatabinding"},"allowSpaces":{"name":"allowSpaces","description":"<p>Defines whether to allow the space in the middle of mention while searching.\nWhen disabled, the space ends the mention component search.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#allowspaces"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/mention/#context"},"cssClass":{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space for the mention component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/mention/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the component.\nIt can be an array of JSON Objects or an instance of <code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/mention/#datasource"},"displayTemplate":{"name":"displayTemplate","description":"<p>Specifies the template for the selected value from the suggestion list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/mention/#displaytemplate"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/mention/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#enablertl"},"fields":{"name":"fields","description":"<p>Defines the fields of the Mention to map with the data source and binds the data to the component.</p>\n<ul>\n<li>text - Specifies the text that maps the text filed from the data source for each list item.</li>\n<li>value - Specifies the value that maps the value filed from the data source for each list item.</li>\n<li>iconCss - Specifies the iconCss that map the icon class filed from the data source for each list item.</li>\n<li>groupBy - Specifies the groupBy that groups the list items with its related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/mention/#fields"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the component needs to be considered on search action.\nand its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with a specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with a specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>Contains</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/mention/#filtertype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/mention/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/mention/#grouptemplate"},"highlight":{"name":"highlight","description":"<p>Specifies whether to highlight the searched characters on suggestion list items.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#highlight"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>Specifies whether the searches are case sensitive to find suggestions.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Specifies the template for the suggestion list.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is ‘en-US’.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#locale"},"mentionChar":{"name":"mentionChar","description":"<p>Specifies the symbol or single character which triggers the search action in the mention component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#mentionchar"},"minLength":{"name":"minLength","description":"<p>Specifies the minimum length of user input to initiate the search action.\nThe default value is zero, where suggestion the list opened as soon as the user inputs the mention character.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/mention/#minlength"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Specifies the template for no matched item which is displayed when there are no items to display in the suggestion list.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#norecordstemplate"},"popupHeight":{"name":"popupHeight","description":"<p>Specifies the height of the popup in pixels/number/percentage. The number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/mention/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Specifies the width of the popup in pixels/number/percentage. The number value is considered as pixels.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/mention/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/mention/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/mention/#props"},"query":{"name":"query","description":"<p>Specifies the external query, which can be customized and filtered against the data source.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/mention/#query"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/mention/#refs"},"requireLeadingSpace":{"name":"requireLeadingSpace","description":"<p>Specifies whether a space is required before the mention character to trigger the suggestion list.\nWhen set to false, the suggestion list will be triggered even without a space before the mention character.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#requireleadingspace"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/mention/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/mention/#setstate"},"showMentionChar":{"name":"showMentionChar","description":"<p>Specifies whether to show the configured mentionChar with the text.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/mention/#showmentionchar"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the order to sort the data source. The possible sort orders are,</p>\n<ul>\n<li><code>None</code> - The data source is not sorted.</li>\n<li><code>Ascending</code> - The data source is sorted in ascending order.</li>\n<li><code>Descending</code> - The data source is sorted in descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/mention/#sortorder"},"spinnerTemplate":{"name":"spinnerTemplate","description":"<p>Specifies the template for showing until data is loaded in the popup.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/mention/#spinnertemplate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/mention/#state"},"suffixText":{"name":"suffixText","description":"<p>Specifies the custom suffix to append along with the mention component selected item while inserting.\nYou can append space or new line character as suffix.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#suffixtext"},"suggestionCount":{"name":"suggestionCount","description":"<p>Specifies the number of items in the suggestion list.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/mention/#suggestioncount"},"target":{"name":"target","description":"<p>Specifies the target selector where the mention component needs to be displayed.\nThe mention component listens to the target's user input and displays suggestions as soon as the user inputs the mention character.</p>\n","type":"HTMLElement|string","link":"//ej2.syncfusion.com/react/documentation/api/mention/#target"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the component popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/mention/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds a new item to the popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Method to disable specific item in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#disableitem"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#getdatabyvalue"},"getItems":{"name":"getItems","description":"<p>Gets all the list items bound on this component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup if it is in an open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#hidepopup"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#render"},"search":{"name":"search","description":"<p>Search the entered text and show it in the suggestion list if available.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#search"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Opens the popup that displays the list of items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#showpopup"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/mention/#inject"}},"MultiSelectComponent":{"actionBegin":{"name":"actionBegin","description":"<p>Triggers before fetching data from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#actionbegin"},"actionComplete":{"name":"actionComplete","description":"<p>Triggers after data is fetched successfully from the remote server.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#actioncomplete"},"actionFailure":{"name":"actionFailure","description":"<p>Triggers when the data fetch request from the remote server fails.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#actionfailure"},"beforeOpen":{"name":"beforeOpen","description":"<p>Fires when popup opens before animation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#beforeopen"},"beforeSelectAll":{"name":"beforeSelectAll","description":"<p>Fires before select all process.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#beforeselectall"},"blur":{"name":"blur","description":"<p>Event triggers when the input get focus-out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#blur"},"change":{"name":"change","description":"<p>Fires each time when selection changes happened in list items after model and input value get affected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#change"},"chipSelection":{"name":"chipSelection","description":"<p>Event triggers when the chip selection.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#chipselection"},"close":{"name":"close","description":"<p>Fires when popup close after animation completion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#close"},"created":{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#created"},"customValueSelection":{"name":"customValueSelection","description":"<p>Triggers when the <a href=\"../../multi-select/custom-value\"><code>customValue</code></a> is selected.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#customvalueselection"},"dataBound":{"name":"dataBound","description":"<p>Triggers when data source is populated in the popup list..</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#databound"},"destroyed":{"name":"destroyed","description":"<p>Triggers when the component is destroyed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#destroyed"},"filtering":{"name":"filtering","description":"<p>Triggers event,when user types a text in search box.</p>\n<blockquote>\n<p>For more details about filtering, refer to <a href=\"../../multi-select/filtering\"><code>Filtering</code></a> documentation.</p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#filtering"},"focus":{"name":"focus","description":"<p>Event triggers when the input get focused.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#focus"},"open":{"name":"open","description":"<p>Fires when popup opens after animation completion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#open"},"removed":{"name":"removed","description":"<p>Fires after the selected item removed from the widget.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#removed"},"removing":{"name":"removing","description":"<p>Fires before the selected item removed from the widget.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#removing"},"resizeStart":{"name":"resizeStart","description":"<p>Triggers when the user starts resizing the Multiselect popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#resizestart"},"resizeStop":{"name":"resizeStop","description":"<p>Triggers when the user finishes resizing the Multiselect popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#resizestop"},"resizing":{"name":"resizing","description":"<p>Triggers continuously while the Multiselect popup is being resized by the user.\nThis event provides live updates on the width and height of the popup.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#resizing"},"select":{"name":"select","description":"<p>Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#select"},"selectedAll":{"name":"selectedAll","description":"<p>Fires after select all process completion.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#selectedall"},"tagging":{"name":"tagging","description":"<p>Fires before set the selected item as chip in the component.</p>\n<blockquote>\n<p>For more details about chip customization refer <a href=\"../../multi-select/chip-customization\"><code>Chip Customization</code></a></p>\n</blockquote>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#tagging"},"actionFailureTemplate":{"name":"actionFailureTemplate","description":"<p>Accepts the template and assigns it to the popup list content of the MultiSelect component\nwhen the data fetch request from the remote server fails.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#actionfailuretemplate"},"addTagOnBlur":{"name":"addTagOnBlur","description":"<p>By default, the typed value is converting into chip or update as value of the component when you press the enter key or select from the popup.\nIf you want to convert the typed value into chip or update as value of the component while focusing out the component, then enable this property.\nIf custom value is enabled, both custom value and value present in the list are converted into tag while focusing out the component; Otherwise, value present in the list is converted into tag while focusing out the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#addtagonblur"},"allowCustomValue":{"name":"allowCustomValue","description":"<p>Allows user to add a\n<a href=\"../../multi-select/custom-value\"><code>custom value</code></a>, the value which is not present in the suggestion list.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#allowcustomvalue"},"allowFiltering":{"name":"allowFiltering","description":"<p>To enable the filtering option in this component.\nFilter action performs when type in search box and collect the matched item through <code>filtering</code> event.\nIf searching character does not match, <code>noRecordsTemplate</code> property value will be shown.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#allowfiltering"},"allowObjectBinding":{"name":"allowObjectBinding","description":"<p>Defines whether the object binding is allowed or not in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#allowobjectbinding"},"allowResize":{"name":"allowResize","description":"<p>Gets or sets a value that indicates whether the Multiselect popup can be resized.\nWhen set to <code>true</code>, a resize handle appears in the bottom-right corner of the popup,\nallowing the user to resize the width and height of the popup.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#allowresize"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#allowserverdatabinding"},"changeOnBlur":{"name":"changeOnBlur","description":"<p>By default, the multiselect component fires the change event while focus out the component.\nIf you want to fires the change event on every value selection and remove, then disable the changeOnBlur property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#changeonblur"},"closePopupOnSelect":{"name":"closePopupOnSelect","description":"<p>Based on the property, when item get select popup visibility state will changed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#closepopuponselect"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#context"},"cssClass":{"name":"cssClass","description":"<p>Sets the CSS classes to root element of this component which helps to customize the\ncomplete styles.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#cssclass"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Accepts the list items either through local or remote service and binds it to the MultiSelect component.\nIt can be an array of JSON Objects or an instance of\n<code>DataManager</code>.</p>\n","type":"[]|DataManager|string[]|number[]|boolean[]","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#datasource"},"delimiterChar":{"name":"delimiterChar","description":"<p>Sets the delimiter character for 'default' and 'delimiter' visibility modes.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#delimiterchar"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#element"},"enableGroupCheckBox":{"name":"enableGroupCheckBox","description":"<p>Specifies a Boolean value that indicates the whether the grouped list items are\nallowed to check by checking the group header in checkbox mode.\nBy default, there is no checkbox provided for group headers.\nThis property allows you to render checkbox for group headers and to select\nall the grouped items at once</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enablegroupcheckbox"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Defines whether to allow the cross-scripting site or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting MultiSelect component's state between page reloads.\nIf enabled, following list of states will be persisted.</p>\n<ol>\n<li>value</li>\n</ol>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enablertl"},"enableSelectionOrder":{"name":"enableSelectionOrder","description":"<p>Reorder the selected items in popup visibility state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enableselectionorder"},"enableVirtualization":{"name":"enableVirtualization","description":"<p>Defines whether to enable virtual scrolling in the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enablevirtualization"},"enabled":{"name":"enabled","description":"<p>Specifies a value that indicates whether the MultiSelect component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#enabled"},"fields":{"name":"fields","description":"<p>The <code>fields</code> property maps the columns of the data table and binds the data to the component.</p>\n<ul>\n<li>text - Maps the text column from data table for each list item.</li>\n<li>value - Maps the value column from data table for each list item.</li>\n<li>iconCss - Maps the icon class column from data table for each list item.</li>\n<li>groupBy - Group the list items with it's related items by mapping groupBy field.</li>\n</ul>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#fields"},"filterBarPlaceholder":{"name":"filterBarPlaceholder","description":"<p>Accepts the value to be displayed as a watermark text on the filter bar.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#filterbarplaceholder"},"filterType":{"name":"filterType","description":"<p>Determines on which filter type, the MultiSelect component needs to be considered on search action.\nThe <code>FilterType</code> and its supported data types are\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nFilterType&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nDescription&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nSupported Types&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nStartsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value begins with the specified value.&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nString&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nEndsWith&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value ends with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colSpan=1 rowSpan=1&gt;\nContains&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\nChecks whether a value contains with specified value.&lt;br/&gt;&lt;br/&gt;&lt;/td&gt;&lt;td colSpan=1 rowSpan=1&gt;\n&lt;br/&gt;String&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</p>\n<p>The default value set to <code>StartsWith</code>, all the suggestion items which contain typed characters to listed in the suggestion popup.</p>\n","type":"FilterType","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#filtertype"},"floatLabelType":{"name":"floatLabelType","description":"<p>Specifies whether to display the floating label above the input element.\nPossible values are:</p>\n<ul>\n<li>Never: The label will never float in the input when the placeholder is available.</li>\n<li>Always: The floating label will always float above the input.</li>\n<li>Auto: The floating label will float above the input after focusing or entering a value in the input.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#floatlabeltype"},"footerTemplate":{"name":"footerTemplate","description":"<p>Accepts the template design and assigns it to the footer container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../multi-select/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#footertemplate"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#forceupdate"},"groupTemplate":{"name":"groupTemplate","description":"<p>Accepts the template design and assigns it to the group headers present in the MultiSelect popup list.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#grouptemplate"},"headerTemplate":{"name":"headerTemplate","description":"<p>Accepts the template design and assigns it to the header container of the popup list.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../multi-select/templates\"><code>Template</code></a> documentation.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#headertemplate"},"hideSelectedItem":{"name":"hideSelectedItem","description":"<p>Hides the selected item from the list item.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#hideselecteditem"},"htmlAttributes":{"name":"htmlAttributes","description":"<p>Gets or sets the additional attribute to <code>HtmlAttributes</code> property in MultiSelect,\nwhich helps to add attribute like title, name etc, input should be key value pair.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#htmlattributes"},"ignoreAccent":{"name":"ignoreAccent","description":"<p>ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#ignoreaccent"},"ignoreCase":{"name":"ignoreCase","description":"<p>Sets <a href=\"../../multi-select/filtering/#case-sensitive-filtering\"><code>case sensitive</code></a>\noption for filter operation.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#ignorecase"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isdestroyed"},"isDeviceFullScreen":{"name":"isDeviceFullScreen","description":"<p>Defines whether the popup opens in fullscreen mode on mobile devices when filtering is enabled. When set to false, the popup will display similarly on both mobile and desktop devices.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isdevicefullscreen"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#isvue"},"itemTemplate":{"name":"itemTemplate","description":"<p>Accepts the template design and assigns it to each list item present in the popup.</p>\n<blockquote>\n<p>For more details about the available template options refer to <a href=\"../../multi-select/templates\"><code>Template</code></a> documentation.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n</blockquote>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#itemtemplate"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#locale"},"maximumSelectionLength":{"name":"maximumSelectionLength","description":"<p>Sets limitation to the value selection.\nbased on the limitation, list selection will be prevented.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#maximumselectionlength"},"mode":{"name":"mode","description":"<p>configures visibility mode for component interaction.</p>\n<ul>\n<li>\n<p><code>Box</code> - selected items will be visualized in chip.</p>\n</li>\n<li>\n<p><code>Delimiter</code> - selected items will be visualized in text content.</p>\n</li>\n<li>\n<p><code>Default</code> - on <code>focus in</code> component will act in <code>box</code> mode.\non <code>blur</code> component will act in <code>delimiter</code> mode.</p>\n</li>\n<li>\n<p><code>CheckBox</code> - The 'checkbox' will be visualized in list item.</p>\n</li>\n</ul>\n","type":"visualMode","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#mode"},"noRecordsTemplate":{"name":"noRecordsTemplate","description":"<p>Accepts the template design and assigns it to popup list of MultiSelect component\nwhen no data is available on the component.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#norecordstemplate"},"openOnClick":{"name":"openOnClick","description":"<p>Whether to automatically open the popup when the control is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#openonclick"},"placeholder":{"name":"placeholder","description":"<p>Gets or sets the placeholder in the component to display the given information\nin input when no item selected.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#placeholder"},"popupHeight":{"name":"popupHeight","description":"<p>Gets or sets the height of the popup list. By default it renders based on its list item.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../multi-select/getting-started/#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#popupheight"},"popupWidth":{"name":"popupWidth","description":"<p>Gets or sets the width of the popup list and percentage values has calculated based on input width.</p>\n<blockquote>\n<p>For more details about the popup configuration refer to\n<a href=\"../../multi-select/getting-started/#configure-the-popup-list\"><code>Popup Configuration</code></a> documentation.</p>\n</blockquote>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#popupwidth"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#props"},"query":{"name":"query","description":"<p>Accepts the external <code>Query</code>\nwhich will execute along with the data processing in MultiSelect.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#query"},"readonly":{"name":"readonly","description":"<p>Gets or sets the <code>readonly</code> to input or not. Once enabled, just you can copy or highlight\nthe text however tab key action will perform.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#readonly"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#root"},"selectAllText":{"name":"selectAllText","description":"<p>Specifies the selectAllText to be displayed on the component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#selectalltext"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#setstate"},"showClearButton":{"name":"showClearButton","description":"<p>Enables close icon with the each selected item.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#showclearbutton"},"showDropDownIcon":{"name":"showDropDownIcon","description":"<p>Allows you to either show or hide the DropDown button on the component</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#showdropdownicon"},"showSelectAll":{"name":"showSelectAll","description":"<p>Allows you to either show or hide the selectAll option on the component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#showselectall"},"sortOrder":{"name":"sortOrder","description":"<p>Specifies the <code>sortOrder</code> to sort the data source. The available type of sort orders are</p>\n<ul>\n<li><code>None</code> - The data source is not sorting.</li>\n<li><code>Ascending</code> - The data source is sorting with ascending order.</li>\n<li><code>Descending</code> - The data source is sorting with descending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#sortorder"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#state"},"text":{"name":"text","description":"<p>Selects the list item which maps the data <code>text</code> field in the component.</p>\n","type":"string|null","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#text"},"ulElement":{"name":"ulElement","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#ulelement"},"unSelectAllText":{"name":"unSelectAllText","description":"<p>Specifies the UnSelectAllText to be displayed on the component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#unselectalltext"},"value":{"name":"value","description":"<p>Selects the list item which maps the data <code>value</code> field in the component.</p>\n","type":"number[]|string[]|boolean[]|object[]|null","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#value"},"valueTemplate":{"name":"valueTemplate","description":"<p>Accepts the template design and assigns it to the selected list item in the input element of the component.\nFor more details about the available template options refer to\n<a href=\"../../multi-select/templates\"><code>Template</code></a> documentation.\nWe have built-in <code>template engine</code>\nwhich provides options to compile template string into a executable function.\nFor EX: We have expression evolution as like ES6 expression string literals.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#valuetemplate"},"width":{"name":"width","description":"<p>Gets or sets the width of the component. By default, it sizes based on its parent.\ncontainer dimension.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#width"},"zIndex":{"name":"zIndex","description":"<p>specifies the z-index value of the component popup element.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#zindex"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#addeventlistener"},"addItem":{"name":"addItem","description":"<p>Adds a new item to the multiselect popup list. By default, new item appends to the list as the last item,\nbut you can insert based on the index parameter.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#additem"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#attachunloadevent"},"clear":{"name":"clear","description":"<p>Allows you to clear the selected values from the Multiselect component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#clear"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#databind"},"destroy":{"name":"destroy","description":"<p>Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#detachunloadevent"},"disableItem":{"name":"disableItem","description":"<p>Method to disable specific item in the popup.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#disableitem"},"filter":{"name":"filter","description":"<p>To filter the multiselect data from given data source by using query</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#filter"},"focusIn":{"name":"focusIn","description":"<p>Sets the focus to widget for interaction.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#focusin"},"focusOut":{"name":"focusOut","description":"<p>Remove the focus from widget, if the widget is in focus state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#focusout"},"getDataByValue":{"name":"getDataByValue","description":"<p>Gets the data Object that matches the given value.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#getdatabyvalue"},"getItems":{"name":"getItems","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#getitems"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#handleunload"},"hidePopup":{"name":"hidePopup","description":"<p>Hides the popup, if the popup in a open state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#hidepopup"},"hideSpinner":{"name":"hideSpinner","description":"<p>Hides the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#hidespinner"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#render"},"requiredModules":{"name":"requiredModules","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#requiredmodules"},"selectAll":{"name":"selectAll","description":"<p>Based on the state parameter, entire list item will be selected/deselected.\nparameter\n<code>true</code>   - Selects entire list items.\n<code>false</code>  - Un Selects entire list items.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#selectall"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#serverdatabind"},"showPopup":{"name":"showPopup","description":"<p>Shows the popup, if the popup in a closed state.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#showpopup"},"showSpinner":{"name":"showSpinner","description":"<p>Shows the spinner loader.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#showspinner"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/multi-select/#inject"}},"AccumulationChartComponent":{"afterExport":{"name":"afterExport","description":"<p>Triggers after the export is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#afterexport"},"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation for the series is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#animationcomplete"},"annotationRender":{"name":"annotationRender","description":"<p>Triggers before the annotation gets rendered. This event allows for modifications of the annotation content and its location before it is rendered on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#annotationrender"},"beforeExport":{"name":"beforeExport","description":"<p>Triggers before the export process begins. This event allows for the customization of export settings before the chart is exported.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#beforeexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the print process starts. This event allows for the modification of the accumulation chart's HTML content before it is sent to the printer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#beforeprint"},"beforeResize":{"name":"beforeResize","description":"<p>Triggers before the window resize event occurs. This event allows for modifications to the accumulation chart size before resizing.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#beforeresize"},"chartDoubleClick":{"name":"chartDoubleClick","description":"<p>Triggers when double-clicking the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartdoubleclick"},"chartMouseClick":{"name":"chartMouseClick","description":"<p>Triggers when clicking on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartmouseclick"},"chartMouseDown":{"name":"chartMouseDown","description":"<p>Triggers on the mouse down event within the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartmousedown"},"chartMouseLeave":{"name":"chartMouseLeave","description":"<p>Triggers when the cursor leaves the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartmouseleave"},"chartMouseMove":{"name":"chartMouseMove","description":"<p>Triggers when hovering over the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartmousemove"},"chartMouseUp":{"name":"chartMouseUp","description":"<p>Triggers on the mouse up event within the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#chartmouseup"},"legendClick":{"name":"legendClick","description":"<p>Triggers after the legend is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#legendclick"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend gets rendered. This allows the customization of legend before rendering on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#legendrender"},"load":{"name":"load","description":"<p>Triggers before the accumulation chart loads. This event allows for customization and configuration before the accumulation chart is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the accumulation chart has been loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#loaded"},"pointClick":{"name":"pointClick","description":"<p>Triggers when a point in the accumulation chart is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#pointclick"},"pointMove":{"name":"pointMove","description":"<p>Triggers when a point in the accumulation chart is moved.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#pointmove"},"pointRender":{"name":"pointRender","description":"<p>Triggers before each point in the series gets rendered. This allows for the customization of each data point before it is rendered on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#pointrender"},"resized":{"name":"resized","description":"<p>Triggers after the window resize event completes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#resized"},"selectionComplete":{"name":"selectionComplete","description":"<p>Triggers after the selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#selectioncomplete"},"seriesRender":{"name":"seriesRender","description":"<p>Triggers before the series gets rendered. This event allows for the customization of series properties before they are rendered on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#seriesrender"},"textRender":{"name":"textRender","description":"<p>Triggers before the data label for the series gets rendered. This allows customization of data labels before they are rendered on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#textrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for the series gets rendered. This event allows customization of the tooltip properties such as text, style, and template before it is rendered on the accumulation chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#tooltiprender"},"accessibility":{"name":"accessibility","description":"<p>Options to improve accessibility for accumulation chart elements.</p>\n","type":"AccessibilityModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accessibility"},"accumulationDataLabelModule":{"name":"accumulationDataLabelModule","description":"<p>The <code>accumulationDataLabelModule</code> is used to manipulate and add data labels in an accumulation chart.</p>\n","type":"AccumulationDataLabel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accumulationdatalabelmodule"},"accumulationHighlightModule":{"name":"accumulationHighlightModule","description":"<p>The <code>accumulationHighlightModule</code> is used to manipulate and add highlights to the accumulation chart.</p>\n","type":"AccumulationHighlight","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accumulationhighlightmodule"},"accumulationLegendModule":{"name":"accumulationLegendModule","description":"<p>The <code>accumulationLegendModule</code> is used to manipulate and add a legend in an accumulation chart.</p>\n","type":"AccumulationLegend","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accumulationlegendmodule"},"accumulationSelectionModule":{"name":"accumulationSelectionModule","description":"<p>The <code>accumulationSelectionModule</code> is used to manipulate and add selection in accumulation chart.</p>\n","type":"AccumulationSelection","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accumulationselectionmodule"},"accumulationTooltipModule":{"name":"accumulationTooltipModule","description":"<p>The <code>accumulationTooltipModule</code> is used to manipulate and add tooltips to an accumulation chart.</p>\n","type":"AccumulationTooltip","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#accumulationtooltipmodule"},"allowExport":{"name":"allowExport","description":"<p>To enable export feature in blazor chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#allowexport"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#allowserverdatabinding"},"annotationModule":{"name":"annotationModule","description":"<p>The <code>annotationModule</code> is used to manipulate and add annotations in the chart.</p>\n","type":"AccumulationAnnotation","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#annotationmodule"},"annotations":{"name":"annotations","description":"<p>Annotations are used to highlight specific data points or areas in the chart, providing additional context and information.</p>\n","type":"AccumulationAnnotationSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#annotations"},"background":{"name":"background","description":"<p>The background color of the chart, which accepts values in hex or rgba formats as valid CSS color strings.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#background"},"backgroundImage":{"name":"backgroundImage","description":"<p>The background image of the chart accepts a string value as a URL link or the location of an image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#backgroundimage"},"border":{"name":"border","description":"<p>Options for customizing the appearance of the border in the chart by using the <code>color</code> and <code>width</code> properties in the <code>border</code>.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#border"},"center":{"name":"center","description":"<p>The <code>center</code> property allows changing the center position of the pie chart using the <code>x</code> and <code>y</code> properties.\nBy default, the center value of the pie series is set to 50% for both the x and y coordinates.</p>\n","type":"PieCenterModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#center"},"centerLabel":{"name":"centerLabel","description":"<p>Options to customize the label that appears at the center of the accumulation chart.</p>\n","type":"CenterLabelModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#centerlabel"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Specifies the data source for the accumulation chart. It can be an array of JSON objects, or an instance of <code>DataManager</code>.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#datasource"},"duration":{"name":"duration","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#duration"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#element"},"enableAnimation":{"name":"enableAnimation","description":"<p>If set to true, enables animation for the accumulation chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enableanimation"},"enableBorderOnMouseMove":{"name":"enableBorderOnMouseMove","description":"<p>If set to true, enables the border in pie and accumulation charts when the mouse moves over a data point.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enableborderonmousemove"},"enableExport":{"name":"enableExport","description":"<p>When set to true, it enables exporting the accumulation chart to various formats such as <code>JPEG</code>, <code>PNG</code>, <code>SVG</code>, <code>PDF</code>, <code>XLSX</code>, or <code>CSV</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enableexport"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Accumulation Chart component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enablertl"},"enableSmartLabels":{"name":"enableSmartLabels","description":"<p>If set to true, labels for the points will be placed smartly to avoid overlapping.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#enablesmartlabels"},"exportModule":{"name":"exportModule","description":"<p>The <code>exportModule</code> is used to export the accumulation chart.</p>\n","type":"Export","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#exportmodule"},"focusBorderColor":{"name":"focusBorderColor","description":"<p>Customize the focus border color.\nIf not specified, the element will use the default focus border color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#focusbordercolor"},"focusBorderMargin":{"name":"focusBorderMargin","description":"<p>Customize the focus border margin.\nIf not specified, the element will use the default focus border margin.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#focusbordermargin"},"focusBorderWidth":{"name":"focusBorderWidth","description":"<p>Customize the focus border width.\nIf not specified, the element will use the default focus border width.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#focusborderwidth"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#forceupdate"},"height":{"name":"height","description":"<p>The height of the chart as a string, allowing input in formats such as '100px' or '100%'.\nIf specified as '100%', the chart will render to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#height"},"highlightColor":{"name":"highlightColor","description":"<p>Defines the color used to highlight a data point on mouse hover.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#highlightcolor"},"highlightMode":{"name":"highlightMode","description":"<p>Specifies whether points in the accumulation chart should be highlighted.\nAccepts the following values:</p>\n<ul>\n<li>None: Disables the highlighting of points.</li>\n<li>Point: Highlights an individual point on hover.</li>\n</ul>\n","type":"AccumulationHighlightMode","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#highlightmode"},"highlightPattern":{"name":"highlightPattern","description":"<p>Specifies the pattern used for highlighting series or data points.\nThe <code>highlightPattern</code> property determines how the data points or series are visually highlighted.\nThe available options are:</p>\n<ul>\n<li>None: No highlighting pattern.</li>\n<li>Chessboard: Applies a chessboard pattern for highlighting.</li>\n<li>Dots: Applies a dot pattern for highlighting.</li>\n<li>DiagonalForward: Applies a forward diagonal line pattern for highlighting.</li>\n<li>Crosshatch: Applies a crosshatch pattern for highlighting.</li>\n<li>Pacman: Applies a Pacman pattern for highlighting.</li>\n<li>DiagonalBackward: Applies a backward diagonal line pattern for highlighting.</li>\n<li>Grid: Applies a grid pattern for highlighting.</li>\n<li>Turquoise: Applies a turquoise pattern for highlighting.</li>\n<li>Star: Applies a star pattern for highlighting.</li>\n<li>Triangle: Applies a triangle pattern for highlighting.</li>\n<li>Circle: Applies a circle pattern for highlighting.</li>\n<li>Tile: Applies a tile pattern for highlighting.</li>\n<li>HorizontalDash: Applies a horizontal dash pattern for highlighting.</li>\n<li>VerticalDash: Applies a vertical dash pattern for highlighting.</li>\n<li>Rectangle: Applies a rectangle pattern for highlighting.</li>\n<li>Box: Applies a box pattern for highlighting.</li>\n<li>VerticalStripe: Applies a vertical stripe pattern for highlighting.</li>\n<li>HorizontalStripe: Applies a horizontal stripe pattern for highlighting.</li>\n<li>Bubble: Applies a bubble pattern for highlighting.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#highlightpattern"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isdestroyed"},"isMultiSelect":{"name":"isMultiSelect","description":"<p>When set to true, allows for the selection of multiple data points.</p>\n<blockquote>\n<p>Note that <code>selectionMode</code> must be set to <code>Point</code> for multi-selection to be enabled.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#ismultiselect"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>The legend provides descriptive information about the data points displayed in the accumulation chart, helping to understand what each point represents.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#locale"},"margin":{"name":"margin","description":"<p>Options to customize the margins around the accumulation chart, including the left, right, top, and bottom margins.\nThese margins define the space between the outer edge of the accumulation chart and its chart area.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#margin"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#root"},"selectedDataIndexes":{"name":"selectedDataIndexes","description":"<p>Specifies the point indexes to be selected when the accumulation chart is initially loaded.</p>\n<blockquote>\n<p>Note that <code>selectionMode</code> must be set to <code>Point</code> for this feature to work.</p>\n</blockquote>\n","type":"IndexesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#selecteddataindexes"},"selectionMode":{"name":"selectionMode","description":"<p>Specifies whether points in the accumulation chart can be selected.\nAccepts the following values:</p>\n<ul>\n<li>None: Disables the selection of points.</li>\n<li>Point: Enables the selection of individual points.</li>\n</ul>\n","type":"AccumulationSelectionMode","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#selectionmode"},"selectionPattern":{"name":"selectionPattern","description":"<p>Specifies the selection pattern for series or data points.\nThe <code>selectionPattern</code> property determines how the selected data points or series are visually represented.\nThe available options are:</p>\n<ul>\n<li>None: No selection pattern is applied.</li>\n<li>Chessboard: Applies a chessboard pattern as the selection effect.</li>\n<li>Dots: Applies a dot pattern as the selection effect.</li>\n<li>DiagonalForward: Applies a forward diagonal line pattern as the selection effect.</li>\n<li>Crosshatch: Applies a crosshatch pattern as the selection effect.</li>\n<li>Pacman: Applies a Pacman pattern as the selection effect.</li>\n<li>DiagonalBackward: Applies a backward diagonal line pattern as the selection effect.</li>\n<li>Grid: Applies a grid pattern as the selection effect.</li>\n<li>Turquoise: Applies a turquoise pattern as the selection effect.</li>\n<li>Star: Applies a star pattern as the selection effect.</li>\n<li>Triangle: Applies a triangle pattern as the selection effect.</li>\n<li>Circle: Applies a circle pattern as the selection effect.</li>\n<li>Tile: Applies a tile pattern as the selection effect.</li>\n<li>HorizontalDash: Applies a horizontal dash pattern as the selection effect.</li>\n<li>VerticalDash: Applies a vertical dash pattern as the selection effect.</li>\n<li>Rectangle: Applies a rectangle pattern as the selection effect.</li>\n<li>Box: Applies a box pattern as the selection effect.</li>\n<li>VerticalStripe: Applies a vertical stripe pattern as the selection effect.</li>\n<li>HorizontalStripe: Applies a horizontal stripe pattern as the selection effect.</li>\n<li>Bubble: Applies a bubble pattern as the selection effect.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#selectionpattern"},"series":{"name":"series","description":"<p>The configuration for series in the accumulation chart.</p>\n","type":"AccumulationSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#state"},"subTitle":{"name":"subTitle","description":"<p>The subtitle is positioned below the main title and provides further details about the data represented in the accumulation chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#subtitle"},"subTitleStyle":{"name":"subTitleStyle","description":"<p>Options for customizing the appearance of the subtitle, which displays information about the plotted data below the main title.\nUse the <code>fontFamily</code>, <code>size</code>, <code>fontStyle</code>, <code>fontWeight</code>, and <code>color</code> properties in <code>Font</code> to adjust the subtitle's appearance.</p>\n","type":"TitleStyleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#subtitlestyle"},"theme":{"name":"theme","description":"<p>The theme applied to the accumulation chart for visual styling.\nChoose from predefined themes to change the overall look and feel of the accumulation chart.\nThe available themes are:</p>\n<ul>\n<li>Fabric</li>\n<li>FabricDark</li>\n<li>Bootstrap4</li>\n<li>Bootstrap</li>\n<li>BootstrapDark</li>\n<li>HighContrastLight</li>\n<li>HighContrast</li>\n<li>Tailwind</li>\n<li>TailwindDark</li>\n<li>Bootstrap5</li>\n<li>Bootstrap5Dark</li>\n<li>Fluent</li>\n<li>FluentDark</li>\n<li>Fluent2</li>\n<li>Fluent2Dark</li>\n<li>Fluent2HighContrast</li>\n<li>Material3</li>\n<li>Material3Dark</li>\n<li>Material</li>\n<li>MaterialDark</li>\n</ul>\n","type":"AccumulationTheme","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#theme"},"title":{"name":"title","description":"<p>The title is displayed at the top of the chart to provide information about the plotted data.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the appearance of the title, which displays information about the plotted data.\nUse the <code>fontFamily</code>, <code>size</code>, <code>fontStyle</code>, <code>fontWeight</code>, and <code>color</code> properties in <code>Font</code> to adjust the title's appearance.</p>\n","type":"TitleStyleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Tooltips display information about the data points when the mouse hovers over a point.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#tooltip"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>When set to true, a grouping separator will be used for numbers to separate groups of thousands in the accumulation chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#usegroupingseparator"},"width":{"name":"width","description":"<p>The width of the chart as a string, allowing input in formats such as '100px' or '100%'.\nIf specified as '100%', the chart will render to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#attachunloadevent"},"calculateBounds":{"name":"calculateBounds","description":"<p>Method to calculate bounds for accumulation chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#calculatebounds"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#databind"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#detachunloadevent"},"export":{"name":"export","description":"<p>Export method for the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#handleunload"},"print":{"name":"print","description":"<p>Handles the print method for accumulation chart control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#serverdatabind"},"setAnnotationValue":{"name":"setAnnotationValue","description":"<p>Method to set the annotation content dynamically for accumulation.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#setannotationvalue"},"titleTooltip":{"name":"titleTooltip","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#titletooltip"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/#inject"}},"AccumulationAnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationDirective#shouldcomponentupdate"}},"AccumulationAnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationAnnotationsDirective#shouldcomponentupdate"}},"AccumulationSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesCollectionDirective#shouldcomponentupdate"}},"AccumulationSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/accumulation-chart/accumulationSeriesDirective#shouldcomponentupdate"}},"BulletChartComponent":{"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the prints gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#beforeprint"},"bulletChartMouseClick":{"name":"bulletChartMouseClick","description":"<p>Triggers on clicking the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#bulletchartmouseclick"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#legendrender"},"load":{"name":"load","description":"<p>Triggers before bullet chart load.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the bullet chart rendering</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#loaded"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the bulletchart tooltip is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#tooltiprender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#allowserverdatabinding"},"animation":{"name":"animation","description":"<p>Options for customizing animation of the feature bar.</p>\n","type":"AnimationModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#animation"},"border":{"name":"border","description":"<p>Options for customizing the color and width of the chart border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#border"},"bulletChartLegendModule":{"name":"bulletChartLegendModule","description":"<p><code>bulletChartLegendModule</code> is used to manipulate and add legend in accumulation chart.</p>\n","type":"BulletChartLegend","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#bulletchartlegendmodule"},"bulletTooltipModule":{"name":"bulletTooltipModule","description":"<p><code>bulletTooltipModule</code> is used to manipulate and add tooltip to the feature bar.</p>\n","type":"BulletTooltip","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#bullettooltipmodule"},"categoryField":{"name":"categoryField","description":"<p>It defines the category for the data source.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#categoryfield"},"categoryLabelStyle":{"name":"categoryLabelStyle","description":"<p>Options for customizing values labels.</p>\n","type":"BulletLabelStyleModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#categorylabelstyle"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#currentcontext"},"dataLabel":{"name":"dataLabel","description":"<p>Options for customizing data label of the feature bar.</p>\n","type":"BulletDataLabelModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#datalabel"},"dataSource":{"name":"dataSource","description":"<p>default value of multiple data bullet chart.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#element"},"enableGroupSeparator":{"name":"enableGroupSeparator","description":"<p>default value for enableGroupSeparator.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#enablegroupseparator"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#forceupdate"},"height":{"name":"height","description":"<p>The height of the bullet chart as a string accepts input both as '100px' or '100%'.\nIf specified as '100%, bullet chart renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#initrendercalled"},"interval":{"name":"interval","description":"<p>Specifies the interval for an scale.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#interval"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#isvue"},"labelFormat":{"name":"labelFormat","description":"<p>Specifies the format of the bullet chart axis labels.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#labelformat"},"labelPosition":{"name":"labelPosition","description":"<p>specifies the axis label position of the bullet chart.</p>\n","type":"LabelsPlacement","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#labelposition"},"labelStyle":{"name":"labelStyle","description":"<p>Options for customizing labels</p>\n","type":"BulletLabelStyleModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#labelstyle"},"legendSettings":{"name":"legendSettings","description":"<p>Options for customizing the legend of the bullet chart.</p>\n","type":"BulletChartLegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#legendsettings"},"locale":{"name":"locale","description":"<p>The locale of the bullet chart as a string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#locale"},"majorTickLines":{"name":"majorTickLines","description":"<p>Options for customizing major tick lines.</p>\n","type":"MajorTickLinesSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#majorticklines"},"margin":{"name":"margin","description":"<p>Options to customize left, right, top and bottom margins of the bullet chart.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#margin"},"maxTitleSize":{"name":"maxTitleSize","description":"","type":"Size","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#maxtitlesize"},"maximum":{"name":"maximum","description":"<p>Specifies the maximum range of an scale.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#maximum"},"minimum":{"name":"minimum","description":"<p>Specifies the minimum range of an scale.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#minimum"},"minorTickLines":{"name":"minorTickLines","description":"<p>Options for customizing minor tick lines.</p>\n","type":"MinorTickLinesSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#minorticklines"},"minorTicksPerInterval":{"name":"minorTicksPerInterval","description":"<p>specifies the interval of minor ticks.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#minorticksperinterval"},"opposedPosition":{"name":"opposedPosition","description":"<p>If set to true, the axis will render at the opposite side of its default position.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#opposedposition"},"orientation":{"name":"orientation","description":"<p>Orientation of the scale.</p>\n","type":"OrientationType","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#orientation"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#props"},"query":{"name":"query","description":"<p>It defines the query for the data source.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#query"},"ranges":{"name":"ranges","description":"<p>provides Qualitative ranges of the bullet chart.</p>\n","type":"RangeModel[]","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#ranges"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#state"},"subtitle":{"name":"subtitle","description":"<p>Specifies the sub title of the bullet chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#subtitle"},"subtitleStyle":{"name":"subtitleStyle","description":"<p>Options for customizing the sub title styles of the bullet chart.</p>\n","type":"BulletLabelStyleModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#subtitlestyle"},"tabIndex":{"name":"tabIndex","description":"<p>TabIndex value for the bullet chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#tabindex"},"targetColor":{"name":"targetColor","description":"<p>The stroke color for the comparative measure, which can accept values in hex and rgba as valid CSS color strings.\nThis property can also be mapped from the data source.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#targetcolor"},"targetField":{"name":"targetField","description":"<p>The DataSource field that contains the target value.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#targetfield"},"targetTypes":{"name":"targetTypes","description":"<p>The DataSource field that contains the target value.</p>\n","type":"TargetType[]","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#targettypes"},"targetWidth":{"name":"targetWidth","description":"<p>Options for customizing comparative bar color bullet chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#targetwidth"},"theme":{"name":"theme","description":"<p>Specifies the theme for the bullet chart.</p>\n","type":"ChartTheme","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#theme"},"tickPosition":{"name":"tickPosition","description":"<p>specifies the tick position of the bullet chart.</p>\n","type":"TickPosition","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#tickposition"},"title":{"name":"title","description":"<p>Specifies the title of the bullet chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#title"},"titlePosition":{"name":"titlePosition","description":"<p>Sets the title position of bullet chart.</p>\n","type":"TextPosition","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#titleposition"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the title styles of the bullet chart.</p>\n","type":"BulletLabelStyleModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Options for customizing the tooltip of the BulletChart.</p>\n","type":"BulletTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#tooltip"},"type":{"name":"type","description":"<p>Default type on feature measure.</p>\n","type":"FeatureType","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#type"},"valueBorder":{"name":"valueBorder","description":"<p>Options for customizing the color and width of the feature bar border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#valueborder"},"valueField":{"name":"valueField","description":"<p>The DataSource field that contains the value value.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#valuefield"},"valueFill":{"name":"valueFill","description":"<p>The stroke color for the feature measure, which can accept values in hex and rgba as valid CSS color strings.\nThis property can also be mapped from the data source.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#valuefill"},"valueHeight":{"name":"valueHeight","description":"<p>Options for customizing feature bar height of the bullet chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#valueheight"},"width":{"name":"width","description":"<p>The width of the bullet chart as a string accepts input as both like '100px' or '100%'.\nIf specified as '100%, bullet chart renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#attachunloadevent"},"createSvg":{"name":"createSvg","description":"<p>Method to create SVG element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#createsvg"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#detachunloadevent"},"export":{"name":"export","description":"<p>Handles the export method for bullet chart control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#handleunload"},"print":{"name":"print","description":"<p>Handles the print method for bullet chart control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#removeeventlistener"},"removeSvg":{"name":"removeSvg","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#removesvg"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/#inject"}},"BulletRangeCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeCollectionDirective#shouldcomponentupdate"}},"BulletRangeDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/bullet-chart/bulletRangeDirective#shouldcomponentupdate"}},"CategoriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoriesDirective#shouldcomponentupdate"}},"CategoryDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/categoryDirective#shouldcomponentupdate"}},"ChartComponent":{"afterExport":{"name":"afterExport","description":"<p>Triggers after the export is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#afterexport"},"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation for the series is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#animationcomplete"},"annotationRender":{"name":"annotationRender","description":"<p>Triggers before the annotation gets rendered. This event allows for modifications of the annotation content and its location before it is rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#annotationrender"},"axisLabelClick":{"name":"axisLabelClick","description":"<p>Triggers when the x-axis label is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#axislabelclick"},"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before each axis label is rendered. This event allows for the customization of axis label and its font style before rendering on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#axislabelrender"},"axisMultiLabelRender":{"name":"axisMultiLabelRender","description":"<p>Triggers before each axis multi-label is rendered. This event allows modification of multi-labels on the axis before they are rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#axismultilabelrender"},"axisRangeCalculated":{"name":"axisRangeCalculated","description":"<p>Triggers before each axis range is rendered. This event allows modification of the axis range and interval that are calculated based on data.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#axisrangecalculated"},"beforeExport":{"name":"beforeExport","description":"<p>Triggers before the export process begins. This event allows for the customization of export settings before the chart is exported.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#beforeexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the printing process starts. This event allows for the modification of the chart's HTML content before it is sent to the printer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#beforeprint"},"beforeResize":{"name":"beforeResize","description":"<p>Triggers before the chart is resized. This event allows for modifications to the chart size before resizing occurs.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#beforeresize"},"chartDoubleClick":{"name":"chartDoubleClick","description":"<p>Triggers when double-clicking the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartdoubleclick"},"chartMouseClick":{"name":"chartMouseClick","description":"<p>Triggers when clicking on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartmouseclick"},"chartMouseDown":{"name":"chartMouseDown","description":"<p>Triggers on mouse down.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartmousedown"},"chartMouseLeave":{"name":"chartMouseLeave","description":"<p>Triggers when the cursor leaves the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartmouseleave"},"chartMouseMove":{"name":"chartMouseMove","description":"<p>Triggers on hovering over the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartmousemove"},"chartMouseUp":{"name":"chartMouseUp","description":"<p>Triggers on mouse up.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartmouseup"},"drag":{"name":"drag","description":"<p>Triggers when the point is being dragged.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#drag"},"dragComplete":{"name":"dragComplete","description":"<p>Triggers after the drag selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#dragcomplete"},"dragEnd":{"name":"dragEnd","description":"<p>Triggers when the point drag operation ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#dragend"},"dragStart":{"name":"dragStart","description":"<p>Triggers when the drag operation for a point starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#dragstart"},"legendClick":{"name":"legendClick","description":"<p>Triggers after clicking on a legend item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#legendclick"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered. This allows the customization of legend before rendering on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#legendrender"},"load":{"name":"load","description":"<p>Triggers before the chart loads. This event allows for customization and configuration before the chart is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the chart has fully loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#loaded"},"multiLevelLabelClick":{"name":"multiLevelLabelClick","description":"<p>Triggers after clicking on a multi-level label.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#multilevellabelclick"},"onZooming":{"name":"onZooming","description":"<p>Triggers when the zoom selection started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#onzooming"},"pointClick":{"name":"pointClick","description":"<p>Triggers on point click.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#pointclick"},"pointDoubleClick":{"name":"pointDoubleClick","description":"<p>Triggers on point double-click.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#pointdoubleclick"},"pointMove":{"name":"pointMove","description":"<p>Triggers when a data point is hovered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#pointmove"},"pointRender":{"name":"pointRender","description":"<p>Triggers before each point in the series is rendered. This allows for the customization of each data point before it is rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#pointrender"},"resized":{"name":"resized","description":"<p>Triggers after the chart is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#resized"},"scrollChanged":{"name":"scrollChanged","description":"<p>Triggers when the scroll position changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#scrollchanged"},"scrollEnd":{"name":"scrollEnd","description":"<p>Triggers after the scroll action ends.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#scrollend"},"scrollStart":{"name":"scrollStart","description":"<p>Triggers when the scroll action starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#scrollstart"},"selectionComplete":{"name":"selectionComplete","description":"<p>Triggers after the selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#selectioncomplete"},"seriesRender":{"name":"seriesRender","description":"<p>Triggers before the series is rendered. This event allows for the customization of series properties before they are rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#seriesrender"},"sharedTooltipRender":{"name":"sharedTooltipRender","description":"<p>Triggers before the shared tooltip for the series is rendered. This event allows customization of the shared tooltip properties such as text, style, and template before it is rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#sharedtooltiprender"},"textRender":{"name":"textRender","description":"<p>Triggers before the data label for the series is rendered. This allows customization of data labels before they are rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#textrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for the series is rendered. This event allows customization of the tooltip properties such as text, style, and template before it is rendered on the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#tooltiprender"},"zoomComplete":{"name":"zoomComplete","description":"<p>Triggers after the zoom selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart/#zoomcomplete"},"accessibility":{"name":"accessibility","description":"<p>Options to improve accessibility for chart elements.</p>\n","type":"AccessibilityModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#accessibility"},"accumulationDistributionIndicatorModule":{"name":"accumulationDistributionIndicatorModule","description":"<p><code>accumulationDistributionIndicatorModule</code> is used to predict the market trend using Accumulation Distribution approach.</p>\n","type":"AccumulationDistributionIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#accumulationdistributionindicatormodule"},"allowExport":{"name":"allowExport","description":"<p>To enable export feature in blazor chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#allowexport"},"allowMultiSelection":{"name":"allowMultiSelection","description":"<p>If set to true, enables multi-drag selection in the chart.\nThis feature allows selecting multiple data points by dragging a selection box.</p>\n<blockquote>\n<p>Note that the <code>selectionMode</code> to be set to <code>DragX</code>, <code>DragY</code>, or <code>DragXY</code> for this feature to work.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#allowmultiselection"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#allowserverdatabinding"},"animated":{"name":"animated","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#animated"},"annotationModule":{"name":"annotationModule","description":"<p><code>annotationModule</code> is used to manipulate and add annotation to the chart.</p>\n","type":"ChartAnnotation","link":"//ej2.syncfusion.com/react/documentation/api/chart/#annotationmodule"},"annotations":{"name":"annotations","description":"<p>Annotations are used to highlight specific data points or areas in the chart, providing additional context and information.</p>\n","type":"ChartAnnotationSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#annotations"},"areaSeriesModule":{"name":"areaSeriesModule","description":"<p><code>areaSeriesModule</code> is used to add area series to the chart.</p>\n","type":"AreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#areaseriesmodule"},"atrIndicatorModule":{"name":"atrIndicatorModule","description":"<p><code>atrIndicatorModule</code> is used to predict the market trend using ATR approach.</p>\n","type":"AtrIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#atrindicatormodule"},"axes":{"name":"axes","description":"<p>Configuration options for the secondary axis in the chart.\nEach object in the collection represents an additional axis, allowing for the plotting of multiple data series with different scales.</p>\n","type":"AxisModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#axes"},"background":{"name":"background","description":"<p>The background color of the chart accepts values in hex and rgba formats as valid CSS color strings.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#background"},"backgroundImage":{"name":"backgroundImage","description":"<p>The background image of the chart accepts a string value as a URL link or the location of an image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#backgroundimage"},"barSeriesModule":{"name":"barSeriesModule","description":"<p><code>barSeriesModule</code> is used to add bar series to the chart.</p>\n","type":"BarSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#barseriesmodule"},"bollingerBandsModule":{"name":"bollingerBandsModule","description":"<p><code>bollingerBandsModule</code> is used to predict the market trend using Bollinger approach.</p>\n","type":"BollingerBands","link":"//ej2.syncfusion.com/react/documentation/api/chart/#bollingerbandsmodule"},"border":{"name":"border","description":"<p>Options for customizing the appearance of the border in the chart by using the <code>color</code> and <code>width</code> properties in the <code>border</code>.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#border"},"boxAndWhiskerSeriesModule":{"name":"boxAndWhiskerSeriesModule","description":"<p><code>boxAndWhiskerSeriesModule</code> is used to add box and whisker series to the chart.</p>\n","type":"BoxAndWhiskerSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#boxandwhiskerseriesmodule"},"bubbleSeriesModule":{"name":"bubbleSeriesModule","description":"<p><code>bubbleSeries</code> is used to add bubble series to the chart.</p>\n","type":"BubbleSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#bubbleseriesmodule"},"candleSeriesModule":{"name":"candleSeriesModule","description":"<p>'candleSeriesModule' is used to add candle series to the chart.</p>\n","type":"CandleSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#candleseriesmodule"},"categoryModule":{"name":"categoryModule","description":"<p><code>categoryModule</code> is used to manipulate and add category axis to the chart.</p>\n","type":"Category","link":"//ej2.syncfusion.com/react/documentation/api/chart/#categorymodule"},"chartArea":{"name":"chartArea","description":"<p>Configuration options for the chart area's border and background.</p>\n","type":"ChartAreaModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#chartarea"},"columnSeriesModule":{"name":"columnSeriesModule","description":"<p><code>columnSeriesModule</code> is used to add column series to the chart.</p>\n","type":"ColumnSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#columnseriesmodule"},"columns":{"name":"columns","description":"<p>Options to split the chart into multiple plotting areas vertically.\nEach object in the collection represents a separate plotting area (column) in the chart, allowing multiple data series to be displayed in distinct vertical sections.</p>\n","type":"ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart/#context"},"crosshair":{"name":"crosshair","description":"<p>The crosshair displays lines on the chart that follow the mouse cursor and show the axis values of the data points.</p>\n","type":"CrosshairSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#crosshair"},"crosshairModule":{"name":"crosshairModule","description":"<p><code>crosshairModule</code> is used to manipulate and add crosshair to the chart.</p>\n","type":"Crosshair","link":"//ej2.syncfusion.com/react/documentation/api/chart/#crosshairmodule"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart/#currentcontext"},"dataEditingModule":{"name":"dataEditingModule","description":"<p><code>dataEditingModule</code> is used to drag and drop of the point.</p>\n","type":"DataEditing","link":"//ej2.syncfusion.com/react/documentation/api/chart/#dataeditingmodule"},"dataLabelModule":{"name":"dataLabelModule","description":"<p><code>dataLabelModule</code> is used to manipulate and add data label to the series.</p>\n","type":"DataLabel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#datalabelmodule"},"dataSource":{"name":"dataSource","description":"<p>Specifies the data source for the chart. It can be an array of JSON objects, or an instance of DataManager.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/chart/#datasource"},"dateTimeCategoryModule":{"name":"dateTimeCategoryModule","description":"<p><code>dateTimeCategoryModule</code> is used to manipulate date time and category axis to the chart.</p>\n","type":"DateTimeCategory","link":"//ej2.syncfusion.com/react/documentation/api/chart/#datetimecategorymodule"},"dateTimeModule":{"name":"dateTimeModule","description":"<p><code>dateTimeModule</code> is used to manipulate and add date time axis to the chart.</p>\n","type":"DateTime","link":"//ej2.syncfusion.com/react/documentation/api/chart/#datetimemodule"},"description":{"name":"description","description":"<p>A description for the chart that provides additional information about its content for screen readers.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#description"},"duration":{"name":"duration","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart/#duration"},"eMAIndicatorModule":{"name":"eMAIndicatorModule","description":"<p><code>eMAIndicatorModule</code> is used to predict the market trend using EMA approach.</p>\n","type":"EmaIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#emaindicatormodule"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/chart/#element"},"enableAnimation":{"name":"enableAnimation","description":"<p>If set to true, animation effects will be enabled for chart elements such as axis labels, gridlines, series, markers, and data labels when the legend is clicked, or the data source is updated.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enableanimation"},"enableAutoIntervalOnBothAxis":{"name":"enableAutoIntervalOnBothAxis","description":"<p>If set to true, the intervals for all the axes will be calculated automatically based on the zoomed range.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enableautointervalonbothaxis"},"enableCanvas":{"name":"enableCanvas","description":"<p>When set to true, the chart will render using a canvas.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enablecanvas"},"enableExport":{"name":"enableExport","description":"<p>When set to true, it enables exporting the chart to various formats such as <code>JPEG</code>, <code>PNG</code>, <code>SVG</code>, <code>PDF</code>, <code>XLSX</code>, or <code>CSV</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enableexport"},"enableHtmlSanitizer":{"name":"enableHtmlSanitizer","description":"<p>Specifies whether to display or remove the untrusted HTML values in the Chart component.\nIf 'enableHtmlSanitizer' set to true, the component will sanitize any suspected untrusted strings and scripts before rendering them.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enablehtmlsanitizer"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enablertl"},"enableSideBySidePlacement":{"name":"enableSideBySidePlacement","description":"<p>This property controls whether columns for different series appear next to each other in a column chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#enablesidebysideplacement"},"errorBarModule":{"name":"errorBarModule","description":"<p><code>errorBarModule</code> is used to manipulate and add errorBar for series.</p>\n","type":"ErrorBar","link":"//ej2.syncfusion.com/react/documentation/api/chart/#errorbarmodule"},"exportModule":{"name":"exportModule","description":"<p><code>exportModule</code> is used to export the chart in <code>JPEG</code>, <code>PNG</code>, <code>SVG</code>, <code>PDF</code>, <code>XLSX</code>, or <code>CSV</code> format.</p>\n","type":"Export","link":"//ej2.syncfusion.com/react/documentation/api/chart/#exportmodule"},"focusBorderColor":{"name":"focusBorderColor","description":"<p>Customize the focus border color.\nIf not specified, the element will use the default focus border color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#focusbordercolor"},"focusBorderMargin":{"name":"focusBorderMargin","description":"<p>Customize the focus border margin.\nIf not specified, the element will use the default focus border margin.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart/#focusbordermargin"},"focusBorderWidth":{"name":"focusBorderWidth","description":"<p>Customize the focus border width.\nIf not specified, the element will use the default focus border width.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart/#focusborderwidth"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart/#forceupdate"},"height":{"name":"height","description":"<p>The height of the chart as a string, accepting input such as '100px' or '100%'.\nIf specified as '100%', the chart renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#height"},"highlightColor":{"name":"highlightColor","description":"<p>Defines the color used to highlight a data point on mouse hover.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#highlightcolor"},"highlightMode":{"name":"highlightMode","description":"<p>The <code>highlightMode</code> property determines how a series or individual data points are highlighted in the chart.\nThe available options are:</p>\n<ul>\n<li>'None': Disables highlighting.</li>\n<li>'Series': Highlights an entire series of data points.</li>\n<li>'Point': Highlights a single data point.</li>\n<li>'Cluster': Highlights a group of data points that belong to the same cluster.</li>\n</ul>\n","type":"HighlightMode","link":"//ej2.syncfusion.com/react/documentation/api/chart/#highlightmode"},"highlightModule":{"name":"highlightModule","description":"<p><code>highlightModule</code> is used to manipulate and add highlight to the chart.</p>\n","type":"Highlight","link":"//ej2.syncfusion.com/react/documentation/api/chart/#highlightmodule"},"highlightPattern":{"name":"highlightPattern","description":"<p>The <code>highlightPattern</code> property determines how the data points or series are visually highlighted.\nThe available options are:</p>\n<ul>\n<li>'None': No highlighting pattern.</li>\n<li>'Chessboard': Applies a chessboard pattern for highlighting.</li>\n<li>'Dots': Applies a dot pattern for highlighting.</li>\n<li>'DiagonalForward': Applies a forward diagonal line pattern for highlighting.</li>\n<li>'Crosshatch': Applies a crosshatch pattern for highlighting.</li>\n<li>'Pacman': Applies a Pacman pattern for highlighting.</li>\n<li>'DiagonalBackward': Applies a backward diagonal line pattern for highlighting.</li>\n<li>'Grid': Applies a grid pattern for highlighting.</li>\n<li>'Turquoise': Applies a turquoise pattern for highlighting.</li>\n<li>'Star': Applies a star pattern for highlighting.</li>\n<li>'Triangle': Applies a triangle pattern for highlighting.</li>\n<li>'Circle': Applies a circle pattern for highlighting.</li>\n<li>'Tile': Applies a tile pattern for highlighting.</li>\n<li>'HorizontalDash': Applies a horizontal dash pattern for highlighting.</li>\n<li>'VerticalDash': Applies a vertical dash pattern for highlighting.</li>\n<li>'Rectangle': Applies a rectangle pattern for highlighting.</li>\n<li>'Box': Applies a box pattern for highlighting.</li>\n<li>'VerticalStripe': Applies a vertical stripe pattern for highlighting.</li>\n<li>'HorizontalStripe': Applies a horizontal stripe pattern for highlighting.</li>\n<li>'Bubble': Applies a bubble pattern for highlighting.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/chart/#highlightpattern"},"hiloOpenCloseSeriesModule":{"name":"hiloOpenCloseSeriesModule","description":"<p><code>hiloOpenCloseSeriesModule</code> is used to add hilo open close series to the chart.</p>\n","type":"HiloOpenCloseSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#hiloopencloseseriesmodule"},"hiloSeriesModule":{"name":"hiloSeriesModule","description":"<p><code>hiloSeriesModule</code> is used to add hilo series to the chart.</p>\n","type":"HiloSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#hiloseriesmodule"},"histogramSeriesModule":{"name":"histogramSeriesModule","description":"<p><code>histogramSeriesModule</code> is used to add histogram series to the chart.</p>\n","type":"HistogramSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#histogramseriesmodule"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#ignorecollectionwatch"},"indicators":{"name":"indicators","description":"<p>Technical indicators assist in evaluating market conditions and identifying trends for making trading decisions.</p>\n","type":"TechnicalIndicatorModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#indicators"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isangular"},"isCrosshair":{"name":"isCrosshair","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#iscrosshair"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isdestroyed"},"isMultiSelect":{"name":"isMultiSelect","description":"<p>When set to true, it allows selecting multiple data points, series, or clusters.</p>\n<blockquote>\n<p>Note that the <code>selectionMode</code> must be set to <code>Point</code>, <code>Series</code>, or <code>Cluster</code> for multi-selection to be enabled.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#ismultiselect"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isserverrendered"},"isTransposed":{"name":"isTransposed","description":"<p>When set to true, the chart will render in a transposed manner, where the X and Y axes are interchanged.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#istransposed"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#isvue"},"isZoomed":{"name":"isZoomed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#iszoomed"},"legendModule":{"name":"legendModule","description":"<p><code>legendModule</code> is used to manipulate and add legend to the chart.</p>\n","type":"Legend","link":"//ej2.syncfusion.com/react/documentation/api/chart/#legendmodule"},"legendSettings":{"name":"legendSettings","description":"<p>The legend provides descriptive information about the data series displayed in the chart, helping to understand what each series represents.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#legendsettings"},"lineSeriesModule":{"name":"lineSeriesModule","description":"<p><code>lineSeriesModule</code> is used to add line series to the chart.</p>\n","type":"LineSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#lineseriesmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#locale"},"logarithmicModule":{"name":"logarithmicModule","description":"<p><code>logarithmicModule</code> is used to manipulate and add log axis to the chart.</p>\n","type":"Logarithmic","link":"//ej2.syncfusion.com/react/documentation/api/chart/#logarithmicmodule"},"macdIndicatorModule":{"name":"macdIndicatorModule","description":"<p><code>macdIndicatorModule</code> is used to predict the market trend using Macd approach.</p>\n","type":"MacdIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#macdindicatormodule"},"margin":{"name":"margin","description":"<p>Options to customize the margins around the chart, including the left, right, top, and bottom margins.\nThese margins refer to the space between the outer edge of the chart and its chart area.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#margin"},"markerIndex":{"name":"markerIndex","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart/#markerindex"},"momentumIndicatorModule":{"name":"momentumIndicatorModule","description":"<p><code>momentumIndicatorModule</code> is used to predict the market trend using Momentum approach.</p>\n","type":"MomentumIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#momentumindicatormodule"},"multiColoredAreaSeriesModule":{"name":"multiColoredAreaSeriesModule","description":"<p><code>multiColoredAreaSeriesModule</code> is used to add multi colored area series to the chart.</p>\n","type":"MultiColoredAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#multicoloredareaseriesmodule"},"multiColoredLineSeriesModule":{"name":"multiColoredLineSeriesModule","description":"<p><code>multiColoredLineSeriesModule</code> is used to add multi colored line series to the chart.</p>\n","type":"MultiColoredLineSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#multicoloredlineseriesmodule"},"multiLevelLabelModule":{"name":"multiLevelLabelModule","description":"<p><code>multiLevelLabelModule</code> is used to manipulate and add multi-level labels to the chart.</p>\n","type":"MultiLevelLabel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#multilevellabelmodule"},"palettes":{"name":"palettes","description":"<p>The <code>palettes</code> array defines a set of colors used for rendering the chart's series. Each color in the array is applied to the series in order.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#palettes"},"paretoSeriesModule":{"name":"paretoSeriesModule","description":"<p><code>paretoSeriesModule</code> is used to add pareto series to the chart.</p>\n","type":"ParetoSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#paretoseriesmodule"},"polarSeriesModule":{"name":"polarSeriesModule","description":"<p><code>polarSeriesModule</code> is used to add polar series to the chart.</p>\n","type":"PolarSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#polarseriesmodule"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart/#portals"},"primaryXAxis":{"name":"primaryXAxis","description":"<p>The <code>primaryXAxis</code> property configures the horizontal axis of the chart, including settings for axis labels, tick marks, grid lines, and axis ranges.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#primaryxaxis"},"primaryYAxis":{"name":"primaryYAxis","description":"<p>The <code>primaryYAxis</code> property configures the vertical axis of the chart, including settings for axis labels, tick marks, grid lines, and axis ranges.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#primaryyaxis"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chart/#props"},"radarSeriesModule":{"name":"radarSeriesModule","description":"<p><code>radarSeriesModule</code> is used to add radar series to the chart.</p>\n","type":"RadarSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#radarseriesmodule"},"rangeAreaSeriesModule":{"name":"rangeAreaSeriesModule","description":"<p><code>rangeAreaSeriesModule</code> is used to add range area series to the chart.</p>\n","type":"RangeAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rangeareaseriesmodule"},"rangeColorSettings":{"name":"rangeColorSettings","description":"<p>The <code>rangeColorSettings</code> property specifies a set of rules for applying different colors to points based on their value ranges.</p>\n","type":"RangeColorSettingModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rangecolorsettings"},"rangeColumnSeriesModule":{"name":"rangeColumnSeriesModule","description":"<p><code>rangeColumnSeriesModule</code> is used to add range column series to the chart.</p>\n","type":"RangeColumnSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rangecolumnseriesmodule"},"rangeStepAreaSeriesModule":{"name":"rangeStepAreaSeriesModule","description":"<p><code>rangeStepAreaSeriesModule</code> is used to add range step area series to the chart.</p>\n","type":"RangeStepAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rangestepareaseriesmodule"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart/#root"},"rows":{"name":"rows","description":"<p>Options to split the chart into multiple plotting areas horizontally.\nEach object in the collection represents a separate plotting area (row) in the chart, allowing multiple data series to be displayed in distinct horizontal sections.</p>\n","type":"RowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rows"},"rsiIndicatorModule":{"name":"rsiIndicatorModule","description":"<p><code>rSIIndicatorModule</code> is used to predict the market trend using RSI approach.</p>\n","type":"RsiIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#rsiindicatormodule"},"sMAIndicatorModule":{"name":"sMAIndicatorModule","description":"<p><code>sMAIndicatorModule</code> is used to predict the market trend using SMA approach.</p>\n","type":"SmaIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#smaindicatormodule"},"scatterSeriesModule":{"name":"scatterSeriesModule","description":"<p><code>scatterSeriesModule</code> is used to add scatter series to the chart.</p>\n","type":"ScatterSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#scatterseriesmodule"},"scrollBarModule":{"name":"scrollBarModule","description":"<p><code>scrollBarModule</code> is used to render a scrollbar in the chart while zooming.</p>\n","type":"ScrollBar","link":"//ej2.syncfusion.com/react/documentation/api/chart/#scrollbarmodule"},"selectedDataIndexes":{"name":"selectedDataIndexes","description":"<p>Specifies the point indexes to be selected when a chart is initially loaded.</p>\n<blockquote>\n<p>Note that <code>selectionMode</code> or <code>highlightMode</code> must be set to <code>Point</code>, <code>Series</code>, or <code>Cluster</code> for this feature to work.</p>\n</blockquote>\n","type":"IndexesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#selecteddataindexes"},"selectionMode":{"name":"selectionMode","description":"<p>The <code>selectionMode</code> property determines how data points or series can be highlighted or selected.\nThe available options are:</p>\n<ul>\n<li>'None': Disables any form of highlight or selection.</li>\n<li>'Series': Highlights or selects an entire series of data points.</li>\n<li>'Point': Highlights or selects a single data point.</li>\n<li>'Cluster': Highlights or selects a group of data points that belong to the same cluster.</li>\n<li>'DragXY': Selects points by dragging with respect to both horizontal and vertical axes.</li>\n<li>'DragX': Selects points by dragging with respect to horizontal axis.</li>\n<li>'DragY': Selects points by dragging with respect to vertical axis.</li>\n<li>'Lasso': Selects points by dragging with respect to free form.</li>\n</ul>\n","type":"SelectionMode","link":"//ej2.syncfusion.com/react/documentation/api/chart/#selectionmode"},"selectionModule":{"name":"selectionModule","description":"<p><code>selectionModule</code> is used to manipulate and add selection to the chart.</p>\n","type":"Selection","link":"//ej2.syncfusion.com/react/documentation/api/chart/#selectionmodule"},"selectionPattern":{"name":"selectionPattern","description":"<p>The <code>selectionPattern</code> property determines how the selected data points or series are visually represented.\nThe available options are:</p>\n<ul>\n<li>'None': No selection pattern is applied.</li>\n<li>'Chessboard': Applies a chessboard pattern as the selection effect.</li>\n<li>'Dots': Applies a dot pattern as the selection effect.</li>\n<li>'DiagonalForward': Applies a forward diagonal line pattern as the selection effect.</li>\n<li>'Crosshatch': Applies a crosshatch pattern as the selection effect.</li>\n<li>'Pacman': Applies a Pacman pattern as the selection effect.</li>\n<li>'DiagonalBackward': Applies a backward diagonal line pattern as the selection effect.</li>\n<li>'Grid': Applies a grid pattern as the selection effect.</li>\n<li>'Turquoise': Applies a turquoise pattern as the selection effect.</li>\n<li>'Star': Applies a star pattern as the selection effect.</li>\n<li>'Triangle': Applies a triangle pattern as the selection effect.</li>\n<li>'Circle': Applies a circle pattern as the selection effect.</li>\n<li>'Tile': Applies a tile pattern as the selection effect.</li>\n<li>'HorizontalDash': Applies a horizontal dash pattern as the selection effect.</li>\n<li>'VerticalDash': Applies a vertical dash pattern as the selection effect.</li>\n<li>'Rectangle': Applies a rectangle pattern as the selection effect.</li>\n<li>'Box': Applies a box pattern as the selection effect.</li>\n<li>'VerticalStripe': Applies a vertical stripe pattern as the selection effect.</li>\n<li>'HorizontalStripe': Applies a horizontal stripe pattern as the selection effect.</li>\n<li>'Bubble': Applies a bubble pattern as the selection effect.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/chart/#selectionpattern"},"series":{"name":"series","description":"<p>Configuration options for the chart's series.\nEach object in the <code>series</code> collection represents a distinct data series displayed in the chart. Customize various aspects of each series such as data, type, and appearance.</p>\n","type":"SeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart/#setstate"},"splineAreaSeriesModule":{"name":"splineAreaSeriesModule","description":"<p><code>splineAreaSeriesModule</code> is used to add spline area series to the chart.</p>\n","type":"SplineAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#splineareaseriesmodule"},"splineRangeAreaSeriesModule":{"name":"splineRangeAreaSeriesModule","description":"<p><code>splineRangeAreaSeriesModule</code> is used to add spline range area series to the chart.</p>\n","type":"SplineRangeAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#splinerangeareaseriesmodule"},"splineSeriesModule":{"name":"splineSeriesModule","description":"<p><code>splineSeriesModule</code> is used to add spline series to the chart.</p>\n","type":"SplineSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#splineseriesmodule"},"stackLabels":{"name":"stackLabels","description":"<p>Configuration options for stack labels in the chart.\nStack labels display the total value for stacked series, including customization options for appearance and positioning, and other visual elements to enhance chart readability.\nThis property allows users to modify how stack labels are rendered in a stacked chart.</p>\n","type":"StackLabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stacklabels"},"stackingAreaSeriesModule":{"name":"stackingAreaSeriesModule","description":"<p><code>stackingAreaSeriesModule</code> is used to add stacking area series to the chart.</p>\n","type":"StackingAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stackingareaseriesmodule"},"stackingBarSeriesModule":{"name":"stackingBarSeriesModule","description":"<p><code>stackingBarSeriesModule</code> is used to add stacking bar series to the chart.</p>\n","type":"StackingBarSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stackingbarseriesmodule"},"stackingColumnSeriesModule":{"name":"stackingColumnSeriesModule","description":"<p><code>stackingColumnSeriesModule</code> is used to add stacking column series to the chart.</p>\n","type":"StackingColumnSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stackingcolumnseriesmodule"},"stackingLineSeriesModule":{"name":"stackingLineSeriesModule","description":"<p><code>stackingLineSeriesModule</code> is used to add stacking line series to the chart.</p>\n","type":"StackingLineSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stackinglineseriesmodule"},"stackingStepAreaSeriesModule":{"name":"stackingStepAreaSeriesModule","description":"<p><code>stackingStepAreaSeriesModule</code> is used to add stacking step area series to the chart.</p>\n","type":"StackingStepAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stackingstepareaseriesmodule"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chart/#state"},"stepAreaSeriesModule":{"name":"stepAreaSeriesModule","description":"<p><code>stepAreaSeriesModule</code> is used to add step area series to the chart.</p>\n","type":"StepAreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stepareaseriesmodule"},"stepLineSeriesModule":{"name":"stepLineSeriesModule","description":"<p><code>stepLineSeriesModule</code> is used to add step line series to the chart.</p>\n","type":"StepLineSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#steplineseriesmodule"},"stochasticIndicatorModule":{"name":"stochasticIndicatorModule","description":"<p><code>stochasticIndicatorModule</code> is used to predict the market trend using Stochastic approach.</p>\n","type":"StochasticIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#stochasticindicatormodule"},"stripLineModule":{"name":"stripLineModule","description":"<p><code>stripLineModule</code> is used to manipulate and add strip line to the chart.</p>\n","type":"StripLine","link":"//ej2.syncfusion.com/react/documentation/api/chart/#striplinemodule"},"subTitle":{"name":"subTitle","description":"<p>The subtitle is positioned below the main title and provides additional details about the data represented in the chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#subtitle"},"subTitleStyle":{"name":"subTitleStyle","description":"<p>Options for customizing the appearance of the subtitle, which displays information about the plotted data below the main title.\nUse the <code>fontFamily</code>, <code>size</code>, <code>fontStyle</code>, <code>fontWeight</code>, and <code>color</code> properties in <code>titleSettings</code> to adjust the subtitle's appearance.</p>\n","type":"titleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#subtitlestyle"},"tMAIndicatorModule":{"name":"tMAIndicatorModule","description":"<p><code>tMAIndicatorModule</code> is used to predict the market trend using TMA approach.</p>\n","type":"TmaIndicator","link":"//ej2.syncfusion.com/react/documentation/api/chart/#tmaindicatormodule"},"tabIndex":{"name":"tabIndex","description":"<p>The <code>tabIndex</code> value determines the order in which the chart container receives focus during keyboard navigation.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart/#tabindex"},"theme":{"name":"theme","description":"<p>The theme applied to the chart for visual styling.\nChoose from predefined themes to change the overall look and feel of the chart.\nThe available themes are:</p>\n<ul>\n<li>Fabric</li>\n<li>FabricDark</li>\n<li>Bootstrap4</li>\n<li>Bootstrap</li>\n<li>BootstrapDark</li>\n<li>HighContrastLight</li>\n<li>HighContrast</li>\n<li>Tailwind</li>\n<li>TailwindDark</li>\n<li>Bootstrap5</li>\n<li>Bootstrap5Dark</li>\n<li>Fluent</li>\n<li>FluentDark</li>\n<li>Fluent2</li>\n<li>Fluent2Dark</li>\n<li>Fluent2HighContrast</li>\n<li>Material3</li>\n<li>Material3Dark</li>\n<li>Material</li>\n<li>MaterialDark</li>\n</ul>\n","type":"ChartTheme","link":"//ej2.syncfusion.com/react/documentation/api/chart/#theme"},"title":{"name":"title","description":"<p>The title is displayed at the top of the chart to provide information about the plotted data.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the appearance of the title, which displays information about the plotted data.\nUse the <code>fontFamily</code>, <code>size</code>, <code>fontStyle</code>, <code>fontWeight</code>, and <code>color</code> properties in <code>titleSettings</code> to adjust the title's appearance.</p>\n","type":"titleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Configuration options for the chart's tooltip, which displays details about the points when hovering over them.</p>\n","type":"TooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#tooltip"},"tooltipModule":{"name":"tooltipModule","description":"<p><code>tooltipModule</code> is used to manipulate and add tooltip to the series.</p>\n","type":"Tooltip","link":"//ej2.syncfusion.com/react/documentation/api/chart/#tooltipmodule"},"trendLineModule":{"name":"trendLineModule","description":"<p>'trendlineModule' is used to predict the market trend using trendlines.</p>\n","type":"Trendlines","link":"//ej2.syncfusion.com/react/documentation/api/chart/#trendlinemodule"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>When set to true, a grouping separator will be used for numbers to separate groups of thousands in the chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/#usegroupingseparator"},"waterfallSeriesModule":{"name":"waterfallSeriesModule","description":"<p><code>waterfallSeries</code> is used to add waterfall series to the chart.</p>\n","type":"WaterfallSeries","link":"//ej2.syncfusion.com/react/documentation/api/chart/#waterfallseriesmodule"},"width":{"name":"width","description":"<p>The width of the chart as a string, accepting input such as '100px' or '100%'.\nIf specified as '100%', the chart renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/#width"},"zoomModule":{"name":"zoomModule","description":"<p><code>zoomModule</code> is used to manipulate and add zooming to the chart.</p>\n","type":"Zoom","link":"//ej2.syncfusion.com/react/documentation/api/chart/#zoommodule"},"zoomSettings":{"name":"zoomSettings","description":"<p>Options to enable and configure the zooming feature in the chart.</p>\n","type":"ZoomSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart/#zoomsettings"},"FindXYPointValue":{"name":"FindXYPointValue","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#findxypointvalue"},"addAxes":{"name":"addAxes","description":"<p>To add secondary axis for the chart</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#addaxes"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#addeventlistener"},"addSeries":{"name":"addSeries","description":"<p>To add series for the chart</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#addseries"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#attachunloadevent"},"clearSeries":{"name":"clearSeries","description":"<p>Clear all series from the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#clearseries"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#detachunloadevent"},"export":{"name":"export","description":"<p>Exports the chart in the specified format.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#getlocaldata"},"getLocalizedLabel":{"name":"getLocalizedLabel","description":"<p>Gets the localized label by locale keyword.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#getlocalizedlabel"},"getModuleName":{"name":"getModuleName","description":"<p>Get component name</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#handleunload"},"hideCrosshair":{"name":"hideCrosshair","description":"<p>Hides a tooltip in the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#hidecrosshair"},"hideTooltip":{"name":"hideTooltip","description":"<p>Hides a tooltip in the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#hidetooltip"},"isSecondaryAxis":{"name":"isSecondaryAxis","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#issecondaryaxis"},"print":{"name":"print","description":"<p>Prints the chart or specified element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#print"},"processData":{"name":"processData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#processdata"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#refresh"},"refreshLiveData":{"name":"refreshLiveData","description":"<p>Refresh the chart for live data updates.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#refreshlivedata"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#removeeventlistener"},"removeSeries":{"name":"removeSeries","description":"<p>To Remove series for the chart</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#removeseries"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#serverdatabind"},"setAnnotationValue":{"name":"setAnnotationValue","description":"<p>Sets the content of the annotation dynamically for the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#setannotationvalue"},"showCrosshair":{"name":"showCrosshair","description":"<p>Displays a crosshair for the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#showcrosshair"},"showTooltip":{"name":"showTooltip","description":"<p>Displays a tooltip for the data points.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#showtooltip"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/#inject"}},"IndicatorDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorDirective#shouldcomponentupdate"}},"IndicatorsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/indicatorsDirective#shouldcomponentupdate"}},"MultiLevelLabelDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelDirective#shouldcomponentupdate"}},"MultiLevelLabelsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/multiLevelLabelsDirective#shouldcomponentupdate"}},"RangeColorSettingDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingDirective#shouldcomponentupdate"}},"RangeColorSettingsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/rangeColorSettingsDirective#shouldcomponentupdate"}},"SegmentDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentDirective#shouldcomponentupdate"}},"SegmentsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/segmentsDirective#shouldcomponentupdate"}},"SelectedDataIndexDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexDirective#shouldcomponentupdate"}},"SelectedDataIndexesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/selectedDataIndexesDirective#shouldcomponentupdate"}},"SeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesCollectionDirective#shouldcomponentupdate"}},"SeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/seriesDirective#shouldcomponentupdate"}},"StripLineDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLineDirective#shouldcomponentupdate"}},"StripLinesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/stripLinesDirective#shouldcomponentupdate"}},"TrendlineDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlineDirective#shouldcomponentupdate"}},"TrendlinesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart/trendlinesDirective#shouldcomponentupdate"}},"Chart3DAxesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxesDirective#shouldcomponentupdate"}},"Chart3DAxisDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DAxisDirective#shouldcomponentupdate"}},"Chart3DComponent":{"afterExport":{"name":"afterExport","description":"<p>Triggers after the export completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#afterexport"},"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before each axis label is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#axislabelrender"},"beforeExport":{"name":"beforeExport","description":"<p>Triggers before the export gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#beforeexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the prints gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#beforeprint"},"beforeResize":{"name":"beforeResize","description":"<p>Triggers before resizing of chart</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#beforeresize"},"chart3DMouseClick":{"name":"chart3DMouseClick","description":"<p>Triggered when the user clicks on a 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#chart3dmouseclick"},"chart3DMouseDown":{"name":"chart3DMouseDown","description":"<p>Triggered when the mouse is pressed down on a 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#chart3dmousedown"},"chart3DMouseLeave":{"name":"chart3DMouseLeave","description":"<p>Triggered when the cursor leaves a 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#chart3dmouseleave"},"chart3DMouseMove":{"name":"chart3DMouseMove","description":"<p>Triggered when the user hovers over a 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#chart3dmousemove"},"chart3DMouseUp":{"name":"chart3DMouseUp","description":"<p>Triggered when the mouse button is released on a 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#chart3dmouseup"},"legendClick":{"name":"legendClick","description":"<p>Triggered when the user clicks on the legend.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#legendclick"},"legendRender":{"name":"legendRender","description":"<p>Triggered when the legend is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#legendrender"},"load":{"name":"load","description":"<p>Triggered before the chart is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#load"},"loaded":{"name":"loaded","description":"<p>Triggered after the chart is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#loaded"},"pointClick":{"name":"pointClick","description":"<p>Triggered when the user clicks on data points.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#pointclick"},"pointMove":{"name":"pointMove","description":"<p>Triggered when the user hovers over data points.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#pointmove"},"pointRender":{"name":"pointRender","description":"<p>Triggered when the data point is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#pointrender"},"resized":{"name":"resized","description":"<p>Triggers after resizing of chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#resized"},"selectionComplete":{"name":"selectionComplete","description":"<p>Triggers after the selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#selectioncomplete"},"seriesRender":{"name":"seriesRender","description":"<p>Triggered when the series is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#seriesrender"},"textRender":{"name":"textRender","description":"<p>Triggered when the data label is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#textrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggered when the tooltip is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#tooltiprender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#allowserverdatabinding"},"animated":{"name":"animated","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#animated"},"axes":{"name":"axes","description":"<p>Secondary axis collection for the chart.</p>\n","type":"Chart3DAxisModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#axes"},"background":{"name":"background","description":"<p>The background color of the chart that accepts value in hex and rgba as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#background"},"backgroundImage":{"name":"backgroundImage","description":"<p>The background image of the chart that accepts value in string as url link or location of an image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#backgroundimage"},"border":{"name":"border","description":"<p>Options for customizing the color and width of the chart border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#border"},"columns":{"name":"columns","description":"<p>Options to split chart into multiple plotting areas vertically.\nEach object in the collection represents a plotting area in the chart.</p>\n","type":"Chart3DColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#columns"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#currentcontext"},"dataLabel3DModule":{"name":"dataLabel3DModule","description":"<p>The <code>dataLabel3DModule</code> is used to manipulate and add data label to the series.</p>\n","type":"DataLabel3D","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#datalabel3dmodule"},"dataSource":{"name":"dataSource","description":"<p>Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#datasource"},"depth":{"name":"depth","description":"<p>Depth of the 3D Chart from front view of the series to the background wall.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#depth"},"description":{"name":"description","description":"<p>Description for chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#description"},"duration":{"name":"duration","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#duration"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#element"},"enableExport":{"name":"enableExport","description":"<p>Enables or disables the export feature in the 3D chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#enableexport"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#enablepersistence"},"enableRotation":{"name":"enableRotation","description":"<p>If set true, enables the rotation in the 3D chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#enablerotation"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#enablertl"},"enableSideBySidePlacement":{"name":"enableSideBySidePlacement","description":"<p>To enable the side by side placing the points for column type series.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#enablesidebysideplacement"},"export3DModule":{"name":"export3DModule","description":"<p>The Export Module is used to export chart.</p>\n","type":"Export3D","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#export3dmodule"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#forceupdate"},"height":{"name":"height","description":"<p>The height of the chart as a string accepts input both as '100px' or '100%'.\nIf specified as '100%, chart renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#height"},"highlight3DModule":{"name":"highlight3DModule","description":"<p>The <code>highlight3DModule</code> is used to manipulate and add highlight to the chart.</p>\n","type":"Highlight3D","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#highlight3dmodule"},"highlightColor":{"name":"highlightColor","description":"<p>Defines the color for the highlighted data point.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#highlightcolor"},"highlightMode":{"name":"highlightMode","description":"<p>Specifies whether a series or data point should be highlighted. The options are:</p>\n<ul>\n<li>none: Disables the highlight.</li>\n<li>series: highlight a series.</li>\n<li>point: highlight a point.</li>\n<li>cluster: highlight a cluster of point</li>\n</ul>\n","type":"HighlightMode","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#highlightmode"},"highlightPattern":{"name":"highlightPattern","description":"<p>Specifies whether series or data point has to be selected. They are,</p>\n<ul>\n<li>none: sets none as highlighting pattern.</li>\n<li>chessboard: sets chess board as highlighting pattern.</li>\n<li>dots: sets dots as highlighting pattern.</li>\n<li>diagonalForward: sets diagonal forward as highlighting pattern.</li>\n<li>crosshatch: sets crosshatch as highlighting pattern.</li>\n<li>pacman: sets pacman highlighting  pattern.</li>\n<li>diagonalbackward: sets diagonal backward as highlighting pattern.</li>\n<li>grid: sets grid as highlighting pattern.</li>\n<li>turquoise: sets turquoise as highlighting pattern.</li>\n<li>star: sets star as highlighting  pattern.</li>\n<li>triangle: sets triangle as highlighting pattern.</li>\n<li>circle: sets circle as highlighting  pattern.</li>\n<li>tile: sets tile as highlighting pattern.</li>\n<li>horizontaldash: sets horizontal dash as highlighting pattern.</li>\n<li>verticaldash: sets vertical dash as highlighting pattern.</li>\n<li>rectangle: sets rectangle as highlighting  pattern.</li>\n<li>box: sets box as highlighting pattern.</li>\n<li>verticalstripe: sets vertical stripe as highlighting  pattern.</li>\n<li>horizontalstripe: sets horizontal stripe as highlighting  pattern.</li>\n<li>bubble: sets bubble as highlighting  pattern.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#highlightpattern"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isdestroyed"},"isMultiSelect":{"name":"isMultiSelect","description":"<p>If set true, enables the multi selection in chart. It requires <code>selectionMode</code> to be <code>Point</code> | <code>Series</code> | or <code>Cluster</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#ismultiselect"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isserverrendered"},"isTransposed":{"name":"isTransposed","description":"<p>It specifies whether the chart should be render in transposed manner or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#istransposed"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>The chart legend configuration options.</p>\n","type":"Chart3DLegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#locale"},"margin":{"name":"margin","description":"<p>Options to customize left, right, top and bottom margins of the chart.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#margin"},"palettes":{"name":"palettes","description":"<p>Palette for the chart series.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#palettes"},"perspectiveAngle":{"name":"perspectiveAngle","description":"<p>Defines the perspective angle for the 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#perspectiveangle"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#portals"},"primaryXAxis":{"name":"primaryXAxis","description":"<p>Options to configure the horizontal axis.</p>\n","type":"Chart3DAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#primaryxaxis"},"primaryYAxis":{"name":"primaryYAxis","description":"<p>Options to configure the vertical axis.</p>\n","type":"Chart3DAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#primaryyaxis"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#refs"},"requireInvertedAxis":{"name":"requireInvertedAxis","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#requireinvertedaxis"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#root"},"rotation":{"name":"rotation","description":"<p>Defines the rotating angle for the 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#rotation"},"rows":{"name":"rows","description":"<p>Options to split Chart into multiple plotting areas horizontally.\nEach object in the collection represents a plotting area in the Chart.</p>\n","type":"Chart3DRowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#rows"},"selectedDataIndexes":{"name":"selectedDataIndexes","description":"<p>Specifies the point indexes to be selected while loading a chart.\nIt requires <code>selectionMode</code> or <code>highlightMode</code> to be <code>Point</code> | <code>Series</code> | or <code>Cluster</code>.</p>\n","type":"IndexesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#selecteddataindexes"},"selection3DModule":{"name":"selection3DModule","description":"<p>The <code>selection3DModule</code> is used to manipulate and add selection to the chart.</p>\n","type":"Selection3D","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#selection3dmodule"},"selectionMode":{"name":"selectionMode","description":"<p>Specifies whether a series or data point should be highlighted. The options are:</p>\n<ul>\n<li>none: Disables the selection.</li>\n<li>series: selects a series.</li>\n<li>point: selects a point.</li>\n<li>cluster: selects a cluster of point</li>\n</ul>\n","type":"Chart3DSelectionMode","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#selectionmode"},"selectionPattern":{"name":"selectionPattern","description":"<p>Specifies whether series or data point has to be selected. They are,</p>\n<ul>\n<li>none: sets none as selecting pattern.</li>\n<li>chessboard: sets chess board as selecting pattern.</li>\n<li>dots: sets dots as  selecting pattern.</li>\n<li>diagonalForward: sets diagonal forward as selecting pattern.</li>\n<li>crosshatch: sets crosshatch as selecting pattern.</li>\n<li>pacman: sets pacman selecting pattern.</li>\n<li>diagonalbackward: sets diagonal backward as selecting pattern.</li>\n<li>grid: sets grid as selecting pattern.</li>\n<li>turquoise: sets turquoise as selecting pattern.</li>\n<li>star: sets star as selecting pattern.</li>\n<li>triangle: sets triangle as selecting pattern.</li>\n<li>circle: sets circle as selecting pattern.</li>\n<li>tile: sets tile as selecting pattern.</li>\n<li>horizontaldash: sets horizontal dash as selecting pattern.</li>\n<li>verticaldash: sets vertical dash as selecting pattern.</li>\n<li>rectangle: sets rectangle as selecting pattern.</li>\n<li>box: sets box as selecting pattern.</li>\n<li>verticalstripe: sets vertical stripe as  selecting pattern.</li>\n<li>horizontalstripe: sets horizontal stripe as selecting pattern.</li>\n<li>bubble: sets bubble as selecting pattern.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#selectionpattern"},"series":{"name":"series","description":"<p>The configuration for series in the chart.</p>\n","type":"Chart3DSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#state"},"subTitle":{"name":"subTitle","description":"<p>SubTitle of the chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#subtitle"},"subTitleStyle":{"name":"subTitleStyle","description":"<p>Options for customizing the Subtitle of the Chart.</p>\n","type":"TitleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#subtitlestyle"},"theme":{"name":"theme","description":"<p>Specifies the theme for the chart.</p>\n","type":"ChartTheme","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#theme"},"tilt":{"name":"tilt","description":"<p>Defines the slope angle for the 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#tilt"},"title":{"name":"title","description":"<p>Title of the chart</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the title of the Chart.</p>\n","type":"TitleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>The chart tooltip configuration options.</p>\n","type":"Chart3DTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#tooltip"},"tooltip3DModule":{"name":"tooltip3DModule","description":"<p>The <code>tooltip3DModule</code> is used to manipulate and add tooltip to the series.</p>\n","type":"Tooltip3D","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#tooltip3dmodule"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Specifies whether a grouping separator should be used for a number.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#usegroupingseparator"},"wallColor":{"name":"wallColor","description":"<p>Represents the color of the 3D wall.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#wallcolor"},"wallSize":{"name":"wallSize","description":"<p>Defines the width of the 3D chart wall.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#wallsize"},"width":{"name":"width","description":"<p>The width of the chart as a string accepts input as both like '100px' or '100%'.\nIf specified as '100%, chart renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#addeventlistener"},"addSeries":{"name":"addSeries","description":"<p>Adds new series to the chart</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#addseries"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#attachunloadevent"},"createChartSvg":{"name":"createChartSvg","description":"<p>Method to create SVG element.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#createchartsvg"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#detachunloadevent"},"export":{"name":"export","description":"<p>Export method for the chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#handleunload"},"highlightAnimation":{"name":"highlightAnimation","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#highlightanimation"},"print":{"name":"print","description":"<p>Prints the chart in the page.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#removeeventlistener"},"removeSeries":{"name":"removeSeries","description":"<p>Removes a series from the chart</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#removeseries"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#serverdatabind"},"stopElementAnimation":{"name":"stopElementAnimation","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#stopelementanimation"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/#inject"}},"Chart3DColumnDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnDirective#shouldcomponentupdate"}},"Chart3DColumnsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DColumnsDirective#shouldcomponentupdate"}},"Chart3DRowDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowDirective#shouldcomponentupdate"}},"Chart3DRowsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DRowsDirective#shouldcomponentupdate"}},"Chart3DSelectedDataIndexDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexDirective#shouldcomponentupdate"}},"Chart3DSelectedDataIndexesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSelectedDataIndexesDirective#shouldcomponentupdate"}},"Chart3DSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesCollectionDirective#shouldcomponentupdate"}},"Chart3DSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/chart3d/chart3DSeriesDirective#shouldcomponentupdate"}},"CircularChart3DComponent":{"afterExport":{"name":"afterExport","description":"<p>Triggers after the export is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#afterexport"},"beforeExport":{"name":"beforeExport","description":"<p>Triggers before the export starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#beforeexport"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before printing starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#beforeprint"},"beforeResize":{"name":"beforeResize","description":"<p>Triggered before resizing the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#beforeresize"},"circularChart3DMouseClick":{"name":"circularChart3DMouseClick","description":"<p>Triggered when the user clicks on a circular 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchart3dmouseclick"},"circularChart3DMouseDown":{"name":"circularChart3DMouseDown","description":"<p>Triggered when the mouse is pressed down on a circular 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchart3dmousedown"},"circularChart3DMouseLeave":{"name":"circularChart3DMouseLeave","description":"<p>Triggered when the cursor leaves a circular 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchart3dmouseleave"},"circularChart3DMouseMove":{"name":"circularChart3DMouseMove","description":"<p>Triggered when the user hovers over a circular 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchart3dmousemove"},"circularChart3DMouseUp":{"name":"circularChart3DMouseUp","description":"<p>Triggered when the mouse button is released on a circular 3D chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchart3dmouseup"},"legendClick":{"name":"legendClick","description":"<p>Triggers after a legend is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#legendclick"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#legendrender"},"load":{"name":"load","description":"<p>Triggered before the circular 3D is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the circular 3D chart is loaded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#loaded"},"pointClick":{"name":"pointClick","description":"<p>Triggered when the user clicks on data points.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#pointclick"},"pointMove":{"name":"pointMove","description":"<p>Triggered when the user hovers over data points.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#pointmove"},"pointRender":{"name":"pointRender","description":"<p>Triggers before each point for a series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#pointrender"},"resized":{"name":"resized","description":"<p>Triggered after the chart is resized.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#resized"},"selectionComplete":{"name":"selectionComplete","description":"<p>Triggers after the selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#selectioncomplete"},"seriesRender":{"name":"seriesRender","description":"<p>Triggers before a series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#seriesrender"},"textRender":{"name":"textRender","description":"<p>Triggers before the data label for a series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#textrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggered when the tooltip is ready to render on the screen.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#tooltiprender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#allowserverdatabinding"},"background":{"name":"background","description":"<p>The background color of the circular 3D chart, which accepts a value in hex, rgba as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#background"},"backgroundImage":{"name":"backgroundImage","description":"<p>The background image of the chart, specified as a URL link or the location of an image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#backgroundimage"},"border":{"name":"border","description":"<p>Options for customizing the color and width of the circular 3D chart border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#border"},"circularChartDataLabel3DModule":{"name":"circularChartDataLabel3DModule","description":"<p>The <code>circularChartDataLabel3DModule</code> is used to manipulate and add data labels in the circular 3D chart.</p>\n","type":"CircularChartDataLabel3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchartdatalabel3dmodule"},"circularChartExport3DModule":{"name":"circularChartExport3DModule","description":"<p>The <code>circularChartExport3DModule</code> Module is used to facilitate the export of the circular 3D chart.</p>\n","type":"CircularChartExport3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchartexport3dmodule"},"circularChartHighlight3DModule":{"name":"circularChartHighlight3DModule","description":"<p>The <code>circularHighlight3DModule</code> is used to manipulate and add highlights to the circular 3D chart.</p>\n","type":"CircularChartHighlight3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularcharthighlight3dmodule"},"circularChartLegend3DModule":{"name":"circularChartLegend3DModule","description":"<p>The <code>circularChartLegend3DModule</code> is used to manipulate and add legend in the circular 3D chart.</p>\n","type":"CircularChartLegend3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchartlegend3dmodule"},"circularChartSelection3DModule":{"name":"circularChartSelection3DModule","description":"<p>The <code>circularChartSelection3DModule</code> is used to manipulate and add selection in the circular 3D chart.</p>\n","type":"CircularChartSelection3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularchartselection3dmodule"},"circularChartTooltip3DModule":{"name":"circularChartTooltip3DModule","description":"<p>The <code>circularChartTooltip3DModule</code> is used to manipulate and add tooltips in the circular 3D chart.</p>\n","type":"CircularChartTooltip3D","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#circularcharttooltip3dmodule"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Specifies the dataSource for the circular 3D chart. It can be an array of JSON objects or an instance of DataManager.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#datasource"},"depth":{"name":"depth","description":"<p>Specifies the depth of the circular 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#depth"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#element"},"enableAnimation":{"name":"enableAnimation","description":"<p>If set true, enables the animation for circular 3D chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#enableanimation"},"enableExport":{"name":"enableExport","description":"<p>Enables or disables the export feature in the circular 3D chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#enableexport"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#enablepersistence"},"enableRotation":{"name":"enableRotation","description":"<p>Enables or disables rotation in the circular 3D chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#enablerotation"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#forceupdate"},"height":{"name":"height","description":"<p>The height of the chart as a string, accepting input as both '100px' or '100%'.\nIf specified as '100%', the chart renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#height"},"highlightColor":{"name":"highlightColor","description":"<p>Defines the color for the highlighted data point.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#highlightcolor"},"highlightMode":{"name":"highlightMode","description":"<p>Specifies whether a point has to be highlighted or not.\nTakes values: 'None' or 'Point'.</p>\n<ul>\n<li>None: Disables the highlight.</li>\n<li>Point: Highlights a point.</li>\n</ul>\n","type":"CircularChart3DHighlightMode","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#highlightmode"},"highlightPattern":{"name":"highlightPattern","description":"<p>Specifies the highlight pattern for series or data points in the circular 3D chart. Options include:</p>\n<ul>\n<li>none: No specific selection pattern.</li>\n<li>chessboard: Chessboard pattern.</li>\n<li>dots: Dots pattern.</li>\n<li>diagonalForward: Diagonal forward pattern.</li>\n<li>crosshatch: Crosshatch pattern.</li>\n<li>pacman: Pacman pattern.</li>\n<li>diagonalbackward: Diagonal backward pattern.</li>\n<li>grid: Grid pattern.</li>\n<li>turquoise: Turquoise pattern.</li>\n<li>star: Star pattern.</li>\n<li>triangle: Triangle pattern.</li>\n<li>circle: Circle pattern.</li>\n<li>tile: Tile pattern.</li>\n<li>horizontaldash: Horizontal dash pattern.</li>\n<li>verticaldash: Vertical dash pattern.</li>\n<li>rectangle: Rectangle pattern.</li>\n<li>box: Box pattern.</li>\n<li>verticalstripe: Vertical stripe pattern.</li>\n<li>horizontalstripe: Horizontal stripe pattern.</li>\n<li>bubble: Bubble pattern.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#highlightpattern"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isdestroyed"},"isMultiSelect":{"name":"isMultiSelect","description":"<p>Enables or disables multi-selection in the circular 3D chart.\nIf set true, enables the multi selection in circular 3D chart. It requires <code>selectionMode</code> to be <code>Point</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#ismultiselect"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>Options for customizing the legend of the circular 3D chart.</p>\n","type":"CircularChart3DLegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#locale"},"margin":{"name":"margin","description":"<p>Options to customize the left, right, top, and bottom margins of the circular 3D chart.</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#margin"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#root"},"rotation":{"name":"rotation","description":"<p>Defines the rotation angle for the circular 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#rotation"},"selectedDataIndexes":{"name":"selectedDataIndexes","description":"<p>Specifies the point indexes to be selected while loading a circular 3D chart.\nIt requires <code>selectionMode</code> to be <code>Point</code>.</p>\n","type":"IndexesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#selecteddataindexes"},"selectionMode":{"name":"selectionMode","description":"<p>Specifies whether a point has to be selected or not.\nTakes values: 'None' or 'Point'.</p>\n<ul>\n<li>None: Disables the selection.</li>\n<li>Point: Selects a point.</li>\n</ul>\n","type":"CircularChart3DSelectionMode","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#selectionmode"},"selectionPattern":{"name":"selectionPattern","description":"<p>Specifies the selection pattern for series or data points in the circular 3D chart. Options include:</p>\n<ul>\n<li>none: No specific selection pattern.</li>\n<li>chessboard: Chessboard pattern.</li>\n<li>dots: Dots pattern.</li>\n<li>diagonalForward: Diagonal forward pattern.</li>\n<li>crosshatch: Crosshatch pattern.</li>\n<li>pacman: Pacman pattern.</li>\n<li>diagonalbackward: Diagonal backward pattern.</li>\n<li>grid: Grid pattern.</li>\n<li>turquoise: Turquoise pattern.</li>\n<li>star: Star pattern.</li>\n<li>triangle: Triangle pattern.</li>\n<li>circle: Circle pattern.</li>\n<li>tile: Tile pattern.</li>\n<li>horizontaldash: Horizontal dash pattern.</li>\n<li>verticaldash: Vertical dash pattern.</li>\n<li>rectangle: Rectangle pattern.</li>\n<li>box: Box pattern.</li>\n<li>verticalstripe: Vertical stripe pattern.</li>\n<li>horizontalstripe: Horizontal stripe pattern.</li>\n<li>bubble: Bubble pattern.</li>\n</ul>\n","type":"SelectionPattern","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#selectionpattern"},"series":{"name":"series","description":"<p>The configuration for series in circular 3D chart.\nThe <code>series</code> property allows you to define an array of circular 3D series, each with its own settings and data.</p>\n","type":"CircularChart3DSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#setstate"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#state"},"subTitle":{"name":"subTitle","description":"<p>Represents the subtitle for the circular 3D chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#subtitle"},"subTitleStyle":{"name":"subTitleStyle","description":"<p>Options for customizing the subtitle of the circular 3D Chart.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#subtitlestyle"},"theme":{"name":"theme","description":"<p>Specifies the theme for the circular 3D chart.</p>\n","type":"CircularChart3DTheme","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#theme"},"tilt":{"name":"tilt","description":"<p>Defines the slope angle for the circular 3D chart.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#tilt"},"title":{"name":"title","description":"<p>Represents the title for the circular 3D chart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the title of the circular 3D chart.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Options for customizing the tooltip of the circular 3D chart.</p>\n","type":"CircularChart3DTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#tooltip"},"type":{"name":"type","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#type"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Specifies whether a grouping separator should be used for numbers.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#usegroupingseparator"},"width":{"name":"width","description":"<p>The width of the chart as a string, accepting input as both '100px' or '100%'\nIf specified as '100%', the chart renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#databind"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#detachunloadevent"},"export":{"name":"export","description":"<p>Export method for the circular 3D chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#getlocaldata"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#handleunload"},"pdfExport":{"name":"pdfExport","description":"<p>Export the chart on the page to a PDF document.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#pdfexport"},"print":{"name":"print","description":"<p>Handles the print method for the circular 3D chart control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/#inject"}},"CircularChart3DSelectedDataIndexDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexDirective#shouldcomponentupdate"}},"CircularChart3DSelectedDataIndexesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSelectedDataIndexesDirective#shouldcomponentupdate"}},"CircularChart3DSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesCollectionDirective#shouldcomponentupdate"}},"CircularChart3DSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/circularchart3d/circularChart3DSeriesDirective#shouldcomponentupdate"}},"RangeNavigatorComponent":{"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the prints gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#beforeprint"},"beforeResize":{"name":"beforeResize","description":"<p>Triggers before window resize.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#beforeresize"},"changed":{"name":"changed","description":"<p>Triggers after change the slider.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#changed"},"labelRender":{"name":"labelRender","description":"<p>Triggers before the label rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelrender"},"load":{"name":"load","description":"<p>Triggers before the range navigator rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the range navigator rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#loaded"},"resized":{"name":"resized","description":"<p>Triggers after the range navigator resized</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#resized"},"selectorRender":{"name":"selectorRender","description":"<p>Triggers before the range navigator selector rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#selectorrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#tooltiprender"},"allowIntervalData":{"name":"allowIntervalData","description":"<p>Allow the data to be selected for that particular interval while clicking the particular label.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#allowintervaldata"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#allowserverdatabinding"},"allowSnapping":{"name":"allowSnapping","description":"<p>Enable snapping for range navigator sliders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#allowsnapping"},"animationDuration":{"name":"animationDuration","description":"<p>Duration of the animation.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#animationduration"},"areaSeriesModule":{"name":"areaSeriesModule","description":"<p><code>areaSeriesModule</code> is used to add area series in the chart.</p>\n","type":"AreaSeries","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#areaseriesmodule"},"background":{"name":"background","description":"<p>The background color of the chart that accepts value in hex and rgba as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#background"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>It defines the data source for a range navigator.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#datasource"},"dateTimeCategoryModule":{"name":"dateTimeCategoryModule","description":"<p><code>dateTimeCategoryModule</code> is used to manipulate and add dateTimeCategory axis to the chart.</p>\n","type":"DateTimeCategory","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#datetimecategorymodule"},"dateTimeModule":{"name":"dateTimeModule","description":"<p><code>datetimeModule</code> is used to manipulate and add dateTime axis to the chart.</p>\n","type":"DateTime","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#datetimemodule"},"disableRangeSelector":{"name":"disableRangeSelector","description":"<p>To render the period selector with out range navigator.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#disablerangeselector"},"doubleModule":{"name":"doubleModule","description":"<p><code>doubleModule</code> is used to manipulate and add double axis to the chart.</p>\n","type":"Double","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#doublemodule"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#element"},"enableDeferredUpdate":{"name":"enableDeferredUpdate","description":"<p>Enable deferred update for the range navigator.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#enabledeferredupdate"},"enableGrouping":{"name":"enableGrouping","description":"<p>Enable grouping for the labels.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#enablegrouping"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#enablertl"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#forceupdate"},"groupBy":{"name":"groupBy","description":"<p>GroupBy property for the axis.</p>\n","type":"RangeIntervalType","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#groupby"},"height":{"name":"height","description":"<p>The height of the chart as a string accepts input both as '100px' or '100%'.\nIf specified as '100%, range navigator renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#initrendercalled"},"interval":{"name":"interval","description":"<p>interval value for the axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#interval"},"intervalType":{"name":"intervalType","description":"<p>IntervalType for the dateTime axis.</p>\n","type":"RangeIntervalType","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#intervaltype"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#isvue"},"labelFormat":{"name":"labelFormat","description":"<p>Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\nIt also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelformat"},"labelIntersectAction":{"name":"labelIntersectAction","description":"<p>Specifies, when the axis labels intersect with each other.They are,</p>\n<ul>\n<li>None: Shows all the labels.</li>\n<li>Hide: Hides the label when it intersects.</li>\n</ul>\n","type":"RangeLabelIntersectAction","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelintersectaction"},"labelPlacement":{"name":"labelPlacement","description":"<p>Specifies the placement of labels to the axis line. They are,\nbetweenTicks - Render the label between the ticks.\nonTicks - Render the label on the ticks.\nauto - Render the label between or on the tick based on data.</p>\n","type":"NavigatorPlacement","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelplacement"},"labelPosition":{"name":"labelPosition","description":"<p>Label positions for the axis.</p>\n","type":"AxisPosition","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelposition"},"labelStyle":{"name":"labelStyle","description":"<p>Label style for the labels.</p>\n","type":"FontModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#labelstyle"},"lineSeriesModule":{"name":"lineSeriesModule","description":"<p><code>lineSeriesModule</code> is used to add line series to the chart.</p>\n","type":"LineSeries","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#lineseriesmodule"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#locale"},"logBase":{"name":"logBase","description":"<p>base value for log axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#logbase"},"logarithmicModule":{"name":"logarithmicModule","description":"<p><code>logarithmicModule</code> is used to manipulate and add log axis to the chart.</p>\n","type":"Logarithmic","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#logarithmicmodule"},"majorGridLines":{"name":"majorGridLines","description":"<p>MajorGridLines</p>\n","type":"MajorGridLinesModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#majorgridlines"},"majorTickLines":{"name":"majorTickLines","description":"<p>MajorTickLines</p>\n","type":"MajorTickLinesModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#majorticklines"},"margin":{"name":"margin","description":"<p>Margin for the range navigator</p>\n","type":"MarginModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#margin"},"maximum":{"name":"maximum","description":"<p>Maximum value for the axis</p>\n","type":"number|Date","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#maximum"},"minimum":{"name":"minimum","description":"<p>Minimum value for the axis</p>\n","type":"number|Date","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#minimum"},"navigatorBorder":{"name":"navigatorBorder","description":"<p>Options for customizing the color and width of the chart border.</p>\n","type":"BorderModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#navigatorborder"},"navigatorStyleSettings":{"name":"navigatorStyleSettings","description":"<p>Navigator style settings</p>\n","type":"StyleSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#navigatorstylesettings"},"periodSelectorModule":{"name":"periodSelectorModule","description":"<p><code>periodSelectorModule</code> is used to add period selector un range navigator</p>\n","type":"PeriodSelector","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#periodselectormodule"},"periodSelectorSettings":{"name":"periodSelectorSettings","description":"<p>Period selector settings</p>\n","type":"PeriodSelectorSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#periodselectorsettings"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#props"},"query":{"name":"query","description":"<p>It defines the query for the data source.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#query"},"rangeTooltipModule":{"name":"rangeTooltipModule","description":"<p><code>tooltipModule</code> is used to manipulate and add tooltip to the series.</p>\n","type":"RangeTooltip","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#rangetooltipmodule"},"redraw":{"name":"redraw","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#redraw"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#root"},"secondaryLabelAlignment":{"name":"secondaryLabelAlignment","description":"<p>It specifies the label alignment for secondary axis labels</p>\n","type":"LabelAlignment","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#secondarylabelalignment"},"series":{"name":"series","description":"<p>It defines the configuration of series in the range navigator</p>\n","type":"RangeNavigatorSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#setstate"},"skeleton":{"name":"skeleton","description":"<p>Specifies the skeleton format in which the dateTime format will process.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#skeleton"},"skeletonType":{"name":"skeletonType","description":"<p>It specifies the type of format to be used in dateTime format process.</p>\n","type":"SkeletonType","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#skeletontype"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#state"},"stepLineSeriesModule":{"name":"stepLineSeriesModule","description":"<p><code>stepLineSeriesModule</code> is used to add stepLine series in the chart.</p>\n","type":"StepLineSeries","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#steplineseriesmodule"},"theme":{"name":"theme","description":"<p>Specifies the theme for the range navigator.</p>\n","type":"ChartTheme","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#theme"},"tickPosition":{"name":"tickPosition","description":"<p>Tick Position for the axis</p>\n","type":"AxisPosition","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#tickposition"},"tooltip":{"name":"tooltip","description":"<p>Options for customizing the tooltip of the chart.</p>\n","type":"RangeTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#tooltip"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>Specifies whether a grouping separator should be used for a number.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#usegroupingseparator"},"value":{"name":"value","description":"<p>Selected range for range navigator.</p>\n","type":"number[]|Date[]","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#value"},"valueType":{"name":"valueType","description":"<p>Specifies the data types that the axis can handle:</p>\n<ul>\n<li>Double: This type is used for rendering a numeric axis to accommodate numeric data.</li>\n<li>DateTime: This type is utilized for rendering a date-time axis to manage date-time data.</li>\n<li>Logarithmic: This type is applied for rendering a logarithmic axis to handle a wide range of values.</li>\n<li>DateTimeCategory: This type is used to render a date time category axis for managing business days.</li>\n</ul>\n","type":"RangeValueType","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#valuetype"},"width":{"name":"width","description":"<p>The width of the range navigator as a string accepts input as both like '100px' or '100%'.\nIf specified as '100%, range navigator renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#width"},"xName":{"name":"xName","description":"<p>It defines the xName for the range navigator.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#xname"},"yName":{"name":"yName","description":"<p>It defines the yName for the range navigator.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#yname"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#attachunloadevent"},"createSecondaryElement":{"name":"createSecondaryElement","description":"<p>Creating secondary range navigator.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#createsecondaryelement"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#detachunloadevent"},"export":{"name":"export","description":"<p>Handles the export method for range navigator control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>To get the module name of the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#handleunload"},"onPropertyChanged":{"name":"onPropertyChanged","description":"<p>OnProperty change method calling here.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#onpropertychanged"},"preRender":{"name":"preRender","description":"<p>Starting point of the control initialization.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#prerender"},"print":{"name":"print","description":"<p>Handles the print method for range navigator control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#render"},"renderChart":{"name":"renderChart","description":"<p>Creating Chart for range navigator.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#renderchart"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/#inject"}},"RangenavigatorSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesCollectionDirective#shouldcomponentupdate"}},"RangenavigatorSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/range-navigator/rangenavigatorSeriesDirective#shouldcomponentupdate"}},"SmithchartSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesCollectionDirective#shouldcomponentupdate"}},"SmithchartSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/smithchartSeriesDirective#shouldcomponentupdate"}},"SmithchartComponent":{"animationComplete":{"name":"animationComplete","description":"<p>Triggers after the animation completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#animationcomplete"},"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before the axis label is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#axislabelrender"},"beforePrint":{"name":"beforePrint","description":"<p>Triggers before the prints gets started.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#beforeprint"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#legendrender"},"load":{"name":"load","description":"<p>Triggers before smithchart rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after smithchart rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#loaded"},"seriesRender":{"name":"seriesRender","description":"<p>Triggers before the series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#seriesrender"},"subtitleRender":{"name":"subtitleRender","description":"<p>Triggers before the sub-title is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#subtitlerender"},"textRender":{"name":"textRender","description":"<p>Triggers before the datalabel text is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#textrender"},"titleRender":{"name":"titleRender","description":"<p>Triggers before the title is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#titlerender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#tooltiprender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#allowserverdatabinding"},"background":{"name":"background","description":"<p>The background color of the smithchart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#background"},"border":{"name":"border","description":"<p>options for customizing border.</p>\n","type":"SmithchartBorderModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#border"},"bounds":{"name":"bounds","description":"<p>area bounds</p>\n","type":"SmithchartRect","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#bounds"},"chartArea":{"name":"chartArea","description":"","type":"SmithchartRect","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#chartarea"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#currentcontext"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#element"},"elementSpacing":{"name":"elementSpacing","description":"<p>Spacing between elements.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#elementspacing"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#enablertl"},"font":{"name":"font","description":"<p>options for customizing margin.</p>\n","type":"SmithchartFontModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#font"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#forceupdate"},"height":{"name":"height","description":"<p>height for smithchart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#height"},"horizontalAxis":{"name":"horizontalAxis","description":"<p>Options to configure the horizontal axis.</p>\n","type":"SmithchartAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#horizontalaxis"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#isvue"},"legendBounds":{"name":"legendBounds","description":"<p>legend bounds</p>\n","type":"SmithchartRect","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#legendbounds"},"legendSettings":{"name":"legendSettings","description":"<p>options for customizing legend.</p>\n","type":"SmithchartLegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#locale"},"margin":{"name":"margin","description":"<p>options for customizing margin.</p>\n","type":"SmithchartMarginModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#margin"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#props"},"radialAxis":{"name":"radialAxis","description":"<p>Options to configure the vertical axis.</p>\n","type":"SmithchartAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#radialaxis"},"radius":{"name":"radius","description":"<p>Spacing between elements.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#radius"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#refs"},"renderType":{"name":"renderType","description":"<p>render type of smithchart.</p>\n","type":"RenderType","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#rendertype"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#root"},"series":{"name":"series","description":"<p>options for customizing series.</p>\n","type":"SmithchartSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#series"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#setstate"},"smithchartLegendModule":{"name":"smithchartLegendModule","description":"<p><code>smithchartLegendModule</code> is used to add legend to the smithchart.</p>\n","type":"SmithchartLegend","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#smithchartlegendmodule"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#state"},"theme":{"name":"theme","description":"<p>theme for smithchart.</p>\n","type":"SmithchartTheme","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#theme"},"title":{"name":"title","description":"<p>options for customizing title.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#title"},"tooltipRenderModule":{"name":"tooltipRenderModule","description":"<p><code>tooltipRenderModule</code> is used to add tooltip to the smithchart.</p>\n","type":"TooltipRender","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#tooltiprendermodule"},"width":{"name":"width","description":"<p>width for smithchart.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#width"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#databind"},"destroy":{"name":"destroy","description":"<p>To destroy the widget.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#detachunloadevent"},"export":{"name":"export","description":"<p>Handles the export method for the smith chart control.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#export"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Get component name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#handleunload"},"mouseEnd":{"name":"mouseEnd","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#mouseend"},"mouseMove":{"name":"mouseMove","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#mousemove"},"print":{"name":"print","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#print"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#render"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#serverdatabind"},"setTabIndex":{"name":"setTabIndex","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#settabindex"},"smithchartOnClick":{"name":"smithchartOnClick","description":"<p>To handle the click event for the smithchart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#smithchartonclick"},"smithchartOnResize":{"name":"smithchartOnResize","description":"<p>To handle the window resize event on smithchart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#smithchartonresize"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/smithchart/#inject"}},"RangeBandSettingDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingDirective#shouldcomponentupdate"}},"RangeBandSettingsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/rangeBandSettingsDirective#shouldcomponentupdate"}},"SparklineComponent":{"axisRendering":{"name":"axisRendering","description":"<p>Triggers before sparkline axis render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#axisrendering"},"dataLabelRendering":{"name":"dataLabelRendering","description":"<p>Triggers before the sparkline datalabel render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#datalabelrendering"},"load":{"name":"load","description":"<p>Triggers before sparkline render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after sparkline rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#loaded"},"markerRendering":{"name":"markerRendering","description":"<p>Triggers before the sparkline marker render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#markerrendering"},"pointRegionMouseClick":{"name":"pointRegionMouseClick","description":"<p>Triggers while mouse click on the sparkline point region.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#pointregionmouseclick"},"pointRegionMouseMove":{"name":"pointRegionMouseMove","description":"<p>Triggers while mouse move on the sparkline point region.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#pointregionmousemove"},"pointRendering":{"name":"pointRendering","description":"<p>Triggers before sparkline points render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#pointrendering"},"resize":{"name":"resize","description":"<p>Triggers on resizing the sparkline.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#resize"},"seriesRendering":{"name":"seriesRendering","description":"<p>Triggers before sparkline series render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#seriesrendering"},"sparklineMouseClick":{"name":"sparklineMouseClick","description":"<p>Triggers while mouse click on the sparkline container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#sparklinemouseclick"},"sparklineMouseMove":{"name":"sparklineMouseMove","description":"<p>Triggers while mouse move on the sparkline container.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#sparklinemousemove"},"tooltipInitialize":{"name":"tooltipInitialize","description":"<p>Triggers before sparkline tooltip render.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#tooltipinitialize"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#allowserverdatabinding"},"axisSettings":{"name":"axisSettings","description":"<p>To configure Sparkline container area customization.</p>\n","type":"AxisSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#axissettings"},"border":{"name":"border","description":"<p>To configure Sparkline points border color and width.</p>\n","type":"SparklineBorderModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#border"},"containerArea":{"name":"containerArea","description":"<p>To configure Sparkline container area customization.</p>\n","type":"ContainerAreaModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#containerarea"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#context"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#currentcontext"},"dataLabelSettings":{"name":"dataLabelSettings","description":"<p>To configure Sparkline dataLabel configuration.</p>\n","type":"SparklineDataLabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#datalabelsettings"},"dataSource":{"name":"dataSource","description":"<p>To configure sparkline data source.</p>\n","type":"Object[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#element"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#enablertl"},"endPointColor":{"name":"endPointColor","description":"<p>To configure sparkline series last x value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#endpointcolor"},"fill":{"name":"fill","description":"<p>To configure sparkline series fill.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#fill"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#forceupdate"},"format":{"name":"format","description":"<p>To apply internationalization for sparkline.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#format"},"height":{"name":"height","description":"<p>To configure Sparkline height.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#height"},"highPointColor":{"name":"highPointColor","description":"<p>To configure sparkline series highest y value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#highpointcolor"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#ignorecollectionwatch"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isangular"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isdestroyed"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isreactcomponent"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isserverrendered"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#isvue"},"lineWidth":{"name":"lineWidth","description":"<p>To configure sparkline line series width.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#linewidth"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#locale"},"lowPointColor":{"name":"lowPointColor","description":"<p>To configure sparkline series lowest y value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#lowpointcolor"},"markerSettings":{"name":"markerSettings","description":"<p>To configure Sparkline marker configuration.</p>\n","type":"SparklineMarkerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#markersettings"},"negativePointColor":{"name":"negativePointColor","description":"<p>To configure sparkline series negative y value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#negativepointcolor"},"opacity":{"name":"opacity","description":"<p>To configure sparkline line series opacity.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#opacity"},"padding":{"name":"padding","description":"<p>To configure Sparkline container area customization.</p>\n","type":"PaddingModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#padding"},"palette":{"name":"palette","description":"<p>To configure sparkline series color palette. It applicable to column and pie type series.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#palette"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#portals"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#props"},"query":{"name":"query","description":"<p>Specifies the query for filter the data.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#query"},"rangeBandSettings":{"name":"rangeBandSettings","description":"<p>To configure Sparkline axis line customization.</p>\n","type":"RangeBandSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#rangebandsettings"},"rangePadding":{"name":"rangePadding","description":"<p>To configure Sparkline series type.</p>\n","type":"SparklineRangePadding","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#rangepadding"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#refs"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#root"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#setstate"},"sparklineTooltipModule":{"name":"sparklineTooltipModule","description":"","type":"SparklineTooltip","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#sparklinetooltipmodule"},"startPointColor":{"name":"startPointColor","description":"<p>To configure sparkline series first x value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#startpointcolor"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#state"},"theme":{"name":"theme","description":"<p>To configure sparkline theme.</p>\n","type":"SparklineTheme","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#theme"},"tiePointColor":{"name":"tiePointColor","description":"<p>To configure sparkline winloss series tie y value point color.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#tiepointcolor"},"tooltipSettings":{"name":"tooltipSettings","description":"<p>To configure Sparkline tooltip settings.</p>\n","type":"SparklineTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#tooltipsettings"},"type":{"name":"type","description":"<p>To configure Sparkline series type.</p>\n","type":"SparklineType","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#type"},"useGroupingSeparator":{"name":"useGroupingSeparator","description":"<p>To enable the separator.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#usegroupingseparator"},"valueType":{"name":"valueType","description":"<p>To configure sparkline series value type.</p>\n","type":"SparklineValueType","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#valuetype"},"width":{"name":"width","description":"<p>To configure Sparkline width.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#width"},"xName":{"name":"xName","description":"<p>To configure sparkline series xName.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#xname"},"yName":{"name":"yName","description":"<p>To configure sparkline series yName.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#yname"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#attachunloadevent"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#databind"},"destroy":{"name":"destroy","description":"<p>Destroy the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#detachunloadevent"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Get component name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#handleunload"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#render"},"renderSparkline":{"name":"renderSparkline","description":"<p>To render sparkline elements.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#rendersparkline"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#serverdatabind"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/sparkline/#inject"}},"StockChartAnnotationDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationDirective#shouldcomponentupdate"}},"StockChartAnnotationsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAnnotationsDirective#shouldcomponentupdate"}},"StockChartAxesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxesDirective#shouldcomponentupdate"}},"StockChartAxisDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartAxisDirective#shouldcomponentupdate"}},"StockChartIndicatorDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorDirective#shouldcomponentupdate"}},"StockChartIndicatorsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartIndicatorsDirective#shouldcomponentupdate"}},"StockChartPeriodDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodDirective#shouldcomponentupdate"}},"StockChartPeriodsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartPeriodsDirective#shouldcomponentupdate"}},"StockChartRowDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowDirective#shouldcomponentupdate"}},"StockChartRowsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartRowsDirective#shouldcomponentupdate"}},"StockChartSelectedDataIndexDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexDirective#shouldcomponentupdate"}},"StockChartSelectedDataIndexesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSelectedDataIndexesDirective#shouldcomponentupdate"}},"StockChartSeriesCollectionDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesCollectionDirective#shouldcomponentupdate"}},"StockChartSeriesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartSeriesDirective#shouldcomponentupdate"}},"StockChartComponent":{"axisLabelRender":{"name":"axisLabelRender","description":"<p>Triggers before each axis label is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#axislabelrender"},"beforeExport":{"name":"beforeExport","description":"<p>Triggers before the export process begins. This event allows for the customization of export settings before the chart is exported.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#beforeexport"},"legendClick":{"name":"legendClick","description":"<p>Triggers after click on legend.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#legendclick"},"legendRender":{"name":"legendRender","description":"<p>Triggers before the legend is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#legendrender"},"load":{"name":"load","description":"<p>Triggers before the range navigator rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#load"},"loaded":{"name":"loaded","description":"<p>Triggers after the range navigator rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#loaded"},"onZooming":{"name":"onZooming","description":"<p>Triggers after the zoom selection is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#onzooming"},"pointClick":{"name":"pointClick","description":"<p>Triggers on point click.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#pointclick"},"pointMove":{"name":"pointMove","description":"<p>Triggers on point move.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#pointmove"},"rangeChange":{"name":"rangeChange","description":"<p>Triggers if the range is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#rangechange"},"selectorRender":{"name":"selectorRender","description":"<p>Triggers before render the selector</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#selectorrender"},"seriesRender":{"name":"seriesRender","description":"<p>Triggers before the series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#seriesrender"},"stockChartMouseClick":{"name":"stockChartMouseClick","description":"<p>Triggers on clicking the stock chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartmouseclick"},"stockChartMouseDown":{"name":"stockChartMouseDown","description":"<p>Triggers on mouse down.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartmousedown"},"stockChartMouseLeave":{"name":"stockChartMouseLeave","description":"<p>Triggers when cursor leaves the chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartmouseleave"},"stockChartMouseMove":{"name":"stockChartMouseMove","description":"<p>Triggers on hovering the stock chart.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartmousemove"},"stockChartMouseUp":{"name":"stockChartMouseUp","description":"<p>Triggers on mouse up.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartmouseup"},"stockEventRender":{"name":"stockEventRender","description":"<p>Triggers before the series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockeventrender"},"tooltipRender":{"name":"tooltipRender","description":"<p>Triggers before the tooltip for series is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#tooltiprender"},"allowServerDataBinding":{"name":"allowServerDataBinding","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#allowserverdatabinding"},"annotations":{"name":"annotations","description":"<p>The configuration for annotation in chart.</p>\n","type":"StockChartAnnotationSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#annotations"},"axes":{"name":"axes","description":"<p>Secondary axis collection for the stockChart.</p>\n","type":"StockChartAxisModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#axes"},"background":{"name":"background","description":"<p>The background color of the stockChart that accepts value in hex and rgba as a valid CSS color string.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#background"},"border":{"name":"border","description":"<p>Options for customizing the color and width of the stockChart border.</p>\n","type":"StockChartBorderModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#border"},"chartArea":{"name":"chartArea","description":"<p>Options for configuring the border and background of the stockChart area.</p>\n","type":"StockChartAreaModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#chartarea"},"context":{"name":"context","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#context"},"crosshair":{"name":"crosshair","description":"<p>Options for customizing the crosshair of the chart.</p>\n","type":"CrosshairSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#crosshair"},"currentContext":{"name":"currentContext","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#currentcontext"},"dataSource":{"name":"dataSource","description":"<p>Specifies the DataSource for the stockChart. It can be an array of JSON objects or an instance of DataManager.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#datasource"},"ej2StatePersistenceVersion":{"name":"ej2StatePersistenceVersion","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#ej2statepersistenceversion"},"element":{"name":"element","description":"","type":"HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#element"},"enableCustomRange":{"name":"enableCustomRange","description":"<p>Custom Range</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#enablecustomrange"},"enablePeriodSelector":{"name":"enablePeriodSelector","description":"<p>It specifies whether the periodSelector to be rendered in financial chart</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#enableperiodselector"},"enablePersistence":{"name":"enablePersistence","description":"<p>Enable or disable persisting component's state between page reloads.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#enablepersistence"},"enableRtl":{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#enablertl"},"enableSelector":{"name":"enableSelector","description":"<p>It specifies whether the range navigator to be rendered in financial chart</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#enableselector"},"exportType":{"name":"exportType","description":"<p>It specifies the types of Export types in financial chart.</p>\n","type":"ExportType[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#exporttype"},"forceUpdate":{"name":"forceUpdate","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#forceupdate"},"height":{"name":"height","description":"<p>The height of the stockChart as a string accepts input both as '100px' or '100%'.\nIf specified as '100%, stockChart renders to the full height of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#height"},"ignoreCollectionWatch":{"name":"ignoreCollectionWatch","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#ignorecollectionwatch"},"indicatorType":{"name":"indicatorType","description":"<p>It specifies the types of indicators in financial chart.</p>\n","type":"TechnicalIndicators[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#indicatortype"},"indicators":{"name":"indicators","description":"<p>Defines the collection of technical indicators, that are used in financial markets.</p>\n","type":"StockChartIndicatorModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#indicators"},"initRenderCalled":{"name":"initRenderCalled","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#initrendercalled"},"isAngular":{"name":"isAngular","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isangular"},"isDateTimeCategory":{"name":"isDateTimeCategory","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isdatetimecategory"},"isDestroyed":{"name":"isDestroyed","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isdestroyed"},"isMultiSelect":{"name":"isMultiSelect","description":"<p>If set true, enables the multi selection in chart. It requires <code>selectionMode</code> to be <code>Point</code> | <code>Series</code> | or <code>Cluster</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#ismultiselect"},"isReact":{"name":"isReact","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isreact"},"isReactComponent":{"name":"isReactComponent","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isreactcomponent"},"isSelect":{"name":"isSelect","description":"<p>If set true, enables the animation in chart.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isselect"},"isServerRendered":{"name":"isServerRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isserverrendered"},"isStockChartRendered":{"name":"isStockChartRendered","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isstockchartrendered"},"isTransposed":{"name":"isTransposed","description":"<p>It specifies whether the stockChart should be render in transposed manner or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#istransposed"},"isVue":{"name":"isVue","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#isvue"},"legendSettings":{"name":"legendSettings","description":"<p>Options for customizing the legend of the stockChart.</p>\n","type":"StockChartLegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#legendsettings"},"locale":{"name":"locale","description":"<p>Overrides the global culture and localization value for this component. Default global culture is 'en-US'.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#locale"},"mainObject":{"name":"mainObject","description":"<p>Overall SVG</p>\n","type":"Element","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#mainobject"},"margin":{"name":"margin","description":"<p>Options to customize left, right, top and bottom margins of the stockChart.</p>\n","type":"StockMarginModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#margin"},"periods":{"name":"periods","description":"<p>To configure period selector options.</p>\n","type":"PeriodsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#periods"},"portals":{"name":"portals","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#portals"},"primaryXAxis":{"name":"primaryXAxis","description":"<p>Options to configure the horizontal axis.</p>\n","type":"StockChartAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#primaryxaxis"},"primaryYAxis":{"name":"primaryYAxis","description":"<p>Options to configure the vertical axis.</p>\n","type":"StockChartAxisModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#primaryyaxis"},"props":{"name":"props","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#props"},"refs":{"name":"refs","description":"","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#refs"},"resizeTo":{"name":"resizeTo","description":"","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#resizeto"},"root":{"name":"root","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#root"},"rows":{"name":"rows","description":"<p>Options to split stockChart into multiple plotting areas horizontally.\nEach object in the collection represents a plotting area in the stockChart.</p>\n","type":"StockChartRowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#rows"},"selectedDataIndexes":{"name":"selectedDataIndexes","description":"<p>Specifies the point indexes to be selected while loading a chart.\nIt requires <code>selectionMode</code> to be <code>Point</code> | <code>Series</code> | or <code>Cluster</code>.</p>\n","type":"StockChartIndexesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#selecteddataindexes"},"selectionMode":{"name":"selectionMode","description":"<p>Specifies whether series or data point has to be selected. They are,</p>\n<ul>\n<li>none: Disables the selection.</li>\n<li>series: selects a series.</li>\n<li>point: selects a point.</li>\n<li>cluster: selects a cluster of point</li>\n<li>dragXY: selects points by dragging with respect to both horizontal and vertical axes</li>\n<li>dragX: selects points by dragging with respect to horizontal axis.</li>\n<li>dragY: selects points by dragging with respect to vertical axis.</li>\n</ul>\n","type":"SelectionMode","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#selectionmode"},"series":{"name":"series","description":"<p>The configuration for series in the stockChart.</p>\n","type":"StockSeriesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#series"},"seriesType":{"name":"seriesType","description":"<p>It specifies the types of series in financial chart.</p>\n","type":"ChartSeriesType[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#seriestype"},"setState":{"name":"setState","description":"","type":"any","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#setstate"},"sortedData":{"name":"sortedData","description":"","type":"number[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#sorteddata"},"state":{"name":"state","description":"","type":"","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#state"},"stockEvents":{"name":"stockEvents","description":"<p>The configuration for stock events in the stockChart.</p>\n","type":"StockEventsSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockevents"},"stockLegendModule":{"name":"stockLegendModule","description":"<p><code>legendModule</code> is used to manipulate and add legend to the Stockchart.</p>\n","type":"StockLegend","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stocklegendmodule"},"tempSeriesType":{"name":"tempSeriesType","description":"","type":"ChartSeriesType[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#tempseriestype"},"theme":{"name":"theme","description":"<p>Specifies the theme for the stockChart.</p>\n","type":"ChartTheme","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#theme"},"title":{"name":"title","description":"<p>Title of the chart</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#title"},"titleStyle":{"name":"titleStyle","description":"<p>Options for customizing the title of the Chart.</p>\n","type":"StockChartFontModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#titlestyle"},"tooltip":{"name":"tooltip","description":"<p>Options for customizing the tooltip of the chart.</p>\n","type":"StockTooltipSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#tooltip"},"trendlineType":{"name":"trendlineType","description":"<p>It specifies the types of trendline types in financial chart.</p>\n","type":"TrendlineTypes[]","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#trendlinetype"},"width":{"name":"width","description":"<p>The width of the stockChart as a string accepts input as both like '100px' or '100%'.\nIf specified as '100%, stockChart renders to the full width of its parent element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#width"},"zoomChange":{"name":"zoomChange","description":"<p>private</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#zoomchange"},"zoomSettings":{"name":"zoomSettings","description":"<p>Options to enable the zooming feature in the chart.</p>\n","type":"ZoomSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#zoomsettings"},"addEventListener":{"name":"addEventListener","description":"<p>Adds the handler to the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#addeventlistener"},"appendTo":{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#appendto"},"attachUnloadEvent":{"name":"attachUnloadEvent","description":"<p>Adding unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#attachunloadevent"},"chartModuleInjection":{"name":"chartModuleInjection","description":"<p>Module Injection for components.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#chartmoduleinjection"},"dataBind":{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#databind"},"destroy":{"name":"destroy","description":"<p>Destroy method.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#destroy"},"detachUnloadEvent":{"name":"detachUnloadEvent","description":"<p>Removing unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#detachunloadevent"},"findCurrentData":{"name":"findCurrentData","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#findcurrentdata"},"getLocalData":{"name":"getLocalData","description":"<p>Returns the persistence data for component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#getlocaldata"},"getModuleName":{"name":"getModuleName","description":"<p>Get component name.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#getmodulename"},"getRootElement":{"name":"getRootElement","description":"<p>Returns the route element of the component</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#getrootelement"},"handleUnload":{"name":"handleUnload","description":"<p>Handling unload event to persist data when enable persistence true</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#handleunload"},"rangeChanged":{"name":"rangeChanged","description":"<p>To change the range for chart.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#rangechanged"},"refresh":{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#refresh"},"removeEventListener":{"name":"removeEventListener","description":"<p>Removes the handler from the given event listener.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#removeeventlistener"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#render"},"renderPeriodSelector":{"name":"renderPeriodSelector","description":"<p>Render period selector.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#renderperiodselector"},"serverDataBind":{"name":"serverDataBind","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#serverdatabind"},"stockChartDataManagerSuccess":{"name":"stockChartDataManagerSuccess","description":"<p>DataManager Success.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#stockchartdatamanagersuccess"},"Inject":{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/#inject"}},"StockEventDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventDirective#shouldcomponentupdate"}},"StockEventsDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockEventsDirective#shouldcomponentupdate"}},"StockChartTrendlineDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#modulename"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlineDirective#shouldcomponentupdate"}},"StockChartTrendlinesDirective":{"isDirective":{"name":"isDirective","description":"","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#isdirective"},"moduleName":{"name":"moduleName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#modulename"},"propertyName":{"name":"propertyName","description":"","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#propertyname"},"UNSAFE_componentWillMount":{"name":"UNSAFE_componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nThis method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#unsafe_componentwillmount"},"UNSAFE_componentWillReceiveProps":{"name":"UNSAFE_componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#unsafe_componentwillreceiveprops"},"UNSAFE_componentWillUpdate":{"name":"UNSAFE_componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#unsafe_componentwillupdate"},"componentDidCatch":{"name":"componentDidCatch","description":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentdidcatch"},"componentDidMount":{"name":"componentDidMount","description":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentdidmount"},"componentDidUpdate":{"name":"componentDidUpdate","description":"<p>Called immediately after updating occurs. Not called for the initial render.\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentdidupdate"},"componentWillMount":{"name":"componentWillMount","description":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentwillmount"},"componentWillReceiveProps":{"name":"componentWillReceiveProps","description":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\nCalling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentwillreceiveprops"},"componentWillUnmount":{"name":"componentWillUnmount","description":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentwillunmount"},"componentWillUpdate":{"name":"componentWillUpdate","description":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.\nNote: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#componentwillupdate"},"getSnapshotBeforeUpdate":{"name":"getSnapshotBeforeUpdate","description":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#getsnapshotbeforeupdate"},"render":{"name":"render","description":"","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#render"},"shouldComponentUpdate":{"name":"shouldComponentUpdate","description":"<p>Called to determine whether the change in props and state should trigger a re-render.\n<code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/stock-chart/stockChartTrendlinesDirective#shouldcomponentupdate"}}}