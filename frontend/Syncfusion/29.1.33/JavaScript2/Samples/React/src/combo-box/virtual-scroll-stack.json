{"index.css":"#local,#remote,#group {\n    margin: 0 auto;\n    width: 250px !important;\n    padding-top: 15px;\n}\n.drop-down-list-content .h4 {\n    font-size: 16px;\n    margin: 0 0 10px;\n    font-weight: bold;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","dataSource.json":"{\n    \"country\":[\n        { \"CountryName\": \"Australia\", \"CountryId\": \"2\" }, \n        { \"CountryName\": \"United States\", \"CountryId\": \"1\" }\n    ],\n    \"state\":[\n        { \"StateName\": \"New York\", \"CountryId\": \"1\", \"StateId\": \"101\" }, { \"StateName\": \"Queensland\", \"CountryId\": \"2\", \"StateId\": \"104\" },\n        { \"StateName\": \"Tasmania \", \"CountryId\": \"2\", \"StateId\": \"105\" }, { \"StateName\": \"Victoria\", \"CountryId\": \"2\", \"StateId\": \"106\" },\n        { \"StateName\": \"Virginia \", \"CountryId\": \"1\", \"StateId\": \"102\" }, { \"StateName\": \"Washington\", \"CountryId\": \"1\", \"StateId\": \"103\" }\n    ],\n    \"cities\":[\n        { \"CityName\": \"Aberdeen\", \"StateId\": \"103\", \"CityId\": 207 }, { \"CityName\": \"Alexandria\", \"StateId\": \"102\", \"CityId\": 204 },\n        { \"CityName\": \"Albany\", \"StateId\": \"101\", \"CityId\": 201 },  { \"CityName\": \"Beacon \", \"StateId\": \"101\", \"CityId\": 202 },\n        { \"CityName\": \"Brisbane \", \"StateId\": \"104\", \"CityId\": 211 }, { \"CityName\": \"Cairns\", \"StateId\": \"104\", \"CityId\": 212 },\n        { \"CityName\": \"Colville \", \"StateId\": \"103\", \"CityId\": 208 }, { \"CityName\": \"Devonport\", \"StateId\": \"105\", \"CityId\": 215 },\n        { \"CityName\": \"Emporia\", \"StateId\": \"102\", \"CityId\": 206 }, { \"CityName\": \"Geelong\", \"StateId\": \"106\", \"CityId\": 218 },\n        { \"CityName\": \"Hampton \", \"StateId\": \"102\", \"CityId\": 205 }, { \"CityName\": \"Healesville \", \"StateId\": \"106\", \"CityId\": 217 },\n        { \"CityName\": \"Hobart\", \"StateId\": \"105\", \"CityId\": 213 }, { \"CityName\": \"Launceston \", \"StateId\": \"105\", \"CityId\": 214 },\n        { \"CityName\": \"Lockport\", \"StateId\": \"101\", \"CityId\": 203 }, { \"CityName\": \"Melbourne\", \"StateId\": \"106\", \"CityId\": 216 },\n        { \"CityName\": \"Pasco\", \"StateId\": \"103\", \"CityId\": 209 }, { \"CityName\": \"Townsville\", \"StateId\": \"104\", \"CityId\": 210 }\n    ],\n    \"countries\":[\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\n        { \"Name\": \"France\", \"Code\": \"FR\" },\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\n        { \"Name\": \"Greenland\", \"Code\": \"GL\" },\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" },\n        { \"Name\": \"India\", \"Code\": \"IN\" },\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\n        { \"Name\": \"United States\", \"Code\": \"US\" }\n    ],\n    \"sportsData\" :[\n        { \"Id\": \"Game1\", \"Game\": \"American Football\" },\n        { \"Id\": \"Game2\", \"Game\": \"Badminton\" },\n        { \"Id\": \"Game3\", \"Game\": \"Basketball\" },\n        { \"Id\": \"Game4\", \"Game\": \"Cricket\" },\n        { \"Id\": \"Game5\", \"Game\": \"Football\" },\n        { \"Id\": \"Game6\", \"Game\": \"Golf\" },\n        { \"Id\": \"Game7\", \"Game\": \"Hockey\" },\n        { \"Id\": \"Game8\", \"Game\": \"Rugby\" },\n        { \"Id\": \"Game9\", \"Game\": \"Snooker\" },\n        { \"Id\": \"Game10\", \"Game\": \"Tennis\" }\n    ],\n    \"data\":[\n        \"Águilas\",\n        \"Ajedrez\",\n        \"Ala Delta\",\n        \"Álbumes de Música\",\n        \"Alusivos\",\n        \"Análisis de Escritura a Mano\",\n        \"Dyarbakır\",\n        \"Derepazarı \",\n        \"Gülümsemek \",\n        \"Teşekkürler\",\n        \"Güle güle.\",\n        \"Gülhatmi\",\n        \"Gülünç\"\n    ],\n    \"vegetableData\":[\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"Id\": \"item1\" },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"Id\": \"item2\" },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"Id\": \"item3\" },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"Id\": \"item4\" },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"Id\": \"item5\" },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"Id\": \"item6\" },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"Id\": \"item7\" },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"Id\": \"item8\" },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"Id\": \"item9\" },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"Id\": \"item10\" },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"Id\": \"item11\" }\n    ],\n    \"socialMedia\":[\n        { \"Class\": \"facebook\", \"SocialMedia\": \"Facebook\", \"Id\": \"media1\" },\n        { \"Class\": \"google-plus\", \"SocialMedia\": \"Google Plus\", \"Id\": \"media2\" },\n        { \"Class\": \"instagram\", \"SocialMedia\": \"Instagram\", \"Id\": \"media3\" },\n        { \"Class\": \"linkedin\", \"SocialMedia\": \"LinkedIn\", \"Id\": \"media4\" },\n        { \"Class\": \"skype\", \"SocialMedia\": \"Skype\", \"Id\": \"media5\" },\n        { \"Class\": \"tumblr\", \"SocialMedia\": \"Tumblr\", \"Id\": \"media6\" },\n        { \"Class\": \"twitter\", \"SocialMedia\": \"Twitter\", \"Id\": \"media7\" },\n        { \"Class\": \"vimeo\", \"SocialMedia\": \"Vimeo\", \"Id\": \"media8\" },\n        { \"Class\": \"whatsapp\", \"SocialMedia\": \"WhatsApp\", \"Id\": \"media9\" },\n        { \"Class\": \"youtube\", \"SocialMedia\": \"YouTube\", \"Id\": \"media10\" }\n    ],\n    \"empList\":[\n        { \"Name\": \"Andrew Fuller\", \"Eimg\": \"7\", \"Designation\": \"Team Lead\", \"Country\": \"England\" },\n        { \"Name\": \"Anne Dodsworth\", \"Eimg\": \"1\", \"Designation\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Janet Leverling\", \"Eimg\": \"3\", \"Designation\": \"HR\", \"Country\": \"USA\" },\n        { \"Name\": \"Laura Callahan\", \"Eimg\": \"2\", \"Designation\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Margaret Peacock\", \"Eimg\": \"6\", \"Designation\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Michael Suyama\", \"Eimg\": \"9\", \"Designation\": \"Team Lead\", \"Country\": \"USA\" },\n        { \"Name\": \"Nancy Davolio\", \"Eimg\": \"4\", \"Designation\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Robert King\", \"Eimg\": \"8\", \"Designation\": \"Developer \", \"Country\": \"England\" },\n        { \"Name\": \"Steven Buchanan\", \"Eimg\": \"10\", \"Designation\": \"CEO\", \"Country\": \"England\" }\n    ],\n    \"status\": [\n        { \"ID\": \"item1\", \"Text\": \"Open\", \"State\": false },\n        { \"ID\": \"item2\", \"Text\": \"Waiting for Customer\", \"State\": false },\n        { \"ID\": \"item3\", \"Text\": \"On Hold\", \"State\": true },\n        { \"ID\": \"item4\", \"Text\": \"Follow-up\", \"State\": false },\n        { \"ID\": \"item5\", \"Text\": \"Closed\", \"State\": true },\n        { \"ID\": \"item6\", \"Text\": \"Solved\", \"State\": false },\n        { \"ID\": \"item7\", \"Text\": \"Feature Request\", \"State\": false }\n    ],\n    \"vegetables\": [\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"ID\": \"item1\", \"State\": true },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"ID\": \"item2\", \"State\": false },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"ID\": \"item3\", \"State\": true },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"ID\": \"item4\", \"State\": false },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"ID\": \"item5\", \"State\": false },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"ID\": \"item6\", \"State\": true },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"ID\": \"item7\", \"State\": false },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"ID\": \"item8\", \"State\": true },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"ID\": \"item9\", \"State\": false },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"ID\": \"item10\", \"State\": true },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"ID\": \"item11\", \"State\": false }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { ComboBoxComponent, Inject, VirtualScroll } from '@syncfusion/ej2-react-dropdowns';\nimport { DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { SampleBase } from './sample-base';\n\nexport class Default extends SampleBase {\n    listObj;\n    // define the array of string\n    records = [];\n    constructor(props) {\n        super(props);\n        for (let i = 1; i <= 150; i++) {\n            let item = {};\n            item.id = 'id' + i;\n            item.text = `Item ${i}`;\n            // Generate a random number between 1 and 4 to determine the group\n            const randomGroup = Math.floor(Math.random() * 4) + 1;\n            switch (randomGroup) {\n                case 1:\n                    item.group = 'Group A';\n                    break;\n                case 2:\n                    item.group = 'Group B';\n                    break;\n                case 3:\n                    item.group = 'Group C';\n                    break;\n                case 4:\n                    item.group = 'Group D';\n                    break;\n                default:\n                    break;\n            }\n            this.records.push(item);\n        }\n    }\n    // bind the DataManager instance to dataSource property\n    customerData = new DataManager({\n        url: 'http://localhost:62728/api/VirtualDropdownData',\n        adaptor: new UrlAdaptor,\n        crossDomain: true\n    });\n    // maps the appropriate column to fields property\n    fields = { text: 'text', value: 'id' };\n    customerField = { text: 'OrderID', value: 'OrderID' };\n    groupField = { groupBy: 'group', text: 'text', value: 'id' };\n    // call the change event's function after initialized the component.\n    rendereComplete() {\n    }\n    render() {\n        return (<div id='combodefault' className='control-pane'>\n        <div className='control-section'>\n          <div className='col-lg-6'>\n            <div id=\"local\">\n              <h4> Local Data</h4>\n              <ComboBoxComponent id=\"localdata\" dataSource={this.records} fields={this.fields} placeholder=\"e.g. Item 1\" allowFiltering={true} enableVirtualization={true} popupHeight=\"200px\">\n                  <Inject services={[VirtualScroll]}/>\n                </ComboBoxComponent>\n            </div>\n          </div>\n          <div className='col-lg-6'>\n            <div id=\"remote\">\n              <h4>Remote Data</h4>\n              <ComboBoxComponent id=\"remotedata\" dataSource={this.customerData} fields={this.customerField} placeholder=\"OrderId\" allowFiltering={true} enableVirtualization={true} popupHeight=\"200px\">\n                  <Inject services={[VirtualScroll]}/>\n                </ComboBoxComponent>\n            </div>\n          </div>\n          <div className='col-lg-6'>\n            <div id=\"remote\">\n              <h4>Grouping</h4>\n                <ComboBoxComponent id=\"groupdata\" dataSource={this.records} fields={this.groupField} placeholder=\"e.g. Item 1\" allowFiltering={true} enableVirtualization={true} popupHeight=\"200px\">\n                  <Inject services={[VirtualScroll]}/>\n                </ComboBoxComponent>\n            </div>\n          </div>\n        </div>\n\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}