{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Bar series\n */\nimport * as React from \"react\";\nimport { PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D, CircularChartSelection3D, CircularChart3DComponent, CircularChart3DSeriesCollectionDirective, CircularChart3DSeriesDirective, Inject } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\nexport let data1 = [{ 'x': 'Chrome', y: 62.92 },\n    { 'x': 'Internet Explorer', y: 6.12 },\n    { 'x': 'Edge', y: 5.5 },\n    { 'x': 'Opera', y: 3.15 },\n    { 'x': 'Safari', y: 19.97 },\n    { 'x': 'Others', y: 2.34 }];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\n/**\n * Bar sample\n */\nexport class Selection extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <div>\n                        <CircularChart3DComponent id='charts' style={{ textAlign: \"center\" }} legendSettings={{ visible: true, position: Browser.isDevice ? 'Bottom' : 'Right', toggleVisibility: false }} selectionMode='Point' selectionPattern='DiagonalBackward' isMultiSelect={true} highlightMode='Point' load={this.load.bind(this)} title='Browser Market Shares in November 2023' tilt={-30} tooltip={{ enable: true, format: '<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>', header: \"\" }} loaded={this.onChartLoad.bind(this)}>\n                            <Inject services={[PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D, CircularChartSelection3D]}/>\n                            <CircularChart3DSeriesCollectionDirective>\n                                <CircularChart3DSeriesDirective dataSource={data1} xName='x' yName='y' radius={Browser.isDevice ? '50%' : '70'} dataLabel={{\n                visible: true, name: 'x', position: 'Outside', font: { fontWeight: '600' },\n                connectorStyle: { length: Browser.isDevice ? '20px' : '40px' }\n            }}>\n                                </CircularChart3DSeriesDirective>\n                            </CircularChart3DSeriesCollectionDirective>\n                        </CircularChart3DComponent>\n                    </div>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Selection />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}