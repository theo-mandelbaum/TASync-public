{"index.css":"/* css */","theme-color.js":"export let loadCircular3DChartTheme = (args) => {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n};\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Circular Pie 3D Chart with various radius.\n */\nimport * as React from \"react\";\nimport { useEffect } from 'react';\nimport { PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D, CircularChart3DComponent, CircularChart3DSeriesCollectionDirective, CircularChart3DSeriesDirective, Inject } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\nimport { loadCircular3DChartTheme } from './theme-color';\nexport let data1 = [\n    { x: 'Belgium', y: 551500, r: Browser.isDevice ? '120' : '110.7', text: 'Belgium' },\n    { x: 'Dominican Republic', y: 312685, r: '137.5', text: 'Dominican Republic' },\n    { x: 'Cuba', y: 350000, r: '124.6', text: 'Cuba' },\n    { x: 'Egypt', y: 301000, r: Browser.isDevice ? '130.8' : '150.8', text: 'Egypt' },\n    { x: 'Kazakhstan', y: 300000, r: Browser.isDevice ? '135.5' : '155.5', text: 'Kazakhstan' },\n    { x: 'Somalia', y: 357022, r: Browser.isDevice ? '104.6' : '160.6', text: 'Somalia' },\n    { x: 'Argentina', y: 505370, r: Browser.isDevice ? '110' : '100', text: 'Argentina' },\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\n/**\n * Circular Pie 3D Chart sample.\n */\nconst PieRadius = () => {\n    const onChartLoad = (args) => {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    };\n    const load = (args) => {\n        loadCircular3DChartTheme(args);\n    };\n    return (<div className='control-pane'>\n        <style>{SAMPLE_CSS}</style>\n        <div className='control-section'>\n            <div>\n                <CircularChart3DComponent id='charts' style={{ textAlign: \"center\" }} rotation={15} legendSettings={{ visible: true, reverse: true }} load={load.bind(this)} title='Population Density per Square Kilometer by Country' loaded={onChartLoad.bind(this)} enableAnimation={false} tilt={-15} tooltip={{ enable: true, format: '<b>${point.x}</b><br/>Area in square km: <b>${point.y} </b> <br/> Population density per square km: <b>${point.tooltip}</b>' }}>\n                    <Inject services={[PieSeries3D, CircularChartDataLabel3D, CircularChartLegend3D, CircularChartTooltip3D, CircularChartHighlight3D]}/>\n                    <CircularChart3DSeriesCollectionDirective>\n                        <CircularChart3DSeriesDirective dataSource={data1} xName='x' yName='y' radius='r' tooltipMappingName='r' innerRadius='20%' animation={{ enable: false }} dataLabel={{\n            visible: true, position: Browser.isDevice ? 'Inside' : 'Outside', name: 'text', enableRotation: true, font: { fontWeight: '600' }, connectorStyle: { length: '20px' }\n        }}>\n                        </CircularChart3DSeriesDirective>\n                    </CircularChart3DSeriesCollectionDirective>\n                </CircularChart3DComponent>\n            </div>\n        </div>\n    </div>);\n};\nexport default PieRadius;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<PieRadius />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}