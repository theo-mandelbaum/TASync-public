{"index.css":"/* css */","treemap-data/car-sales.json":"{\n    \"car_sale\" : [\n        {\"Continent\": \"China\", \"Company\": \"Volkswagen\", \"Sales\": 3005994 },\n        {\"Continent\": \"China\", \"Company\": \"General Motors\", \"Sales\": 1230044 },\n        {\"Continent\": \"China\", \"Company\": \"Honda\", \"Sales\": 1197023 },\n        {\"Continent\": \"United States\", \"Company\": \"General Motors\", \"Sales\":3042775  },\n        {\"Continent\": \"United States\", \"Company\": \"Ford\", \"Sales\":2599193  },\n        {\"Continent\": \"United States\", \"Company\": \"Toyota\", \"Sales\":2449587  },\n        {\"Continent\": \"Japan\",\"Company\": \"Toyota\", \"Sales\":1527977  },\n        {\"Continent\": \"Japan\", \"Company\": \"Honda\", \"Sales\":706982 },\n        {\"Continent\": \"Japan\", \"Company\": \"Suzuki\", \"Sales\":623041  },\n        {\"Continent\": \"Germany\",\"Company\": \"Volkswagen\", \"Sales\":655977  },\n        {\"Continent\": \"Germany\", \"Company\": \"Mercedes\", \"Sales\":310845  },\n        {\"Continent\": \"Germany\", \"Company\": \"BMW\", \"Sales\":261931  },\n        { \"Continent\": \"United Kingdom\", \"Company\": \"Ford \", \"Sales\":319442  },\n        {\"Continent\": \"United Kingdom\", \"Company\": \"Vauxhall\", \"Sales\": 251146 },\n        { \"Continent\": \"United Kingdom\", \"Company\": \"Volkswagen\", \"Sales\":206994  },\n        {\"Continent\": \"India\", \"Company\": \"Maruti Suzuki\", \"Sales\":1443654  },\n        {\"Continent\": \"India\", \"Company\": \"Hyundai\", \"Sales\":476241  },\n        {\"Continent\": \"India\", \"Company\": \"Mahindra\", \"Sales\":205041  },\n        {\"Continent\": \"France\", \"Company\": \"Renault\", \"Sales\":408183 },\n        {\"Continent\": \"France\", \"Company\": \"Peugeot\", \"Sales\":336242 },\n        {\"Continent\": \"France\", \"Company\": \"Citroen\", \"Sales\":194986  },\n        { \"Continent\": \"Brazil\", \"Company\": \"Flat Chrysler\", \"Sales\":368842  },\n        { \"Continent\": \"Brazil\", \"Company\": \"General Motors\", \"Sales\": 348351 },\n        { \"Continent\": \"Brazil\", \"Company\": \"Volkswagen\", \"Sales\": 245895 },\n        {\"Continent\": \"Italy\", \"Company\": \"Flat Chrysler\", \"Sales\":386260  },\n        {\"Continent\": \"Italy\", \"Company\": \"Volkswagen\", \"Sales\": 138984 },\n        {\"Continent\": \"Italy\", \"Company\": \"Ford\", \"Sales\": 125144 },\n        {\"Continent\": \"Canada\", \"Company\": \"Ford\", \"Sales\":305086},\n        {\"Continent\": \"Canada\", \"Company\": \"FCA\", \"Sales\":278011 },\n        {\"Continent\": \"Canada\", \"Company\": \"GM\", \"Sales\": 266884 }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Default sample for treemap\n */\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { TreeMapComponent, LevelsDirective, LevelDirective, Inject, TreeMapLegend, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\n\nimport * as data from './treemap-data/car-sales.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nconst Default = () => {\n    const load = (args) => {\n    };\n    /* tslint:disable:no-string-literal */\n    const itemMove = (args) => {\n        args.item[\"data\"].Sales = args.item[\"weight\"];\n        args.treemap.tooltipSettings.format =\n            args.item[\"groupIndex\"] === 0\n                ? \"Country: ${Continent}<br>Sales: ${Sales}\"\n                : \"Country: ${Continent}<br>Company: ${Company}<br>Sales: ${Sales}\";\n    };\n    return (<main><div className=\"control-pane\">\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <TreeMapComponent itemClick={itemMove.bind(this)} itemMove={itemMove.bind(this)} load={load.bind(this)} id=\"treemap-container\" titleSettings={{\n            //To config title for treemap\n            text: \"Car Sales by Country - 2017\",\n            textStyle: { size: \"15px\" },\n        }} rangeColorValuePath=\"Sales\" format={\"n\"} useGroupingSeparator={true} dataSource={datasource.car_sale} legendSettings={{\n            visible: true,\n            position: \"Top\",\n            shape: \"Rectangle\",\n        }} palette={[\n            \"#C33764\",\n            \"#AB3566\",\n            \"#993367\",\n            \"#853169\",\n            \"#742F6A\",\n            \"#632D6C\",\n            \"#532C6D\",\n            \"#412A6F\",\n            \"#312870\",\n            \"#1D2671\",\n        ]} tooltipSettings={{ visible: true }} weightValuePath=\"Sales\" leafItemSettings={{\n            labelPath: \"Company\",\n            border: { color: \"white\", width: 0.5 },\n        }}>\n                    <Inject services={[TreeMapLegend, TreeMapTooltip]}/>\n                    <LevelsDirective>\n                        <LevelDirective groupPath=\"Continent\" border={{ color: \"white\", width: 0.5 }}/>\n                    </LevelsDirective>\n                </TreeMapComponent>\n            </div>\n            <div style={{ float: \"right\", marginRight: \"10px\" }}>\n                Source:\n                <a href=\"https://www.factorywarrantylist.com/car-sales-by-country.html/\" target=\"_blank\">\n                    www.factorywarrantylist.com\n                </a>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n                <p>\n                    This sample visualizes the sales of cars across various countries in\n                    2017 by rendering the countries at the top level and car manufacturing\n                    companies as leaf items.\n                </p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render a TreeMap with the provided\n                    data source. The palette color is applied to the items in TreeMap. The\n                    default legend is enabled in this example to represent the items at\n                    the top level.\n                    <br />\n                    <br />\n                    Tooltip is enabled in this example. To see the tooltip in action,\n                    hover the mouse over an item or tap an item in touch enabled devices.\n                </p>\n                <br />\n                <p className=\"description-header\">Injecting Module</p>\n                <p>\n                    TreeMap component features are segregated into individual feature-wise\n                    modules. To use a tooltip, inject the <code>Tooltip</code> module\n                    using the <code>TreeMap.Inject(TreeMapTooltip)</code> method, and use\n                    a legend by injecting the <code>Legend</code> module using the{\" \"}\n                    <code>TreeMap.Inject(TreeMapLegend)</code> method.\n                </p>\n            </section>\n        </main>);\n};\nexport default Default;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}