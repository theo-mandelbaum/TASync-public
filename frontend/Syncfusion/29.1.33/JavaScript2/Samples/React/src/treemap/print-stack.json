{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","treemap-data/product.json":"{\n    \"product\" : [\n        {\"Product\":\" Samsung\", \"Percentage\":22},\n        {\"Product\":\"Apple\", \"Percentage\":11.2},\n        {\"Product\":\"Huawei\", \"Percentage\":10.5},\n        {\"Product\":\"Oppo\", \"Percentage\":8.4},\n        {\"Product\":\"Vivo\", \"Percentage\":6.6},\n        {\"Product\":\"Xiaomi\", \"Percentage\":6.3},\n        {\"Product\":\"LG\", \"Percentage\":3.6},\n        {\"Product\":\"ZTE\", \"Percentage\":3.3},\n        {\"Product\":\"Lenovo\", \"Percentage\":3.2},\n        {\"Product\":\"Alcate\", \"Percentage\":1.3}\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Print and Export sample for treemap\n */\nimport * as React from \"react\";\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { TreeMapComponent, Inject, TreeMapTooltip, Print, PdfExport, ImageExport } from '@syncfusion/ej2-react-treemap';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\nimport { SampleBase } from './sample-base';\nimport { TextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\nimport * as data from './treemap-data/product.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n\t#btn-control {\n        width: 100%;\n\t\ttext-align: center;\n\t\ttext-transform:none !important;\n    }\n\t.e-play-icon::before {\n        content: \"\\\\e813\";\n    }`;\nexport class PrintExport extends SampleBase {\n    treemapInstance;\n    mode;\n    nameElement;\n    textElement;\n    // Code for Property Panel\n    droplist = [\n        { text: 'JPEG', value: 'JPEG' },\n        { text: 'PNG', value: 'PNG' },\n        { text: 'SVG', value: 'SVG' },\n        { text: 'PDF', value: 'PDF' },\n    ];\n    onClick2(e) {\n        this.treemapInstance.print();\n    }\n    onClick1(e) {\n        let fileName = this.textElement.value;\n        this.treemapInstance.export(this.mode.value, fileName);\n    }\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n\t\t\t\t<style>\n\t\t\t\t\t{SAMPLE_CSS}\n\t\t\t\t</style>\n\t\t\t\t<div className='control-section'>\n\t\t\t\t\t<div className='col-md-9'>\n\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' allowPrint={true} allowPdfExport={true} allowImageExport={true} ref={m => this.treemapInstance = m} titleSettings={{\n                text: 'Top 10 best selling smartphone brands - 2017',\n                textStyle: { size: '15px' }\n            }} dataSource={datasource.product} layoutType='SliceAndDiceVertical' weightValuePath='Percentage' rangeColorValuePath='Percentage' tooltipSettings={{\n                visible: true,\n                format: '${Product} (+${Percentage}) %'\n            }} leafItemSettings={{\n                labelPath: 'Product',\n                fill: '#6699cc',\n                border: { color: 'black', width: 0.5 },\n                labelPosition: 'Center',\n                interSectAction: 'Hide',\n                labelFormat: '${Product} (+${Percentage}) %',\n                colorMapping: [\n                    {\n                        from: 1.3,\n                        to: 22,\n                        color: '#FAB665',\n                        minOpacity: 0.5,\n                        maxOpacity: 1\n                    }\n                ]\n            }}>\n\t\t\t\t\t\t\t<Inject services={[TreeMapTooltip, Print, ImageExport, PdfExport]}/>\n\t\t\t\t\t\t</TreeMapComponent>\n\t\t\t\t\t\t<div style={{ float: 'right', marginRight: '10px' }}>Source:\n       <a href=\" http://zeenews.india.com/photos/business/worlds-10-best-selling-smartphone-brands-2033958/samsung-2033959\" target=\"_blank\">zeenews.india.com</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Property Panel */}\n\t\t\t\t\t<div className='col-md-3 property-section'>\n\t\t\t\t\t\t<PropertyPane title='Properties'>\n\t\t\t\t\t\t\t<table role='none' id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px', overflow: 'hidden' }}>\n\t\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Export Type</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"mode\" width=\"100%\" index={0} placeholder=\"JPEG\" ref={d => this.mode = d} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>File Name</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: '0px', paddingLeft: '0px' }}>\n\t\t\t\t\t\t\t\t\t\t\t<TextBoxComponent className=\"e-input\" value='TreeMap' style={{ width: '100%', padding: '0px', paddingLeft: '5px' }} id=\"width\" ref={d => this.textElement = d}></TextBoxComponent>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr style={{ height: \"60px\" }}>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div id=\"btn-control\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonComponent onClick={this.onClick1.bind(this)} style={{ width: '80px' }} cssClass='e-info' isPrimary={true}>Export</ButtonComponent>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t{/* </tr>\n            <tr> */}\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div id=\"btn-control\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonComponent onClick={this.onClick2.bind(this)} style={{ width: '80px' }} cssClass='e-info' isPrimary={true}>Print</ButtonComponent>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</PropertyPane>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis sample depicts the top 10 best-selling smartphone brands. Print and export options have been enabled in this sample.\n            </p>\n\t\t\t\t</section>\n\t\t\t\t<section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\tIn this example, you can see how to export and print the rendered treemap. The TreeMap can\n\t\t\t\t\t\tbe exported to JPEG, PNG, SVG, and PDF formats. Print functionality is done by <code>print</code>\n\t\t\t\t\t\tmethod when <code>allowPrint</code> is set as true. Export functionality is done by\n\t\t\t\t\t\t<code>export</code> method when <code>allowImageExport</code> and\n\t\t\t\t\t\t<code>allowPdfExport</code> is set as true.\n                        <br /><br />\n\t\t\t\t\t\t<b>Injecting Module:</b><br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tTo make use of the print and export support, we need to inject the <code>Print</code> module into the <code> services </code>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n        \t\t\t\tMore information on print and export can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/treemap/print-and-export\">documentation section</a>.\n    \t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t</main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<PrintExport />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}