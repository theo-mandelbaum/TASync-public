{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","treemap-data/import.json":"{\n    \"import\" : [\n        { \"dataType\": \"Import\", \"type\": \"Animal products\",   \"product\": \"2010\", \"sales\": 20839332874 },\n        { \"dataType\": \"Import\", \"type\": \"Animal products\",   \"product\": \"2011\", \"sales\": 23098635589 },\n        { \"dataType\": \"Import\", \"type\": \"Chemical products\", \"product\": \"2010\", \"sales\": 141637951510 },\n        { \"dataType\": \"Import\", \"type\": \"Chemical products\", \"product\": \"2011\", \"sales\": 161550338209 },\n        { \"dataType\": \"Import\", \"type\": \"Base metals\",       \"product\": \"2010\", \"sales\": 86079439944 },\n        { \"dataType\": \"Import\", \"type\": \"Base metals\",       \"product\": \"2011\", \"sales\": 103821671535 },\n        { \"dataType\": \"Import\", \"type\": \"Textile articles\",       \"product\": \"2010\", \"sales\": 97126140830 },\n        { \"dataType\": \"Import\", \"type\": \"Textile articles\",       \"product\": \"2011\", \"sales\": 104980750811 },\n        { \"dataType\": \"Export\", \"type\": \"Animal products\",   \"product\": \"2010\", \"sales\":  15845503378 },\n        { \"dataType\": \"Export\", \"type\": \"Animal products\",   \"product\": \"2011\", \"sales\":  20650111620 },\n        { \"dataType\": \"Export\", \"type\": \"Chemical products\", \"product\": \"2010\", \"sales\": 136100054087 },\n        { \"dataType\": \"Export\", \"type\": \"Chemical products\", \"product\": \"2011\", \"sales\": 146341672411 },\n        { \"dataType\": \"Export\", \"type\": \"Base metals\",       \"product\": \"2010\", \"sales\": 59060592813 },\n        { \"dataType\": \"Export\", \"type\": \"Base metals\",       \"product\": \"2011\", \"sales\": 71785882641 },\n        { \"dataType\": \"Export\", \"type\": \"Textile articles\",       \"product\": \"2010\", \"sales\": 20982380561 },\n        { \"dataType\": \"Export\", \"type\": \"Textile articles\",       \"product\": \"2011\", \"sales\": 26016143783 }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Selection and Highlight sample for treemap\n */\nimport * as React from \"react\";\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\nimport { TreeMapComponent, LevelsDirective, LevelDirective, Inject, TreeMapHighlight, TreeMapSelection } from '@syncfusion/ej2-react-treemap';\nimport { PropertyPane } from './property-pane';\nimport { SampleBase } from './sample-base';\nimport * as data from './treemap-data/import.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n\t.e-view.fluent2 #property .e-checkbox-wrapper .e-icons, .e-view.fluent2-dark #property .e-checkbox-wrapper .e-icons {\n        margin-left: 0px;\n    }\n\t.drilldownCheckbox{\n\t\tmargin-left: 0px;\n\t}\n\t.e-view.fluent2-highcontrast #property .drilldownCheckbox {\n        margin-left: -8px;\n    }\n\t`;\nexport class Selection extends SampleBase {\n    treemapInstance;\n    highlightModeElement;\n    selectionModeElement;\n    // Code for Property Panel\n    droplist1 = [\n        { value: 'Item' },\n        { value: 'Child' },\n        { value: 'Parent' },\n        { value: 'All' },\n    ];\n    droplist2 = [\n        { value: 'Item' },\n        { value: 'Child' },\n        { value: 'Parent' },\n        { value: 'All' },\n    ];\n    highlightChange(args) {\n        let value = args.checked;\n        this.treemapInstance.highlightSettings.enable = value;\n        this.treemapInstance.refresh();\n    }\n    highlightModeChange() {\n        this.treemapInstance.highlightSettings.mode = this.highlightModeElement.value;\n        this.treemapInstance.refresh();\n    }\n    selectionchange(args) {\n        let value = args.checked;\n        this.treemapInstance.selectionSettings.enable = value;\n        this.treemapInstance.refresh();\n    }\n    selectionModeChange() {\n        this.treemapInstance.selectionSettings.mode = this.selectionModeElement.value;\n        this.treemapInstance.refresh();\n    }\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n\t\t\t\t<style>\n\t\t\t\t\t{SAMPLE_CSS}\n\t\t\t\t</style>\n\t\t\t\t<div className='control-section'>\n\t\t\t\t\t<div className='col-md-9'>\n\t\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' ref={m => this.treemapInstance = m} titleSettings={{\n                text: 'Import and Export details of US'\n            }} selectionSettings={{\n                enable: true,\n                fill: '#58a0d3',\n                border: { width: 0.3, color: 'black' },\n                opacity: '1'\n            }} highlightSettings={{\n                enable: true,\n                fill: '#71b0dd',\n                border: { width: 0.3, color: 'black' },\n                opacity: '1'\n            }} leafItemSettings={{\n                labelPath: 'type',\n                fill: '#8ebfe2',\n                labelPosition: 'Center',\n                gap: 10\n            }} dataSource={datasource.import} weightValuePath='sales'>\n\t\t\t\t\t\t\t<Inject services={[TreeMapHighlight, TreeMapSelection]}/>\n\t\t\t\t\t\t\t<LevelsDirective>\n\t\t\t\t\t\t\t\t<LevelDirective groupPath='dataType' fill='#c5e2f7' headerStyle={{ size: '16px' }} headerAlignment='Center' groupGap={5}/>\n\t\t\t\t\t\t\t\t<LevelDirective groupPath='product' fill='#a4d1f2' headerAlignment='Center' groupGap={2}/>\n\t\t\t\t\t\t\t</LevelsDirective>\n\t\t\t\t\t\t</TreeMapComponent>\n\t\t\t\t\t\t{/* Source Link */}\n\t\t\t\t\t\t<div style={{ float: 'right', marginRight: '10px' }}>Source:\n       <a href=\"https://www.indexmundi.com/united_states/imports_commodities.html\" target=\"_blank\">www.indexmundi.com</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Property Panel */}\n\t\t\t\t\t<div className='col-md-3 property-section'>\n\t\t\t\t\t\t<PropertyPane title='Properties'>\n\t\t\t\t\t\t\t<table role='none' id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\n\t\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t\t\t<tr style={{ \"height\": \"50px\" }}>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}><b>Highlight</b></div>\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}> Enable</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div className=\"drilldownCheckbox\" style={{ paddingTop: \"0px\", paddingLeft: '0px' }}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckBoxComponent id='highlightEnable' checked={true} change={this.highlightChange.bind(this)}> </CheckBoxComponent>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Mode</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"highlightmode\" width=\"100%\" index={0} change={this.highlightModeChange.bind(this)} ref={d => this.highlightModeElement = d} dataSource={this.droplist1} fields={{ text: 'value', value: 'value' }}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr style={{ \"height\": \"50px\" }}>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}><b>Selection</b></div>\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Enable</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div className=\"drilldownCheckbox\" style={{ paddingTop: \"0px\", paddingLeft: '0px' }}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckBoxComponent id='SelectionEnable' checked={true} change={this.selectionchange.bind(this)}> </CheckBoxComponent>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Mode</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"selectionmode\" width=\"100%\" index={0} change={this.selectionModeChange.bind(this)} ref={d => this.selectionModeElement = d} dataSource={this.droplist2} fields={{ text: 'value', value: 'value' }}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t   </tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</PropertyPane>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t\t\t<section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tThis sample depicts the details of goods imported by Japan. Selection and highlight options have been enabled in this sample.\n            </p>\n\t\t\t\t</section>\n\t\t\t\t<section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn this example, you can see the modes available for performing highlight and selection in TreeMap. It can be either enabled or disabled.\n                    </p>\n\t\t\t\t\t<br />\n\t\t\t\t\t<p className='description-header'>Injecting Module</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTreeMap component features are segregated into individual feature-wise modules. To use highlight and selection, inject the <code>Selection</code> module using the <code>TreeMap.Inject(TreeMapSelection)</code>inject the <code>Highlight</code> module using the <code>TreeMap.Inject(TreeMapHighlight)</code> method.\n                    </p>\n\t\t\t\t</section>\n\t\t\t</main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Selection />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}