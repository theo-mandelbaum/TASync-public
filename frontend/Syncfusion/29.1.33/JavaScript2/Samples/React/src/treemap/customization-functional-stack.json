{"index.css":"/* css */","treemap-data/metal.json":"{\n    \"metal\" : [\n        { \"Sport\": \"Swimming\", \"Gold\": 16, \"GameImage\": \"swimming.svg\", \"ItemHeight\": \"180px\", \"ItemWidth\": \"180px\" },\n        { \"Sport\": \"Athletics\", \"Gold\": 13, \"GameImage\": \"athletics.svg\", \"ItemHeight\": \"70px\", \"ItemWidth\": \"70px\" },\n        { \"Sport\": \"Gymnastics\", \"Gold\": 4, \"GameImage\": \"gymnastics.svg\", \"ItemHeight\": \"80px\", \"ItemWidth\": \"80px\" },\n        { \"Sport\": \"Cycling\", \"Gold\": 2, \"GameImage\": \"cycling.svg\", \"ItemHeight\": \"50px\", \"ItemWidth\": \"50px\" },\n        { \"Sport\": \"Wrestling\", \"Gold\": 2, \"GameImage\": \"wrestling.svg\", \"ItemHeight\": \"60px\", \"ItemWidth\": \"50px\" },\n        { \"Sport\": \"Basketball\", \"Gold\": 2, \"GameImage\": \"basketball.svg\", \"ItemHeight\": \"50px\", \"ItemWidth\": \"50px\" },\n        { \"Sport\": \"Boxing\", \"Gold\": 1, \"GameImage\": \"boxing.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"30px\" },\n        { \"Sport\": \"Tennis\", \"Gold\": 1, \"GameImage\": \"tennis.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" },\n        { \"Sport\": \"Judo\", \"Gold\": 1, \"GameImage\": \"judo.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" },\n        { \"Sport\": \"Rowing\", \"Gold\": 1, \"GameImage\": \"rowing.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" },\n        { \"Sport\": \"Shooting\", \"Gold\": 1, \"GameImage\": \"shooting.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" },\n        { \"Sport\": \"Triathlon\", \"Gold\": 1, \"GameImage\": \"triathlon.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" },\n        { \"Sport\": \"Water polo\", \"Gold\": 1, \"GameImage\": \"water-polo.svg\", \"ItemHeight\": \"40px\", \"ItemWidth\": \"40px\" }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Customization sample for treemap\n */\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { Browser } from '@syncfusion/ej2-base';\nimport { TreeMapComponent, Inject, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\n\nimport * as data from './treemap-data/metal.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nconst Customization = () => {\n    const load = (args) => {\n    };\n    return (<main><div className=\"control-pane\">\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <TreeMapComponent load={load.bind(this)} id=\"treemap-container\" titleSettings={{\n            //To config title for treemap\n            text: \"US Gold medal categories in Summer Olympics - 2016\",\n            textStyle: { size: \"15px\" },\n        }} dataSource={datasource.metal} weightValuePath=\"Gold\" tooltipSettings={{\n            // To config tooltip for treemap\n            visible: true,\n            format: \"${Sport} : ${Gold}\",\n        }} leafItemSettings={{\n            // To config leafitem customization for treemap\n            showLabels: !Browser.isDevice,\n            labelPath: \"Sport\",\n            fill: \"#993399\",\n            templatePosition: \"Center\",\n            border: { color: \"black\", width: 0.5 },\n            labelFormat: \" ${Sport} - ${Gold}\",\n            labelTemplate: '<div style=\"pointer-events: none;\"><img alt=\"Custom label template for illustrations\" src=\"https://ej2.syncfusion.com/react/demos/src/treemap/image/{{:GameImage}}\" style=\"height:{{:ItemHeight}};width:{{:ItemWidth}};\"></img></div>',\n        }}>\n                    <Inject services={[TreeMapTooltip]}/>\n                </TreeMapComponent>\n            </div>\n            {/* Source Link */}\n            <div style={{ float: \"right\", marginRight: \"10px\" }}>\n                Source:\n                <a href=\" https://en.wikipedia.org/wiki/United_States_at_the_2016_Summer_Olympics\" target=\"_blank\">\n                    {\" \"}\n                    en.wikipedia.org\n                </a>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n                <p>\n                    This sample depicts the gold medal categories of the 2016 U.S. Summer\n                    Olympics. Each category is denoted with label template.\n                </p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to place custom HTML templates in the\n                    TreeMap items. The default text of the labels also have been\n                    formatted.\n                    <br />\n                    <br />\n                    Tooltip is enabled in this example. To see the tooltip in action,\n                    hover the mouse over an item or tap an item in touch enabled devices.\n                </p>\n                <br />\n                <p className=\"description-header\">Injecting Module</p>\n                <p>\n                    TreeMap component features are segregated into individual feature-wise\n                    modules. To use a tooltip, inject the <code>Tooltip</code> module\n                    using the <code>TreeMap.Inject(TreeMapTooltip)</code> method.\n                </p>\n            </section>\n        </main>);\n};\nexport default Customization;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Customization />);","dependencies":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}