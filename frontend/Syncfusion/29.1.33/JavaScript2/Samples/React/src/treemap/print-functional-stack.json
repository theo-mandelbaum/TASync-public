{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","treemap-data/product.json":"{\n    \"product\" : [\n        {\"Product\":\" Samsung\", \"Percentage\":22},\n        {\"Product\":\"Apple\", \"Percentage\":11.2},\n        {\"Product\":\"Huawei\", \"Percentage\":10.5},\n        {\"Product\":\"Oppo\", \"Percentage\":8.4},\n        {\"Product\":\"Vivo\", \"Percentage\":6.6},\n        {\"Product\":\"Xiaomi\", \"Percentage\":6.3},\n        {\"Product\":\"LG\", \"Percentage\":3.6},\n        {\"Product\":\"ZTE\", \"Percentage\":3.3},\n        {\"Product\":\"Lenovo\", \"Percentage\":3.2},\n        {\"Product\":\"Alcate\", \"Percentage\":1.3}\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Print and Export sample for treemap\n */\nimport * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { TreeMapComponent, Inject, TreeMapTooltip, Print, PdfExport, ImageExport, } from '@syncfusion/ej2-react-treemap';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\n\nimport { TextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\nimport * as data from './treemap-data/product.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    #btn-control {\n        width: 100%;\n        text-align: center;\n        text-transform:none !important;\n    }\n    .e-play-icon::before {\n        content: \"\\\\e813\";\n    }`;\nconst PrintExport = () => {\n    let treemapInstance = useRef(null);\n    let mode = useRef(null);\n    let nameElement = useRef(null);\n    let textElement;\n    // Code for Property Panel\n    let droplist = [\n        { text: \"JPEG\", value: \"JPEG\" },\n        { text: \"PNG\", value: \"PNG\" },\n        { text: \"SVG\", value: \"SVG\" },\n        { text: \"PDF\", value: \"PDF\" },\n    ];\n    const onClick2 = (e) => {\n        treemapInstance.current.print();\n    };\n    const onClick1 = (e) => {\n        let fileName = textElement.value;\n        treemapInstance.current.export(mode.current.value, fileName);\n    };\n    const load = (args) => {\n    };\n    return (<main><div className=\"control-pane\">\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <div className=\"col-md-9\">\n                    <TreeMapComponent load={load.bind(this)} id=\"treemap-container\" allowPrint={true} allowPdfExport={true} allowImageExport={true} ref={treemapInstance} titleSettings={{\n            //To config title for treemap\n            text: \"Top 10 best selling smartphone brands - 2017\",\n            textStyle: { size: \"15px\" },\n        }} dataSource={datasource.product} layoutType=\"SliceAndDiceVertical\" weightValuePath=\"Percentage\" rangeColorValuePath=\"Percentage\" tooltipSettings={{\n            // To config tooltip for treemap\n            visible: true,\n            format: \"${Product} (+${Percentage}) %\",\n        }} leafItemSettings={{\n            // To config leafitem customization for treemap\n            labelPath: \"Product\",\n            fill: \"#6699cc\",\n            border: { color: \"black\", width: 0.5 },\n            labelPosition: \"Center\",\n            interSectAction: \"Hide\",\n            labelFormat: \"${Product} (+${Percentage}) %\",\n            colorMapping: [\n                {\n                    from: 1.3,\n                    to: 22,\n                    color: \"#FAB665\",\n                    minOpacity: 0.5,\n                    maxOpacity: 1,\n                },\n            ],\n        }}>\n                        <Inject services={[TreeMapTooltip, Print, ImageExport, PdfExport]}/>\n                    </TreeMapComponent>\n                    <div style={{ float: \"right\", marginRight: \"10px\" }}>\n                        Source:\n                        <a href=\" http://zeenews.india.com/photos/business/worlds-10-best-selling-smartphone-brands-2033958/samsung-2033959\" target=\"_blank\">\n                            zeenews.india.com\n                        </a>\n                    </div>\n                </div>\n                {/* Property Panel */}\n                <div className=\"col-md-3 property-section\">\n                    <PropertyPane title=\"Properties\">\n                        <table role='none' id=\"property\" title=\"Properties\" className=\"property-panel-table\" style={{\n            width: \"100%\",\n            marginBottom: \"20px\",\n            overflow: \"hidden\",\n        }}>\n                         <tbody>\n                            <tr>\n                                <td>\n                                    <div style={{ paddingLeft: \"0px\" }}>Export Type</div>\n                                </td>\n                                <td>\n                                    <div style={{ paddingLeft: \"0px\" }}>\n                                        <DropDownListComponent id=\"mode\" width=\"100%\" index={0} placeholder=\"JPEG\" ref={mode} dataSource={droplist} fields={{ text: \"text\", value: \"value\" }}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <div style={{ paddingLeft: \"0px\" }}>File Name</div>\n                                </td>\n                                <td>\n                                    <div style={{ marginTop: \"0px\", paddingLeft: \"0px\" }}>\n                                        \n                                    <TextBoxComponent className=\"e-input\" value='TreeMap' style={{ width: '100%', padding: \"0px\", paddingLeft: \"5px\" }} id=\"fileName\" ref={d => textElement = d}></TextBoxComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: \"60px\" }}>\n                                <td>\n                                    <div id=\"btn-control\">\n                                        <ButtonComponent onClick={onClick1.bind(this)} style={{ width: \"80px\" }} cssClass=\"e-info\" isPrimary={true}>\n                                            Export\n                                        </ButtonComponent>\n                                    </div>\n                                </td>\n                                {/* </tr>\n         <tr> */}\n                                <td>\n                                    <div id=\"btn-control\">\n                                        <ButtonComponent onClick={onClick2.bind(this)} style={{ width: \"80px\" }} cssClass=\"e-info\" isPrimary={true}>\n                                            Print\n                                        </ButtonComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n                <p>\n                    This sample depicts the top 10 best-selling smartphone brands. Print\n                    and export options have been enabled in this sample.\n                </p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to export and print the rendered\n                    treemap. The TreeMap can be exported to JPEG, PNG, SVG, and PDF\n                    formats. Print functionality is done by <code>print</code>\n                    method when <code>allowPrint</code> is set as true. Export\n                    functionality is done by\n                    <code>export</code> method when <code>allowImageExport</code> and\n                    <code>allowPdfExport</code> is set as true.\n                    <br />\n                    <br />\n                    <b>Injecting Module:</b>\n                    <br />\n                    <br />\n                    To make use of the print and export support, we need to inject the{\" \"}\n                    <code>Print</code> module into the <code> services </code>.\n                </p>\n                <p>\n                    More information on print and export can be found in this{\" \"}\n                    <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/treemap/print-and-export\">\n                        documentation section\n                    </a>\n                    .\n                </p>\n            </section>\n        </main>);\n};\nexport default PrintExport;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<PrintExport />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}