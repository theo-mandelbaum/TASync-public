{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","treemap-data/economics.json":"{\n    \"economics\" : [\n        {\"State\":\"United States\", \"GDP\":17946, \"percentage\":11.08, \"Rank\":1},\t \n        {\"State\":\"China\", \"GDP\":10866, \"percentage\": 28.42, \"Rank\":2},\t \n        {\"State\":\"Japan\", \"GDP\":4123, \"percentage\":-30.78, \"Rank\":3},\t \n        {\"State\":\"Germany\", \"GDP\":3355, \"percentage\":-5.19, \"Rank\":4},\t \n        {\"State\":\"United Kingdom\", \"GDP\":2848, \"percentage\":8.28, \"Rank\":5},\t \n        {\"State\":\"France\", \"GDP\":2421, \"percentage\":-9.69, \"Rank\":6},\t \n        {\"State\":\"India\", \"GDP\":2073, \"percentage\":13.65, \"Rank\":7},\t \n        {\"State\":\"Italy\", \"GDP\":1814, \"percentage\":-12.45, \"Rank\":8},\t \n        {\"State\":\"Brazil\", \"GDP\":1774, \"percentage\":-27.88, \"Rank\":9},\t \n        {\"State\":\"Canada\", \"GDP\":1550, \"percentage\":-15.02, \"Rank\":10}\t \n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Layout sample for treemap\n */\nimport * as React from \"react\";\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { TreeMapComponent, Inject, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\nimport { PropertyPane } from './property-pane';\nimport { SampleBase } from './sample-base';\nimport * as data from './treemap-data/economics.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class Layout extends SampleBase {\n    treemapInstance;\n    layoutElement;\n    renderDirectionElement;\n    // Code for Property Panel\n    droplist = [\n        { text: 'Squarified', value: 'Squarified' },\n        { text: 'Horizontal', value: 'SliceAndDiceHorizontal' },\n        { text: 'Vertical', value: 'SliceAndDiceVertical' },\n        { text: 'Auto', value: 'SliceAndDiceAuto' },\n    ];\n    dropList = [\n        { text: 'TopLeftBottomRight', value: 'TopLeftBottomRight' },\n        { text: 'TopRightBottomLeft', value: 'TopRightBottomLeft' },\n        { text: 'BottomLeftTopRight', value: 'BottomLeftTopRight' },\n        { text: 'BottomRightTopLeft', value: 'BottomRightTopLeft' }\n    ];\n    layoutChange() {\n        this.treemapInstance.layoutType = this.layoutElement.value;\n        this.treemapInstance.refresh();\n    }\n    renderDirectionChange() {\n        this.treemapInstance.renderDirection = this.renderDirectionElement.value;\n        this.treemapInstance.refresh();\n    }\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n\t\t\t\t<style>\n\t\t\t\t\t{SAMPLE_CSS}\n\t\t\t\t</style>\n\t\t\t\t<div className='control-section'>\n\t\t\t\t\t<div className='col-md-9'>\n\t\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' ref={m => this.treemapInstance = m} titleSettings={{\n                text: 'Top 10 countries by GDP Nominal - 2015',\n                textStyle: { size: '15px' }\n            }} dataSource={datasource.economics} weightValuePath='GDP' tooltipSettings={{\n                visible: true,\n                format: '${State}<br>Rank : ${Rank}'\n            }} rangeColorValuePath='GDP' leafItemSettings={{\n                labelPath: 'State',\n                labelFormat: '${State}<br>$${GDP} Trillion<br>(${percentage} %)',\n                labelStyle: {\n                    color: '#000000'\n                },\n                border: {\n                    color: '#000000',\n                    width: 0.5\n                },\n                colorMapping: [\n                    {\n                        from: 1550,\n                        to: 17946,\n                        color: '#9cbb59',\n                        minOpacity: 0.7,\n                        maxOpacity: 1,\n                    }\n                ]\n            }}>\n\t\t\t\t\t\t\t<Inject services={[TreeMapTooltip]}/>\n\t\t\t\t\t\t</TreeMapComponent>\n\t\t\t\t\t\t{/* Source Link */}\n\t\t\t\t\t\t<div style={{ float: 'right', marginRight: '10px' }}>Source:\n       <a href=\"https://www.reinisfischer.com/top-10-largest-economies-world-gdp-nominal-2015\" target=\"_blank\">www.reinisfischer.com</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Property Panel */}\n\t\t\t\t\t<div className='col-md-3 property-section'>\n\t\t\t\t\t\t<PropertyPane title='Properties'>\n\t\t\t\t\t\t\t<table role='none' id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Layout Type</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"layoutMode\" width=\"100%\" index={0} change={this.layoutChange.bind(this)} ref={d => this.layoutElement = d} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: '0px' }}>Render Direction</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"highlightMode\" width=\"100%\" index={0} dataSource={this.dropList} fields={{ text: 'text', value: 'value' }} change={this.renderDirectionChange.bind(this)} ref={d => this.renderDirectionElement = d}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</PropertyPane>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\tThis sample orders the countries based on the unemployment rate by rendering TreeMap in the right-to-left (RTL)\n        \tdirection\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t\t<section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\tIn this example, you can see how to render a TreeMap from the right-to-left direction. The tooltip is enabled in\n        this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch-enabled\n        devices.\n\t\t\t\t<br /><br />\n\t\t\t\tThe tooltip is enabled in this example. To see the tooltip in action,\n        hover the mouse over an item or tap an item in touch-enabled devices.\n\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t</main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Layout />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}