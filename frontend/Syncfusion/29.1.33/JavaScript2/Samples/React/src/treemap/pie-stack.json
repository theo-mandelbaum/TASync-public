{"index.css":"/* css */","treemap-data/continent_data.json":"{\n    \"continent\" : [\n        { \"Continent\": \"Africa\", \"Gender\": \"Male\", \"Population\": 518636010, \"Id\": \"AfricaMale\", \"PieHeight\": \"90px\", \"PieWidth\": \"90px\" },\n        { \"Continent\": \"Africa\", \"Gender\": \"Female\", \"Population\": 519058499, \"Id\": \"AfricaFemale\", \"PieHeight\": \"90px\", \"PieWidth\": \"90px\" },\n        { \"Continent\": \"Asia\", \"Gender\": \"Male\", \"Population\": 2131947122, \"Id\": \"AsiaMale\", \"PieHeight\": \"160px\", \"PieWidth\": \"160px\" },\n        { \"Continent\": \"Asia\", \"Gender\": \"Female\", \"Population\": 2043385632, \"Id\": \"AsiaFemale\", \"PieHeight\": \"160px\", \"PieWidth\": \"160px\" },\n        { \"Continent\": \"Europe\", \"Gender\": \"Male\", \"Population\": 353542772, \"Id\": \"EuropeMale\", \"PieHeight\": \"90px\", \"PieWidth\": \"90px\" },\n        { \"Continent\": \"Europe\", \"Gender\": \"Female\", \"Population\": 380686199, \"Id\": \"EuropeFemale\", \"PieHeight\": \"90px\", \"PieWidth\": \"90px\" },\n        { \"Continent\": \"North America\", \"Gender\": \"Male\", \"Population\": 171213918, \"Id\": \"NorthAmericaMale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" },\n        { \"Continent\": \"North America\", \"Gender\": \"Female\", \"Population\": 176175064, \"Id\": \"NorthAmericaFemale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" },\n        { \"Continent\": \"Oceania\", \"Gender\": \"Male\", \"Population\": 176995465, \"Id\": \"OceniaMale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" },\n        { \"Continent\": \"Oceania\", \"Gender\": \"Female\", \"Population\": 174631245, \"Id\": \"OceniaFemale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" },\n        { \"Continent\": \"South America\", \"Gender\": \"Male\", \"Population\": 197745352, \"Id\": \"SouthAmericaMale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" },\n        { \"Continent\": \"South America\", \"Gender\": \"Female\", \"Population\": 190045352, \"Id\": \"SouthAmericaFemale\", \"PieHeight\": \"60px\", \"PieWidth\": \"60px\" }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for treemap with pie\n */\nimport * as React from \"react\";\nimport { AccumulationChart, PieSeries, DataLabel, AccumulationTooltip, } from '@syncfusion/ej2-react-charts';\nimport { TreeMapComponent, LevelsDirective, LevelDirective, Inject, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\nimport { SampleBase } from './sample-base';\nimport * as data from './treemap-data/continent_data.json';\nAccumulationChart.Inject(AccumulationTooltip, PieSeries, DataLabel, AccumulationChart);\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class Pie extends SampleBase {\n    treemapInstance;\n    load(args) {\n    }\n    loaded(args) {\n        let template = document.getElementById(args.treemap.element.id + '_Label_Template_Group');\n        if (template) {\n            for (let i = 0; i < template.childElementCount; i++) {\n                this.AccumulationChartRender(template.childNodes[i].childNodes[0].id, i);\n            }\n            let count = 0;\n        }\n    }\n    resize(args) {\n        for (let i = 0; i < this.chartCollection.length; i++) {\n            this.chartCollection[i].destroy();\n        }\n    }\n    tooltipRendering(args) {\n        //tslint:disable-next-line\n        if (args.item['groupIndex'] !== 1) {\n            args.cancel = true;\n        }\n    }\n    chartCollection = [];\n    count = 0;\n    AccumulationChartRender(id, i) {\n        let chartData = this.getData(i);\n        let dataSource = chartData['data'];\n        let name = chartData['name'];\n        let chart = new AccumulationChart({\n            background: 'transparent',\n            tooltip: {\n                enable: true,\n                format: '${point.x} : ${point.y}%'\n            },\n            series: [\n                {\n                    explode: true,\n                    explodeIndex: 0,\n                    explodeOffset: '20%',\n                    name: name,\n                    palettes: ['#1E1E1E', '#00BDAE', '#FFFFFF'],\n                    dataSource: dataSource,\n                    type: 'Pie',\n                    xName: 'x',\n                    yName: 'y'\n                }\n            ],\n            legendSettings: { visible: false }\n        });\n        chart.appendTo('#' + id);\n        this.chartCollection.push(chart);\n    }\n    getData(count) {\n        let dataSource;\n        let dataName;\n        if (count === 0) {\n            dataSource = [\n                { 'x': '0-15 years', y: 40.8 }, { 'x': '15-64 years', y: 56.2 },\n                { 'x': 'Above 64 years', y: 3.0 }\n            ];\n            dataName = 'Afica';\n        }\n        else if (count === 1) {\n            dataSource = [\n                { 'x': '0-15 years', y: 15.5 }, { 'x': '15-64 years', y: 12.9 },\n                { 'x': 'Above 64 years', y: 41.4 }\n            ];\n            dataName = 'Asia';\n        }\n        else if (count === 2) {\n            dataSource = [\n                { 'x': '0-15 years', y: 25.1 }, { 'x': '15-64 years', y: 67.8 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'Europe';\n        }\n        else if (count === 3) {\n            dataSource = [\n                { 'x': '0-15 years', y: 15.3 }, { 'x': '15-64 years', y: 68.4 },\n                { 'x': 'Above 64 years', y: 16.3 }\n            ];\n            dataName = 'North America';\n        }\n        else if (count === 4) {\n            dataSource = [\n                { 'x': '0-15 years', y: 22.8 }, { 'x': '15-64 years', y: 65.9 },\n                { 'x': 'Above 64 years', y: 11.4 }\n            ];\n            dataName = 'Oceania';\n        }\n        else if (count === 5) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 6) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 7) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 8) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 9) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 10) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 11) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        else if (count === 12) {\n            dataSource = [\n                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },\n                { 'x': 'Above 64 years', y: 7.1 }\n            ];\n            dataName = 'South America';\n        }\n        count++;\n        return new Object({ name: dataName, data: dataSource });\n    }\n    render() {\n        return (<main><div className='control-pane'>\n\t\t\t\t<style>\n\t\t\t\t\t{SAMPLE_CSS}\n\t\t\t\t</style>\n\t\t\t\t<div className='control-section'>\n\t\t\t\t\t<div className='col-md-12'>\n\t\t\t\t\t\t<TreeMapComponent resize={this.resize.bind(this)} loaded={this.loaded.bind(this)} tooltipRendering={this.tooltipRendering.bind(this)} load={this.load.bind(this)} id='treemap-container' tooltipSettings={{\n                visible: true,\n                format: ' ${Gender} : ${Population}'\n            }} titleSettings={{\n                text: 'Population of the continents based on gender and age group - 2011',\n                textStyle: { size: '15px' }\n            }} format={\"n\"} useGroupingSeparator={true} dataSource={datasource.continent} weightValuePath='Population' leafItemSettings={{\n                labelPath: 'Gender',\n                fill: '#A1317D',\n                showLabels: false,\n                border: { color: 'black', width: 0.5 },\n                labelFormat: '${Gender} : ${Population}',\n                templatePosition: 'Center',\n                labelTemplate: '<div style=\"height:{{:PieHeight}};width:{{:PieWidth}};\" id ={{:Id}}></div>',\n            }}>\n\t\t\t\t\t\t\t<Inject services={[TreeMapTooltip]}/>\n\t\t\t\t\t\t\t<LevelsDirective>\n\t\t\t\t\t\t\t\t<LevelDirective groupPath='Continent' fill='#7E2361' border={{ color: 'black', width: 1 }} headerAlignment='Center' groupGap={0} headerStyle={{ size: '14px' }}/>\n\t\t\t\t\t\t\t</LevelsDirective>\n\t\t\t\t\t\t</TreeMapComponent>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Source Link */}\n\t\t\t\t\t<div style={{ float: 'right', marginRight: '10px' }}>Source:\n       <a href=\"http://en.worldstat.info/Asia/\" target=\"_blank\">en.worldstat.info</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<section id=\"action-description\" aria-label=\"Description of TreeMap sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis sample visualizes the population level of various continents in 2011 based on the gender and age group.\n            </p>\n\t\t\t\t</section>\n\t\t\t\t<section id=\"description\" aria-label=\"Description of the TreeMap features demonstrated in this sample\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn this example, you can see how to render a pie chart as a template for leaf items in TreeMap. Any custom HTML element can be rendered as label template.\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\tTooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch enabled devices.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t</main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Pie />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-treemap\":\"*\",\"@syncfusion/ej2-react-treemap\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}