{"index.css":"#chip-api-wrapper .janet {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/chips/images/janet.png');\n}\n\n#chips-api-property .property-panel-section .property-panel-content table#property tr {\n    height: 50px;\n}\n\n#chip-api-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 100px;\n}\n\n#chip .e-chip-avatar.e-icon {\n    font-family: 'e-user-icon';\n}\n\n#chip .e-chip-avatar.e-icon:before {\n    content: \"\\e700\";\n}\n\n@font-face {\n    font-family: 'e-user-icon';\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj0gSRgAAAEoAAAAVmNtYXDnEOdaAAABjAAAADhnbHlmiAnWagAAAcwAAADwaGVhZBD04psAAADQAAAANmhoZWEHiwNuAAAArAAAACRobXR4C9AAAAAAAYAAAAAMbG9jYQAwAHgAAAHEAAAACG1heHABDwA1AAABCAAAACBuYW1lby+ImAAAArwAAAIxcG9zdGUbI4AAAATwAAAAOwABAAADUv9qAFoEAAAAAAAD3QABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAAWW9ja18PPPUACwPoAAAAANb8zuYAAAAA1vzO5gAAAAAD3QPqAAAACAACAAAAAAAAAAEAAAADACkAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQPwAZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAQNS/2oAWgPqAJYAAAABAAAAAAAABAAAAAPoAAAD6AAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOcB//8AAOcA//8AAAABAAQAAAABAAIAAAAAADAAeAACAAAAAAO+A+oADQAZAAA3FBYXIT4BNS4BJyEOARMeARc+ATcuAScOAS4YFwMzFxgDq4H+zYGr4QOCY2KCAwOCYmGCnCtOISFOK3qiAwOiAe1igwICg2JjggICggAAAAACAAAAAAPdA+oAFAAoAAABDgEHIicjDgEHLgEnLgEnPgE3HgEFFBYfARYfATcXFhc2JDcmJCcGBAOkBfK3KioXEFcpBBEMRUsBBfK3tvL8cVRLDggBBsQKLDDPARMFBf7tz87+7QI+ndEEBwI/Izh2DS+RVZ3RBATRnWCmN3BIETecAgcBBPK1tfIEBPIAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBDb250YWN0c1JlZ3VsYXJDb250YWN0c0NvbnRhY3RzVmVyc2lvbiAxLjBDb250YWN0c0ZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAQwBvAG4AdABhAGMAdABzAFIAZQBnAHUAbABhAHIAQwBvAG4AdABhAGMAdABzAEMAbwBuAHQAYQBjAHQAcwBWAGUAcgBzAGkAbwBuACAAMQAuADAAQwBvAG4AdABhAGMAdABzAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHVzZXIKY2hhdC0wMS13ZgAAAA==) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","data.json":"{\n  \"ddlData\": [{\n      \"id\": \"1\",\n      \"text\": \"Default\"\n    },\n    {\n      \"id\": \"2\",\n      \"text\": \"Primary\"\n    },\n    {\n      \"id\": \"3\",\n      \"text\": \"Success\"\n    },\n    {\n      \"id\": \"4\",\n      \"text\": \"Danger\"\n    },\n    {\n      \"id\": \"5\",\n      \"text\": \"Warning\"\n    },\n    {\n      \"id\": \"6\",\n      \"text\": \"Info\"\n    }\n  ],\n  \"avatarData\": [{\n      \"id\": \"1\",\n      \"text\": \"None\"\n    },\n    {\n      \"id\": \"2\",\n      \"text\": \"Icon\"\n    },\n    {\n      \"id\": \"3\",\n      \"text\": \"Image\"\n    },\n    {\n      \"id\": \"4\",\n      \"text\": \"Letter\"\n    }\n  ]\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport { CheckBoxComponent, ChipListComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\n\n\nimport * as data from './data.json';\nimport { PropertyPane } from './property-pane';\nconst Api = () => {\n    const datas = data;\n    let colorCss = '';\n    let outlineCss = '';\n    const [cssClass, SetCssClass] = useState('');\n    const [avatarIconCss, SetAvatarIconCss] = useState('');\n    const [avatarText, SetAvatarText] = useState('');\n    const [trailingIconCss, SetTrailingIconCss] = useState('');\n    const [leadingIconCss, SetLeadingIconCss] = useState('');\n    // checkbox change handler for chip leading icon\n    const iconHandler = (e) => {\n        SetLeadingIconCss(e.checked ? 'janet' : '');\n    };\n    // drop-down list change handler for chip color\n    const colorChange = (e) => {\n        SetCssClass(`e-${e.value.toLowerCase()} ${outlineCss.trim()}`);\n        colorCss = `e-${e.value.toLowerCase()}`;\n    };\n    // checkbox change handler for chip outline\n    const variantHandler = (e) => {\n        outlineCss = e.checked ? 'e-outline' : '';\n        SetCssClass(`${colorCss} ${outlineCss}`.trim());\n    };\n    // drop-down list change handler for chip avatar\n    const avatarHandler = (e) => {\n        SetAvatarIconCss((e.value.toLowerCase() === 'icon') ? 'e-icon' : (e.value.toLowerCase() === 'image') ? 'janet' : ''), SetAvatarText(e.value.toLowerCase() === 'letter' ? 'JL' : '');\n    };\n    // checkbox change handler for chip trailing icon\n    const deleteIconHandler = (e) => {\n        SetTrailingIconCss(e.checked ? 'e-dlt-btn' : '');\n    };\n    return (<div>\r\n            <div className=\"col-lg-8 control-section\">\r\n                <div id=\"chip-api-wrapper\">\r\n                    {/* initialize chip component */}\r\n                    <ChipListComponent id=\"chip\" text=\"Janet Leverling\" cssClass={cssClass} avatarIconCss={avatarIconCss} trailingIconCss={trailingIconCss} avatarText={avatarText} leadingIconCss={leadingIconCss}>\r\n                    </ChipListComponent>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-4 property-section\" id=\"chips-api-property\">\r\n                <PropertyPane title='Properties'>\r\n                    <table id=\"property\" title=\"Properties\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ width: \"50%\" }}>\r\n                                    <div className=\"userselect\">Color</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", \"paddingRight\": \"10px\" }}>\r\n                                    <div>\r\n                                        {/* initialize dropdownlist component */}\r\n                                        <DropDownListComponent id=\"chip-color\" dataSource={datas.ddlData} placeholder=\"Select a color\" change={colorChange.bind(this)}></DropDownListComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: \"50%\" }}>\r\n                                    <div className=\"userselect\">Leading icon</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                    <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                        {/* initialize checkbox component */}\r\n                                        <CheckBoxComponent id=\"chip-leadingicon\" change={iconHandler.bind(this)}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: \"50%\" }}>\r\n                                    <div className=\"userselect\">Avatar</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                    <div>\r\n                                        {/* initialize dropdownlist component */}\r\n                                        <DropDownListComponent id=\"chip-avatar\" dataSource={datas.avatarData} placeholder=\"Select an avatar\" change={avatarHandler.bind(this)}></DropDownListComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: \"50%\" }}>\r\n                                    <div className=\"userselect\">Trailing icon</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                    <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                        {/* initialize checkbox component */}\r\n                                        <CheckBoxComponent id=\"chip-trailingicon\" change={deleteIconHandler.bind(this)}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: \"50%\" }}>\r\n                                    <div className=\"userselect\">Outline</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                    <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                        {/* initialize checkbox component */}\r\n                                        <CheckBoxComponent id=\"chip-outline\" change={variantHandler.bind(this)}></CheckBoxComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </PropertyPane>\r\n            </div>\r\n        </div>);\n};\nexport default Api;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Api />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}