{"index.css":"#chip-draganddrop-wrapper .sample-padding {\n    padding: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.chips-headers {\n    font-size: 12px;\n    text-align: center;\n    padding-top: 10px;\n}\n\n#choice-container {\n    width: 400px;\n    min-height: 100px;\n    min-width: 150px;\n    border: 2px solid #2C3E50;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    margin-right: 30px;\n}\n\n#selection-container {\n    width: 400px;\n    min-height: 100px;\n    min-width: 150px;\n    border: 2px solid #8E44AD;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport { ChipDirective, ChipListComponent, ChipsDirective } from '@syncfusion/ej2-react-buttons';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\n\nexport class DragAndDrop extends SampleBase {\n    render() {\n        return (<div>\n                <div className=\"control-section\">\n                    <div id=\"chip-draganddrop-wrapper\">\n                        <div id=\"chips\" className=\"chips-headers\">Customize your order with add-ons</div>\n\n                        <div className=\"sample-padding\">\n                            <ChipListComponent id=\"choice-container\" allowDragAndDrop={true} aria-labelledby=\"choice-chips\">\n                                <ChipsDirective>\n                                    <ChipDirective text=\"Extra cheese\" cssClass=\"e-primary\"></ChipDirective>\n                                    <ChipDirective text=\"Spicy Level: Medium\" cssClass=\"e-info\"></ChipDirective>\n                                    <ChipDirective text=\"Spicy Level: Low\" cssClass=\"e-success\"></ChipDirective>\n                                    <ChipDirective text=\"Fast Delivery\" cssClass=\"e-warning\"></ChipDirective>\n                                    <ChipDirective text=\"Gift Wrapping\" cssClass=\"e-danger\"></ChipDirective>\n                                    <ChipDirective text=\"Eco-Friendly Packaging\" cssClass=\"e-primary\"></ChipDirective>\n                                </ChipsDirective>\n                            </ChipListComponent>\n                            <ChipListComponent id=\"selection-container\" allowDragAndDrop={true} aria-labelledby=\"selection-chips\"></ChipListComponent>\n                        </div>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<DragAndDrop />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}