{"index.css":"#chip-api-wrapper .janet {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/chips/images/janet.png');\n}\n\n#chips-api-property .property-panel-section .property-panel-content table#property tr {\n    height: 50px;\n}\n\n#chip-api-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 100px;\n}\n\n#chip .e-chip-avatar.e-icon {\n    font-family: 'e-user-icon';\n}\n\n#chip .e-chip-avatar.e-icon:before {\n    content: \"\\e700\";\n}\n\n@font-face {\n    font-family: 'e-user-icon';\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj0gSRgAAAEoAAAAVmNtYXDnEOdaAAABjAAAADhnbHlmiAnWagAAAcwAAADwaGVhZBD04psAAADQAAAANmhoZWEHiwNuAAAArAAAACRobXR4C9AAAAAAAYAAAAAMbG9jYQAwAHgAAAHEAAAACG1heHABDwA1AAABCAAAACBuYW1lby+ImAAAArwAAAIxcG9zdGUbI4AAAATwAAAAOwABAAADUv9qAFoEAAAAAAAD3QABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAAWW9ja18PPPUACwPoAAAAANb8zuYAAAAA1vzO5gAAAAAD3QPqAAAACAACAAAAAAAAAAEAAAADACkAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQPwAZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAQNS/2oAWgPqAJYAAAABAAAAAAAABAAAAAPoAAAD6AAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOcB//8AAOcA//8AAAABAAQAAAABAAIAAAAAADAAeAACAAAAAAO+A+oADQAZAAA3FBYXIT4BNS4BJyEOARMeARc+ATcuAScOAS4YFwMzFxgDq4H+zYGr4QOCY2KCAwOCYmGCnCtOISFOK3qiAwOiAe1igwICg2JjggICggAAAAACAAAAAAPdA+oAFAAoAAABDgEHIicjDgEHLgEnLgEnPgE3HgEFFBYfARYfATcXFhc2JDcmJCcGBAOkBfK3KioXEFcpBBEMRUsBBfK3tvL8cVRLDggBBsQKLDDPARMFBf7tz87+7QI+ndEEBwI/Izh2DS+RVZ3RBATRnWCmN3BIETecAgcBBPK1tfIEBPIAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBDb250YWN0c1JlZ3VsYXJDb250YWN0c0NvbnRhY3RzVmVyc2lvbiAxLjBDb250YWN0c0ZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAQwBvAG4AdABhAGMAdABzAFIAZQBnAHUAbABhAHIAQwBvAG4AdABhAGMAdABzAEMAbwBuAHQAYQBjAHQAcwBWAGUAcgBzAGkAbwBuACAAMQAuADAAQwBvAG4AdABhAGMAdABzAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHVzZXIKY2hhdC0wMS13ZgAAAA==) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","data.json":"{\n  \"ddlData\": [{\n      \"id\": \"1\",\n      \"text\": \"Default\"\n    },\n    {\n      \"id\": \"2\",\n      \"text\": \"Primary\"\n    },\n    {\n      \"id\": \"3\",\n      \"text\": \"Success\"\n    },\n    {\n      \"id\": \"4\",\n      \"text\": \"Danger\"\n    },\n    {\n      \"id\": \"5\",\n      \"text\": \"Warning\"\n    },\n    {\n      \"id\": \"6\",\n      \"text\": \"Info\"\n    }\n  ],\n  \"avatarData\": [{\n      \"id\": \"1\",\n      \"text\": \"None\"\n    },\n    {\n      \"id\": \"2\",\n      \"text\": \"Icon\"\n    },\n    {\n      \"id\": \"3\",\n      \"text\": \"Image\"\n    },\n    {\n      \"id\": \"4\",\n      \"text\": \"Letter\"\n    }\n  ]\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport { CheckBoxComponent, ChipListComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\n\nimport * as data from './data.json';\nimport { PropertyPane } from './property-pane';\nexport class Api extends SampleBase {\n    data = data;\n    colorCss = '';\n    outlineCss = '';\n    constructor(props) {\n        super(props);\n        this.state = {\n            cssClass: '',\n            avatarIconCss: '',\n            avatarText: '',\n            trailingIconCss: '',\n            leadingIconCss: ''\n        };\n    }\n    // checkbox change handler for chip leading icon\n    iconHandler(e) {\n        this.setState({ leadingIconCss: e.checked ? 'janet' : '' });\n    }\n    // drop-down list change handler for chip color\n    colorChange(e) {\n        this.setState({ cssClass: `e-${e.value.toLowerCase()} ${this.outlineCss.trim()}` });\n        this.colorCss = `e-${e.value.toLowerCase()}`;\n    }\n    // checkbox change handler for chip outline\n    variantHandler(e) {\n        this.outlineCss = e.checked ? 'e-outline' : '';\n        this.setState({ cssClass: `${this.colorCss} ${this.outlineCss}`.trim() });\n    }\n    // drop-down list change handler for chip avatar\n    avatarHandler(e) {\n        this.setState({ avatarIconCss: (e.value.toLowerCase() === 'icon') ? 'e-icon' : (e.value.toLowerCase() === 'image') ? 'janet' : '', avatarText: (e.value.toLowerCase() === 'letter' ? 'JL' : '') });\n    }\n    // checkbox change handler for chip trailing icon\n    deleteIconHandler(e) {\n        this.setState({ trailingIconCss: e.checked ? 'e-dlt-btn' : '' });\n    }\n    render() {\n        return (<div>\n                <div className=\"col-lg-8 control-section\">\n                    <div id=\"chip-api-wrapper\">\n                        {/* initialize chip component */}\n                        <ChipListComponent id=\"chip\" text=\"Janet Leverling\" cssClass={this.state.cssClass} avatarIconCss={this.state.avatarIconCss} trailingIconCss={this.state.trailingIconCss} avatarText={this.state.avatarText} leadingIconCss={this.state.leadingIconCss}>\n                        </ChipListComponent>\n                    </div>\n                </div>\n                <div className=\"col-lg-4 property-section\" id=\"chips-api-property\">\n                    <PropertyPane title='Properties'>\n                        <table id=\"property\" title=\"Properties\">\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: \"50%\" }}>\n                                        <div className=\"userselect\">Color</div>\n                                    </td>\n                                    <td style={{ width: \"50%\", \"paddingRight\": \"10px\" }}>\n                                        <div>\n                                            {/* initialize dropdownlist component */}\n                                            <DropDownListComponent id=\"chip-color\" dataSource={this.data.ddlData} placeholder=\"Select a color\" change={this.colorChange.bind(this)}></DropDownListComponent>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: \"50%\" }}>\n                                        <div className=\"userselect\">Leading icon</div>\n                                    </td>\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\n                                            {/* initialize checkbox component */}\n                                            <CheckBoxComponent id=\"chip-leadingicon\" change={this.iconHandler.bind(this)}></CheckBoxComponent>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: \"50%\" }}>\n                                        <div className=\"userselect\">Avatar</div>\n                                    </td>\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\n                                        <div>\n                                            {/* initialize dropdownlist component */}\n                                            <DropDownListComponent id=\"chip-avatar\" dataSource={this.data.avatarData} placeholder=\"Select an avatar\" change={this.avatarHandler.bind(this)}></DropDownListComponent>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: \"50%\" }}>\n                                        <div className=\"userselect\">Trailing icon</div>\n                                    </td>\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\n                                            {/* initialize checkbox component */}\n                                            <CheckBoxComponent id=\"chip-trailingicon\" change={this.deleteIconHandler.bind(this)}></CheckBoxComponent>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: \"50%\" }}>\n                                        <div className=\"userselect\">Outline</div>\n                                    </td>\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\n                                            {/* initialize checkbox component */}\n                                            <CheckBoxComponent id=\"chip-outline\" change={this.variantHandler.bind(this)}></CheckBoxComponent>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Api />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}