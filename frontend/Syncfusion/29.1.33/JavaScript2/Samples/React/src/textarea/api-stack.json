{"index.css":".content-wrapper {\n    width: 90%;\n    margin: 0 auto;\n    min-width: 185px;\n}\n\n.content-wrapper div.row {\n    padding: 15px 0px;\n}\n\n#textarea-sample .e-multi-line-input {\n    max-width: 100%;\n}\n\n@media only screen and (max-width: 480px) {\n    .content-wrapper {\n        width: 92%;\n    }\n    .col-xs-6,\n    .col-xs-4,\n    .col-xs-12 {\n        padding: 10px 5px;\n        width: 100%;\n    }\n    .content-wrapper div.row {\n        padding: 0px;\n    }\n}\n\n#description td {\n    vertical-align: top;\n}\n.e-outline.e-control-wrapper {\n    margin-top: 0;\n}\n.fabric .row.material,\n.bootstrap .row.material,\n.bootstrap4 .row.material,\n.highcontrast .row.material,\n.tailwind .row.material,\n.tailwind3 .row.material,\n.bootstrap5 .row.material,\n.bootstrap5-dark .row.material,\n.bootstrap5\\.3 .row.material,\n.bootstrap5\\.3-dark .row.material,\n.tailwind-dark .row.material,\n.tailwind3-dark .row.material,\n.fabric-dark .row.material,\n.bootstrap-dark .row.material,\n.fluent .row.material,\n.fluent-dark .row.material,\n.fluent2 .row.material,\n.fluent2-dark .row.material {\n    display: none;\n}\n\n.fluent .e-control-wrapper.e-filled,\n.fluent-dark .e-control-wrapper.e-filled {\n    margin-top: 0px;\n}\n\n.content-wrapper div.api-row {\n    margin: 30px 150px;\n}\n\n.api-property .left-side {\n    font-size: 14px;\n    padding: 8px;\n    width: auto;\n}\n\n.content-wrapper div.floatinglabel-row {\n    margin: 30px 150px;\n}\n\n.floatinglabel-property .left-side {\n    font-size: 14px;\n    padding: 8px;\n    width: auto;\n}\n\n.content-wrapper div.resize-row {\n    margin: 30px 150px;\n}\n\n.resize-property .left-side {\n    font-size: 14px;\n    padding: 8px;\n    width: auto;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PropertyPane } from './property-pane';\nimport { TextAreaComponent, NumericTextBoxComponent, TextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { SampleBase } from './sample-base';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\n\nexport class Api extends SampleBase {\n    textareaObj;\n    enabledCheckBox;\n    readonlyCheckBox;\n    showClearIcon;\n    rows;\n    columns;\n    maxLength;\n    value;\n    enabledHandler(args) {\n        this.textareaObj.enabled = args.checked;\n    }\n    readonlyHandler(args) {\n        this.textareaObj.readonly = args.checked;\n    }\n    rowHandler(args) {\n        this.textareaObj.rows = args.value;\n    }\n    columnHandler(args) {\n        this.textareaObj.cols = args.value;\n    }\n    maxLengthHandler(args) {\n        this.textareaObj.maxLength = args.value;\n    }\n    valueHandler(args) {\n        this.textareaObj.value = args.value;\n    }\n    clearIconHandler(args) {\n        this.textareaObj.showClearButton = args.checked;\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div id=\"textarea-sample\" className=\"col-lg-8 control-section api-textarea\">\n                    <div className=\"content-wrapper\">\n                        <div className=\"api-row\">\n                            <TextAreaComponent id=\"api\" placeholder=\"Enter your comments\" floatLabelType=\"Auto\" ref={(scope) => { this.textareaObj = scope; }}></TextAreaComponent>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-lg-4 property-section' id=\"api\">\n                    <PropertyPane title='Properties'>\n                        <table id=\"property\" title=\"Properties\" className=\"api-property\">\n\n                            <tr>\n                                <td className=\"left-side\"> Rows </td>\n                                <td>\n                                    <NumericTextBoxComponent format='##' value={2} min={1} max={10} change={this.rowHandler.bind(this)}></NumericTextBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\"> Columns </td>\n                                <td>\n                                    <NumericTextBoxComponent format='##' value={20} min={5} max={40} change={this.columnHandler.bind(this)}></NumericTextBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\">Enable</td>\n                                <td>\n                                    <CheckBoxComponent checked={true} ref={(scope) => { this.enabledCheckBox = scope; }} change={this.enabledHandler.bind(this)}></CheckBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\">Read only</td>\n                                <td>\n                                    <CheckBoxComponent checked={false} ref={(scope) => { this.readonlyCheckBox = scope; }} change={this.readonlyHandler.bind(this)}></CheckBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\"> MaxLength </td>\n                                <td>\n                                    <NumericTextBoxComponent format='##' value={-1} change={this.maxLengthHandler.bind(this)}></NumericTextBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\"> Value </td>\n                                <td>\n                                    <TextBoxComponent change={this.valueHandler.bind(this)}></TextBoxComponent>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"left-side\">Show clear icon</td>\n                                <td>\n                                    <CheckBoxComponent checked={false} ref={(scope) => { this.showClearIcon = scope; }} change={this.clearIconHandler.bind(this)}></CheckBoxComponent>\n                                </td>\n                            </tr>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Api />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}