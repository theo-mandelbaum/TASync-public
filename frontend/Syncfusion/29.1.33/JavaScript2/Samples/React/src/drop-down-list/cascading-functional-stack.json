{"index.css":"#cascade {\n    margin: 0 auto;\n    width: 250px !important;\n}","dataSource.json":"{\n    \"country\":[\n        { \"CountryName\": \"Australia\", \"CountryId\": \"2\" }, \n        { \"CountryName\": \"United States\", \"CountryId\": \"1\" }\n    ],\n    \"state\":[\n        { \"StateName\": \"New York\", \"CountryId\": \"1\", \"StateId\": \"101\" }, { \"StateName\": \"Queensland\", \"CountryId\": \"2\", \"StateId\": \"104\" },\n        { \"StateName\": \"Tasmania \", \"CountryId\": \"2\", \"StateId\": \"105\" }, { \"StateName\": \"Victoria\", \"CountryId\": \"2\", \"StateId\": \"106\" },\n        { \"StateName\": \"Virginia \", \"CountryId\": \"1\", \"StateId\": \"102\" }, { \"StateName\": \"Washington\", \"CountryId\": \"1\", \"StateId\": \"103\" }\n    ],\n    \"cities\":[\n        { \"CityName\": \"Aberdeen\", \"StateId\": \"103\", \"CityId\": 207 }, { \"CityName\": \"Alexandria\", \"StateId\": \"102\", \"CityId\": 204 },\n        { \"CityName\": \"Albany\", \"StateId\": \"101\", \"CityId\": 201 },  { \"CityName\": \"Beacon \", \"StateId\": \"101\", \"CityId\": 202 },\n        { \"CityName\": \"Brisbane \", \"StateId\": \"104\", \"CityId\": 211 }, { \"CityName\": \"Cairns\", \"StateId\": \"104\", \"CityId\": 212 },\n        { \"CityName\": \"Colville \", \"StateId\": \"103\", \"CityId\": 208 }, { \"CityName\": \"Devonport\", \"StateId\": \"105\", \"CityId\": 215 },\n        { \"CityName\": \"Emporia\", \"StateId\": \"102\", \"CityId\": 206 }, { \"CityName\": \"Geelong\", \"StateId\": \"106\", \"CityId\": 218 },\n        { \"CityName\": \"Hampton \", \"StateId\": \"102\", \"CityId\": 205 }, { \"CityName\": \"Healesville \", \"StateId\": \"106\", \"CityId\": 217 },\n        { \"CityName\": \"Hobart\", \"StateId\": \"105\", \"CityId\": 213 }, { \"CityName\": \"Launceston \", \"StateId\": \"105\", \"CityId\": 214 },\n        { \"CityName\": \"Lockport\", \"StateId\": \"101\", \"CityId\": 203 }, { \"CityName\": \"Melbourne\", \"StateId\": \"106\", \"CityId\": 216 },\n        { \"CityName\": \"Pasco\", \"StateId\": \"103\", \"CityId\": 209 }, { \"CityName\": \"Townsville\", \"StateId\": \"104\", \"CityId\": 210 }\n    ],\n    \"sportsData\" :[\n        { \"Id\": \"Game1\", \"Game\": \"American Football\" },\n        { \"Id\": \"Game2\", \"Game\": \"Badminton\" },\n        { \"Id\": \"Game3\", \"Game\": \"Basketball\" },\n        { \"Id\": \"Game4\", \"Game\": \"Cricket\" },\n        { \"Id\": \"Game5\", \"Game\": \"Football\" },\n        { \"Id\": \"Game6\", \"Game\": \"Golf\" },\n        { \"Id\": \"Game7\", \"Game\": \"Hockey\" },\n        { \"Id\": \"Game8\", \"Game\": \"Rugby\" },\n        { \"Id\": \"Game9\", \"Game\": \"Snooker\" },\n        { \"Id\": \"Game10\", \"Game\": \"Tennis\" }\n    ],\n    \"data\":[\n        \"Águilas\",\n        \"Ajedrez\",\n        \"Ala Delta\",\n        \"Álbumes de Música\",\n        \"Alusivos\",\n        \"Análisis de Escritura a Mano\",\n        \"Dyarbakır\",\n        \"Derepazarı \",\n        \"Gülümsemek \",\n        \"Teşekkürler\",\n        \"Güle güle.\",\n        \"Gülhatmi\",\n        \"Gülünç\"\n    ],\n    \"countries\":[\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\n        { \"Name\": \"France\", \"Code\": \"FR\" },\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\n        { \"Name\": \"Greenland\", \"Code\": \"GL\" },\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" },\n        { \"Name\": \"India\", \"Code\": \"IN\" },\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\n        { \"Name\": \"United States\", \"Code\": \"US\" }\n    ],\n    \"vegetableData\":[\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"Id\": \"item1\" },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"Id\": \"item2\" },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"Id\": \"item3\" },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"Id\": \"item4\" },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"Id\": \"item5\" },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"Id\": \"item6\" },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"Id\": \"item7\" },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"Id\": \"item8\" },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"Id\": \"item9\" },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"Id\": \"item10\" },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"Id\": \"item11\" }\n    ],\n    \"socialMedia\":[\n        { \"Class\": \"facebook\", \"SocialMedia\": \"Facebook\", \"Id\": \"media1\" },\n        { \"Class\": \"google-plus\", \"SocialMedia\": \"Google Plus\", \"Id\": \"media2\" },\n        { \"Class\": \"instagram\", \"SocialMedia\": \"Instagram\", \"Id\": \"media3\" },\n        { \"Class\": \"linkedin\", \"SocialMedia\": \"LinkedIn\", \"Id\": \"media4\" },\n        { \"Class\": \"skype\", \"SocialMedia\": \"Skype\", \"Id\": \"media5\" },\n        { \"Class\": \"tumblr\", \"SocialMedia\": \"Tumblr\", \"Id\": \"media6\" },\n        { \"Class\": \"twitter\", \"SocialMedia\": \"Twitter\", \"Id\": \"media7\" },\n        { \"Class\": \"vimeo\", \"SocialMedia\": \"Vimeo\", \"Id\": \"media8\" },\n        { \"Class\": \"whatsapp\", \"SocialMedia\": \"WhatsApp\", \"Id\": \"media9\" },\n        { \"Class\": \"youtube\", \"SocialMedia\": \"YouTube\", \"Id\": \"media10\" }\n    ],\n    \"employees\":[\n        { \"Name\": \"Andrew\", \"Eimg\": \"7\" },\n        { \"Name\": \"Anne\", \"Eimg\": \"1\" },\n        { \"Name\": \"Janet\", \"Eimg\": \"3\" },\n        { \"Name\": \"Laura\", \"Eimg\": \"2\" },\n        { \"Name\": \"Michael\", \"Eimg\": \"9\" },\n        { \"Name\": \"Nancy\", \"Eimg\": \"4\" },\n        { \"Name\": \"Robert\", \"Eimg\": \"8\" },\n        { \"Name\": \"Steven\", \"Eimg\": \"10\" }\n    ],\n    \"empList\":[\n        { \"Name\": \"Andrew Fuller\", \"Eimg\": \"7\", \"Designation\": \"Team Lead\", \"Country\": \"England\" },\n        { \"Name\": \"Anne Dodsworth\", \"Eimg\": \"1\", \"Designation\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Janet Leverling\", \"Eimg\": \"3\", \"Designation\": \"HR\", \"Country\": \"USA\" },\n        { \"Name\": \"Laura Callahan\", \"Eimg\": \"2\", \"Designation\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Margaret Peacock\", \"Eimg\": \"6\", \"Designation\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Michael Suyama\", \"Eimg\": \"9\", \"Designation\": \"Team Lead\", \"Country\": \"USA\" },\n        { \"Name\": \"Nancy Davolio\", \"Eimg\": \"4\", \"Designation\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Robert King\", \"Eimg\": \"8\", \"Designation\": \"Developer \", \"Country\": \"England\" },\n        { \"Name\": \"Steven Buchanan\", \"Eimg\": \"10\", \"Designation\": \"CEO\", \"Country\": \"England\" }\n    ],\n    \"status\": [\n        { \"ID\": \"item1\", \"Text\": \"Open\", \"State\": false },\n        { \"ID\": \"item2\", \"Text\": \"Waiting for Customer\", \"State\": false },\n        { \"ID\": \"item3\", \"Text\": \"On Hold\", \"State\": true },\n        { \"ID\": \"item4\", \"Text\": \"Follow-up\", \"State\": false },\n        { \"ID\": \"item5\", \"Text\": \"Closed\", \"State\": true },\n        { \"ID\": \"item6\", \"Text\": \"Solved\", \"State\": false },\n        { \"ID\": \"item7\", \"Text\": \"Feature Request\", \"State\": false }\n    ],\n    \"vegetables\": [\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"ID\": \"item1\", \"State\": true },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"ID\": \"item2\", \"State\": false },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"ID\": \"item3\", \"State\": true },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"ID\": \"item4\", \"State\": false },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"ID\": \"item5\", \"State\": false },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"ID\": \"item6\", \"State\": true },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"ID\": \"item7\", \"State\": false },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"ID\": \"item8\", \"State\": true },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"ID\": \"item9\", \"State\": false },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"ID\": \"item10\", \"State\": true },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"ID\": \"item11\", \"State\": false }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\n\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { Query } from '@syncfusion/ej2-data';\n\nimport * as data from './dataSource.json';\nconst Cascading = () => {\n    // state DropDownList instance\n    const stateObj = useRef(null);\n    // city DropDownList instance\n    const cityObj = useRef(null);\n    const tempCountry = 'country';\n    //define the country DropDownList data\n    const countryData = data[tempCountry];\n    const tempState = 'state';\n    //define the state DropDownList data\n    const stateData = data[tempState];\n    const tempCity = 'cities';\n    //define the city DropDownList data\n    const cityData = data[tempCity];\n    // maps the country column to fields property\n    const countryFields = { value: 'CountryId', text: 'CountryName' };\n    // maps the state column to fields property\n    const stateFields = { value: 'StateId', text: 'StateName' };\n    // maps the city column to fields property\n    const cityFields = { text: 'CityName', value: 'CityId' };\n    const [stateEnabled, setStateEnabled] = useState(false);\n    const [stateQuery, setStateQuery] = useState(null);\n    const [stateText, setStateText] = useState(null);\n    const [cityText, setCityText] = useState(null);\n    const [cityEnabled, setCityEnabled] = useState(false);\n    const [cityQuery, setCityQuery] = useState(null);\n    const countryChange = (args) => {\n        setStateEnabled(args.value != null);\n        // query the data source based on country DropDownList selected value\n        let tempQuery = new Query().where('CountryId', 'equal', args.value);\n        setStateQuery(tempQuery);\n        // clear the existing selection.\n        setStateText(null);\n        // bind the property changes to state DropDownList\n        stateObj.current.dataBind();\n        // clear the existing selection.\n        setCityText(null);\n        setCityEnabled(false);\n        // bind the property changes to city DropDownList\n        cityObj.current.dataBind();\n    };\n    const stateChange = (args) => {\n        setCityEnabled(args.value != null);\n        // query the data source based on state DropDownList selected value\n        let tempQuery1 = new Query().where('StateId', 'equal', args.value);\n        setCityQuery(tempQuery1);\n        // clear the existing selection.\n        setCityText(null);\n    };\n    return (<div className='control-pane'>\r\n            <div className='control-section'>\r\n                <div id='cascade'>\r\n                    <div style={{ paddingTop: '35px' }}>\r\n                        <DropDownListComponent id=\"country\" dataSource={countryData} fields={countryFields} popupHeight=\"auto\" change={countryChange.bind(this)} placeholder=\"Select a country\"/>\r\n                    </div>\r\n                    <div style={{ paddingTop: '35px' }}>\r\n                        <DropDownListComponent id=\"state\" dataSource={stateData} ref={stateObj} fields={stateFields} popupHeight=\"auto\" change={stateChange.bind(this)} enabled={stateEnabled} placeholder=\"Select a state\" query={stateQuery} text={stateText}/>\r\n                    </div>\r\n                    <div style={{ paddingTop: '35px' }}>\r\n                        <DropDownListComponent id=\"city\" dataSource={cityData} ref={cityObj} fields={cityFields} enabled={cityEnabled} popupHeight=\"auto\" placeholder=\"Select a city\" text={cityText} query={cityQuery}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default Cascading;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Cascading />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}