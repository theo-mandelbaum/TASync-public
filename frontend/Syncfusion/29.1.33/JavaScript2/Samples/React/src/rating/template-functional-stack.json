{"index.css":"#template-rating-control .rating-content {\n    width: 240px;\n    margin: 15px 0;\n    min-height: 75px;\n    padding:0;\n    text-align: center;\n}\n/* Represents the styles in touch mode */\n.e-bigger #template-rating-control .rating-content {\n    width: 260px;\n    margin: 15px 0;\n    min-height: 75px;\n    padding:0;\n    text-align: center;\n}\n#template-rating-control {\n    margin: 6% auto;\n    max-width: 600px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\n#template-rating-control .e-rating-container .custom-font {\n    /* To add the background color for the font icon. */\n    background: linear-gradient(to right, rgb(254,87,133,255) var(--rating-value), transparent var(--rating-value));\n    /* To clip the background to the icon (text) alone. */\n    background-clip: text;\n    -webkit-background-clip: text;\n    /* To make the background color visible instead of font color. */\n    -webkit-text-fill-color: transparent;\n    /* To provide a border for font icon. */\n    -webkit-text-stroke: 1px rgb(254,87,133,255)\n}\n\n#template-rating-control .custom-icon .e-icons::before{\n    content: \"\\e700\";\n    font-family: 'sb_rating' !important;\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n}\n\n#template-rating-control .custom-svg .e-rating-item-container{\n    padding: 0px;\n}\n\n/* Represents the styles for icon */\n@font-face {\nfont-family: 'rating';\nsrc:\nurl(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\nfont-weight: normal;\nfont-style: normal;\n}\n\n[class^=\"rating-icon-\"], [class*=\" rating-icon-\"] {\nfont-family: 'rating' !important;\nspeak: none;\nfont-style: normal;\nfont-weight: normal;\nfont-variant: normal;\ntext-transform: none;\nline-height: 1;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n}\n\n.rating-icon-heart:before { content: \"\\e702\"; }\n\n@font-face {\nfont-family: 'sb_rating';\nsrc:\nurl(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlm4nYNCgAAAcgAAABAaGVhZCKFmE8AAADQAAAANmhoZWEIVQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAgAAAAAAHAAAAABm1heHABDQAcAAABCAAAACBuYW1ldL1RdQAAAggAAAI9cG9zdHSFYngAAARIAAAALgABAAAEAAAAAFwEAAAAAAAD+AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAAXRt7iF8PPPUACwQAAAAAAN+3qa0AAAAA37eprQAAAAAD+AP4AAAACAACAAAAAAAAAAEAAAACABAAAQAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAIAAAAAEAAAAAA/gD+AAPAAABFzcHFwcXJwcnBzcnNycXAgB47EPX10PseHjsQ9fXQ+wD+NdD7Hh47EPX10PseHjsQwAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAkAAQABAAAAAAACAAcACgABAAAAAAADAAkAEQABAAAAAAAEAAkAGgABAAAAAAAFAAsAIwABAAAAAAAGAAkALgABAAAAAAAKACwANwABAAAAAAALABIAYwADAAEECQAAAAIAdQADAAEECQABABIAdwADAAEECQACAA4AiQADAAEECQADABIAlwADAAEECQAEABIAqQADAAEECQAFABYAuwADAAEECQAGABIA0QADAAEECQAKAFgA4wADAAEECQALACQBOyBzYl9yYXRpbmdSZWd1bGFyc2JfcmF0aW5nc2JfcmF0aW5nVmVyc2lvbiAxLjBzYl9yYXRpbmdGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAHMAYgBfAHIAYQB0AGkAbgBnAFIAZQBnAHUAbABhAHIAcwBiAF8AcgBhAHQAaQBuAGcAcwBiAF8AcgBhAHQAaQBuAGcAVgBlAHIAcwBpAG8AbgAgADEALgAwAHMAYgBfAHIAYQB0AGkAbgBnAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAARzdGFyAAAAAA==) format('truetype');\nfont-weight: normal;\nfont-style: normal;\n}\n\n[class^=\"sf-rating-\"], [class*=\" sf-rating-\"] {\nfont-family: 'sb_rating' !important;\nspeak: none;\nfont-style: normal;\nfont-weight: normal;\nfont-variant: normal;\ntext-transform: none;\nline-height: 1;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n}\n\n.sf-icon-star:before { content: \"\\e700\"; }\n\n/* To change the color of an unselected rating item. */\n.e-rating-item-container:not(.e-rating-selected) .emoji {\n        filter: grayscale(1);\n    }\n\n/* To set the gradient color */\n.e-rating-svg-icon #grad0 .start {\n    stop-color: #FF0000;\n}\n\n.e-rating-svg-icon #grad0 .end ,\n.e-rating-svg-icon #grad1 .start {\n    stop-color: #ff5101;\n}\n\n.e-rating-svg-icon #grad1 .end ,\n.e-rating-svg-icon #grad2 .start {\n    stop-color: #ffc801;\n}\n\n.e-rating-svg-icon #grad2 .end ,\n.e-rating-svg-icon #grad3 .start {\n    stop-color: #dbe300;\n}\n\n.e-rating-svg-icon #grad3 .end ,\n.e-rating-svg-icon #grad4 .start {\n    stop-color: #8bc301;\n}\n\n.e-rating-svg-icon #grad4 .end {\n    stop-color: #4eaa01;\n}\n\n.fluent2-dark #default-rating-control {\n    background-color: #1f1f1f;\n    color: #fff\n}\n.fluent2-highcontrast #default-rating-control {\n    background-color: #1C1B1F;\n    color: #fff\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { Fragment, useEffect } from \"react\";\nimport { RatingComponent } from '@syncfusion/ej2-react-inputs';\n\nimport { Browser } from '@syncfusion/ej2-base';\n\nconst Template = () => {\n    useEffect(() => {\n        const hideTooltipOnScroll = () => {\n            const tooltipElement = document.querySelector('.e-rating-tooltip');\n            if (tooltipElement && Browser.isDevice) {\n                tooltipElement.style.display = 'none';\n            }\n        };\n        const rightPane = document.getElementById('right-pane');\n        if (rightPane) {\n            rightPane.addEventListener('scroll', hideTooltipOnScroll);\n        }\n        return () => {\n            if (rightPane) {\n                rightPane.removeEventListener('scroll', hideTooltipOnScroll);\n            }\n        };\n    }, []);\n    const emptyFont = () => {\n        return (<Fragment><span className='custom-font rating-icon-heart'></span></Fragment>);\n    };\n    const fullFont = () => {\n        return (<Fragment><span className='custom-font rating-icon-heart'></span></Fragment>);\n    };\n    const emptyTemplate = () => {\n        return (<>\n            <svg width=\"35\" height=\"25\" className=\"e-rating-svg-icon\">\n                <rect width=\"35\" height=\"25\" fill=\"transparent\" strokeWidth=\"2\" stroke=\"rgb(173,181,189)\"/>\n            </svg>\n            </>);\n    };\n    const fullTemplate = (props) => {\n        return (<svg width=\"35\" height=\"25\" className=\"e-rating-svg-icon\">\n                <defs>\n                    <linearGradient id={`grad${props.index}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                        <stop className=\"start\" offset=\"0%\"/>\n                        <stop className=\"end\" offset=\"100%\"/>\n                    </linearGradient>\n                </defs>\n                <rect width=\"35\" height=\"25\" fill={`url(#grad${props.index})`} strokeWidth=\"2\" stroke=\"rgb(173,181,189)\"/>\n            </svg>);\n    };\n    const template = (props) => {\n        if (props.index === 0) {\n            return (<><span className='angry emoji'>&#128545;</span></>);\n        }\n        else if (props.index === 1) {\n            return (<><span className='disagree emoji'>&#128577;</span></>);\n        }\n        else if (props.index === 2) {\n            return (<><span className='neutral emoji'>&#128528;</span></>);\n        }\n        else if (props.index === 3) {\n            return (<><span className='agree emoji'>&#128578;</span></>);\n        }\n        else {\n            return (<><span className='happy emoji'>&#128512;</span></>);\n        }\n    };\n    return (<div className='control-pane'>\n            <div id=\"template-rating-control\">\n                <div className=\"rating-content\">\n                    <label>Font Icon</label><br />\n                    <RatingComponent id='rating1' emptyTemplate={emptyFont} fullTemplate={fullFont} value={3.0}></RatingComponent>\n                </div>\n                <div className=\"rating-content custom-svg\">\n                    <label>SVG Icon</label><br />\n                    <RatingComponent id='rating2' emptyTemplate={emptyTemplate} fullTemplate={fullTemplate} enableAnimation={false} value={3.0}></RatingComponent>\n                </div>\n                <div className=\"rating-content\">\n                    <label>Emoji Icon</label><br />\n                    <RatingComponent id='rating3' emptyTemplate={template} enableAnimation={false} enableSingleSelection={true} value={3.0}></RatingComponent>\n                </div>\n                <div className=\"rating-content\">\n                    <label>Customization</label><br />\n                    <RatingComponent id='rating4' cssClass='custom-icon' enableAnimation={false} value={3.0}></RatingComponent>\n                </div>\n            </div>\n        </div>);\n};\nexport default Template;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Template />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}