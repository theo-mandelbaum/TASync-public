{"index.css":"\n#rteMarkdown .e-richtexteditor textarea.e-content {\n    float: left;\n}\n\n#rteMarkdown .e-icon-btn.e-active .e-md-preview::before {\n    content: '\\e350';\n}\n#rteMarkdown .e-icon-btn .e-md-preview::before {\n    content: '\\e345';\n}\n.bootstrap4 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before {\n    content: '\\e790';\n}\n\n.bootstrap4 #rteMarkdown .e-icon-btn .e-md-preview::before {\n    content: '\\e787';\n}\n\n.tailwind #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.tailwind-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.tailwind3 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.tailwind3-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.fluent #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.fluent-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.fluent2 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.fluent2-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.fluent2-highcontrast #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.bootstrap5 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.bootstrap5\\.3 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.bootstrap5\\.3-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.bootstrap5-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.material3 #rteMarkdown .e-icon-btn.e-active .e-md-preview::before,\n.material3-dark #rteMarkdown .e-icon-btn.e-active .e-md-preview::before {\n    content: '\\e80e';\n}\n\n.tailwind #rteMarkdown .e-icon-btn .e-md-preview::before,\n.tailwind-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.tailwind3 #rteMarkdown .e-icon-btn .e-md-preview::before,\n.tailwind3-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.bootstrap5 #rteMarkdown .e-icon-btn .e-md-preview::before,\n.bootstrap5\\.3 #rteMarkdown .e-icon-btn .e-md-preview::before,\n.bootstrap5\\.3-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.bootstrap5-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.fluent #rteMarkdown .e-icon-btn .e-md-preview::before,\n.fluent-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.fluent2 #rteMarkdown .e-icon-btn .e-md-preview::before,\n.fluent2-dark #rteMarkdown .e-icon-btn .e-md-preview::before,\n.fluent2-highcontrast #rteMarkdown .e-icon-btn .e-md-preview::before,\n.material3 #rteMarkdown .e-icon-btn .e-md-preview::before,\n.material3-dark #rteMarkdown .e-icon-btn .e-md-preview::before {\n    content: '\\e7de';\n}\n\n#rteMarkdown .content-wrapper {\n    width: auto;\n    margin: 0;\n}\n\n.editor-mention-item-template {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n.editor-mention-item-template .em-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n.editor-mention-item-template .em-avatar {\n    width: 32px;\n    height: 32px;\n    text-align: center;\n    border-radius: 50%;\n    font-size: 12px;\n    font-weight: 500;\n    text-indent: 0px;\n    line-height: 13px;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.editor-mention-item-template .em-name {\n    color: rgb(16, 24, 40);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 14px;\n    margin-bottom: 5px;\n}\n.editor-mention-item-template .em-email {\n    color: gray;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 14px;\n}\n#markdownRTE_editable-content_popup li {\n    padding: 10px;\n    height: 60px;\n}\nbody[class*=\"-dark\"] .em-name {\n    color: #fff !important;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Rich Text Editor markdown overview sample\n */\nimport { createElement } from '@syncfusion/ej2-base';\nimport { Image, Inject, Link, MarkdownEditor, MarkdownFormatter, RichTextEditorComponent, Table, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\nimport * as Marked from 'marked';\nimport { MentionComponent } from '@syncfusion/ej2-react-dropdowns';\nimport * as React from 'react';\n\n\nfunction MentionIntegration() {\n    let rteObj;\n    // set the value to Rich Text Editor\n    const value = 'Hello [@Maria](mailto:maria@gmail.com)\\n\\nWelcome to the mention integration with markdown editor demo. Type @ character and tag user from the suggestion list.';\n    const placeholder = 'Enter your text here...';\n    // Rich Text Editor items list\n    const items = ['Bold', 'Italic', 'StrikeThrough', '|',\n        'Formats', 'Blockquote', 'OrderedList', 'UnorderedList', 'SuperScript', 'SubScript', '|',\n        'CreateLink', 'Image', 'CreateTable', '|',\n        {\n            tooltipText: 'Preview',\n            template: '<button id=\"preview-code\" class=\"e-tbar-btn e-control e-btn e-icon-btn\" aria-label=\"Preview Code\" >' +\n                '<span class=\"e-btn-icon e-md-preview e-icons\"></span></button>'\n        }, '|', 'Undo', 'Redo'];\n    let textArea;\n    let mdsource;\n    let mdPreview;\n    const emailData = [\n        { name: \"Selma Rose\", initial: 'SR', email: \"selma@gmail.com\", color: '#FAFDFF', bgColor: '#01579B' },\n        { name: \"Maria\", initial: 'MA', email: \"maria@gmail.com\", color: '#004378', bgColor: '#ADDBFF' },\n        { name: \"Russo Kay\", initial: 'RK', email: \"russo@gmail.com\", color: '#F9DEDC', bgColor: '#8C1D18' },\n        { name: \"Robert\", initial: 'RO', email: \"robert@gmail.com\", color: '#FFD6F7', bgColor: '#37003A' },\n        { name: \"Camden Kate\", initial: 'CK', email: \"camden@gmail.com\", color: '#FFFFFF', bgColor: '#464ECF' },\n        { name: \"Garth\", initial: 'GA', email: \"garth@gmail.com\", color: '#FFFFFF', bgColor: '#008861' },\n        { name: \"Andrew James\", initial: 'AJ', email: \"james@gmail.com\", color: '#FFFFFF', bgColor: '#53CA17' },\n        { name: \"Olivia\", initial: 'OL', email: \"olivia@gmail.com\", color: '#FFFFFF', bgColor: '#8C1D18' },\n        { name: \"Sophia\", initial: 'SO', email: \"sophia@gmail.com\", color: '#000000', bgColor: '#D0BCFF' },\n        { name: \"Margaret\", initial: 'MA', email: \"margaret@gmail.com\", color: '#000000', bgColor: '#F2B8B5' },\n        { name: \"Ursula Ann\", initial: 'UA', email: \"ursula@gmail.com\", color: '#000000', bgColor: '#47ACFB' },\n        { name: \"Laura Grace\", initial: 'LG', email: \"laura@gmail.com\", color: '#000000', bgColor: '#FFE088' },\n        { name: \"Albert\", initial: 'AL', email: \"albert@gmail.com\", color: '#FFFFFF', bgColor: '#00335B' },\n        { name: \"William\", initial: 'WA', email: \"william@gmail.com\", color: '#FFFFFF', bgColor: '#163E02' }\n    ];\n    //Rich Text Editor ToolbarSettings\n    const toolbarSettings = {\n        items: items\n    };\n    const formatter = new MarkdownFormatter({ listTags: { 'OL': '1., 2., 3.' } });\n    function markdownConversion() {\n        if (mdsource.classList.contains('e-active')) {\n            let id = rteObj.getID() + 'html-view';\n            let htmlPreview = rteObj.element.querySelector('#' + id);\n            htmlPreview.innerHTML = Marked.marked(rteObj.contentModule.getEditPanel().value);\n        }\n    }\n    function fullPreview() {\n        let id = rteObj.getID() + 'html-preview';\n        let htmlPreview = rteObj.element.querySelector('#' + id);\n        if (mdsource.classList.contains('e-active')) {\n            mdsource.classList.remove('e-active');\n            mdsource.parentElement.title = 'Preview';\n            textArea.style.display = 'block';\n            htmlPreview.style.display = 'none';\n        }\n        else {\n            mdsource.classList.add('e-active');\n            if (!htmlPreview) {\n                htmlPreview = createElement('div', { className: 'e-content e-pre-source' });\n                htmlPreview.id = id;\n                textArea.parentNode.appendChild(htmlPreview);\n            }\n            textArea.style.display = 'none';\n            htmlPreview.style.display = 'block';\n            htmlPreview.innerHTML = Marked.marked(rteObj.contentModule.getEditPanel().value);\n            mdsource.parentElement.title = 'Code View';\n        }\n    }\n    function rendereComplete() {\n        textArea = rteObj.contentModule.getEditPanel();\n        textArea.addEventListener('keyup', (e) => {\n            markdownConversion();\n        });\n        mdsource = document.getElementById('preview-code');\n        mdsource.addEventListener('click', (e) => {\n            fullPreview();\n            if (e.currentTarget.classList.contains('e-active')) {\n                rteObj.disableToolbarItem(['Bold', 'Italic', 'StrikeThrough', 'OrderedList',\n                    'UnorderedList', 'SuperScript', 'SubScript', 'CreateLink', 'Image', 'CreateTable', 'Formats', 'Blockquote', 'Undo', 'Redo']);\n            }\n            else {\n                rteObj.enableToolbarItem(['Bold', 'Italic', 'StrikeThrough', 'OrderedList',\n                    'UnorderedList', 'SuperScript', 'SubScript', 'CreateLink', 'Image', 'CreateTable', 'Formats', 'Blockquote', 'Undo', 'Redo']);\n            }\n        });\n    }\n    function itemTemplate(data) {\n        return (<div className=\"editor-mention-item-template\">\n                <div className=\"em-header\">\n                    <div className=\"em-avatar\" style={{ backgroundColor: data.bgColor, color: data.color }}>\n                        <div className=\"em-initial\">{data.initial}</div>\n                    </div>\n                </div>\n                <div className=\"em-content\">\n                    <div className=\"em-name\">{data.name}</div>\n                    <div className=\"em-email\">{data.email}</div>\n                </div>\n            </div>);\n    }\n    function displayTemplate(data) {\n        return (<React.Fragment>\n        [@{data.name}](mailto:${data.email})\n        </React.Fragment>);\n    }\n    return (<div id=\"markdownSample\" className='control-pane'>\n            <div className='control-section' id=\"rteMarkdown\">\n                <div className=\"content-wrapper\">\n                    <RichTextEditorComponent id=\"markdownRTE\" ref={(richtexteditor) => { rteObj = richtexteditor; }} editorMode='Markdown' height='250px' value={value} formatter={formatter} created={rendereComplete} toolbarSettings={toolbarSettings}>\n                        <Inject services={[MarkdownEditor, Toolbar, Image, Link, Table]}/>\n                    </RichTextEditorComponent>\n                    <MentionComponent id='editorMention' ref={(mention) => { mention = mention; }} dataSource={emailData} displayTemplate={displayTemplate} itemTemplate={itemTemplate} target=\"#markdownRTE_editable-content\" fields={{ text: 'name' }} popupWidth='250px' popupHeight='200px' sortOrder='Ascending' allowSpaces={true}></MentionComponent>\n                </div>\n            </div>\n\n        </div>);\n}\nexport default MentionIntegration;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<MentionIntegration />);","dependencies":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"marked\":\"4.3.0\"}"}