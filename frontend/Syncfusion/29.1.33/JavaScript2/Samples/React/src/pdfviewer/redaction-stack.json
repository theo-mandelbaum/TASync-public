{"index.css":"#pdfviewer {\r\n    height: 640px;\r\n}\r\n\r\n#linear-pdfviewer {\r\n    width: fit-content;\r\n}\r\n\r\n#uploader-pdfviewer {\r\n    display: none;\r\n}\r\n\r\n.content-wrapper-pdfviewer {\r\n    border: 1px dashed #c3c3cc;\r\n    position: relative;\r\n    text-align: center;\r\n    padding: 20px 0 10px;\r\n}\r\n\r\n.e-pv-e-sign.control-section {\r\n    margin-top: 0px !important;\r\n}\r\n\r\n#e-pv-e-sign-userMenu .e-input-value {\r\n    width: 84% !important;\r\n}\r\n\r\n.e-pv-e-sign-user-dropdown .e-input-group-icon.e-ddl-icon.e-search-icon {\r\n    padding: 0px ;\r\n}\r\n\r\n.e-pv-sign-hide-toolbar {\r\n    display: none;\r\n}\r\n\r\n.e-pv-sign-show-toolbar {\r\n    display: block;\r\n}\r\n\r\n.e-pv-fit-page-icon::before {\r\n    content: '\\e91b';\r\n    font-family: \"e-icons-pv\";\r\n}\r\n\r\n@font-face {\r\n    font-family: \"e-icons-pv\";\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,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ZWd1bGFyY3VzdG9tLXRvb2xiYXJbMTkwOF1jdXN0b20tdG9vbGJhclsxOTA4XVZlcnNpb24gMS4wY3VzdG9tLXRvb2xiYXJbMTkwOF1Gb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBSAGUAZwB1AGwAYQByAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBjAHUAcwB0AG8AbQAtAHQAbwBvAGwAYgBhAHIAWwAxADkAMAA4AF0AVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAdQBzAHQAbwBtAC0AdABvAG8AbABiAGEAcgBbADEAOQAwADgAXQBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4BDwAIVG9wLWljb24LZG93bi1hcnJvdzIKUFZfWm9vbW91dAlQVl9ab29taW4LUFZfRG93bmxvYWQLUFZfQm9va21hcmsJUFZfU2VhcmNoCFBWX1ByaW50C1BWX1ByZXZpb3VzB1BWX05leHQIUFZfQ2xvc2UMUFZfRml0VG9QYWdlB1BWX09wZW4AAA==) format('truetype');\r\n}\r\n\r\n.e-pv-e-sign-form-field-property {\r\n    width: 72px;\r\n    height: 72px;\r\n    margin: 9px;\r\n    border: 1px solid lightgrey !important;\r\n    border-radius: 8px;\r\n    display: grid;\r\n    place-content: center;\r\n    font-size: 12px;\r\n}\r\n\r\n#e-pv-e-sign-download {\r\n    width: 115px;\r\n    height: 32px;\r\n    flex-shrink: 0;\r\n    border-radius: 16px;\r\n    border: 1px solid var(--Color-variables-outline, #79747E);\r\n}\r\n\r\n#e-pv-e-sign-finishbtn {\r\n    width: 115px !important;\r\n    height: 28px;\r\n    padding: 0;\r\n    font-size: 12px;\r\n    flex-shrink: 0;\r\n    border-radius: 16px;\r\n}\r\n\r\n.e-pv-e-sign-user-dropdown .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::before,\r\n.e-pv-e-sign-user-dropdown .e-input-group:not(.e-float-icon-left):not(.e-float-input).e-input-focus::after {\r\n    width: 0px;\r\n}\r\n\r\n#e-pv-e-sign-user-field {\r\n    color: #222933;\r\n    font-family: Heebo, open sans, \"sans-serif\", -apple-system, BlinkMacSystemFont;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    position: relative;\r\n\r\n}\r\n\r\n#e-pv-e-sign-toolbar-user-viewer.e-toolbar .e-toolbar-items .e-toolbar-left .e-toolbar-item:first-child {\r\n    margin-left: 0px !important;\r\n}\r\n\r\n#e-pv-e-sign-toolbar-user-viewer {\r\n    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 1px 0px rgba(0, 0, 0, 0.30);\r\n    z-index: 1111;\r\n}\r\n\r\n.e-pv-e-sign-form-field-property-mob {\r\n    border: none !important;\r\n    box-shadow: none;\r\n}\r\n\r\n.e-pv-e-sign-toolbar-user-viewer,\r\n.e-pv-e-sign-toolbar-user-viewer-mob {\r\n    z-index: 1001;\r\n    width: 100% !important;\r\n    height: 48px !important;\r\n    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\r\n}\r\n\r\n#e-pv-e-sign-defaultSidebar {\r\n    height: 640px;\r\n    position: absolute;\r\n    box-shadow: 0px 2px 3px 1px rgba(0, 0, 0, 0.15), 0px 1px 2px 0px rgba(0, 0, 0, 0.30);\r\n}\r\n\r\n.e-pv-e-sign-user-dropdown> :first-child {\r\n    border: none !important;\r\n}\r\n\r\n#magnificationToolbar {\r\n    background: transparent;\r\n    height: auto;\r\n    min-height: 56px;\r\n    width: auto;\r\n    border: none;\r\n    position: absolute;\r\n    z-index: 900;\r\n    top: calc(100% - 140px);\r\n    left: calc(100% - 150px);\r\n    transform: rotate(90deg);\r\n}\r\n\r\ndiv#magnificationToolbar.e-toolbar .e-toolbar-items {\r\n    background: transparent;\r\n    padding: 2px 3px 2px 2px;\r\n}\r\n\r\n#magnificationToolbar.e-toolbar .e-tbar-btn {\r\n    border-radius: 50%;\r\n    min-height: 30px;\r\n    min-width: 30px;\r\n    border: 1px solid #c8c8c8;\r\n    transform: rotate(90deg);\r\n}\r\n\r\n#customToolbar {\r\n    top: 20px;\r\n    z-index: 900;\r\n}\r\n\r\n.e-bookmark-popup {\r\n    height: 300px;\r\n    max-width: 300px;\r\n}\r\n\r\n.e-text-search-popup {\r\n    height: 104px;\r\n    max-width: 348px;\r\n}\r\n\r\n.e-custom-search-input {\r\n    width: 234px;\r\n}\r\n\r\n.e-text-search-popup .e-footer-content,\r\n.e-bookmark-popup .e-footer-content {\r\n    padding: 0;\r\n    height: 0;\r\n}\r\n\r\n.search-button,\r\n.search-button:disabled,\r\n.search-button:focus,\r\n.search-button:hover {\r\n    background: transparent;\r\n    box-shadow: none;\r\n}\r\n\r\n#popup .e-dlg-content {\r\n    padding-left: 0;\r\n    padding-bottom: 0;\r\n}\r\n\r\n.e-pv-bookmarks {\r\n    min-width: 234px;\r\n}\r\n\r\n.e-pv-current-page-number {\r\n    width: 46px;\r\n    height: 28px;\r\n    text-align: center;\r\n}\r\n\r\n.material .e-pv-current-page-number {\r\n    border-width: 1px;\r\n}\r\n\r\n.e-btn-icon.e-pv-zoom-out-icon.e-icons {\r\n    transform: rotate(90deg);\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n}\r\n\r\n.e-pv-flex-container{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.render-mode-info {\r\n    background: none;\r\n    border: none;\r\n    padding-left: 0px;\r\n}\r\n\r\n.render-mode-info .render-mode-info-icon {\r\n    height: 16px;\r\n    width: 16px;\r\n}\r\n\r\n.switchLabel {\r\n    font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;\r\n    font-weight: 400;\r\n    line-height: 20px;\r\n    letter-spacing: 0.24px;\r\n    text-align: right;\r\n    font-size: 14px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.e-pv-switchLabel{\r\n    font-family: \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", sans-serif;        \r\n    font-weight: 400;\r\n    line-height: 20px;\r\n    letter-spacing: 0.24px;\r\n    text-align: right;\r\n    font-size: 14px;\r\n}\r\n\r\n.render-mode-info .render-mode-info-icon::before {\r\n    line-height: normal;\r\n}\r\n\r\n.buttonSwitch {\r\n    Width: 40px;\r\n    Height: 24px;\r\n}\r\n\r\n.e-pv-buttonSwitch {\r\n    Width: 40px;\r\n    Height: 24px;\r\n}\r\n\r\n.pdfviewer-property-section {\r\n    padding: 20px 15px;\r\n}\r\n\r\n.pdfviewer-contextmenu-checkbox-label {\r\n    padding: 10px;\r\n}\r\n\r\n.pdfviewer-control-section {\r\n    border-right: 1px solid #D7D7D7;\r\n}\r\n\r\n.e-pv-pdfviewer-control-section {\r\n    border-right: 1px solid #D7D7D7;\r\n}\r\n\r\n.pdfviewer-property-container {\r\n    padding: 20px 15px;\r\n}\r\n\r\n.pdfviewer-document-list {\r\n\r\n    #defaultDialog {\r\n        left: 23%;\r\n        top: 0% ! important;\r\n    }\r\n\r\n    #targetElement .dlgbtn {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    @media screen and (min-width: 150px) and (max-width: 480px) {\r\n        .control-section {\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        .control-wrapper {\r\n            margin-bottom: 0px;\r\n        }\r\n    }\r\n\r\n    #defaultDialog .form-title {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: rgba(0, 0, 0, 0.70);\r\n    }\r\n\r\n    #defaultDialog .e-error,\r\n    #defaultDialog .e-float-text {\r\n        font-weight: 500;\r\n    }\r\n\r\n    #defaultDialog .e-custom-label {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        margin-left: 20px;\r\n    }\r\n\r\n    #defaultDialog #formId {\r\n        padding-top: 10px;\r\n        border: 1px solid #ccc;\r\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.36);\r\n        border-radius: 5px;\r\n        background: #f9f9f9;\r\n        height: 250px;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    .material-dark #defaultDialog #formId,\r\n    .material3-dark #defaultDialog #formId,\r\n    .bootstrap5-dark #defaultDialog #formId {\r\n        background: #212529;\r\n    }\r\n\r\n    .bootstrap-dark #defaultDialog #formId {\r\n        background: #1a1a1a;\r\n    }\r\n\r\n    .fabric-dark #defaultDialog #formId {\r\n        background: #201f1f;\r\n    }\r\n\r\n    .tailwind-dark #defaultDialog #formId {\r\n        background: #1f2937;\r\n    }\r\n\r\n    .fluent-dark #defaultDialog #formId {\r\n        background: #111111;\r\n    }\r\n\r\n    .e-pv-fit-page-icon::before {\r\n        content: '\\e91b';\r\n        font-family: \"e-icons\";\r\n    }\r\n\r\n\r\n    .material-dark #defaultDialog .form-title,\r\n    .material3-dark #defaultDialog .form-title,\r\n    .bootstrap-dark #defaultDialog .form-title,\r\n    .fabric-dark #defaultDialog .form-title,\r\n    .tailwind-dark #defaultDialog .form-title,\r\n    .bootstrap5-dark #defaultDialog .form-title,\r\n    .fluent-dark #defaultDialog .form-title {\r\n        color: rgb(249 249 249);\r\n    }\r\n\r\n    .highcontrast #defaultDialog form,\r\n    .highcontrast #defaultDialog .header {\r\n        color: #fff;\r\n        background: #000000;\r\n    }\r\n\r\n    #defaultDialog .header {\r\n        color: rgba(0, 0, 0, 0.7);\r\n    }\r\n\r\n    #defaultDialog .form-horizontal .form-group {\r\n        margin-left: 20px;\r\n        margin-right: 20px;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    #defaultDialog .e-submit-btn {\r\n        height: 40px;\r\n        width: 150px;\r\n    }\r\n\r\n    #defaultDialog .e-reset-btn {\r\n        height: 40px;\r\n        width: 150px;\r\n    }\r\n\r\n    #defaultDialog .submitRow {\r\n        width: 320px;\r\n        margin: 0px auto;\r\n        height: 100px;\r\n        padding-top: 25px;\r\n    }\r\n\r\n    #defaultDialog #DialogChart {\r\n        text-align: center;\r\n    }\r\n\r\n    #defaultDialog {\r\n        max-height: 500px;\r\n    }\r\n\r\n    .file-name-container {\r\n        display: flex;\r\n        justify-content: left;\r\n    }\r\n\r\n    .file-name-content {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .icon-and-text {\r\n        display: flex;\r\n        align-items: left;\r\n    }\r\n\r\n    .file-name-text {\r\n        text-align: center;\r\n        margin-left: 8px;\r\n        margin-top: 5px;\r\n    }\r\n}\r\n\r\n/*redaction style*/\r\n#e-pv-redact-sb-toolbar-secondary .e-input-group {\r\n    border: none !important;\r\n}\r\n\r\n#e-pv-redact-sb-panel.control-section .e-appbar {\r\n    height: 36px;\r\n    font-size: 14px !important;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn {\r\n    flex-direction: column;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item .e-tbar-btn .e-icons.e-btn-icon {\r\n    font-size: 18px;\r\n    padding: 4px !important;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar {\r\n    height: 72px !important;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar .e-toolbar-items {\r\n    gap: 5px;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar .e-toolbar-item.e-separator {\r\n    height: 48px !important;\r\n}\r\n\r\n#e-pv-redact-sb-toolbar,\r\n#e-pv-redact-sb-toolbar.e-toolbar,\r\n#e-pv-redact-sb-toolbar-secondary {\r\n    border-left-width: 1px !important;\r\n    border-right-width: 1px !important;\r\n}\r\n\r\n.e-pv-redact-sb-toolbar,\r\n#e-pv-redact-sb-toolbar-secondary {\r\n    border-top-width: 1px !important;\r\n    border: 0 solid var(--color-sf-border-light);\r\n    --color-sf-border-light: #e0e0e0;\r\n}\r\n\r\n.e-pv-current-page-number {\r\n    font-size: 12px;\r\n}\r\n\r\n.e-pv-total-page-number {\r\n    font-weight: 400;\r\n}\r\n\r\n.e-pv-redact-sb-black-out-container .black-out {\r\n    background-color: black;\r\n    width: 18px !important;\r\n    height: 18px !important;\r\n    border: 1px solid white;\r\n    border-radius: 3px;\r\n    margin: 4px !important;\r\n}\r\n\r\n.e-pv-redact-sb-white-out-container .white-out {\r\n    background-color: white;\r\n    width: 18px !important;\r\n    height: 18px !important;\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    margin: 4px !important;\r\n}\r\n\r\n.e-bigger .e-pv-redact-sb-black-out-container .black-out,\r\n.e-bigger .e-pv-redact-sb-black-out-container .white-out {\r\n    position: relative;\r\n    top: -4px;\r\n}\r\n\r\n.e-bigger #e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item.e-pv-redact-sb-black-out-container .e-tbar-btn.e-btn,\r\n.e-bigger #e-pv-redact-sb-toolbar.e-toolbar .e-toolbar-item.e-pv-redact-sb-white-out-container .e-tbar-btn.e-btn {\r\n    padding-top: 5px !important;\r\n}\r\n\r\n.e-bigger .e-pv-redact-sb-black-out-container .e-tbar-btn .e-tbar-btn-text,\r\n.e-bigger .e-pv-white-out-container .e-tbar-btn .e-tbar-btn-text {\r\n    padding: 2px 4px 7px 4px !important;\r\n}\r\n\r\n/*upload image*/\r\n#e-pv-redact-sb-dialog.e-dialog #e-pv-redact-sb-defaultfileupload.e-upload-files {\r\n    border: none !important;\r\n}\r\n\r\n#e-pv-redact-sb-panel.control-section #file-uploader {\r\n    display: flex;\r\n    border: 1px dashed #c8c6c4;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 16px;\r\n    border-radius: 6px;\r\n}\r\n\r\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content {\r\n    border-bottom: 1px solid #C4C7C5 !important;\r\n    padding: 15px !important;\r\n}\r\n\r\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content {\r\n    border-top: 1px solid #C4C7C5 !important;\r\n    padding: 10px !important;\r\n}\r\n\r\n#e-pv-redact-sb-dialog.e-dialog .e-dlg-header-content+.e-dlg-content {\r\n    padding: 20px !important;\r\n}\r\n\r\n#e-pv-redact-sb-panel.control-section .e-file-select-wrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n#e-pv-redact-sb-dialog.e-dialog .e-footer-content .e-btn {\r\n    background: rgba(0, 0, 0, 0);\r\n    border-color: rgba(0, 0, 0, 0);\r\n    box-shadow: none;\r\n    color: #242424;\r\n}\r\n\r\n#e-pv-redact-sb-defaultfileupload .e-upload-files {\r\n    border: none !important;\r\n}\r\n\r\n.e-pv-redact-sb-image-source {\r\n    width: 70px;\r\n    height: 70px;\r\n}\r\n\r\n.e-pv-redact-sb-image-container {\r\n    box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 4px;\r\n    gap: 5px;\r\n    border-radius: 4px;\r\n}\r\n\r\n.e-pv-redact-sb-image-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 24px 15px;\r\n    gap: 35px;\r\n}\r\n\r\n.e-pv-redact-sb-image-container-selected {\r\n    border: 1px solid #757575 !important;\r\n}\r\n\r\n.e-pv-redact-sb-image-container:hover {\r\n    border: 1px solid #757575;\r\n}\r\n\r\n#e-pv-redact-sb-drop-area-wrap {\r\n    display: flex;\r\n    border: 1px dashed #c8c6c4;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 16px;\r\n    border-radius: 6px;\r\n}\r\n\r\n#e-pv-redact-sb-defaultfileupload .e-upload {\r\n    border: none;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.e-icons.e-redaction:before {\r\n    content: \"\\e740\";\r\n}\r\n\r\n#e-pv-redact-sb-panel.control-section .e-dlg-overlay {\r\n    background: none;\r\n    backdrop-filter: blur(2px) !important;\r\n}\r\n\r\n.e-pv-header-panel {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 2;\r\n    background-color: white;\r\n    border-bottom: 1px solid #D7D7D7;\r\n    padding-bottom: 5px;\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.e-pv-annot-inner-table td {\r\n    text-wrap: nowrap;\r\n    padding: 12px 12px 0 12px;\r\n    width: 50%;\r\n}\r\n\r\n.e-pv-main-panel {\r\n    border-left: 1px solid #D7D7D7;\r\n    height: 700px;\r\n    overflow-y: scroll;\r\n    padding-bottom: 0px;\r\n}\r\n\r\n.e-pv-input-item {\r\n    margin-top: 0px;\r\n}\r\n\r\n.e-pv-annot-inner-container {\r\n    margin-top: 15px;\r\n    border: 1px solid rgba(196, 199, 197, 1);\r\n    padding: 12px;\r\n}\r\n\r\n.e-pv-annot-inner-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    table-layout: fixed;\r\n}\r\n\r\n.e-pv-pdfViewer-coordinate-table {\r\n    border-spacing: 0px;\r\n}\r\n\r\n.e-pv-pdfViewer-coordinate-table td {\r\n    border: 1px solid rgba(196, 199, 197, 1);\r\n    font-size: 11px;\r\n    text-align: center;\r\n    width: auto;\r\n    padding: 4px 0px;\r\n}\r\n\r\n.e-pv-property-panel-footer {\r\n    padding: 10px 0px 16px 0px;\r\n    position: sticky;\r\n    bottom: 0;\r\n    background-color: white;\r\n    z-index: 1;\r\n    border-top: 1px solid #D7D7D7;\r\n    margin-top: 16px;\r\n}\r\n\r\n.e-pv-annot-button-section {\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: end;\r\n    gap: 12px;\r\n    flex-wrap: wrap-reverse;\r\n}\r\n\r\n.e-pv-pdfviewer-input-title .e-pv-check-box-row {\r\n    padding: 5px;\r\n    margin-top: 16px;\r\n}\r\n.fluent2 .e-pv-pdfviewer-input-title .e-pv-check-box-row,\r\n.fluent2-dark .e-pv-pdfviewer-input-title .e-pv-check-box-row,\r\n.fluent2-highcontrast .e-pv-pdfviewer-input-title .e-pv-check-box-row {\r\n    padding: 0;\r\n    margin-top: 16px;\r\n}\r\n.e-pv-pdfviewer-input-title {\r\n    margin-top: 12px;\r\n    font-size: 12px;\r\n}\r\n\r\n.e-pv-table-items {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    flex-wrap: wrap;\r\n    gap: 2px;\r\n}\r\n\r\n.e-pv-pdfviewer-table-input-title {\r\n    margin-top: 6px;\r\n    font-size: 11px;\r\n}\r\n\r\n.e-pv-pdfviewer-text-content {\r\n    font-size: 12px;\r\n}\r\n\r\n.e-pv-annot-bounds-list {\r\n    border: 1px solid rgba(196, 199, 197, 1);\r\n    border-spacing: 0px;\r\n}\r\n\r\n.e-pv-annot-bounds-list td {\r\n    font-size: 11px;\r\n    text-align: center;\r\n    width: auto;\r\n    padding: 4px 0px;\r\n    border-bottom: 1px solid rgba(196, 199, 197, 1);\r\n}\r\n\r\n.e-pv-reply-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    justify-content: space-between;\r\n    padding: 12px;\r\n}\r\n.e-pv-reply-main-container {\r\n    flex-grow: 1;\r\n}\r\n.e-pv-replies {\r\n    overflow-y: auto;\r\n    max-height: 180px;\r\n    padding: 0px !important;\r\n}\r\n\r\n.inner-container {\r\n    margin-top: 15px;\r\n    border: 1px solid rgba(196, 199, 197, 1);\r\n    padding: 12px;\r\n}\r\n\r\n.reply-text {\r\n    width: 100%;\r\n    font-size: 12px;\r\n    word-break: break-word;\r\n}\r\n\r\n.upload-image {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin: 12px;\r\n    border-radius: 5px;\r\n    border: 1px solid rgba(196, 199, 197, 1);\r\n    padding: 4px;\r\n}\r\n\r\ndiv .file-name {\r\n    font-size: 14px;\r\n    padding: 0px 5px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-weight: 500;\r\n    width: 90px;\r\n    white-space: nowrap;\r\n}\r\n.wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.fluent-dark .e-pv-property-panel-footer, .fluent-dark .e-pv-header-panel {\r\n    background-color: #1B1A19;\r\n}\r\n\r\n.bootstrap5_3-dark .e-pv-property-panel-footer, .bootstrap5_3-dark .e-pv-header-panel{\r\n    background-color: #212529;\r\n}\r\n\r\n.highcontrast .e-pv-property-panel-footer, .highcontrast .e-pv-header-panel {\r\n    background-color: #000000;\r\n}\r\n\r\n.fluent2-highcontrast .e-pv-property-panel-footer, .fluent2-highcontrast .e-pv-header-panel,\r\n.material3-dark .e-pv-property-panel-footer, .material3-dark .e-pv-header-panel, \r\n.fluent2-dark .e-pv-property-panel-footer, .fluent2-dark .e-pv-header-panel {\r\n    background-color: #1C1B1F;\r\n}\r\n\r\n.tailwind3-dark .e-pv-property-panel-footer, .tailwind3-dark .e-pv-header-panel {\r\n    background: #111827;\r\n}\r\n\r\n.tailwind3-dark .e-pv-header-panel #e-pv-refresh-button-icon .e-btn-icon,\r\n.tailwind3 .e-pv-header-panel #e-pv-refresh-button-icon .e-btn-icon{\r\n    font-size: 18px;\r\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PdfViewerComponent, Toolbar, Magnification, Navigation, LinkAnnotation, BookmarkView, Annotation, FormFields, FormDesigner, ThumbnailView, Print, TextSelection, TextSearch, PageOrganizer, Inject } from '@syncfusion/ej2-react-pdfviewer';\nimport { ToolbarComponent, ItemsDirective, ItemDirective, AppBarComponent } from '@syncfusion/ej2-react-navigations';\nimport { SampleBase } from './sample-base';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nimport { ComboBoxComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\nlet viewer;\nexport class Redaction extends SampleBase {\n    viewer;\n    toolbar;\n    primaryToolbar;\n    dropdown;\n    currentPageNumber = '1';\n    fileName = 'programmatical-annotations.pdf';\n    redactionCount = 0;\n    annotation;\n    dialogInstance;\n    uploadObj;\n    asyncSettings = {\n        saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n        removeUrl: 'http://localhost:62728/api/FileUploader/Remove'\n    };\n    dropAreaRef = document.getElementsByClassName('drop-area-wrap')[0];\n    allowedExtensions = '.png, .jpg, .jpeg';\n    url = \"http://localhost:62728/api/pdfviewer/Redaction\";\n    constructor(props) {\n        super(props);\n        this.uploadObj = React.createRef();\n    }\n    componentDidMount() {\n        viewer = document.getElementById('container').ej2_instances[0];\n    }\n    //To update page number when page has been changed\n    onPageChange = () => {\n        this.currentPageNumber = viewer.currentPageNumber.toString();\n        document.getElementById('e-pv-redact-sb-currentPage').textContent = this.viewer.currentPageNumber.toString() + ' ';\n        this.updatePageNavigation.bind(this);\n    };\n    //Updating the total number of pages while loading\n    documentLoaded = () => {\n        this.viewer = document.getElementById('container').ej2_instances[0];\n        var pageCount = document.getElementById('e-pv-redact-sb-totalPage');\n        pageCount.textContent = '/ ' + viewer.pageCount;\n        (document.getElementById('e-pv-redact-sb-currentPage')).textContent = this.viewer.currentPageNumber.toString();\n        this.updatePageNavigation();\n        this.updateRedaction();\n    };\n    //To update page number when the previous and next button is clicked\n    updatePageNavigation = () => {\n        if (this.viewer.currentPageNumber === 1) {\n            this.toolbar.enableItems(document.getElementById('previousPage').parentElement, false);\n            this.toolbar.enableItems(document.getElementById('nextPage').parentElement, true);\n        }\n        else if (viewer.currentPageNumber === viewer.pageCount) {\n            this.toolbar.enableItems(document.getElementById('previousPage').parentElement, true);\n            this.toolbar.enableItems(document.getElementById('nextPage').parentElement, false);\n        }\n        else {\n            this.toolbar.enableItems(document.getElementById('previousPage').parentElement, true);\n            this.toolbar.enableItems(document.getElementById('nextPage').parentElement, true);\n        }\n    };\n    //To update the redaction count\n    updateRedaction = () => {\n        if (this.redactionCount <= 0) {\n            this.toolbar.enableItems(document.getElementById('redacticon').parentElement, false);\n        }\n        else {\n            this.toolbar.enableItems(document.getElementById('redacticon').parentElement, true);\n        }\n    };\n    //Updating the number of redaction while the annotation has been added\n    annotationAdd = (e) => {\n        var pdfAnnotationList = new Array();\n        pdfAnnotationList = this.viewer.annotationCollection;\n        var selectedAnnotationIndex = pdfAnnotationList.findIndex(item => item.annotationId == e.annotationId);\n        if (selectedAnnotationIndex != -1) {\n            this.annotation = pdfAnnotationList[selectedAnnotationIndex];\n        }\n        if (this.annotation.author == \"Redaction\" || this.annotation.customStampName == \"Image\" || this.annotation.author == \"Pattern\" || this.annotation.author == \"Text\") {\n            this.redactionCount = this.redactionCount + 1;\n            this.updateRedaction();\n        }\n    };\n    //Updating the number of redaction while the annotation has been removed\n    annotationRemove = () => {\n        if (this.annotation.author == \"Redaction\" || this.annotation.customStampName == \"Image\" || this.annotation.author == \"Pattern\" || this.annotation.author == \"Text\") {\n            this.redactionCount = this.redactionCount - 1;\n            this.updateRedaction();\n        }\n    };\n    downloadDocument = (blobUrl) => {\n        const Url = URL || webkitURL;\n        blobUrl = Url.createObjectURL(blobUrl);\n        viewer.fileName = this.fileName;\n        const anchorElement = document.createElement('a');\n        if (anchorElement.click) {\n            anchorElement.href = blobUrl;\n            anchorElement.target = '_parent';\n            if ('download' in anchorElement) {\n                const downloadFileName = viewer.fileName || 'downloadedFile.pdf';\n                if (downloadFileName) {\n                    if (downloadFileName.endsWith('.pdf')) {\n                        anchorElement.download = downloadFileName;\n                    }\n                    else {\n                        const splitPdf = downloadFileName.split('.pdf')[0] + '.pdf';\n                        anchorElement.download = splitPdf;\n                    }\n                }\n                else {\n                    anchorElement.download = 'Default.pdf';\n                }\n            }\n            (document.body || document.documentElement).appendChild(anchorElement);\n            anchorElement.click();\n        }\n        else {\n            if (window.top === window &&\n                blobUrl.split('#')[0] === window.location.href.split('#')[0]) {\n                const padCharacter = blobUrl.indexOf('?') === -1 ? '?' : '&';\n                blobUrl = blobUrl.replace(/#|$/, padCharacter + '$&');\n            }\n            window.open(blobUrl, '_parent');\n        }\n    };\n    //To download the redacted pdf\n    download = () => {\n        let _this = this;\n        viewer.saveAsBlob().then(function (value) {\n            let reader = new FileReader();\n            reader.readAsDataURL(value);\n            reader.onload = function (e) {\n                const base64String = e.target?.result;\n                const xhr = new XMLHttpRequest();\n                xhr.open('POST', _this.url, true);\n                xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n                const requestData = JSON.stringify({ base64String: base64String });\n                xhr.onload = function () {\n                    if (xhr.status === 200) {\n                        const blobUrl = _this.createBlobUrl(xhr.responseText.split('base64,')[1], 'application/pdf');\n                        _this.downloadDocument(blobUrl);\n                    }\n                    else {\n                        console.error('Download failed:', xhr.statusText);\n                    }\n                };\n                xhr.onerror = function () {\n                    console.error('An error occurred during the download:', xhr.statusText);\n                };\n                xhr.send(requestData);\n            };\n        }).catch(function (error) {\n            console.error('Error saving Blob:', error);\n        });\n    };\n    createBlobUrl = (base64String, contentType) => {\n        const sliceSize = 512;\n        const byteCharacters = atob(base64String);\n        const byteArrays = [];\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\n            const byteNumbers = new Array(slice.length);\n            for (let i = 0; i < slice.length; i++) {\n                byteNumbers[parseInt(i.toString(), 10)] = slice.charCodeAt(i);\n            }\n            const byteArray = new Uint8Array(byteNumbers);\n            byteArrays.push(byteArray);\n        }\n        const blob = new Blob(byteArrays, { type: contentType });\n        return blob;\n    };\n    render() {\n        let data = ['10%', '25%', '50%', '75%', '100%', '200%', '400%'];\n        function template() {\n            return (<div>\n                <span id=\"e-pv-redact-sb-currentPage\" title=\"Current Page\">1 </span>\n                <span id=\"e-pv-redact-sb-totalPage\" title=\"Total Page\">/ 1</span>\n            </div>);\n        }\n        const clickHandler = function (args) {\n            switch (args.item.id) {\n                case 'pdfviewer_open':\n                    {\n                        let fileUpload = document.getElementById('fileUpload');\n                        fileUpload.click();\n                        break;\n                    }\n                case 'text_annot':\n                    {\n                        this.viewer.rectangleSettings.fillColor = '#a3a2a0';\n                        this.viewer.rectangleSettings.strokeColor = '#a3a2a0';\n                        this.viewer.rectangleSettings.author = 'Text';\n                        this.viewer.annotation.setAnnotationMode('Rectangle');\n                        break;\n                    }\n                case 'image_annot':\n                    {\n                        this.dialogInstance.show();\n                        break;\n                    }\n                case 'pattern_annot':\n                    {\n                        this.viewer.rectangleSettings.fillColor = '#dedfe0';\n                        this.viewer.rectangleSettings.strokeColor = '#dedfe0';\n                        this.viewer.rectangleSettings.author = 'Pattern';\n                        this.viewer.annotation.setAnnotationMode('Rectangle');\n                        break;\n                    }\n                case 'black_annot':\n                    {\n                        this.viewer.rectangleSettings.fillColor = '#000000';\n                        this.viewer.rectangleSettings.strokeColor = '#000000';\n                        this.viewer.rectangleSettings.author = 'Redaction';\n                        this.viewer.annotation.setAnnotationMode('Rectangle');\n                        break;\n                    }\n                case 'white_annot':\n                    {\n                        this.viewer.rectangleSettings.fillColor = '#ffffff';\n                        this.viewer.rectangleSettings.strokeColor = '#ffffff';\n                        this.viewer.rectangleSettings.author = 'Redaction';\n                        this.viewer.annotation.setAnnotationMode('Rectangle');\n                        break;\n                    }\n                case 'previousPage':\n                    {\n                        viewer.navigation.goToPreviousPage();\n                        break;\n                    }\n                case 'nextPage':\n                    {\n                        viewer.navigation.goToNextPage();\n                        break;\n                    }\n                case 'redacticon':\n                    {\n                        if (this.redactionCount > 0) {\n                            let _this = this;\n                            viewer.saveAsBlob().then(function (value) {\n                                var data = value;\n                                var reader = new FileReader();\n                                reader.readAsDataURL(data);\n                                reader.onload = function (e) {\n                                    var base64String = e.target?.result;\n                                    var xhr = new XMLHttpRequest();\n                                    xhr.open('POST', _this.url, true);\n                                    xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n                                    var requestData = JSON.stringify({ base64String: base64String });\n                                    xhr.onload = function () {\n                                        if (xhr.status === 200) {\n                                            viewer.load(xhr.responseText, null);\n                                        }\n                                        else {\n                                            console.error('Redaction failed:', xhr.statusText);\n                                        }\n                                    };\n                                    xhr.onerror = function () {\n                                        console.error('An error occurred during the redaction:', xhr.statusText);\n                                    };\n                                    xhr.send(requestData);\n                                };\n                            });\n                            this.redactionCount = 0;\n                            this.updateRedaction();\n                        }\n                        break;\n                    }\n            }\n        };\n        //To get the header in upload image dialog box\n        const header = () => {\n            return (<div>\n                    <div id=\"dlg-template\" title=\"Upload image\" className=\"e-icon-settings\">Upload Image</div>\n                </div>);\n        };\n        //When the cancel button is clicked\n        const CloseDialog = function () {\n            this.dialogInstance.hide();\n        };\n        //To get the footer content in upload image dialog box\n        const footerTemplate = () => {\n            return (<div>\n                    <button id=\"cancelButton\" className=\"e-control e-btn e-primary\" data-ripple=\"true\" onClick={CloseDialog.bind(this)}>Cancel</button>\n                </div>);\n        };\n        //To get the content of dialog box\n        const contentTemplate = () => {\n            return (<div id='dialog'>\n                    <div id='e-pv-redact-sb-defaultfileupload'>\n                        <div className=\"drop-area-wrap\" id='e-pv-redact-sb-drop-area-wrap'>\n                            <div>\n                                <UploaderComponent id='fileupload' type='file' ref={(scope) => { this.uploadObj.current = scope; }} asyncSettings={this.asyncSettings} change={onFileChange.bind(this)} dropArea={this.dropAreaRef} allowedExtensions={this.allowedExtensions}></UploaderComponent>\n                            </div>\n                            <div>(Only JPG and PNG images will be accepted)</div>\n                        </div>\n                        <div className=\"e-pv-redact-sb-image-list\">\n                            <div id='imageContainer' className=\"e-pv-redact-sb-image-container\">\n                                <img id='imageView' className=\"e-pv-redact-sb-image-source\" style={{ 'display': 'none' }}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>);\n        };\n        //When the zoom dropdown is changed\n        const zoomValueChange = function (args) {\n            let zoom = (args).value;\n            let previousZoom = (args).previousItemData.value;\n            if (zoom !== null || previousZoom !== null) {\n                let zoomchange = parseInt(zoom.replace(\"%\", \"\"), 10);\n                viewer.magnificationModule.zoomTo(zoomchange);\n            }\n        };\n        //To display the zoom percentage dropdown\n        const dropDown = function () {\n            return (<div><ComboBoxComponent width={88} popupWidth={80} value='100%' dataSource={data} showClearButton={false} change={zoomValueChange.bind(this)}></ComboBoxComponent></div>);\n        };\n        let imageSrc;\n        let customStampSource;\n        const onFileChange = function (args) {\n            let file = args.file[0].rawFile;\n            let imageElement = document.getElementById('imageView');\n            let imageElementContainer = document.getElementById('imageContainer');\n            let reader = new FileReader();\n            let _this = this;\n            reader.onload = function (e) {\n                let base64String = e.target ? e.target.result : null;\n                imageSrc = base64String;\n                customStampSource = imageSrc;\n                (imageElement).src = imageSrc;\n                imageElementContainer.className =\n                    'image-container image-container-selected';\n                (imageElement).style.display = 'block';\n                // Bind click event to the image element\n                imageElement.addEventListener('click', handleImageClick.bind(_this));\n            };\n            reader.readAsDataURL(file);\n        };\n        const handleImageClick = function () {\n            customStampSource = imageSrc;\n            this.dialogInstance.hide();\n            addImage();\n        };\n        //To add the image in pdf\n        const addImage = function () {\n            viewer.stampSettings.author = \"Image\";\n            viewer.customStampSettings = {\n                width: 200,\n                author: 'Image',\n                height: 125,\n                isAddToMenu: false,\n                enableCustomStamp: false\n            };\n            viewer.customStamp = [\n                {\n                    customStampName: 'Image',\n                    customStampImageSource: customStampSource\n                },\n            ];\n        };\n        return (<div>\n            <div className=\"control-section\" id='e-pv-redact-sb-panel'>\n                <div className=\"flex-container\" id=\"e-pv-redact-sb-flexContainer\">\n\n                </div>\n                {/* Appbar */}\n                <div className='control-container'>\n                    <AppBarComponent colorMode=\"Primary\">\n                        <span className=\"regular\">Redaction</span>\n                        <div className=\"e-appbar-spacer\"></div>\n                        <ButtonComponent cssClass='e-inherit ' iconCss='e-icons e-download e-btn-icon e-icon-left' id='download_pdf' onClick={this.download}>Download</ButtonComponent>\n                    </AppBarComponent>\n\n                </div>\n                <div className='primaryToolbar' id='toolbar_default'>\n                    <ToolbarComponent ref={(scope) => { this.primaryToolbar = scope; }} clicked={clickHandler.bind(this)} id='e-pv-redact-sb-toolbar'>\n                        <ItemsDirective>\n                            <ItemDirective prefixIcon='e-icon e-folder' tooltipText='Open' cssClass='e-pv-redact-sb-open-container' id='pdfviewer_open' text='Open'></ItemDirective>\n                            <ItemDirective type='Separator'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icon e-text-annotation' tooltipText='Text' cssClass='e-pv-redact-sb-font-container' text='Text' id='text_annot'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icons e-image' tooltipText='Image' cssClass='e-pv-redact-sb-image-container' text='Image' id='image_annot'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icons e-opacity' tooltipText='Pattern' cssClass='e-pv-redact-sb-pattern-container' text='Pattern' id='pattern_annot'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icons black-out' tooltipText='Blackout' cssClass='e-pv-redact-sb-black-out-container' text='Blackout' id='black_annot'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icons white-out' tooltipText='Whiteout' cssClass='e-pv-redact-sb-white-out-container' text='Whiteout' id='white_annot'></ItemDirective>\n                            <ItemDirective type='Separator'></ItemDirective>\n                            <ItemDirective prefixIcon='e-icons e-redact' tooltipText='Redaction' cssClass='e-pv-redact-sb-redaction-container' text='Redact' id='redacticon' disabled={true}></ItemDirective>\n                        </ItemsDirective>\n                    </ToolbarComponent>\n\n                </div>\n\n                <div className='e-pv-redact-sb-secondary-toolbar' id='toolbar_secondary'>\n                    <ToolbarComponent ref={(scope) => { this.toolbar = scope; }} clicked={clickHandler.bind(this)} id='e-pv-redact-sb-toolbar-secondary'>\n                        <ItemsDirective>\n                            <ItemDirective prefixIcon='e-icons e-chevron-left' cssClass='e-pv-redact-sb-previous-container' tooltipText=\"Previous Page\" id='previousPage' disabled={true}></ItemDirective>\n                            <ItemDirective template={template} tooltipText=\"Page Number\"></ItemDirective>\n                            <ItemDirective prefixIcon='e-icon e-chevron-right' cssClass='e-pv-redact-sb-next-container' tooltipText=\"Next Page\" id='nextPage' disabled={true}></ItemDirective>\n                            <ItemDirective cssClass='percentage' type=\"Input\" tooltipText=\"Zoom\" template={dropDown} align=\"Left\"/>\n                        </ItemsDirective>\n                    </ToolbarComponent>\n                </div>\n\n                <div id=\"targetDialog\" className=\"dialog-element\">\n                    <DialogComponent header={header} footerTemplate={footerTemplate} content={contentTemplate} showCloseIcon={true} target=\"#targetDialog\" width={'437px'} height={'255px'} visible={false} isModal={true} ref={(scope) => { this.dialogInstance = scope; }} id='e-pv-redact-sb-dialog'></DialogComponent>\n                </div>\n                {/* Render the PDF Viewer */}\n                <PdfViewerComponent ref={(scope) => { this.viewer = scope; }} id=\"container\" documentPath=\"https://cdn.syncfusion.com/content/pdf/programmatical-annotations.pdf\" resourceUrl=\"https://cdn.syncfusion.com/ej2/27.1.55/dist/ej2-pdfviewer-lib\" style={{ 'height': '640px' }} enableToolbar={false} enableNavigationToolbar={false} enableAnnotationToolbar={false} enableCommentPanel={false} documentLoad={this.documentLoaded} pageChange={this.onPageChange} annotationAdd={this.annotationAdd} annotationRemove={this.annotationRemove}>\n                    <Inject services={[Toolbar, Magnification, Navigation, LinkAnnotation, BookmarkView, ThumbnailView, Print, TextSelection, TextSearch, Annotation, FormFields, FormDesigner, PageOrganizer]}/>\n                </PdfViewerComponent>\n                <input type=\"file\" id=\"fileUpload\" accept=\".pdf\" onChange={this.readFile.bind(this)} style={{ 'display': 'block', 'visibility': 'hidden', 'width': '0', 'height': '0' }}/>\n            </div>\n        </div>);\n    }\n    //To read the file when loaded\n    readFile(evt) {\n        let proxy = this;\n        let uploadedFiles = evt.target.files;\n        let uploadedFile = uploadedFiles[0];\n        this.fileName = uploadedFile.name;\n        let reader = new FileReader();\n        reader.readAsDataURL(uploadedFile);\n        reader.onload = function (e) {\n            let uploadedFileUrl = e.currentTarget.result;\n            viewer.documentPath = uploadedFileUrl;\n            viewer.fileName = proxy.fileName;\n            viewer.downloadFileName = proxy.fileName;\n        };\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Redaction />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-pdfviewer\":\"*\",\"@syncfusion/ej2-react-pdfviewer\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\"}"}