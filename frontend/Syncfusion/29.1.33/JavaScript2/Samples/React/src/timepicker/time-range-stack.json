{"index.css":".timepicker-control-section.range {\n    max-width: 300px;\n    margin: 0 auto;\n    padding: 2% 0;\n}\n\n.e-bigger .control-pane.range .control-section {\n    margin-top: 60px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { SampleBase } from './sample-base';\n\nexport class Range extends SampleBase {\n    endObject;\n    startObject;\n    checkObj;\n    isStartTimeChange = true;\n    endTimeInput;\n    value;\n    rendereComplete() {\n        this.endTimeInput = document.getElementById('maxtimepick');\n    }\n    changeTime() {\n        /*To determine whether we have selected business hours or not*/\n        this.isStartTimeChange = false;\n        if (this.checkObj.checked) {\n            /*Business hours*/\n            this.startObject.value = new Date('9/6/2017 9:00');\n            this.endObject.enabled = true;\n            this.endObject.value = new Date('9/6/2017 18:00');\n            this.startObject.readonly = true;\n            this.endObject.readonly = true;\n        }\n        else {\n            this.endObject.value = null;\n            this.startObject.value = null;\n            this.endTimeInput.value = '';\n            this.startObject.readonly = false;\n            this.endObject.readonly = false;\n            this.endObject.enabled = false;\n        }\n    }\n    onEnableEndTime(args) {\n        /*Enables end time if start time is selected*/\n        if (this.isStartTimeChange) {\n            this.endObject.enabled = true;\n            this.endObject.value = null;\n            this.endTimeInput.value = '';\n            this.value = new Date(args.value);\n            this.value.setMinutes(this.value.getMinutes() + this.endObject.step);\n            this.endObject.min = this.value;\n        }\n        else {\n            this.isStartTimeChange = true;\n        }\n    }\n    render() {\n        return (<div className='control-pane range'>\n                <div className='control-section'>\n                    <div className='timepicker-control-section range'>\n                        <TimePickerComponent id=\"mintimepick\" ref={(mintimepick) => { this.startObject = mintimepick; }} change={this.onEnableEndTime.bind(this)}></TimePickerComponent>\n                    </div>\n                    <div className='timepicker-control-section range'>\n                        <TimePickerComponent id=\"maxtimepick\" enabled={false} ref={(maxtimepick) => { this.endObject = maxtimepick; }}></TimePickerComponent>\n                    </div>\n                    <div className='timepicker-control-section range'>\n                        <CheckBoxComponent id=\"checkbox\" ref={(checkbox) => { this.checkObj = checkbox; }} label=\"Business Hours\" change={this.changeTime.bind(this)}></CheckBoxComponent>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Range />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-react-calendars\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}