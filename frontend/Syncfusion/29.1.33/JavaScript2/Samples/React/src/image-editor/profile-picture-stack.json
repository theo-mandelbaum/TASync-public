{"index.css":".e-img-editor-profile,\r\n.e-img-editor-sample .control-wrapper {\r\n    position: relative;\r\n}\r\n\r\n.e-img-editor-profile .e-profile {\r\n    width: 200px;\r\n    height: 200px;\r\n    position: absolute;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, 30%);\r\n    transform: translate(-50%, 30%);\r\n    border-radius: 50%;\r\n}\r\n\r\n.e-custom-wrapper {\r\n    position: relative;\r\n}\r\n\r\n.e-custom-edit {\r\n    position: absolute;\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    background-color: blue;\r\n    top: calc(100% - 54px);\r\n    left: calc(100% - 47px);\r\n}\r\n\r\n#custom-edit .e-custom-icon::before {\r\n    content: '\\e911';\r\n    font-size: 28px;\r\n    color: white;\r\n    left: 5px;\r\n    top: 4px;\r\n    line-height: initial;\r\n    position: absolute;\r\n}\r\n\r\n.tailwind .e-custom-icon::before,\r\n.tailwind-dark .e-custom-icon::before {\r\n    top: 6px;\r\n}\r\n\r\n#custom-edit:hover {\r\n    cursor: pointer;\r\n}\r\n\r\ncanvas#img-canvas {\r\n    border-radius: 50%;\r\n    border: 4px solid darkgrey;\r\n    max-width: 200px; \r\n    max-height: 200px;\r\n}\r\n\r\n.e-img-custom-open {\r\n    float: left;\r\n    margin-left: 0 !important;\r\n}\r\n\r\n.e-img-custom-reset {\r\n    float: left;\r\n}\r\n\r\n.e-profile .e-custom-img,\r\n.e-profile .e-custom-file {\r\n    display: none;\r\n}\r\n\r\n.e-bigger #profile-dialog .e-dlg-header {\r\n    font-size: 18px !important;\r\n}\r\n\r\n#profile-dialog .e-dlg-content > div {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n.control-section.e-img-editor-profile {\r\n    min-height: 350px !important;\r\n}\r\n\r\n.highcontrast .e-custom-img-btn,\r\n.fabric .e-custom-img-btn,\r\n.fabric-dark .e-custom-img-btn {\r\n\tpadding: 2px 10px !important;\r\n}\r\n\r\n.e-bigger .e-custom-img-btn {\r\n\tfont-size: 14px !important;\r\n\tpadding: 6px 10px !important;\r\n}\r\n\r\n.e-bigger.highcontrast .e-custom-img-btn,\r\n.e-bigger.fabric .e-custom-img-btn,\r\n.e-bigger.fabric-dark .e-custom-img-btn,\r\n.e-bigger.material .e-custom-img-btn,\r\n.e-bigger.material-dark .e-custom-img-btn {\r\n\tpadding: 3px 10px !important;\r\n}\r\n.e-bigger.bootstrap .e-custom-img-btn,\r\n.e-bigger.bootstrap-dark .e-custom-img-btn {\r\n\tpadding: 1px 10px !important;\r\n}\r\n\r\n.e-img-editor-profile .e-hide {\r\n        display: none;\r\n}\r\n\r\n.material3 .e-custom-img-btn,\r\n.material3-dark .e-custom-img-btn,\r\n.e-bigger.material3 .e-custom-img-btn,\r\n.e-bigger.material3-dark .e-custom-img-btn\r\n{ \r\n    margin-left: 3px !important;\r\n}\r\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { createElement } from '@syncfusion/ej2-base';\nimport { ImageEditorComponent } from '@syncfusion/ej2-react-image-editor';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { SampleBase } from './sample-base';\n\nexport class ProfilePicture extends SampleBase {\n    animationSettings = { effect: 'None' };\n    dialogInstance;\n    imageEditorInstance;\n    buttonEle;\n    buttonRef;\n    image;\n    imgSrc = '';\n    fileChanged(args) {\n        const URL = window.URL;\n        const url = URL.createObjectURL(args.target.files[0]);\n        this.imageEditorInstance.open(url.toString());\n        document.getElementById('img-upload').value = null;\n        this.imgSrc = url.toString();\n    }\n    handleImageLoaded() {\n        if (this.imgSrc === '') {\n            let canvas = document.querySelector('#img-canvas');\n            let image = document.querySelector('#custom-img');\n            let ctx = canvas.getContext('2d');\n            canvas.width = image.width < image.height ? image.width : image.height;\n            canvas.height = canvas.width;\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n            document.querySelector('.e-profile').classList.remove('e-hide');\n        }\n    }\n    buttons = [\n        {\n            click: this.dlgOpenButtonClick.bind(this),\n            buttonModel: {\n                content: 'Open',\n                cssClass: 'e-custom-img-btn e-img-custom-open'\n            }\n        },\n        {\n            click: this.dlgResetButtonClick.bind(this),\n            buttonModel: {\n                content: 'Reset',\n                cssClass: 'e-custom-img-btn e-img-custom-reset'\n            }\n        },\n        {\n            click: this.dlgRotateButtonClick.bind(this),\n            buttonModel: {\n                content: 'Rotate',\n                cssClass: 'e-custom-img-btn e-img-custom-rotate'\n            }\n        },\n        {\n            click: this.dlgDoneButtonClick.bind(this),\n            buttonModel: {\n                content: 'Apply',\n                cssClass: 'e-custom-img-btn e-img-custom-apply',\n                isPrimary: true\n            }\n        }\n    ];\n    dlgOpenButtonClick() {\n        document.getElementById('img-upload').click();\n    }\n    dlgResetButtonClick() {\n        this.imageEditorInstance.reset();\n    }\n    dlgRotateButtonClick() {\n        this.imageEditorInstance.rotate(-90);\n    }\n    dlgDoneButtonClick() {\n        this.imageEditorInstance.crop();\n        let croppedData = this.imageEditorInstance.getImageData();\n        let canvas = document.querySelector('#img-canvas');\n        let ctx = canvas.getContext('2d');\n        let parentDiv = document.querySelector('.e-profile');\n        let tempCanvas = parentDiv.appendChild(createElement('canvas'));\n        let tempContext = tempCanvas.getContext('2d');\n        tempCanvas.width = croppedData.width;\n        tempCanvas.height = croppedData.height;\n        tempContext.putImageData(croppedData, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(tempCanvas, 0, 0, canvas.width, canvas.height);\n        tempCanvas.remove();\n        parentDiv.style.borderRadius = '100%';\n        canvas.style.backgroundColor = '#fff';\n        this.dialogInstance.hide();\n        if (this.imgSrc !== '') {\n            const img = document.querySelector('#custom-img');\n            img.src = this.imgSrc;\n        }\n    }\n    contentTemplate() {\n        return (<ImageEditorComponent ref={img => this.imageEditorInstance = img} toolbar={[]} fileOpened={this.fileOpened.bind(this)} created={this.created.bind(this)}></ImageEditorComponent>);\n    }\n    fileOpened() {\n        this.imageEditorInstance.select('circle');\n    }\n    created() {\n        if (this.imageEditorInstance.theme && window.location.href.split('#')[1]) {\n            this.imageEditorInstance.theme = window.location.href.split('#')[1].split('/')[1];\n        }\n    }\n    editClicked() {\n        this.dialogInstance.show();\n        let image = document.querySelector('#custom-img');\n        this.imageEditorInstance.open(image.src);\n    }\n    ;\n    render() {\n        return (<div className='control-pane'>\n                <div className='col-lg-12 control-section e-img-editor-profile'>\n                    <div className='e-profile e-hide'>\n                        <div className='e-custom-wrapper'>  \n                            <canvas id='img-canvas'></canvas>\n                            <img alt='img' className='e-custom-img' id='custom-img' onLoad={this.handleImageLoaded.bind(this)} src='https://ej2.syncfusion.com/react/demos/src/image-editor/images/profile.png'/>\n                            <input type='file' id='img-upload' className='e-custom-file' onChange={this.fileChanged.bind(this)} accept=\"image/*\"/>\n                            <span id='custom-edit' className='e-custom-edit' onClick={this.editClicked.bind(this)}>\n                                <span className='e-custom-icon sb-icons'></span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div id='profile-dialog'>\n                <DialogComponent id='profile-dialog' showCloseIcon={true} animationSettings={this.animationSettings} closeOnEscape={true} visible={false} width={'340px'} height={'420px'} ref={dialog => this.dialogInstance = dialog} target='.e-img-editor-profile' header='Edit Profile Image' buttons={this.buttons} content={this.contentTemplate.bind(this)} position={{ X: 'center', Y: 100 }}>\n                </DialogComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ProfilePicture />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-react-image-editor\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\"}"}