{"index.css":".e-image-editor {\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.e-img-editor-sample {\r\n\theight: 80vh;\r\n\twidth: 100%;\r\n}\r\n\r\n@media only screen and (max-width: 700px) {\r\n\t.e-img-editor-sample {\r\n\t\theight: 70vh;\r\n\t\twidth: 100%;\r\n\t}\r\n}\r\n\r\n.control-wrapper {\r\n\theight: 100%;\r\n}\r\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { ImageEditorComponent } from '@syncfusion/ej2-react-image-editor';\nimport { Browser, isNullOrUndefined, getComponent } from '@syncfusion/ej2-base';\n\n\nconst Default = () => {\n    let imgObj = useRef(null);\n    const imageEditorCreated = () => {\n        if (Browser.isDevice) {\n            imgObj.current.open(\"https://ej2.syncfusion.com/react/demos/src/image-editor/images/flower.png\");\n        }\n        else {\n            imgObj.current.open(\"https://ej2.syncfusion.com/react/demos/src/image-editor/images/default.png\");\n        }\n        if (imgObj.current.theme && window.location.href.split(\"#\")[1]) {\n            imgObj.current.theme = window.location.href.split(\"#\")[1].split(\"/\")[1];\n        }\n    };\n    // Handler used to reposition the tooltip on page scroll\n    const onScroll = () => {\n        if (document.getElementById(\"image-editor_sliderWrapper\")) {\n            let slider = getComponent(document.getElementById(\"image-editor_sliderWrapper\"), \"slider\");\n            slider.refreshTooltip(slider.tooltipTarget);\n        }\n    };\n    if (!isNullOrUndefined(document.getElementById(\"right-pane\"))) {\n        document\n            .getElementById(\"right-pane\")\n            .addEventListener(\"scroll\", onScroll.bind(this));\n    }\n    return (<div className=\"control-pane\">\n            <div className=\"control-section\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 control-section\">\n                        <div className=\"e-img-editor-sample\">\n                            <ImageEditorComponent id=\"image-editor\" ref={imgObj} created={imageEditorCreated}></ImageEditorComponent>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>);\n};\nexport default Default;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-image-editor\":\"*\",\"@syncfusion/ej2-react-image-editor\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}