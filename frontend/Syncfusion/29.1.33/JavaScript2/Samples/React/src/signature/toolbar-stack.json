{"index.css":"@font-face {\n    font-family: 'font-icons';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n\n.e-sign-icons {\n    font-family: 'font-icons' !important;\n    font-size: 55px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n#signature-toolbar-control {\n    border: 1px solid lightgray;\n}\n\n.highcontrast #signature-toolbar-control {\n    border: 1px solid white;\n}\n\n#signature-toolbar-control #toolbar {\n    border: none;\n    border-bottom: 1px solid lightgray;\n    box-sizing: border-box;\n}\n\n/* custom code start */\n\n#signature-toolbar-control div#toolbar {\n    height: 44px !important;\n}\n\n.e-bigger #signature-toolbar-control #toolbar {\n    height: 54px !important;\n}\n\n.e-bigger .material #signature-toolbar-control div#toolbar,\n.e-bigger .material-dark #signature-toolbar-control div#toolbar {\n    height: 57px !important;\n}\n\n.e-bigger .bootstrap4 #signature-toolbar-control div#toolbar,\n.e-bigger .bootstrap4-dark #signature-toolbar-control div#toolbar {\n    height: 65px !important;\n}\n\n.bootstrap4 #signature-toolbar-control div#toolbar,\n.bootstrap4-dark #signature-toolbar-control div#toolbar,\n.bootstrap-dark #signature-toolbar-control div#toolbar,\n.bootstrap #signature-toolbar-control div#toolbar {\n    height: 49px !important;\n}\n\n.bootstrap5 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #6c757d\n}\n\n.bootstrap4 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #495057;\n}\n\n.highcontrast #signature-toolbar-control #toolbar .e-split-btn,\n.highcontrast #signature-toolbar-control #toolbar .e-dropdown-btn {\n    color: #fff;\n}\n\n.fabric #signature-toolbar-control #toolbar .e-split-btn,\n.fabric #signature-toolbar-control #toolbar .e-dropdown-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5 #signature-toolbar-control #toolbar .e-dropdown-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap4 #signature-toolbar-control #toolbar .e-dropdown-btn {\n    background-color: transparent !important;\n    border-color: lightgray;\n}\n\n.fabric-dark #signature-toolbar-control #toolbar .e-dropdown-btn,\n.fabric-dark #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5-dark #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap5-dark #signature-toolbar-control #toolbar .e-dropdown-btn,\n.bootstrap4-dark #signature-toolbar-control #toolbar .e-split-btn,\n.bootstrap4-dark #signature-toolbar-control #toolbar .e-dropdown-btn {\n    background-color: transparent !important;\n    border-color: gray;\n}\n\n#signature-toolbar-control .e-btn:disabled {\n    opacity: 0.5 !important;\n    pointer-events: none;\n}\n\n#signature-toolbar-control #signature-control {\n    height: 300px;\n    width: 100%;\n    margin: 0;\n}\n\n#signature-toolbar-control #signature {\n    border: none !important;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color {\n    background: none;\n    border-bottom-style: solid;\n    border-bottom-width: 3px;\n    width: 14px;\n    margin: 0px 2px;\n    border-bottom-color: #ffffff;\n}\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color {\n    background: none;\n    border-bottom-style: solid;\n    border-bottom-width: 3px;\n    width: 14px;\n    margin: 0px 2px;\n    border-bottom-color: #000000;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview,\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview {\n    display: none;\n}\n\n.e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn .e-selected-color::before {\n    content: '\\e707';\n}\n\n.e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn .e-selected-color::before {\n    content: '\\e704';\n}\n\n.bootstrap4 .e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: black;\n}\n\n.bootstrap5 .e-colorpicker-wrapper.e-bg-color #bg-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: grey;\n}\n\n.bootstrap4 .e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: black;\n}\n\n.bootstrap5 .e-colorpicker-wrapper.e-stroke-color #stroke-color+.e-split-btn-wrapper .e-split-btn:hover .e-selected-color::before {\n    color: grey;\n}\n\n#signature-toolbar-control .e-clear::before {\n    content: '\\e706';\n}\n\n#signature-toolbar-control .e-save::before {\n    content: '\\e701';\n}\n\n/* Circle palette customization */\n.e-container .e-palette .e-circle-palette {\n    border: 0;\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    margin: 4px;\n}\n.e-bigger .e-container .e-palette .e-circle-palette {\n    height: 32px;\n    width: 32px;\n}\n.e-container .e-palette .e-circle-palette:hover {\n    box-shadow: none;\n    transform: scale(1.2);\n    transition: transform .2s ease-out;\n}\n.e-circle-palette .e-circle-selection {\n    height: 32px;\n    width: 32px;\n    border-radius: 20px;\n    display: inline-block;\n    transform: scale(0);\n    transition: transform 1.2s ease-in;\n}\n.e-circle-palette.e-selected .e-circle-selection {\n    transform: scale(0.8);\n    background-color: #fff;\n    transition: transform .2s ease-out;\n}\n#circle-palette+.e-container,\n#scroll-palette+.e-container {\n    background-color: transparent;\n    border-color: transparent;\n    box-shadow: none;\n}\n\n.e-container .e-palette .e-circle-palette.e-selected {\n    outline: none;\n}\n\n.e-bg-color .e-circle-palette.e-nocolor-item.e-selected .e-circle-selection {\n    background: transparent;\n}\n\n.e-bg-color .e-circle-palette.e-nocolor-item.e-selected {\n    border: 3px solid lightgray;\n}\n\n/* custom code end */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { ColorPickerComponent } from '@syncfusion/ej2-react-inputs';\nimport { SignatureComponent } from '@syncfusion/ej2-react-inputs';\nimport { getComponent, createElement, addClass } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\n\nimport { ItemDirective, ItemsDirective, ToolbarComponent } from '@syncfusion/ej2-react-navigations';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { SplitButtonComponent } from '@syncfusion/ej2-react-splitbuttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nexport class Toolbar extends SampleBase {\n    signature;\n    disabledTemplate;\n    constructor(props) {\n        super(props);\n        this.disabledTemplate = new CheckBox({ label: 'Disabled', checked: false, change: this.change });\n    }\n    change(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        signature.disabled = args.checked;\n    }\n    onCreated() {\n        let strokeColor = getComponent(document.getElementById('stroke-color'), 'colorpicker');\n        let bgColor = getComponent(document.getElementById('bg-color'), 'colorpicker');\n        addClass([strokeColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');\n        addClass([bgColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');\n        document.getElementById('save-option').addEventListener('click', this.saveBtnClick);\n        this.clearButton();\n        let toolbarlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n        for (var i = 0; i < toolbarlItems.length; i++) {\n            if (toolbarlItems[i].children[0].classList.contains('e-undo')) {\n                let undoButton = getComponent(toolbarlItems[i], 'btn');\n                undoButton.disabled = true;\n            }\n            if (toolbarlItems[i].children[0].classList.contains('e-redo')) {\n                let redoButton = getComponent(toolbarlItems[i], 'btn');\n                redoButton.disabled = true;\n            }\n        }\n    }\n    onClicked(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let saveBtn = getComponent(document.getElementById(\"save-option\"), 'split-btn');\n        if (signature.disabled && args.item.tooltipText != 'Disabled') {\n            return;\n        }\n        switch (args.item.tooltipText) {\n            case 'Undo (Ctrl + Z)':\n                if (signature.canUndo()) {\n                    signature.undo();\n                    this.updateUndoRedo();\n                    this.updateSaveBtn();\n                }\n                break;\n            case 'Redo (Ctrl + Y)':\n                if (signature.canRedo()) {\n                    signature.redo();\n                    this.updateUndoRedo();\n                    this.updateSaveBtn();\n                }\n                break;\n            case 'Clear':\n                signature.clear();\n                if (signature.isEmpty()) {\n                    this.clearButton();\n                    saveBtn.disabled = true;\n                }\n                break;\n        }\n    }\n    onChange() {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let saveBtn = getComponent(document.getElementById(\"save-option\"), 'split-btn');\n        if (!signature.isEmpty()) {\n            this.clearButton();\n            saveBtn.disabled = false;\n        }\n        this.updateUndoRedo();\n    }\n    saveBtnClick() {\n        let signature = getComponent(document.getElementById(\"signature\"), 'signature');\n        signature.save();\n    }\n    clearButton() {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n        for (var i = 0; i < tlItems.length; i++) {\n            if (tlItems[i].children[0].classList.contains('e-clear')) {\n                let clrBtn = getComponent(tlItems[i], 'btn');\n                if (signature.isEmpty()) {\n                    clrBtn.disabled = true;\n                }\n                else {\n                    clrBtn.disabled = false;\n                }\n            }\n        }\n    }\n    updateSaveBtn() {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let saveBtn = getComponent(document.getElementById(\"save-option\"), 'split-btn');\n        if (signature.isEmpty()) {\n            saveBtn.disabled = true;\n        }\n        else {\n            saveBtn.disabled = false;\n        }\n    }\n    updateUndoRedo() {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let undoButton;\n        let redoButton;\n        let tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');\n        for (var i = 0; i < tlItems.length; i++) {\n            if (tlItems[i].children[0].classList.contains('e-undo')) {\n                undoButton = getComponent(tlItems[i], 'btn');\n            }\n            if (tlItems[i].children[0].classList.contains('e-redo')) {\n                redoButton = getComponent(tlItems[i], 'btn');\n            }\n        }\n        if (signature.canUndo()) {\n            undoButton.disabled = false;\n        }\n        else {\n            undoButton.disabled = true;\n        }\n        if (signature.canRedo()) {\n            redoButton.disabled = false;\n        }\n        else {\n            redoButton.disabled = true;\n        }\n    }\n    saveTemplate(props) {\n        return (<SaveTemplate {...props}/>);\n    }\n    strokeColorTemplate(props) {\n        return (<StrokeColorTemplate {...props}/>);\n    }\n    bgColorTemplate(props) {\n        return (<BgColorTemplate {...props}/>);\n    }\n    strokeWidthTemplate(props) {\n        return (<StrokeWidthTemplate {...props}/>);\n    }\n    render() {\n        return (<div className='control-pane'>\n         <div className=\"col-lg-12 control-section\">\n            <div id=\"signature-toolbar-control\">\n              <ToolbarComponent id='toolbar' created={this.onCreated.bind(this)} clicked={this.onClicked.bind(this)}>\n                <ItemsDirective>\n                  <ItemDirective text='Undo' prefixIcon='e-icons e-undo' tooltipText='Undo (Ctrl + Z)'/>\n                  <ItemDirective text='Redo' prefixIcon='e-icons e-redo' tooltipText='Redo (Ctrl + Y)'/>\n                  <ItemDirective type='Separator'/>\n                  <ItemDirective tooltipText='Save (Ctrl + S)' type='Button' template={this.saveTemplate}/>\n                  <ItemDirective type='Separator'/>\n                  <ItemDirective tooltipText='Stroke Color' template={this.strokeColorTemplate}/>\n                  <ItemDirective type='Separator'/>\n                  <ItemDirective tooltipText='Background Color' template={this.bgColorTemplate}/>\n                  <ItemDirective type='Separator'/>\n                  <ItemDirective tooltipText='Stroke Width' template={this.strokeWidthTemplate}/>\n                  <ItemDirective type='Separator'/>\n                  <ItemDirective text='Clear' prefixIcon='e-sign-icons e-clear' tooltipText='Clear'/>\n                  <ItemDirective tooltipText='Disabled' type='Input' template={this.disabledTemplate} align='Right'/>\n                </ItemsDirective>\n              </ToolbarComponent>\n              <div id=\"signature-control\">\n                <SignatureComponent maxStrokeWidth={2} id=\"signature\" change={this.onChange.bind(this)}></SignatureComponent>\n              </div>\n          </div>\n\t\t    </div>\n      </div>);\n    }\n}\nexport class SaveTemplate extends React.Component {\n    items;\n    constructor(props) {\n        super(props);\n        this.items = [\n            {\n                text: 'Png'\n            },\n            {\n                text: 'Jpeg'\n            },\n            {\n                text: 'Svg'\n            }\n        ];\n    }\n    onSelect(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        signature.save(args.item.text, 'Signature');\n    }\n    render() {\n        return (<div>\n        <SplitButtonComponent content=\"Save\" id=\"save-option\" items={this.items} iconCss='e-sign-icons e-save' select={this.onSelect.bind(this)} disabled={true}/>\n      </div>);\n    }\n}\nexport class StrokeColorTemplate extends React.Component {\n    presets;\n    constructor(props) {\n        super(props);\n        this.presets = {\n            'custom': ['#000000', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n                '#009688', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107']\n        };\n    }\n    tileRender(args) {\n        args.element.classList.add('e-circle-palette');\n        args.element.appendChild(createElement('span', { className: 'e-circle-selection' }));\n    }\n    strokeColorChanged(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let strokeColor = getComponent(document.getElementById('stroke-color'), 'colorpicker');\n        if (signature.disabled) {\n            return;\n        }\n        let selElem = strokeColor.element.nextElementSibling.querySelector('.e-selected-color');\n        selElem.style.borderBottomColor = args.currentValue.rgba;\n        signature.strokeColor = args.currentValue.rgba;\n    }\n    render() {\n        return (<div>\n        <ColorPickerComponent id=\"stroke-color\" mode='Palette' cssClass='e-stroke-color' modeSwitcher={false} showButtons={false} columns={4} presetColors={this.presets} beforeTileRender={this.tileRender.bind(this)} change={this.strokeColorChanged.bind(this)}></ColorPickerComponent>\n      </div>);\n    }\n}\nexport class BgColorTemplate extends React.Component {\n    presets;\n    constructor(props) {\n        super(props);\n        this.presets = {\n            'custom': ['#ffffff', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',\n                '#009688', '#8bc34a', '#cddc39', '#ffeb3b']\n        };\n    }\n    beforeTileRender(args) {\n        args.element.classList.add('e-circle-palette');\n        args.element.appendChild(createElement('span', { className: 'e-circle-selection' }));\n    }\n    bgColorChanged(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        let bgColor = getComponent(document.getElementById('bg-color'), 'colorpicker');\n        if (signature.disabled) {\n            return;\n        }\n        let selElem = bgColor.element.nextElementSibling.querySelector('.e-selected-color');\n        signature.backgroundColor = args.currentValue.rgba;\n        selElem.style.borderBottomColor = args.currentValue.rgba;\n    }\n    render() {\n        return (<div>\n        <ColorPickerComponent id=\"bg-color\" noColor={true} mode='Palette' cssClass='e-bg-color' modeSwitcher={false} showButtons={false} columns={4} presetColors={this.presets} beforeTileRender={this.beforeTileRender.bind(this)} change={this.bgColorChanged.bind(this)}></ColorPickerComponent>\n      </div>);\n    }\n}\nexport class StrokeWidthTemplate extends React.Component {\n    data = [1, 2, 3, 4, 5];\n    value = 2;\n    constructor(props) {\n        super(props);\n    }\n    strokeWidthChanged(args) {\n        let signature = getComponent(document.getElementById('signature'), 'signature');\n        signature.maxStrokeWidth = args.value;\n    }\n    render() {\n        const args = this.state;\n        return (<div>\n        <DropDownListComponent id=\"ddlelement\" dataSource={this.data} value={this.value} width=\"60\" change={this.strokeWidthChanged.bind(this)}/>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Toolbar />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-splitbuttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}