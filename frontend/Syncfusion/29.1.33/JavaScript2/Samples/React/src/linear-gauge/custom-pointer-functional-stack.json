{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { LinearGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, AnnotationDirective, Annotations, AnnotationsDirective } from '@syncfusion/ej2-react-lineargauge';\n\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nconst CustomPointer = () => {\n    const [gaugeWidth, setGaugeWidth] = useState(\"150px\");\n    const [gaugeHeight, setGaugeHeight] = useState(\"350px\");\n    const [gaugeOriention, setOrientation] = useState('Vertical');\n    const [verticalColor, setVerticalColor] = useState(\"white\");\n    const [verticalBgColor, setVerticalBgColor] = useState(\"#0074E3\");\n    const [horizontalColor, setHorizontalColor] = useState(\"black\");\n    const [horizontalBgColor, setHorizontalBgColor] = useState(\"white\");\n    const [classStyle, setClassStyle] = useState(\"col-xs-5 col-sm-5 col-lg-4 col-md-4\");\n    const [display, setDisplay] = useState(\"flex\");\n    let textWidget = useRef(null);\n    let multipleWidget = useRef(null);\n    const load = (args) => {\n    };\n    const horizontalGauge = (e) => {\n        setGaugeWidth('450px');\n        setGaugeHeight('150px');\n        setOrientation(\"Horizontal\");\n        textWidget.current.axes[0].pointers[0].offset = 2;\n        multipleWidget.current.axes[0].pointers[0].offset = 2;\n        if (e.currentTarget != null) {\n            setHorizontalColor(\"white\");\n            setHorizontalBgColor(\"#0074E3\");\n            setVerticalColor(\"black\");\n            setVerticalBgColor(\"white\");\n            setClassStyle(\"col-xs-12 col-sm-12 col-lg-12 col-md-12\");\n            setDisplay(\"\");\n        }\n    };\n    const verticalGauge = (e) => {\n        setGaugeWidth('150px');\n        setGaugeHeight('350px');\n        setOrientation(\"Vertical\");\n        textWidget.current.axes[0].pointers[0].offset = -2;\n        multipleWidget.current.axes[0].pointers[0].offset = -2;\n        if (e.currentTarget != null) {\n            setVerticalColor(\"white\");\n            setVerticalBgColor(\"#0074E3\");\n            setHorizontalColor(\"black\");\n            setHorizontalBgColor(\"white\");\n            setClassStyle(\"col-xs-5 col-sm-5 col-lg-4 col-md-4\");\n            setDisplay(\"flex\");\n        }\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <div style={{ margin: 'auto', padding: '10px' }}>\n                        <table role='none'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <div id='horizontal' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: horizontalColor, fontSize: '15px', border: '1px solid #0074E3', backgroundColor: horizontalBgColor, textAlign: 'center' }} onClick={horizontalGauge.bind(this)}>Horizontal</div>\n                                    </td>\n                                    <td>\n                                        <div id='vertical' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: verticalColor, fontSize: '15px', border: '1px solid #0074E3', backgroundColor: verticalBgColor, textAlign: 'center' }} onClick={verticalGauge.bind(this)}>Vertical</div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <pre style={{ border: 'hidden', backgroundColor: 'inherit' }}></pre>\n                <div id=\"containerBox\" style={{ float: 'left', display: display }}></div>\n                <div id=\"containerText\" className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} animationDuration={2000} id='textWidget' title='Text widget' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent' ref={textWidget}>\n                        <Inject services={[Annotations]}/>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective width={30} color='#173BBB' markerType='Circle' position='Cross' placement='Center' offset={-2} value={55}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                        <AnnotationsDirective>\n                            <AnnotationDirective axisIndex={0} axisValue={55} x={0} y={0} zIndex='1' content='<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px\"> 55 </div>'/>\n                        </AnnotationsDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id=\"containerIcon\" className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} animationDuration={2000} title='Icon widget' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='iconWidget' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective width={45} height={30} value={90} placement='Near' markerType='Image' imageUrl='https://ej2.syncfusion.com/react/demos/src/linear-gauge/images/thumb-icon.png'/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id=\"containerMultiple\" className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} animationDuration={2000} title='Multiple widget pointers' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='multipleWidget' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent' ref={multipleWidget}>\n                        <Inject services={[Annotations]}/>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit', fontWeight: '499' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective width={30} color='#173BBB' position='Cross' placement='Center' markerType='Circle' value={60} offset={-2}/>\n                                    <PointerDirective width={45} height={30} color='#173BBB' placement='Near' markerType='Image' imageUrl='https://ej2.syncfusion.com/react/demos/src/linear-gauge/images/thumb-icon.png' value={30}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                        <AnnotationsDirective>\n                            <AnnotationDirective axisIndex={0} axisValue={60} x={0} zIndex='1' y={0} content='<div style=\"margin-top: -2px;font-size: 12px;color: white;margin-left: -2px;margin-top:-1px\"> 60 </div>'/>\n                        </AnnotationsDirective>\n                    </LinearGaugeComponent>\n                </div>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n                <p>This sample demonstrates the inclusion of text and image pointers in the linear gauge. Additionally, multiple pointer support is enabled.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render and configure text and image pointers in the linear gauge. The properties available in  <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerModel/\">PointerDirective</a> and  <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/annotationModel/\">AnnotationDirective</a> help in the customization of the text and image pointers in the linear gauge.\n                </p>\n                <p>\n                    More information on the pointers can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/linear-gauge/pointers/\">documentation section</a>.\n                </p>\n            </section>\n    </main>);\n};\nexport default CustomPointer;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CustomPointer />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-react-lineargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}