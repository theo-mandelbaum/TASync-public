{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { LinearGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, AnnotationDirective, Annotations, AnnotationsDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-lineargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n     .control-fluid {\n         padding: 0px !important;\n     }`;\nexport class BatteryIndicator extends SampleBase {\n    borderColor = '#E5E7EB';\n    load(args) {\n        this.borderColor = args.gauge.theme.indexOf('Dark') > -1 ? 'white' : '#bfbfbf';\n        if (args.gauge.theme == 'Bootstrap5Dark' || args.gauge.theme == 'Tailwind3Dark') {\n            this.borderColor = \"#4b5563\";\n        }\n        if (args.gauge.theme == 'Fluent2HighContrast' || args.gauge.theme == 'FabricDark' || args.gauge.theme == 'BootstrapDark' || args.gauge.theme == 'MaterialDark' || args.gauge.theme == 'HighContrast' || args.gauge.theme == 'Material' || args.gauge.theme == 'Fabric' || args.gauge.theme == 'Bootstrap') {\n            this.borderColor = \"#bfbfbf\";\n        }\n        if (args.gauge.theme == 'Fluent' || args.gauge.theme == 'Fluent2') {\n            this.borderColor = \"#EDEBE9\";\n        }\n        if (args.gauge.theme == 'FluentDark' || args.gauge.theme == 'Fluent2Dark' || args.gauge.theme == 'Fluent2HighContrast') {\n            this.borderColor = \"#292827\";\n        }\n        if (args.gauge.theme == 'Bootstrap5' || args.gauge.theme == 'Tailwind3') {\n            this.borderColor = \"#E5E7EB\";\n        }\n        args.gauge.annotations[0].content = `<div style=\"width: 16px;height: 37px;border: 5px solid ${this.borderColor};margin-left:26px;margin-top:57px;border-radius: 6px;\" />`;\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <LinearGaugeComponent load={this.load.bind(this)} background='transparent' id='gauge' orientation='Horizontal' width='200px' container={{ width: 58, type: 'RoundedRectangle', border: { width: 5 } }}>\n                            <Inject services={[Annotations]}/>\n                            <AxesDirective>\n                                <AxisDirective minimum={0} maximum={60} line={{ width: 0 }} minorTicks={{ interval: 5, height: 0 }} majorTicks={{ interval: 15, height: 0 }} labelStyle={{ font: { size: '0px' } }}>\n                                    <PointersDirective>\n                                        <PointerDirective width={0}>\n                                        </PointerDirective>\n                                    </PointersDirective>\n                                    <RangesDirective>\n                                        <RangeDirective start={3} end={14} startWidth={45} endWidth={45} color='#66BB6A' offset={52}>\n                                        </RangeDirective>\n                                        <RangeDirective start={16} end={29} startWidth={45} endWidth={45} color='#66BB6A' offset={52}>\n                                        </RangeDirective>\n                                        <RangeDirective start={31} end={44} startWidth={45} endWidth={45} color='#66BB6A' offset={52}>\n                                        </RangeDirective>\n                                    </RangesDirective>\n                                </AxisDirective>\n                            </AxesDirective>\n                            <AnnotationsDirective>\n                                <AnnotationDirective axisIndex={0} axisValue={60} x={0} zIndex='1' y={0}>\n                                </AnnotationDirective>\n                                <AnnotationDirective content='<div style=\"width: 137px;font-size: 20px;margin-top:-47px;margin-left:147px;color:##000000;\">Charged: 75%</div>' axisIndex={0} axisValue={0} x={0} zIndex='1' y={0}>\n                                </AnnotationDirective>\n                            </AnnotationsDirective>\n                        </LinearGaugeComponent>\n                    </div>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n                    <p>\n                        This sample shows the battery indicator charged up to 75% by utilizing the linear gauge's functionalities.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to render and configure a linear gauge to look like a battery indicator. This can be accomplished by combining axis, pointer, multiple ranges, and multiple annotation.\n                    </p>\n                    <p>\n                        More information on the linear gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/linear-gauge/getting-started/\">documentation section</a>.\n                    </p>\n                </section>\n        </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<BatteryIndicator />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-react-lineargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}