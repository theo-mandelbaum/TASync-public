{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { LinearGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, AnnotationDirective, Annotations, AnnotationsDirective } from '@syncfusion/ej2-react-lineargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n     .control-fluid {\n         padding: 0px !important;\n     }`;\nexport class CustomPointer extends SampleBase {\n    textWidget;\n    iconWidget;\n    multipleWidget;\n    load(args) {\n    }\n    horizontalGauge(e) {\n        this.textWidget.width = this.iconWidget.width = this.multipleWidget.width = '450px';\n        this.textWidget.height = this.iconWidget.height = this.multipleWidget.height = '150px';\n        this.textWidget.orientation = this.iconWidget.orientation = this.multipleWidget.orientation = \"Horizontal\";\n        this.textWidget.axes[0].pointers[0].offset = 2;\n        this.multipleWidget.axes[0].pointers[0].offset = 2;\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('vertical').style.color = \"black\";\n            document.getElementById('vertical').style.backgroundColor = \"white\";\n            document.getElementById('containerText').className = document.getElementById('containerIcon').className =\n                document.getElementById('containerMultiple').className = \"col-xs-12 col-sm-12 col-lg-12 col-md-12\";\n        }\n    }\n    verticalGauge(e) {\n        this.textWidget.width = this.iconWidget.width = this.multipleWidget.width = '170px';\n        this.textWidget.height = this.iconWidget.height = this.multipleWidget.height = '350px';\n        this.textWidget.orientation = this.iconWidget.orientation = this.multipleWidget.orientation = \"Vertical\";\n        this.textWidget.axes[0].pointers[0].offset = -2;\n        this.multipleWidget.axes[0].pointers[0].offset = -2;\n        if (e.currentTarget != null) {\n            e.currentTarget['style']['color'] = \"white\";\n            e.currentTarget['style']['backgroundColor'] = \"#0074E3\";\n            document.getElementById('horizontal')['style']['color'] = \"black\";\n            document.getElementById('horizontal')['style']['backgroundColor'] = \"white\";\n            document.getElementById('containerText').className = document.getElementById('containerIcon').className =\n                document.getElementById('containerMultiple').className =\n                    \"col-xs-5 col-sm-5 col-lg-4 col-md-4\";\n            document.getElementById('containerBox').style.display = \"flex\";\n        }\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className=\"control-section\">\n                    <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <div style={{ margin: 'auto', padding: '10px' }}>\n                            <table role='none'>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <div id='horizontal' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: 'black', fontSize: '15px', border: '1px solid #0074E3', backgroundColor: 'white', textAlign: 'center' }} onClick={this.horizontalGauge.bind(this)}>Horizontal</div>\n                                        </td>\n                                        <td>\n                                            <div id='vertical' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: 'white', fontSize: '15px', border: '1px solid #0074E3', backgroundColor: '#0074E3', textAlign: 'center' }} onClick={this.verticalGauge.bind(this)}>Vertical</div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <pre style={{ border: 'hidden', backgroundColor: 'inherit' }}></pre>\n                    <div id=\"containerBox\" style={{ float: 'left' }}></div>\n                    <div id=\"containerText\" className=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <LinearGaugeComponent load={this.load.bind(this)} animationDuration={2000} id='textWidget' title='Text widget' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} orientation='Vertical' width='150px' height='350px' background='transparent' ref={textWidget => this.textWidget = textWidget}>\n                            <Inject services={[Annotations]}/>\n                            <AxesDirective>\n                                <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                    <PointersDirective>\n                                        <PointerDirective width={30} color='#173BBB' markerType='Circle' position='Cross' placement='Center' offset={-2} value={55}>\n                                        </PointerDirective>\n                                    </PointersDirective>\n                                </AxisDirective>\n                            </AxesDirective>\n                            <AnnotationsDirective>\n                                <AnnotationDirective axisIndex={0} axisValue={55} x={0} y={0} zIndex='1' content='<div style=\"font-size: 12px;color: white;margin-left: -2px;margin-top:1px\"> 55 </div>'>\n                                </AnnotationDirective>\n                            </AnnotationsDirective>\n                        </LinearGaugeComponent>\n                    </div>\n                    <div id=\"containerIcon\" className=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <LinearGaugeComponent load={this.load.bind(this)} animationDuration={2000} title='Icon widget' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='iconWidget' orientation='Vertical' width='150px' height='350px' background='transparent' ref={iconWidget => this.iconWidget = iconWidget}>\n                            <AxesDirective>\n                                <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                    <PointersDirective>\n                                        <PointerDirective width={45} height={30} value={90} placement='Near' markerType='Image' imageUrl='https://ej2.syncfusion.com/react/demos/src/linear-gauge/images/thumb-icon.png'>\n                                        </PointerDirective>\n                                    </PointersDirective>\n                                </AxisDirective>\n                            </AxesDirective>\n                        </LinearGaugeComponent>\n                    </div>\n                    <div id=\"containerMultiple\" className=\"col-xs-5 col-sm-5 col-lg-4 col-md-4\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <LinearGaugeComponent load={this.load.bind(this)} animationDuration={2000} title='Multiple widget pointers' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='multipleWidget' orientation='Vertical' width='170px' height='350px' background='transparent' ref={multipleWidget => this.multipleWidget = multipleWidget}>\n                            <Inject services={[Annotations]}/>\n                            <AxesDirective>\n                                <AxisDirective line={{ width: 20 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit', fontWeight: '499' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                    <PointersDirective>\n                                        <PointerDirective width={30} color='#173BBB' position='Cross' placement='Center' markerType='Circle' value={60} offset={-2}>\n                                        </PointerDirective>\n                                        <PointerDirective width={45} height={30} color='#173BBB' placement='Near' markerType='Image' imageUrl='https://ej2.syncfusion.com/react/demos/src/linear-gauge/images/thumb-icon.png' value={30}>\n                                        </PointerDirective>\n                                    </PointersDirective>\n                                </AxisDirective>\n                            </AxesDirective>\n                            <AnnotationsDirective>\n                                <AnnotationDirective axisIndex={0} axisValue={60} x={0} zIndex='1' y={0} content='<div style=\"margin-top: -2px;font-size: 12px;color: white;margin-left: -2px;margin-top:-1px\"> 60 </div>'>\n                                </AnnotationDirective>\n                            </AnnotationsDirective>\n                        </LinearGaugeComponent>\n                    </div>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n                    <p>\n                        This sample demonstrates the inclusion of text and image pointers in the linear gauge. Additionally, multiple pointer support is enabled.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to render and configure text and image pointers in the linear gauge. The properties available in  <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerModel/\">PointerDirective</a> and  <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/annotationModel/\">AnnotationDirective</a> help in the customization of the text and image pointers in the linear gauge.\n                    </p>\n                    <p>\n                        More information on the pointers can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/linear-gauge/pointers/\">documentation section</a>.\n                    </p>\n                </section>\n        </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CustomPointer />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-react-lineargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}