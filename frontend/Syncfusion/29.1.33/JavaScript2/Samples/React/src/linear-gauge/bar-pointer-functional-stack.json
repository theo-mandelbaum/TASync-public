{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { LinearGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, Gradient, PointerDirective } from '@syncfusion/ej2-react-lineargauge';\n\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nconst BarPointer = () => {\n    const [gaugeWidth, setGaugeWidth] = useState(\"150px\");\n    const [gaugeHeight, setGaugeHeight] = useState(\"350px\");\n    const [gaugeOriention, setOrientation] = useState('Vertical');\n    const [verticalColor, setVerticalColor] = useState(\"white\");\n    const [verticalBgColor, setVerticalBgColor] = useState(\"#0074E3\");\n    const [horizontalColor, setHorizontalColor] = useState(\"black\");\n    const [horizontalBgColor, setHorizontalBgColor] = useState(\"white\");\n    const [classStyle, setClassStyle] = useState(\"col-xs-4 col-sm-4 col-lg-2 col-md-2\");\n    const [padding, setPadding] = useState(\"4%\");\n    const [display, setDisplay] = useState(\"flex\");\n    let pointerLinearGradient = {\n        startValue: \"0%\",\n        endValue: \"100%\",\n        colorStop: [\n            { color: \"#FB7D55\", offset: \"0%\", opacity: 1 },\n            { color: \"#ECC85B\", offset: \"50%\", opacity: 1 },\n            { color: \"#6FC78A\", offset: \"100%\", opacity: 1 }\n        ]\n    };\n    const load = (args) => {\n    };\n    const horizontalGauge = (e) => {\n        setGaugeWidth('450px');\n        setGaugeHeight('150px');\n        setOrientation(\"Horizontal\");\n        if (e.currentTarget != null) {\n            setHorizontalColor(\"white\");\n            setHorizontalBgColor(\"#0074E3\");\n            setVerticalColor(\"black\");\n            setVerticalBgColor(\"white\");\n            setClassStyle(\"col-xs-12 col-sm-12 col-lg-12 col-md-12\");\n            setDisplay(\"\");\n            setPadding(\"0%\");\n        }\n    };\n    const verticalGauge = (e) => {\n        setGaugeWidth('150px');\n        setGaugeHeight('350px');\n        setOrientation(\"Vertical\");\n        if (e.currentTarget != null) {\n            setVerticalColor(\"white\");\n            setVerticalBgColor(\"#0074E3\");\n            setHorizontalColor(\"black\");\n            setHorizontalBgColor(\"white\");\n            setClassStyle(\"col-xs-4 col-sm-4 col-lg-2 col-md-2\");\n            setDisplay(\"flex\");\n            setPadding(\"4%\");\n        }\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className=\"control-section\">\n                <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <div style={{ margin: 'auto', padding: '10px' }}>\n                        <table role='none'>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <div id='horizontal' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: horizontalColor, fontSize: '15px', border: '1px solid #0074E3', backgroundColor: horizontalBgColor, textAlign: 'center' }} onClick={horizontalGauge.bind(this)}>Horizontal</div>\n                                    </td>\n                                    <td>\n                                        <div id='vertical' style={{ padding: '6px', cursor: 'pointer', width: '86px', color: verticalColor, fontSize: '15px', border: '1px solid #0074E3', backgroundColor: verticalBgColor, textAlign: 'center' }} onClick={verticalGauge.bind(this)}>Vertical</div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <pre style={{ border: 'hidden', backgroundColor: 'inherit' }}></pre>\n                <div id=\"containerBox\" style={{ float: 'left', padding: padding, display: display }}></div>\n                <div id='containerOutside' className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} animationDuration={2000} id='outsideBar' title='Outside' titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 5 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective value={70} height={5} width={5} placement='Near' type='Bar' position='Outside' color='#0074E3' animationDuration={1500}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id='containerCross' className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} title='Cross' animationDuration={2000} titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='crossBar' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 5 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective value={70} height={5} width={5} placement='Near' type='Bar' position='Cross' color='#0074E3' animationDuration={1500}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id='containerInside' className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} title='Inside' animationDuration={2000} titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='insideBar' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 5 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective value={70} height={5} width={5} placement='Near' type='Bar' position='Inside' color='#0074E3' animationDuration={1500}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id='containerGradient' className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} title='Gradient shader' animationDuration={2000} titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='gradientBar' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <Inject services={[Gradient]}/>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 5 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective value={70} height={5} width={5} placement='Near' type='Bar' position='Outside' offset={2} animationDuration={1500} linearGradient={pointerLinearGradient}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n                <div id='containerMultiple' className={classStyle} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <LinearGaugeComponent load={load} title='Multiple bar pointers' animationDuration={2000} titleStyle={{ fontFamily: 'inherit', fontWeight: '499' }} id='multipleBar' orientation={gaugeOriention} width={gaugeWidth} height={gaugeHeight} background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective line={{ width: 5 }} minorTicks={{ interval: 10, height: 3 }} majorTicks={{ interval: 20, height: 7, width: 1 }} labelStyle={{ font: { fontFamily: 'inherit' } }} minimum={0} maximum={100} opposedPosition={true}>\n                                <PointersDirective>\n                                    <PointerDirective value={10} height={5} width={5} placement='Near' type='Bar' position='Inside' color='#0074E3' animationDuration={1500}/>\n                                    <PointerDirective value={70} height={5} width={5} placement='Near' type='Bar' position='Outside' color='red' animationDuration={1500}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </LinearGaugeComponent>\n                </div>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of Linear Gauge sample\">\n                <p>This sample shows the various bar pointer shapes available in the linear gauge. Additionally, multiple bar pointer and animation support are enabled.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Linear Gauge features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render and configure bar pointer in the linear gauge. The <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerModel/\">PointersDirective</a> collection is useful for displaying multiple pointers. The properties available in <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/linear-gauge/pointerModel/\">PointerDirective</a> help in the customization of the bar pointer in the linear gauge.\n                </p>\n                <p>\n                    More information on the bar pointer can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/linear-gauge/pointers/#bar-pointer\">documentation section</a>.\n                </p>\n            </section>\n    </main>);\n};\nexport default BarPointer;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<BarPointer />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-lineargauge\":\"*\",\"@syncfusion/ej2-react-lineargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}