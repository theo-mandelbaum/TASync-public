{"index.css":".outlook-style #discard {\n    margin-left: 7px;\n}\n.outlook-style table {\n    width: 100%;\n}\n.outlook-style {\n    margin: 20px auto;\n    max-width: 820px;\n}\n.outlook-style td {\n    padding: 2px;\n}\n.outlook-style.control-section{            \n    min-height: 370px;  \n}\n.outlook-style .e-treeview .e-list-text {\n    width: 100%;\n}\n.outlook-style #groupedList-split.e-listview .e-list-group-item {\n    height: 0;\n}\n.outlook-style #splitter1 .settings.e-list-wrapper.e-list-multi-line.e-list-avatar {\n    padding: 15px;\n}\n.outlook-style #buttonSection {\n    padding: 7px;\n}\n.outlook-style #createpostholder {\n    padding-left: 3px;\n    padding-right: 4px;\n}\n\n#splitter-tree .e-text-content .countcontainer {\n    float: right;\n    margin-right: 10px;\n}\n\n#splitter-tree .treeviewdiv .textcontent {\n    display: inline-block;\n}\n\n#splitter-tree .treeviewdiv {\n    display: inline-block;\n    width: 100%;\n}\n\n#splitter1 #splitter-tree ul.e-list-parent.e-ul {\n\tpadding: 0 0 0 16px;\n}\n.material3-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,\n.material-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header {\n    color: #fff;\n}\n\n.material3-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content,\n.material-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content {\n    color: #9ca3af;\n}\n\n.material3-dark .e-listview.e-list-template .e-list-item.e-hover .e-list-content,\n.material-dark .e-listview.e-list-template .e-list-item.e-hover .e-list-content {\n    color: #fff;\n}\n\n.tailwind .e-splitter .e-list-parent.e-ul,\n.tailwind-dark .e-splitter .e-list-parent.e-ul,\n.tailwind3 .e-splitter .e-list-parent.e-ul,\n.tailwind3-dark .e-splitter .e-list-parent.e-ul {\n    overflow: hidden;\n} \n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { SplitterComponent, PanesDirective, PaneDirective } from '@syncfusion/ej2-react-layouts';\nimport { TreeViewComponent } from '@syncfusion/ej2-react-navigations';\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\nimport { TextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { RichTextEditorComponent, Inject, Link, Image, HtmlEditor, Toolbar, QuickToolbar } from '@syncfusion/ej2-react-richtexteditor';\n\n/**\n *  Sample for outlook style using splitter\n */\nconst OutlookLayout = () => {\n    let rteObj = useRef(null);\n    let dataSource = [\n        { Name: 'Selma Tally', content: 'Apology marketing email', content2: 'Hello Ananya Singleton', id: '1', order: 0 },\n        { Name: 'Illa Russo', content: 'Annual conference', content2: 'Hi jeani Moresa', id: '4', order: 0 },\n        { Name: 'Camden Macmellon', content: 'Reference request- Camden hester', content2: 'Hello Kerry Best', order: 0 },\n        { Name: 'Garth Owen', content: 'Application for job Title', content2: 'Hello Illa Russo', id: '2', order: 0 },\n        { Name: 'Ursula Patterson', content: 'Programmaer Position Applicant', content2: 'Hello Kerry best', id: '3', order: 0 }\n    ];\n    const nodeTemplate = (data) => {\n        return (<div>\n                <div className=\"treeviewdiv\">\n                    <div className=\"textcontent\">\n                        <span className=\"treeName\">{data.name}</span>\n                    </div>\n                    {data.count &&\n                <div className=\"countcontainer\">\n                            <span className=\"treeCount e-badge e-badge-primary\">{data.count}</span>\n                        </div>}\n                </div>\n            </div>);\n    };\n    let paneSize1 = \"28%\";\n    let minimumSize1 = \"27%\";\n    const content1 = () => {\n        return (<div className='splitter-content'>\n                <TreeViewComponent id='splitter-tree' fields={treeFields} nodeTemplate={nodeTemplate}/>\n            </div>);\n    };\n    const content2 = () => {\n        return (<div className='splitter-content'>\n                <ListViewComponent id='groupedList-split' fields={listFields} className='splitter-list' dataSource={dataSource} cssClass={'e-list-template'} template={listTemplate}/>\n            </div>);\n    };\n    const content3 = () => {\n        return (<div>\n                <div className='splitter-content'>\n                    <div style={{ width: '100%', padding: '15px' }}>\n                        <table>\n                            <tr>\n                                <td><button className='e-btn e-flat e-outline'>To...</button></td>\n                                <td id='firstname-target'>\n                                    <TextBoxComponent id=\"firstname\" aria-label=\"firstname\"/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td><button className='e-btn e-flat e-outline'>Cc...</button></td>\n                                <td id='lastname-target'>\n                                    <TextBoxComponent id=\"lastname\" aria-label=\"lastname\"/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td><div id='subject-text'>Subject</div></td>\n                                <td id='subject-target'>\n                                    <TextBoxComponent id=\"subject\" aria-label=\"subject\"/>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div className='forum'>\n                        <div id='createpostholder'>\n                            <RichTextEditorComponent id=\"outlookRTE\" ref={(richtexteditor) => { rteObj.current = richtexteditor; }} height=\"262px\">\n                                <Inject services={[HtmlEditor, Toolbar, Image, Link, QuickToolbar]}/>\n                            </RichTextEditorComponent>\n                            <div id='buttonSection'>\n                                <button className='e-btn e-primary' id='send'>Send</button>\n                                <button className='e-btn' id='discard'>Discard</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>);\n    };\n    let paneSize2 = \"33%\";\n    let minimumSize2 = \"23%\";\n    let paneSize3 = \"37%\";\n    let minimumSize3 = \"30%\";\n    //Set customized list template\n    let listTemplate = '<div class=\"settings e-list-wrapper e-list-multi-line e-list-avatar\">' +\n        '<span class=\"e-list-item-header\">${Name}</span>' +\n        '<span class=\"e-list-content\">${content}</span>' +\n        '</div>';\n    //Map the appropriate columns to fields property\n    let listFields = { text: 'Name' };\n    let mailBox = [\n        { id: 1, name: 'Favorites', hasChild: true },\n        { id: 2, pid: 1, name: 'Sales Reports', count: '4' },\n        { id: 3, pid: 1, name: 'Sent Items' },\n        { id: 4, pid: 1, name: 'Marketing Reports ', count: '6' },\n        { id: 5, name: 'Andrew Fuller', hasChild: true, expanded: true },\n        { id: 6, pid: 5, name: 'Inbox', selected: true, count: '20' },\n        { id: 7, pid: 5, name: 'Drafts', count: '5' },\n        { id: 15, pid: 5, name: 'Archive' },\n        { id: 8, pid: 5, name: 'Deleted Items' },\n        { id: 9, pid: 5, name: 'Sent Items' },\n        { id: 10, pid: 5, name: 'Sales Reports', count: '4' },\n        { id: 11, pid: 5, name: 'Marketing Reports', count: '6' },\n        { id: 12, pid: 5, name: 'Outbox' },\n        { id: 13, pid: 5, name: 'Junk Email' },\n        { id: 14, pid: 5, name: 'RSS Feed' },\n        { id: 15, pid: 5, name: 'Trash' }\n    ];\n    let treeFields = { dataSource: mailBox, id: 'id', parentID: 'pid', text: 'name', hasChildren: 'hasChild' };\n    const onSplitterResize = () => {\n        rteObj.current.refreshUI();\n    };\n    return (<div id=\"target\" className=\"control-section outlook-style\">\n            <SplitterComponent id=\"splitter1\" height=\"493px\" width=\"100%\" resizing={onSplitterResize.bind(this)}>\n                <PanesDirective>\n                    <PaneDirective size={paneSize1} min={minimumSize1} content={content1.bind(this)}/>\n                    <PaneDirective size={paneSize2} min={minimumSize2} content={content2.bind(this)}/>\n                    <PaneDirective size={paneSize3} min={minimumSize3} content={content3.bind(this)}/>\n                </PanesDirective>\n            </SplitterComponent>\n        </div>);\n};\nexport default OutlookLayout;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<OutlookLayout />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-react-layouts\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-react-lists\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-react-richtexteditor\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}