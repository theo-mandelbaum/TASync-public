{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for customer satisfaction in the Circular Gauge\n */\nimport * as React from \"react\";\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective, AnnotationsDirective, AnnotationDirective, Annotations, GaugeTooltip, Legend, Inject } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n     .control-fluid {\n     padding: 0px !important;\n     }`;\nexport class CustomerSatisfactionScore extends SampleBase {\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n         <style>\n           {SAMPLE_CSS}\n         </style>\n         <div className='control-section'>\n           <CircularGaugeComponent load={this.load.bind(this)} id=\"gauge\" background=\"transparent\" height=\"400px\" allowMargin={false} title=\"Customer Satisfaction Score\" titleStyle={{ size: '18px', fontFamily: 'inherit' }} tooltip={{ enable: true, template: '<div style=\"font-size:18px;background:white;width:150px;color:#595959;border:1px solid #e8e8e8\">Current Score: 7.5 </div>' }} legendSettings={{ visible: true, position: 'Bottom', width: \"70%\", textStyle: { fontFamily: 'inherit', size: '12px' }, }}>\n             <Inject services={[Annotations, GaugeTooltip, Legend]}/>\n             <AxesDirective>\n               <AxisDirective startAngle={270} endAngle={90} radius=\"100%\" minimum={0} maximum={10} majorTicks={{ width: 1.5, height: 12, interval: 2, offset: 35 }} lineStyle={{ width: 0 }} minorTicks={{ width: 0 }} labelStyle={{ font: { size: '14px', fontFamily: 'inherit' }, position: 'Outside', offset: -40, }}>\n                 <AnnotationsDirective>\n                   <AnnotationDirective content='<div style=\"font-size:16px;margin-top: 5px;font-family: inherit;\">7.5</div>' angle={0} radius=\"-10%\" zIndex=\"1\"></AnnotationDirective>\n                 </AnnotationsDirective>\n                 <PointersDirective>\n                   <PointerDirective value={7.5} radius=\"70%\" pointerWidth={5} needleEndWidth={2} cap={{ radius: 8, border: { width: 2 }, }}/>\n                   <PointerDirective value={6.5} radius=\"68%\" type=\"Marker\" markerShape=\"Rectangle\" markerWidth={40} markerHeight={0.5} needleEndWidth={2} color=\"#0477c2\" animation={{ enable: false }} cap={{ radius: 0, border: { width: 0 }, }}/>\n                   <PointerDirective value={9.5} radius=\"68%\" type=\"Marker\" markerShape=\"Rectangle\" markerWidth={40} markerHeight={0.5} needleEndWidth={2} color=\"#0477c2\" animation={{ enable: false }} cap={{ radius: 0, border: { width: 0 }, }}/>\n                 </PointersDirective>\n                 <RangesDirective>\n                   <RangeDirective start={0} end={2} radius=\"80%\" color=\"#F03E3E\" startWidth={40} endWidth={40} legendText=\"Poor\"/>\n                   <RangeDirective start={6.5} end={9.5} radius=\"110%\" color=\"#0477c2\" startWidth={120} endWidth={120} legendText=\"Average Score\"/>\n                   <RangeDirective start={2} end={5} radius=\"80%\" color=\"#f6961e\" startWidth={40} endWidth={40} legendText=\"Satisfied\"/>\n                   <RangeDirective start={5} end={8} radius=\"80%\" color=\"#FFDD00\" startWidth={40} endWidth={40} legendText=\"Good\"/>\n                   <RangeDirective start={8} end={10} radius=\"80%\" color=\"#30B32D\" startWidth={40} endWidth={40} legendText=\"Excellent\"/>\n                 </RangesDirective>\n               </AxisDirective>\n             </AxesDirective>\n           </CircularGaugeComponent>\n         </div>\n         </div>\n         <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n           <p>\n             This sample shows an arc gauge with a real-time scenario of a customer satisfaction score ranging from 0 to 10.\n           </p>\n         </section>\n         <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n           <p>\n             In this example, you can see how to render an arc gauge showing customer satisfaction score. You can use <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/axisModel/\">axes</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/rangeModel/\">ranges</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/annotationModel/\">annotations</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/legendSettingsModel/\">legend</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/tooltipSettingsModel/\">tooltip</a> oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.\n           </p>\n           <p>\n             More information on the arc gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\">documentation section</a>.\n           </p>\n         </section>\n      </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CustomerSatisfactionScore />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\"}"}