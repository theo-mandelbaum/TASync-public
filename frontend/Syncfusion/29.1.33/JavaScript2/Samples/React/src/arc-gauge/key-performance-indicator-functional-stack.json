{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for key performance indicator in the Circular Gauge\n */\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective, AnnotationsDirective, AnnotationDirective, Annotations, Gradient, Inject } from '@syncfusion/ej2-react-circulargauge';\n\nconst SAMPLE_CSS = `\n    .control-fluid { padding: 0px !important;} #gauge_Annotations_0 { line-height: 0.5;}\n    .triangle-up { width: 20; height: 20; border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid #84cbb5; margin-top: 10px; }\n    .text { font-family:inherit; font-size:30px; text-align:center; }\n    .percentage { font-family:inherit; font-size:44px; text-align:center; margin-left:-8px; }\n    .e-view.tailwind div.triangle-up, .e-view.tailwind-dark div.triangle-up { margin-top: 7px;  }\n    .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n    .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n    width: 20; height: 20; border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid #84cbb5; margin-top: 5px; }\n    @media screen and (max-width: 420px) {\n        .text { font-size:20px; text-align:center; margin-left: 10px; }\n        .percentage { font-size:30px; text-align:center; }\n        .triangle-up { width: 20; height: 20; border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid #84cbb5; margin-top: 15px; }\n        .e-view.tailwind div.triangle-up, .e-view.tailwind-dark div.triangle-up { margin-top: 14px; }\n        .e-view.material div.triangle-up, .e-view.material-dark div.triangle-up, .e-view.bootstrap-dark div.triangle-up,\n        .e-view.bootstrap div.triangle-up, .e-view.bootstrap4 div.triangle-up {\n        width: 20; height: 20; border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid #84cbb5; margin-top: 10px; }\n    } `;\nconst KeyPerformanceIndicator = () => {\n    const load = (args) => {\n    };\n    let rangeLinearGradient = {\n        startValue: '0%',\n        endValue: '60%',\n        colorStop: [\n            { color: 'white', offset: '10%', opacity: 0.9 },\n            { color: '#84cbb5', offset: '90%', opacity: 0.9 },\n        ],\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className='control-section'>\n                <CircularGaugeComponent load={load.bind(this)} id=\"gauge\" background=\"transparent\">\n                    <Inject services={[Annotations, Gradient]}/>\n                    <AxesDirective>\n                        <AxisDirective startAngle={220} endAngle={140} radius=\"90%\" minimum={0} maximum={100} majorTicks={{ width: 0, }} lineStyle={{ width: 0 }} minorTicks={{ width: 0 }} labelStyle={{ format: '{value} %', font: { size: '0px' }, position: 'Outside', offset: -18, }}>\n                            <AnnotationsDirective>\n                                <AnnotationDirective content='<div class=\"triangle-up\"></div>' description=\"Triangle\" angle={279} radius=\"33%\" zIndex=\"1\"></AnnotationDirective>\n                                <AnnotationDirective content='<div class=\"text\" style=\"color:#84cbb5;\">Current</div>' description=\"Current\" angle={0} radius=\"25%\" zIndex=\"1\"></AnnotationDirective>\n                                <AnnotationDirective content='<div class=\"percentage\" style=\"color:#84cbb5;\">76.6%</div>' description=\"76.6%\" angle={125} radius=\"12%\" zIndex=\"1\"></AnnotationDirective>\n                                <AnnotationDirective content='<div style=\"font-size:22px;font-family:inherit;\">0</div>' description=\"0\" angle={213} radius=\"83%\" zIndex=\"1\"></AnnotationDirective>\n                                <AnnotationDirective content='<div style=\"font-size:22px;font-family:inherit;\">100</div>' description=\"100\" angle={150} radius=\"83%\" zIndex=\"1\"></AnnotationDirective>\n                            </AnnotationsDirective>\n                            <PointersDirective>\n                                <PointerDirective value={30} radius=\"82%\" type=\"Marker\" markerShape=\"Circle\" markerWidth={30} markerHeight={30} animation={{ enable: false, }} color=\"#bdbdbf\"/>\n                                <PointerDirective value={50} radius=\"82%\" type=\"Marker\" markerShape=\"Circle\" markerWidth={30} markerHeight={30} animation={{ enable: false, }} color=\"#626866\"/>\n                                <PointerDirective value={79} radius=\"92%\" type=\"Marker\" markerShape=\"InvertedTriangle\" markerWidth={30} markerHeight={30} color=\"#b6b6b6\"/>\n                            </PointersDirective>\n                            <RangesDirective>\n                                <RangeDirective start={0} end={100} radius=\"90%\" color=\"#e3e3e3\" roundedCornerRadius={20} startWidth={30} endWidth={30}/>\n                                <RangeDirective start={30} end={50} radius=\"90%\" linearGradient={rangeLinearGradient} startWidth={30} endWidth={30}/>\n                            </RangesDirective>\n                        </AxisDirective>\n                    </AxesDirective>\n                </CircularGaugeComponent>\n            </div>\n            </div>\n            <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                <p>This sample shows an arc gauge with a key performance indicator (KPI), which is a measurable value that shows how an organization meets key business objectives.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render an arc gauge showing key performance indicator (KPI). You can use <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/axisModel/\">axes</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/rangeModel/\">ranges</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/pointerModel/\">pointers</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/annotationModel/\">annotations</a> oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.\n                </p>\n                <p>\n                    More information on the arc gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\">documentation section</a>.\n                </p>\n            </section>\n        </main>);\n};\nexport default KeyPerformanceIndicator;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<KeyPerformanceIndicator />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\"}"}