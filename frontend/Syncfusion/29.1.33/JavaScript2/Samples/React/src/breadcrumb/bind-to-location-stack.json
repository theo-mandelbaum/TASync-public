{"index.css":".breadcrumb-control-wrapper {\n  width: 90%;\n  margin: 0 auto;\n  min-width: 85px;\n}\n\n.breadcrumb-control-wrapper div.row {\n    padding: 15px 0px !important;\n    margin: 0 !important;\n}\n\n@media only screen and (max-width: 480px) {\n  .breadcrumb-control-wrapper {\n      width: 92%;\n  }\n\n  .col-xs-12,\n  .col-xs-4,\n  .col-xs-12 {\n      padding: 10px 5px;\n      width: 100%;\n  }\n\n  .breadcrumb-control-wrapper div.row {\n      padding: 0px !important;\n  }\n}\n\n  .tailwind .e-breadcrumb,\n  .tailwind-dark .e-breadcrumb {\n      margin-left: -12px;\n  }\n\n  .material .e-breadcrumb,\n  .material-dark .e-breadcrumb {\n      margin-left: -8px;\n  }\n\n  .fabric .e-breadcrumb,\n  .fabric-dark .e-breadcrumb,\n  .highcontrast .e-breadcrumb {\n      margin-left: -4px;\n  }\n\n  .reset-btn {\n    float: right;\n    margin: 5px 2px 5px 0;\n}\n  ","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { BreadcrumbComponent } from '@syncfusion/ej2-react-navigations';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport { getComponent } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\n\nexport class BindToLocation extends SampleBase {\n    breadcrumb;\n    btnClick() {\n        let breadcrumb, breadcrumbInst, breadcrumbs = document.querySelector('.content-wrapper').getElementsByClassName(\"e-breadcrumb\");\n        for (let i = 0; i < breadcrumbs.length; i++) {\n            breadcrumb = breadcrumbs[i];\n            breadcrumbInst = getComponent(breadcrumb, 'breadcrumb');\n            breadcrumbInst.activeItem = breadcrumbInst.items[breadcrumbInst.items.length - 1].text;\n        }\n    }\n    beforeItemRenderHandler(args) {\n        var url = 'https://ej2.syncfusion.com/react/demos/#/bootstrap5/breadcrumb/bind-to-location', themeName = url.split('/')[6];\n        if (args.item.text == 'demos') {\n            args.item.url = args.item.url + '/#/' + themeName + '/grid/default';\n        }\n        else if (args.item.text == 'breadcrumb') {\n            args.item.url = 'https://ej2.syncfusion.com/react/demos/#/bootstrap5/breadcrumb/default';\n        }\n        else if (args.item.text == themeName || args.item.text == 'react') {\n            args.cancel = true;\n        }\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className=\"col-lg-12 control-section\">\n                    <div className=\"content-wrapper breadcrumb-control-wrapper\">\n                        <div className=\"row material2\">\n                            <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                                <h5 style={{ display: \"inline-block\" }}>Bind to Location</h5>\n                                <ButtonComponent cssClass='e-small reset-btn' onClick={this.btnClick.bind(this)}>Reset State</ButtonComponent>\n                            </div>\n                        </div>\n                        <div className=\"row material2\">\n                            <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                                <BreadcrumbComponent enableNavigation={false}></BreadcrumbComponent>\n                            </div>\n                        </div>\n                        <div className=\"row material2\">\n                            <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                                <h5>URL Binding and Navigation</h5>\n                            </div>\n                        </div>\n                        <div className=\"row material2\">\n                            <div className=\"col-xs-12 col-sm-12 col-lg-12 col-md-12\">\n                                <BreadcrumbComponent ref={(breadcrumbObj) => { this.breadcrumb = breadcrumbObj; }} url=\"https://ej2.syncfusion.com/react/demos/breadcrumb/bind-to-location\" beforeItemRender={this.beforeItemRenderHandler.bind(this)}></BreadcrumbComponent>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<BindToLocation />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-navigations\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\"}"}