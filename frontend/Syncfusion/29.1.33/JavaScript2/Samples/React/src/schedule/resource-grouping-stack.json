{"index.css":".schedule-group.e-schedule .template-wrap {\n    display: flex;\n    text-align: left;\n}\n\n\n.schedule-demo-heading {\n    font-size: 16px;\n    padding-bottom: 15px;\n    text-align: center;\n    font-weight: 500\n}\n\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap {\n    display: table;\n    width: inherit;\n    text-align: center;\n}\n\n.schedule-group.e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {\n    width: 110px;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image {\n    width: 30px;\n    margin-top: 15px;\n    background-repeat: no-repeat;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-image {\n    margin-top: 5px;\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-image {\n    height: 30px;\n    margin-top: 0;\n    margin-left: 35%;\n}\n\n.schedule-group.e-schedule .e-vertical-view .e-resource-cells {\n    height: 80px;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-details {\n    padding-left: 15px;\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-details {\n    padding: 0;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-details .airline-name {\n    font-size: 16px;\n    font-weight: 500;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-details .airline-name {\n    font-size: inherit;\n    font-weight: inherit;\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-1 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-1.svg');\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-2 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-2.svg');\n}\n\n.schedule-group.e-schedule .template-wrap .airline-image.airways-3 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-3.svg');\n}\n\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-model, .schedule-group.e-schedule .e-agenda-view .template-wrap .airline-seats {\n    display: none;\n}\n\n.schedule-group.e-schedule.e-device .template-wrap .airline-model, .schedule-group.e-schedule.e-device .template-wrap .airline-seats {\n    display: none;\n}\n\n\n@media (max-width: 550px) {\n    .schedule-demo-heading {\n        font-size: 14px;\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { Week, Month, Agenda, ScheduleComponent, ResourcesDirective, ResourceDirective, ViewsDirective, ViewDirective, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\n\nimport { SampleBase } from './sample-base';\n/**\n * schedule resources group sample\n */\nexport class Group extends SampleBase {\n    resourceData = [\n        { AirlineName: 'Airways 1', AirlineId: 1, AirlineColor: '#EA7A57' },\n        { AirlineName: 'Airways 2', AirlineId: 2, AirlineColor: '#357cd2' },\n        { AirlineName: 'Airways 3', AirlineId: 3, AirlineColor: '#7fa900' }\n    ];\n    getAirlineImage(value) {\n        let airlineName = this.getAirlineName(value);\n        return airlineName.replace(' ', '-').toLowerCase();\n    }\n    getAirlineName(value) {\n        return ((value.resourceData) ?\n            value.resourceData[value.resource.textField] : value.resourceName);\n    }\n    getAirlineModel(value) {\n        let airlineName = this.getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 'CRJ 700' : (airlineName === 'Airways 2') ? 'Airbus A330' : 'ATR 72-600';\n    }\n    getAirlineSeats(value) {\n        let airlineName = this.getAirlineName(value);\n        return (airlineName === 'Airways 1') ? 50 : (airlineName === 'Airways 2') ? 75 : 100;\n    }\n    generateEvents() {\n        let subjectCollection = ['Barcelona to Los Angeles', 'Los Angeles to Barcelona'];\n        let collections = [];\n        let dataCollections = [1, 2, 3];\n        let id = 1;\n        for (let data of dataCollections) {\n            let startDate = new Date(2021, 3, 1);\n            startDate.setMilliseconds(1000 * 60 * 60 * .5 * (data - 1));\n            let lastDate = new Date((+startDate) + (1000 * 60 * 60 * 24 * 30));\n            for (let date = startDate; date.getTime() < lastDate.getTime(); date = new Date(date.getTime() + (1000 * 60 * 60 * 5))) {\n                let strDate = new Date(+date);\n                let endDate = new Date((+strDate) + (1000 * 60 * 60 * (2.5 + (0.5 * data))));\n                collections.push({\n                    Id: id,\n                    Subject: subjectCollection[id % 2],\n                    StartTime: new Date(+strDate),\n                    EndTime: new Date(+endDate),\n                    AirlineId: data\n                });\n                id += 1;\n            }\n        }\n        return collections;\n    }\n    resourceHeaderTemplate(props) {\n        return (<div className=\"template-wrap\"><div className={\"airline-image \" + this.getAirlineImage(props)}></div>\n            <div className=\"airline-details\"><div className=\"airline-name\">{this.getAirlineName(props)}</div>\n                <div className=\"airline-model\"> Model no: {this.getAirlineModel(props)}</div>\n                <div className=\"airline-seats\"> No.of seats: {this.getAirlineSeats(props)}</div></div></div>);\n    }\n    render() {\n        return (<div className='schedule-control-section'>\n                <div className='col-lg-12 control-section'>\n                    <div className='control-wrapper'>\n                        <div className='schedule-demo-heading'>Flight timings between Barcelona and Los Angeles</div>\n                        <ScheduleComponent cssClass='schedule-group' width='100%' height='650px' selectedDate={new Date(2021, 3, 6)} eventSettings={{\n                dataSource: this.generateEvents(), fields: {\n                    subject: { title: 'Travel Summary', name: 'Subject' },\n                    location: { title: 'Source', name: 'Location' },\n                    description: { title: 'Comments', name: 'Description' },\n                    startTime: { title: 'Departure Time', name: 'StartTime' },\n                    endTime: { title: 'Arrival Time', name: 'EndTime' }\n                }\n            }} group={{ resources: ['Airlines'] }} resourceHeaderTemplate={this.resourceHeaderTemplate.bind(this)}>\n                            <ResourcesDirective>\n                                <ResourceDirective field='AirlineId' title='Airline Name' name='Airlines' allowMultiple={true} dataSource={this.resourceData} textField='AirlineName' idField='AirlineId' colorField='AirlineColor'>\n                                </ResourceDirective>\n                            </ResourcesDirective>\n                            <ViewsDirective>\n                                <ViewDirective option='Week'/>\n                                <ViewDirective option='Month'/>\n                                <ViewDirective option='Agenda'/>\n                            </ViewsDirective>\n                            <Inject services={[Week, Month, Agenda, Resize, DragAndDrop]}/>\n                        </ScheduleComponent>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Group />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-react-schedule\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@microsoft/signalr\":\"7.0.11\"}"}