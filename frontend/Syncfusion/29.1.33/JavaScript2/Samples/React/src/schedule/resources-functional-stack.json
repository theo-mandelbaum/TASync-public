{"index.css":".e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-row {\n    display: flex;\n    padding: 0 5px;\n    line-height: 20px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-col {\n    flex: 0 0 50%;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .text-right {\n    text-align: right;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .margin-right {\n    margin-left: -21px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .text-size {\n    font-size: 14px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .border-right {\n    border-right: 1px solid #fff;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-fare {\n    padding-left: 8px;\n}\n\n.schedule-resources.e-schedule .e-appointment .template-wrap {\n    color: black;\n    width: 100%;\n}\n\n.fluent-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.bootstrap5-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.bootstrap5_3-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.tailwind-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.tailwind3-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.bootstrap-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.fabric-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.material-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.highcontrast .schedule-resources.e-schedule .e-appointment .template-wrap,\n.material3-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.fluent2-dark .schedule-resources.e-schedule .e-appointment .template-wrap,\n.fluent2-highcontrast .schedule-resources.e-schedule .e-appointment .template-wrap {\n    color: #fff;\n}\n\n.schedule-resources.e-schedule .e-work-cells.best-price {\n    background-color: #FFFBDF;\n}\n\n.schedule-resources.e-schedule .best-price:not(.e-work-cells) {\n    color: #1A961A;\n    float: right;\n    margin-top: -22px;\n    margin-right: 3px;\n    width: auto;\n    font-size: 12px;\n}\n\n.fluent-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.bootstrap5-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.bootstrap5_3-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.tailwind-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.tailwind3-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.bootstrap-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.fabric-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.material-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.highcontrast .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.material3-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.fluent2-dark .schedule-resources.e-schedule .best-price:not(.e-work-cells),\n.fluent2-highcontrast .schedule-resources.e-schedule .best-price:not(.e-work-cells) {\n    color: #33DB33;\n}\n\n.fluent-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.bootstrap5-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.bootstrap5_3-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.tailwind-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.tailwind3-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.bootstrap-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.fabric-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.material-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.highcontrast .schedule-resources.e-schedule .e-work-cells.best-price,\n.material3-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.fluent2-dark .schedule-resources.e-schedule .e-work-cells.best-price,\n.fluent2-highcontrast .schedule-resources.e-schedule .e-work-cells.best-price {\n    background-color: #393939;\n}\n\n.schedule-resources.e-schedule.e-device .best-price:not(.e-work-cells) {\n    display: none;\n}\n\n.schedule-demo-heading {\n    font-size: 16px;\n    padding-bottom: 15px;\n    text-align: center;\n    font-weight: 500\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip {\n    width: 217px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .airline {\n    width: 40%;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-header {\n    display: flex;\n    padding: 8px 0px 8px 0px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-details {\n    display: flex;\n    padding: 8px 5px 8px 5px;\n}\n\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings,\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings-title {\n    display: flex;\n    padding: 5px;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-header {\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo,\n.schedule-resources.e-schedule .template-wrap .airline-logo {\n    background-size: cover;\n    background-repeat: no-repeat;\n    margin-top: -3px;\n    width: 25px;\n    height: 25px;\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-1,\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-1 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-1.svg');\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-2,\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-2 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-2.svg');\n}\n\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-3,\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-3 {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/schedule/images/airways-3.svg');\n}\n\n.schedule-resources.e-schedule .fare-detail {\n    color: #00837B;\n    font-size: 16px;\n    font-weight: 500;\n    height: 25px;\n    padding-left: 5px;\n}\n\n.highcontrast .schedule-resources.e-schedule .fare-detail {\n    color: #1B96BB;\n}\n\n.schedule-resources.e-schedule.e-device .fare-detail {\n    font-size: 11px;\n}\n\n.schedule-resources.e-schedule .e-toolbar-item.e-date-range {\n    margin-left: 8px;\n    pointer-events: none;\n}\n\n.schedule-resources.e-schedule .airway-name {\n    font-size: 12px;\n    overflow: hidden;\n    padding-left: 5px;\n    text-overflow: ellipsis;\n}\n\n.schedule-resources.e-schedule.e-device .airway-name {\n    display: none;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment {\n    height: 45px;\n    background: none;\n    border-width: 0;\n    top: 10px !important;\n}\n\n.schedule-resources.e-schedule.e-device .e-month-view .e-appointment {\n    height: 45px;\n}\n\n.e-bigger .schedule-resources.e-schedule .e-month-view .e-appointment {\n    height: 40px;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment .e-appointment-details {\n    height: inherit;\n}\n\n.schedule-resources.e-schedule .e-month-view .e-more-indicator {\n    display: none\n}\n\n.schedule-resources.e-schedule .e-month-view .e-appointment.e-appointment-border,\n.schedule-resources.e-schedule .e-month-view .e-appointment:focus {\n    border-width: 0;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\n    opacity: 1;\n}\n\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\n    border-color: #e0e0e0;\n    background-color: #fff;\n}\n\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip .e-tip-content {\n    color: #000;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-name {\n    font-weight: 500;\n    font-size: 16px;\n    padding-left: 10px;\n    padding-top: 3px;\n\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-title {\n    font-weight: 500;\n    font-size: 14px;\n}\n\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-logo {\n    padding: 5px;\n    margin-left: 5px;\n    background-size: 25px;\n    height: 25px;\n    width: 25px;\n    margin-top: 0px;\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-1 .e-frame {\n    background-color: #EA7A57;\n    border-color: transparent;\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-2 .e-frame {\n    background-color: #357CD2;\n    border-color: transparent;\n}\n\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-3 .e-frame {\n    background-color: #7FA900;\n    border-color: transparent;\n}\n\n@media (max-width: 550px) {\n    .schedule-demo-heading {\n        font-size: 14px;\n    }\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { Month, Inject, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective } from '@syncfusion/ej2-react-schedule';\n\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { extend, Internationalization, createElement, closest, remove, addClass, removeClass } from '@syncfusion/ej2-base';\n\nimport { PropertyPane } from './property-pane';\n/**\n * schedule resources fare-calendar sample\n */\nconst Resources = () => {\n    let dManager = [];\n    let initialLoad = true;\n    let scheduleObj = useRef(null);\n    const instance = new Internationalization();\n    const resourceData = [\n        { text: 'Airways 1', id: 1 },\n        { text: 'Airways 2', id: 2 },\n        { text: 'Airways 3', id: 3 }\n    ];\n    const getAirwaysName = (value) => {\n        return (value === 1) ? 'Airways 1' : (value === 2) ? 'Airways 2' : 'Airways 3';\n    };\n    const getAirwaysImage = (value) => {\n        return (value === 1) ? 'airways-1' : (value === 2) ? 'airways-2' : 'airways-3';\n    };\n    const getFormattedTime = (date) => {\n        return instance.formatDate(date, { skeleton: 'Hm' });\n    };\n    const onActionBegin = (args) => {\n        if (args.requestType === 'toolbarItemRendering') {\n            args.items[2].align = 'Center';\n            args.items[2].suffixIcon = '';\n            args.items = args.items.splice(2, 1);\n        }\n    };\n    const onDataBinding = () => {\n        if (initialLoad) {\n            scheduleObj.current.eventSettings.dataSource = generateEvents(scheduleObj.current);\n            initialLoad = false;\n        }\n    };\n    const onDataBound = () => {\n        let eventCollections = scheduleObj.current.getCurrentViewEvents();\n        eventCollections.sort((a, b) => a.Fare - b.Fare);\n        let indexDate = new Date(eventCollections[0].StartTime.getTime());\n        indexDate.setHours(0, 0, 0, 0);\n        let index = scheduleObj.current.getIndexOfDate(scheduleObj.current.activeView.renderDates, indexDate);\n        let target = scheduleObj.current.element.querySelectorAll('.e-work-cells')[index];\n        addClass([target], 'best-price');\n        target.appendChild(createElement('div', { className: 'best-price', innerHTML: 'Best Price' }));\n    };\n    const onPopupOpen = (args) => {\n        args.cancel = true;\n    };\n    const onChange = (args) => {\n        let tdElement = scheduleObj.current.element.querySelector('.best-price:not(.e-work-cells)');\n        if (tdElement) {\n            removeClass([closest(tdElement, 'td')], 'best-price');\n            remove(tdElement);\n        }\n        let scheduleData = extend([], dManager, null, true);\n        let selectedResource = [];\n        const propertyTable = document.querySelector('.property-panel-table');\n        let resourceCollection = [].slice.call(propertyTable.querySelectorAll('.e-resource'));\n        resourceCollection.forEach((element, index) => {\n            let resEle = element.querySelector('.e-icons');\n            if (resEle && resEle.classList.contains('e-check')) {\n                selectedResource.push(index);\n            }\n        });\n        let filteredData = [];\n        let resources = scheduleObj.current.resourceBase.resourceCollection.slice(-1)[0].dataSource;\n        for (let resource of selectedResource) {\n            let data = scheduleData.filter((event) => resources[resource].id === event.AirlineId);\n            filteredData = filteredData.concat(data);\n        }\n        filteredData = filterByFare(filteredData, scheduleObj.current);\n        scheduleObj.current.eventSettings.dataSource = filteredData;\n        scheduleObj.current.dataBind();\n    };\n    const filterByFare = (appointments, scheduleObj) => {\n        let fieldMapping = scheduleObj.eventFields;\n        appointments.sort((object1, object2) => {\n            let d1 = +object1[fieldMapping.startTime];\n            let d2 = +object2[fieldMapping.startTime];\n            let d3 = +object1[fieldMapping.endTime];\n            let d4 = +object2[fieldMapping.endTime];\n            return ((d1 - d2) || ((d4 - d2) - (d3 - d1)));\n        });\n        let renderDate = scheduleObj.activeView.getRenderDates();\n        let finalData = [];\n        for (let date of renderDate) {\n            if (scheduleObj.selectedDate.getMonth() === date.getMonth()) {\n                let strTime = new Date(+date);\n                let endTime = new Date(new Date(strTime.getTime()).setHours(23, 59, 59, 59));\n                let perDayData = scheduleObj.eventBase.filterEvents(strTime, endTime, appointments);\n                if (perDayData.length > 0) {\n                    perDayData.sort((a, b) => (a.Fare - b.Fare));\n                    finalData.push(perDayData[0]);\n                }\n            }\n        }\n        return finalData;\n    };\n    const generateEvents = (scheduleObj) => {\n        let collections = [];\n        let dataCollections = [\n            {\n                Id: 100,\n                StartTime: new Date(2021, 3, 1, 8, 30),\n                EndTime: new Date(2021, 3, 1, 10, 0),\n                AirlineId: 1\n            }, {\n                Id: 102,\n                StartTime: new Date(2021, 3, 1, 11, 0),\n                EndTime: new Date(2021, 3, 1, 12, 0),\n                AirlineId: 2\n            }, {\n                Id: 103,\n                StartTime: new Date(2021, 3, 1, 14, 0),\n                EndTime: new Date(2021, 3, 1, 15, 0),\n                AirlineId: 3\n            }\n        ];\n        let start = new Date(2021, 3, 1);\n        let dateCollections = Array.apply(null, { length: 30 })\n            .map((value, index) => { return new Date(start.getTime() + (1000 * 60 * 60 * 24 * index)); });\n        let id = 1;\n        let day = 0;\n        for (let date of dateCollections) {\n            let resource = 1;\n            for (let data of dataCollections) {\n                let strDate = new Date(data.StartTime.getTime());\n                let endDate = new Date(data.EndTime.getTime());\n                collections.push({\n                    Id: id,\n                    StartTime: new Date(strDate.setDate(strDate.getDate() + day)),\n                    EndTime: new Date(endDate.setDate(endDate.getDate() + day)),\n                    AirlineId: resource,\n                    Fare: ((Math.random() * 500) + 100).toFixed(2)\n                });\n                resource += 1;\n                id += 1;\n            }\n            day += 1;\n        }\n        dManager = extend([], collections, null, true);\n        let filteredCollection = filterByFare(collections, scheduleObj);\n        return filteredCollection;\n    };\n    const template = (props) => {\n        return (<div className=\"template-wrap\">\n                <div className=\"fare-detail\">${props.Fare}</div>\n                <div className=\"airline-name\" style={{ display: 'flex', paddingLeft: '5px' }}>\n                    <div className={\"airline-logo \" + getAirwaysImage(props.AirlineId)}></div>\n                    <div className=\"airway-name\">{getAirwaysName(props.AirlineId)}</div>\n                </div>\n            </div>);\n    };\n    const toolTipTemplate = (props) => {\n        return (<div className=\"event-tooltip\">\n                <div className=\"airline-header\">\n                    <div className={\"airline-logo \" + getAirwaysImage(props.AirlineId)}></div>\n                    <div className=\"airline-name\">{getAirwaysName(props.AirlineId)}</div>\n                </div>\n                <div className=\"airline-details text-size\">\n                    <div className=\"airline-title\">Fare Details:</div>\n                    <div className=\"airline-fare\">${props.Fare} per person</div>\n                </div>\n                <div className=\"airline-flex-row text-size\">\n                    <div className=\"airline-flex-col airline-title border-right\">Arrival</div>\n                    <div className=\"airline-flex-col airline-title text-right\">Depature</div>\n                </div>\n                <div className=\"airline-flex-row text-size\">\n                    <div className=\"airline-flex-col border-right\">{getFormattedTime(props.StartTime)}</div>\n                    <div className=\"airline-flex-col margin-right text-right\">{getFormattedTime(props.EndTime)}</div>\n                </div>\n            </div>);\n    };\n    return (<div className='schedule-control-section'>\n            <div className='col-lg-9 control-section'>\n                <div className='control-wrapper'>\n                    <div className='schedule-demo-heading'>Cheapest one way fares from Barcelona to Los Angeles</div>\n                    <ScheduleComponent ref={scheduleObj} cssClass='schedule-resources' width='100%' height='650px' readonly={true} selectedDate={new Date(2021, 3, 1)} eventSettings={{ template: template.bind(this), enableTooltip: true, tooltipTemplate: toolTipTemplate.bind(this) }} actionBegin={onActionBegin} dataBinding={onDataBinding} popupOpen={onPopupOpen} dataBound={onDataBound}>\n                        <ResourcesDirective>\n                            <ResourceDirective field='AirlineId' title='Airline' name='Airlines' allowMultiple={true} dataSource={resourceData} textField='text' idField='id'/>\n                        </ResourcesDirective>\n                        <ViewsDirective>\n                            <ViewDirective option='Month'/>\n                        </ViewsDirective>\n                        <Inject services={[Month]}/>\n                    </ScheduleComponent>\n                </div>\n            </div>\n            <div className='col-lg-3 property-section'>\n                <PropertyPane title='Properties'>\n                    <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\n                        <tbody>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '100%' }}>\n                                    <div className='airways-1'>\n                                        <CheckBoxComponent id='airways-1' cssClass='e-resource e-airways-1' checked={true} label='Airways 1' change={onChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '100%' }}>\n                                    <div className='airways-2'>\n                                        <CheckBoxComponent id='airways-2' cssClass='e-resource e-airways-2' checked={true} label='Airways 2' change={onChange}></CheckBoxComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '100%' }}>\n                                    <div className='airways-3'>\n                                        <CheckBoxComponent id='airways-3' cssClass='e-resource e-airways-3' checked={true} label='Airways 3' change={onChange}/>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n\n        </div>);\n};\nexport default Resources;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Resources />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-react-schedule\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@microsoft/signalr\":\"7.0.11\"}"}