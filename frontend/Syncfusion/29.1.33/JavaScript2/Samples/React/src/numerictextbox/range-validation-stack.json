{"index.css":" .control-section .content-wrapper.sample-numeric {\n        width: 30%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n.format-wrapper .e-float-input.e-numeric.e-input-group { \n    margin-bottom: 40px; \n}\n\n.sample-numeric .control-label {\n    padding: 24px 0px 10px 0px;\n    font-size: 12px;\n    opacity: 1;\n}\n\n.highcontrast #min,\n.highcontrast #max,\n.highcontrast #step {\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);;\n}\n\n.material3-dark #min,\n.material3-dark #max,\n.material3-dark #step,\n.material-dark #min,\n.material-dark #max,\n.material-dark #step {\n    background-color: rgba(0, 0, 0, 0);\n    color: rgb(255, 255, 255);\n}\n\n.fabric-dark #min,\n.fabric-dark #max,\n.fabric-dark #step {\n    background-color: rgb(32, 31, 31);\n    color: rgb(218, 218, 218);\n}\n\n.bootstrap-dark #min,\n.bootstrap-dark #max,\n.bootstrap-dark #step {\n    background-color: rgb(26, 26, 26);\n    color: rgb(240, 240, 240);\n}\n\n.bootstrap5-dark #min,\n.bootstrap5-dark #max,\n.bootstrap5-dark #step {\n    background-color: rgb(33, 37, 41);\n    color: rgb(255, 255, 255);\n}\n\n.tailwind-dark #min,\n.tailwind3-dark #min,\n.tailwind-dark #max,\n.tailwind3-dark #max,\n.tailwind-dark #step,\n.tailwind3-dark #step {\n    background-color: rgb(31, 41, 55);\n    color: rgb(255, 255, 255);\n}\n\n.fluent-dark #min,\n.fluent-dark #max,\n.fluent-dark #step {\n    background-color: rgb(27, 26, 25);\n    color: rgb(255, 255, 255);\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\n\nexport class Range extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section'>\n          <div className=' col-lg-8'>\n            <div className=\"content-wrapper format-wrapper sample-numeric\">\n              <div className=\"control-label\">Numeric TextBox\n              </div>\n              {/* Render numeric textbox with restriction in entering values */}\n              <NumericTextBoxComponent min={10} max={100} value={15} ref={numeric => this.numericInstance = numeric}>\n              </NumericTextBoxComponent>\n            </div>\n          </div>\n          <div className='col-lg-4 property-section'>\n            <PropertyPane title='Properties'>\n              <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\n                <tr>\n                  <td style={{ width: '30%' }}>\n                    <div>Min Value </div>\n                  </td>\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\n                    <div>\n                      <input id=\"min\" type=\"number\" inputMode=\"numeric\" className=\"form-control\"/>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '30%' }}>\n                    <div>Max Value </div>\n                  </td>\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\n                    <div>\n                      <input id=\"max\" type=\"number\" inputMode=\"numeric\" className=\"form-control\"/>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ width: '30%' }}>\n                    <div>Increment Step </div>\n                  </td>\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\n                    <div>\n                      <input id=\"step\" type=\"number\" inputMode=\"numeric\" max={100} min={0} className=\"form-control\"/>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>\n                    <div>\n                      <button id=\"buttonApply\" className=\"e-btn-small btn btn-primary\" style={{ marginBottom: '10px' }} onClick={this.applyRange.bind(this)}>Apply</button>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </PropertyPane>\n          </div>\n        </div>\n        \n      </div>);\n    }\n    numericInstance;\n    rendereComplete() {\n        /**custom render complete function */\n        document.getElementById('min').value = '10';\n        document.getElementById('max').value = '100';\n        document.getElementById('step').value = '1';\n    }\n    applyRange() {\n        let min = parseFloat(document.getElementById('min').value);\n        let max = parseFloat(document.getElementById('max').value);\n        let step = parseFloat(document.getElementById('step').value);\n        this.numericInstance.min = min;\n        this.numericInstance.max = max;\n        this.numericInstance.step = isNaN(step) ? 1 : step;\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Range />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}