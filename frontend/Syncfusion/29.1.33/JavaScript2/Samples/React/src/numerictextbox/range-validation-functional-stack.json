{"index.css":" .control-section .content-wrapper.sample-numeric {\n        width: 30%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n.format-wrapper .e-float-input.e-numeric.e-input-group { \n    margin-bottom: 40px; \n}\n\n.sample-numeric .control-label {\n    padding: 24px 0px 10px 0px;\n    font-size: 12px;\n    opacity: 1;\n}\n\n.highcontrast #min,\n.highcontrast #max,\n.highcontrast #step {\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);;\n}\n\n.material3-dark #min,\n.material3-dark #max,\n.material3-dark #step,\n.material-dark #min,\n.material-dark #max,\n.material-dark #step {\n    background-color: rgba(0, 0, 0, 0);\n    color: rgb(255, 255, 255);\n}\n\n.fabric-dark #min,\n.fabric-dark #max,\n.fabric-dark #step {\n    background-color: rgb(32, 31, 31);\n    color: rgb(218, 218, 218);\n}\n\n.bootstrap-dark #min,\n.bootstrap-dark #max,\n.bootstrap-dark #step {\n    background-color: rgb(26, 26, 26);\n    color: rgb(240, 240, 240);\n}\n\n.bootstrap5-dark #min,\n.bootstrap5-dark #max,\n.bootstrap5-dark #step {\n    background-color: rgb(33, 37, 41);\n    color: rgb(255, 255, 255);\n}\n\n.tailwind-dark #min,\n.tailwind3-dark #min,\n.tailwind-dark #max,\n.tailwind3-dark #max,\n.tailwind-dark #step,\n.tailwind3-dark #step {\n    background-color: rgb(31, 41, 55);\n    color: rgb(255, 255, 255);\n}\n\n.fluent-dark #min,\n.fluent-dark #max,\n.fluent-dark #step {\n    background-color: rgb(27, 26, 25);\n    color: rgb(255, 255, 255);\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { PropertyPane } from './property-pane';\n\nconst Range = () => {\n    const [minValue, setMinValue] = useState(10);\n    const [maxValue, setMaxValue] = useState(100);\n    const [stepValue, setStepValue] = useState(1);\n    const [numericBoxValues, setNumericBoxvalues] = useState({\n        min: 10,\n        max: 100,\n        step: 1,\n    });\n    const minvalue = (args) => {\n        setMinValue(parseInt(args.currentTarget.value));\n    };\n    const maxvalue = (args) => {\n        setMaxValue(parseInt(args.currentTarget.value));\n    };\n    const stepvalue = (args) => {\n        setStepValue(parseInt(args.currentTarget.value));\n    };\n    const applyRange = () => {\n        setNumericBoxvalues({\n            min: minValue,\n            max: maxValue,\n            step: stepValue\n        });\n    };\n    return (<div className='control-pane'>\r\n            <div className='control-section'>\r\n                <div className=' col-lg-8'>\r\n                    <div className=\"content-wrapper format-wrapper sample-numeric\">\r\n                        <div className=\"control-label\">Numeric TextBox</div>\r\n                        {/* Render numeric textbox with restriction in entering values */}\r\n                        <NumericTextBoxComponent min={numericBoxValues.min} max={numericBoxValues.max} step={numericBoxValues.step} value={15}/>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-4 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                            <tr>\r\n                                <td style={{ width: '30%' }}>\r\n                                    <div>Min Value </div>\r\n                                </td>\r\n                                <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <input id=\"min\" value={minValue} type=\"number\" inputMode=\"numeric\" className=\"form-control\" onChange={minvalue.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '30%' }}>\r\n                                    <div>Max Value </div>\r\n                                </td>\r\n                                <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <input id=\"max\" value={maxValue} type=\"number\" inputMode=\"numeric\" className=\"form-control\" onChange={maxvalue.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ width: '30%' }}>\r\n                                    <div>Increment Step </div>\r\n                                </td>\r\n                                <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                                    <div>\r\n                                        <input id=\"step\" value={stepValue} type=\"number\" inputMode=\"numeric\" max={100} min={0} className=\"form-control\" onChange={stepvalue.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <div>\r\n                                        <button id=\"buttonApply\" className=\"e-btn-small btn btn-primary\" style={{ marginBottom: '10px' }} onClick={applyRange}>Apply</button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n       </div>);\n};\nexport default Range;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Range />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}