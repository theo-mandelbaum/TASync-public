{"index.css":" .control-section .content-wrapper.sample-numeric {\n        width: 30%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n.format-wrapper .e-float-input.e-numeric.e-input-group { \n    margin-bottom: 40px; \n}\n\n.sample-numeric .control-label {\n    padding: 24px 0px 10px 0px;\n    font-size: 12px;\n    opacity: 1;\n}\n\n.highcontrast #min,\n.highcontrast #max,\n.highcontrast #step {\n    background-color: rgb(0, 0, 0);\n    color: rgb(255, 255, 255);;\n}\n\n.material3-dark #min,\n.material3-dark #max,\n.material3-dark #step,\n.material-dark #min,\n.material-dark #max,\n.material-dark #step {\n    background-color: rgba(0, 0, 0, 0);\n    color: rgb(255, 255, 255);\n}\n\n.fabric-dark #min,\n.fabric-dark #max,\n.fabric-dark #step {\n    background-color: rgb(32, 31, 31);\n    color: rgb(218, 218, 218);\n}\n\n.bootstrap-dark #min,\n.bootstrap-dark #max,\n.bootstrap-dark #step {\n    background-color: rgb(26, 26, 26);\n    color: rgb(240, 240, 240);\n}\n\n.bootstrap5-dark #min,\n.bootstrap5-dark #max,\n.bootstrap5-dark #step {\n    background-color: rgb(33, 37, 41);\n    color: rgb(255, 255, 255);\n}\n\n.tailwind-dark #min,\n.tailwind3-dark #min,\n.tailwind-dark #max,\n.tailwind3-dark #max,\n.tailwind-dark #step,\n.tailwind3-dark #step {\n    background-color: rgb(31, 41, 55);\n    color: rgb(255, 255, 255);\n}\n\n.fluent-dark #min,\n.fluent-dark #max,\n.fluent-dark #step {\n    background-color: rgb(27, 26, 25);\n    color: rgb(255, 255, 255);\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { SampleBase } from './sample-base';\n\nexport class Restrict extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section'>\n          <div className=\"content-wrapper format-wrapper sample-numeric\">\n            <div className=\"control-label\">Numeric TextBox\n            </div>\n            {/* Render the Numeric Textbox with decimal places as 3 */}\n            <NumericTextBoxComponent format='n3' decimals={3} validateDecimalOnType={true} value={10}>\n            </NumericTextBoxComponent>\n            <div className=\"control-label\">Percentage TextBox\n            </div>\n            {/* Render the Percentage Textbox with decimal places as 3 */}\n            <NumericTextBoxComponent format='p3' decimals={3} validateDecimalOnType={true} value={0.5} min={0} max={1} step={0.01}>\n            </NumericTextBoxComponent>\n            <div className=\"control-label\">Currency TextBox\n            </div>\n            {/* Render the Currency Textbox with decimal places as 3 */}\n            <NumericTextBoxComponent format='c3' decimals={3} validateDecimalOnType={true} value={100}>\n            </NumericTextBoxComponent>\n          </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Restrict />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}