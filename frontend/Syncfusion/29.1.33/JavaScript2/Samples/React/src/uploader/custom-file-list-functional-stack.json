{"index.css":".dropArea {\n    min-height: 50px;\n    padding-top: 15px;\n    position: relative;\n}\n\n.drop {\n    padding: 3% 30% 3%;\n    display: inherit;\n    border: 1px dashed #c3c3cc;\n}\n\n.template_wrapper {\n    max-width: 400px;\n    margin: auto;\n}\n\n.template_wrapper .file-name-span {\n    font-size:  14px;\n}\n\n\n.e-bigger .template_wrapper .file-name-span {\n    font-size:  15px;\n}\n\n.template_wrapper .e-file-select-wrap {\n    display: none;\n}\n\n.template_wrapper .e-upload {\n    float: none;\n    border: none;\n}\n\n.template_wrapper .ul-element {\n    list-style: none;\n    width: 100%;\n    padding-left: 0;\n}\n\n.template_wrapper .file-name {\n    padding: 8px 6px 8px 0;\n    font-size: 13px;\n    width: 46%;\n    display: inline-block;\n    position: relative;\n    top: 4px;\n}\n\n.property-section.template-panel .property-panel-section {\n    position: relative;\n    padding-left: 30px;\n}\n.e-bigger .property-section.template-panel .property-panel-section {\n     padding-left: 35px;\n}\n.template_wrapper .file-size {\n    padding: 4px;\n    font-size: 13px;\n    width: 18%;\n    display: inline-block;\n    position: relative;\n}\n\n.template_wrapper .file-lists {\n    border: 1px solid lightgray;\n    padding: 0 6px 0 14px;\n    margin-top: 15px;\n    position: relative;\n    background: rgba(0, 0, 0, 0.04);\n}\n\n.template_wrapper .file-size,.template_wrapper .file-name {\n    font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap\n}\n.template_wrapper span.progress-bar-container {\n    display: block;\n    float: right;\n    height: 20px;\n    right: 13%;\n    top: 14px;\n    position: relative;\n    width: 20%;\n}\n\n.template_wrapper .progress{\n    width: 100%;\n    height: 15px;\n    -webkit-appearance: none;\n}\n\n.template_wrapper .close-icon-container\n{\n    cursor: pointer;\n    font-size: 11px;\n    height: 26px;\n    margin: 0 12px 0 22px;\n    padding: 0;\n    position: absolute;\n    right: 0;\n    width: 26px;\n    top: 6px;\n}\n\n.template_wrapper .close-icon-container.e-icons::before {\n    left: 7px;\n    position: inherit;\n    top: 7px;\n    content: '\\e7e7';\n}\n\n.bootstrap4 .template_wrapper .close-icon-container.e-icons::before {\n    left: 7px;\n    position: inherit;\n    top: 7px;\n    content: '\\e745';\n}\n.tailwind .template_wrapper .close-icon-container.e-icons::before,\n.tailwind3 .template_wrapper .close-icon-container.e-icons::before,\n.tailwind-dark .template_wrapper .close-icon-container.e-icons::before,\n.tailwind3-dark .template_wrapper .close-icon-container.e-icons::before {\n    content: '\\e7e7';\n}\n\n.fabric .template_wrapper .close-icon-container.e-icons::before,\n.fabric-dark .template_wrapper .close-icon-container.e-icons::before,\n.highcontrast .template_wrapper .close-icon-container.e-icons::before {\n    content: '\\e953';\n}\n\n.material .template_wrapper .close-icon-container.e-icons::before,\n.material-dark .template_wrapper .close-icon-container.e-icons::before {\n    content: '\\e932';\n}\n\n.bootstrap .close-icon-container.e-icons::before,\n.bootstrap-dark .close-icon-container.e-icons::before {\n    content: '\\e7fc';\n}\n\n.bootstrap5 .template_wrapper .close-icon-container.e-icons::before,\n.bootstrap5-dark .template_wrapper .close-icon-container.e-icons::before {\n    content: '\\e7e7';\n}\n\n.bootstrap4 .template_wrapper .file-lists {\n    background: #fff;\n}\n\n\n.template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e94a';\n}\n\n.bootstrap4 .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e773';\n}\n\n.tailwind .template_wrapper .close-icon-container.delete-icon::before,\n.tailwind3 .template_wrapper .close-icon-container.delete-icon::before,\n.tailwind-dark .template_wrapper .close-icon-container.delete-icon::before,\n.tailwind3-dark .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e820';\n}\n\n.bootstrap5 .template_wrapper .close-icon-container.delete-icon::before,\n.bootstrap5-dark .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e820';\n}\n\n.fabric .template_wrapper .close-icon-container.delete-icon::before,\n.fabric-dark .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e965';\n}\n\n.highcontrast .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e965';\n}\n\n.tailwind .template_wrapper .close-icon-container.delete-icon,\n.tailwind3 .template_wrapper .close-icon-container.delete-icon {\n    top: 10px;\n}\n\n\n.template_wrapper .close-icon-container:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n    border-color: transparent;\n    border-radius: 50%;\n    box-shadow: 0 0 0 transparent;\n}\n\n.bootstrap4 .template_wrapper .close-icon-container:hover {\n    background-color: #e9ecef;\n    border-color: transparent;\n    border-radius: 4px;\n    box-shadow: 0 0 0 transparent;\n}\n\n\n.highcontrast .close-icon-container:hover {\n    background-color: #ffd939;\n    color: black;\n}\n\n.highcontrast .close-icon-container {\n    color: #ffffff;\n}\n\n.template_wrapper .upload-success {\n    color: #2bc700;\n}\n\n.template_wrapper .upload-fails {\n    color: #f44336;\n}\n\n.template_wrapper progress::-webkit-progress-bar {\n    border: 1px solid lightgrey;\n    background-color: #ffffff;\n    border-radius: 2px;\n}\n.bootstrap4 .template_wrapper progress::-webkit-progress-value {\n    background-color: #007bff;\n    border-radius: 4px; \n}\n\n#dropArea progress {\n    border: 1px solid lightgrey;\n    background-color: #ffffff;\n    border-radius: 2px;\n}\n.bootstrap4 #dropArea progress {\n    background-color: #dee2e6;\n    border-radius: 4px;\n}\n\n.highcontrast #dropArea progress {\n    background-color: #000000;\n}\n.highcontrast .template_wrapper progress::-webkit-progress-bar {\n    background-color: #000000;\n}\n.material .template_wrapper progress::-webkit-progress-value {\n    border-radius: 2px; \n    background-color: #ff4081;\n}\n.bootstrap .template_wrapper progress::-webkit-progress-value {\n    border-radius: 2px; \n    background-color: #1f496e;\n}\n.fabric .template_wrapper progress::-webkit-progress-value {\n    background-color: #1763ff;\n    border-radius: 2px; \n    top: -66px;\n}\n.highcontrast .template_wrapper progress::-webkit-progress-value {\n    background-color: #ffd939;\n    border-radius: 2px; \n}\n.material .template_wrapper progress::-moz-progress-bar {\n    border-radius: 2px; \n    background-color: #ff4081;\n}\n.bootstrap .template_wrapper progress::-moz-progress-bar {\n    border-radius: 2px; \n    background-color: #1f496e;\n}\n.fabric .template_wrapper progress::-moz-progress-bar {\n    background-color: #1763ff;\n    border-radius: 2px; \n    top: -66px;\n}\n.highcontrast .template_wrapper progress::-moz-progress-bar {\n    background-color: #ffd939;\n    border-radius: 2px; \n}\n.material .template_wrapper span a {\n    color:#ff4081;\n}\n.fabric .template_wrapper span a {\n    color: #1763ff;\n}\n.bootstrap .template_wrapper span a {\n    color: #1f496e;\n}\n.highcontrast .template_wrapper span a,\n.highcontrast .template_wrapper span a:hover {\n    color: #ffd939;\n}\n.material3-dark .template_wrapper span a,\n.material-dark .template_wrapper span a {\n    color:#56a4fd;\n}\n.fabric-dark .template_wrapper span a {\n    color:#0074cc;\n}\n.bootstrap-dark .template_wrapper span a {\n    color:#0070f0;\n}\n.bootstrap5-dark .template_wrapper span a {\n    color:#0d6efd;\n}\n.tailwind-dark .template_wrapper span a,\n.tailwind3-dark .template_wrapper span a {\n    color:#22d3ee;\n}\n.custom-panel {\n    padding-top: 25px;\n}\n.fluent .template_wrapper .close-icon-container.delete-icon::before,\n.fluent-dark .template_wrapper .close-icon-container.delete-icon::before {\n    content: '\\e820';\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\n\nimport { PropertyPane } from './property-pane';\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { detach, createElement, EventHandler, Browser } from '@syncfusion/ej2-base';\n\nimport { useEffect, useRef } from 'react';\nconst CustomTemplate = () => {\n    // Uploader component\n    useEffect(() => {\n        renderComplete();\n    }, []);\n    let uploadObj = useRef(null);\n    let parentElement;\n    let progressbarContainer;\n    let filesDetails = [];\n    let filesList = [];\n    let dropElement;\n    let asyncSettings;\n    let dropRef;\n    let dropContainerRef;\n    let dropContainerEle;\n    let buttonRef;\n    let dropAreaEle;\n    let btnRef;\n    dropAreaEle = null;\n    dropContainerEle = null;\n    dropRef = element => {\n        dropAreaEle = element;\n    };\n    buttonRef = (element) => {\n        btnRef = element;\n    };\n    dropContainerRef = element => {\n        dropContainerEle = element;\n    };\n    asyncSettings = {\n        saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n        removeUrl: 'http://localhost:62728/api/FileUploader/Remove'\n    };\n    const onSuccess = (args) => {\n        let spinnerElement = dropAreaEle;\n        let li = dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        if (args.operation === 'upload') {\n            li.querySelector('.close-icon-container').classList.add('delete-icon');\n            detach(li.getElementsByTagName('progress')[0]);\n            li.querySelector('.file-size').style.display = 'inline-block';\n            li.querySelector('.file-name').style.color = 'green';\n            li.querySelector('.e-icons').onclick = () => {\n                createSpinner({ target: spinnerElement, width: '25px' });\n                showSpinner(spinnerElement);\n            };\n            li.querySelector('.close-icon-container').onkeydown = (e) => {\n                if (e.keyCode === 13) {\n                    createSpinner({ target: spinnerElement, width: '25px' });\n                    showSpinner(spinnerElement);\n                }\n            };\n        }\n        else {\n            filesDetails.splice(filesList.indexOf(li), 1);\n            filesList.splice(filesList.indexOf(li), 1);\n            uploadObj.current.element.value = '';\n            detach(li);\n            hideSpinner(spinnerElement);\n            detach(spinnerElement.querySelector('.e-spinner-pane'));\n        }\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n    };\n    const onFileSelect = (args) => {\n        if (dropAreaEle.lastChild.className !== 'upload-list-root') {\n            parentElement = createElement('div', { className: 'upload-list-root' });\n            parentElement.appendChild(createElement('ul', { className: 'ul-element' }));\n            dropAreaEle.appendChild(parentElement);\n        }\n        for (let i = 0; i < args.filesData.length; i++) {\n            formSelectedData(args.filesData[i], this); // create the LI element for each file Data\n        }\n        filesDetails = filesDetails.concat(args.filesData);\n        uploadObj.current.upload(args.filesData, true);\n        args.cancel = true;\n    };\n    const formSelectedData = (selectedFiles, proxy) => {\n        let liEle = createElement('li', { className: 'file-lists', attrs: { 'data-file-name': selectedFiles.name } });\n        liEle.appendChild(createElement('span', { className: 'file-name ', innerHTML: selectedFiles.name }));\n        liEle.appendChild(createElement('span', { className: 'file-size ', innerHTML: uploadObj.current.bytesToSize(selectedFiles.size) }));\n        if (selectedFiles.statusCode === '1') {\n            progressbarContainer = createElement('span', { className: 'progress-bar-container' });\n            progressbarContainer.appendChild(createElement('progress', { className: 'progress', attrs: { value: '0', max: '100' } }));\n            liEle.appendChild(progressbarContainer);\n        }\n        else {\n            liEle.querySelector('.file-name').classList.add('upload-fails');\n        }\n        let closeIconContainer = createElement('span', { className: 'e-icons close-icon-container' });\n        EventHandler.add(closeIconContainer, 'click', removeFiles, proxy);\n        liEle.appendChild(closeIconContainer);\n        dropAreaEle.querySelector(\".ul-element\").appendChild(liEle);\n        filesList.push(liEle);\n    };\n    const onFileUpload = (args) => {\n        let li = dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        EventHandler.remove(li.querySelector('.close-icon-container'), 'click', removeFiles);\n        let progressValue = Math.round((args.e.loaded / args.e.total) * 100);\n        if (!isNaN(progressValue)) {\n            li.getElementsByTagName('progress')[0].value = progressValue; // Updating the progress bar value\n        }\n    };\n    const onUploadFailed = (args) => {\n        let li = dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n        li.querySelector('.file-name ').classList.add('upload-fails');\n        if (args.operation === 'upload') {\n            detach(li.querySelector('.progress-bar-container'));\n        }\n    };\n    const removeFiles = (args) => {\n        let status = filesDetails[filesList.indexOf(args.currentTarget.parentElement)].statusCode;\n        if (status === '2') {\n            uploadObj.current.remove(filesDetails[filesList.indexOf(args.currentTarget.parentElement)]);\n        }\n        else {\n            detach(args.currentTarget.parentElement);\n        }\n    };\n    const onRemoveFile = (args) => {\n        args.postRawFile = false;\n    };\n    const renderComplete = () => {\n        dropAreaEle.children[0].children[0].onclick = () => {\n            dropAreaEle.children[1].children[0].querySelector('button').click();\n            return false;\n        };\n        dropElement = dropContainerEle;\n        btnRef.onclick = () => {\n            if (!dropAreaEle.lastChild) {\n                return;\n            }\n            detach(dropAreaEle.lastChild);\n            filesList = [];\n            filesDetails = [];\n        };\n        uploadObj.current.element.setAttribute('name', 'UploadFiles');\n        uploadObj.current.dropArea = dropElement;\n        uploadObj.current.dataBind();\n        if (Browser.isDevice) {\n            uploadObj.current.dropArea.querySelector('drop').style.padding = '4% 13%';\n        }\n    };\n    return (<div className='control-pane' ref={dropContainerRef}>\r\n\t\t\t<div className='control-section uploadpreview'>\r\n                <div className='col-lg-9'>\r\n                    <div className='template_wrapper'>\r\n                        {/* Render Uploader */}\r\n                        <div id='dropArea' className='dropArea' ref={dropRef}>\r\n                            <span id='drop' className='file-name-span drop'> Drop files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\r\n                            <UploaderComponent id='fileUpload' type='file' ref={uploadObj} asyncSettings={asyncSettings} success={onSuccess.bind(this)} removing={onRemoveFile.bind(this)} selected={onFileSelect.bind(this)} progress={onFileUpload.bind(this)} failure={onUploadFailed.bind(this)} dropArea={dropElement}></UploaderComponent>\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='property-section template-panel col-lg-3'>\r\n\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t<div className='custom-panel'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" ref={buttonRef} id=\"clearbtn\" title=\"Clear All\">Clear All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>);\n};\nexport default CustomTemplate;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CustomTemplate />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}