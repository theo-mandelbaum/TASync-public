{"index.css":".upload_wrapper, .rtl_wrapper,.validation_wrapper {\n    max-width: 400px;\n\tmargin: auto;\n}\n\n.upload_wrapper .e-upload, .rtl_wrapper .e-upload, .validation_wrapper .e-upload {\n    width: 100%;\n    position: relative;\n    margin-top: 15px;\n}\n\n.upload_wrapper .e-upload .e-upload-drag-hover, .rtl_wrapper .e-upload .e-upload-drag-hover,  .validation_wrapper .e-upload .e-upload-drag-hover {\n    margin: 0;\n}\n\n#uploader .property-panel-content {\n    min-height: 200px;\n}\n\n.property-section.preload-panel .property-panel-section {\n    position: relative;\n    padding-left: 30px;\n}\n.e-bigger .property-section.preload-panel {\n\tposition: relative;\n    padding-left: 35px;\n}\n.property-section .chunk-table {\n    width: 100%;\n    margin-top: 15px;\n}\n.chunk-td {\n    width: 50%;\n}\n\n.default-check {\n    margin-left: 50px;\n    padding-top: 25px;\n}\n\n.panel-style {\n    padding-top: 25px;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\n\n\nimport { PropertyPane } from './property-pane';\nimport { UploaderComponent, FilesDirective, UploadedFilesDirective } from '@syncfusion/ej2-react-inputs';\nimport { useEffect, useRef } from 'react';\nconst Preloadfiles = () => {\n    // Uploader component\n    let uploadObj = useRef(null);\n    let dropElement;\n    let asyncSettings;\n    let dropContainerRef;\n    let dropContainerEle;\n    dropContainerEle = null;\n    dropContainerRef = element => {\n        dropContainerEle = element;\n    };\n    asyncSettings = {\n        saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n        removeUrl: 'http://localhost:62728/api/FileUploader/Remove'\n    };\n    const rendereComplete = () => {\n        dropElement = dropContainerEle;\n        uploadObj.current.dropArea = dropElement;\n        uploadObj.current.dataBind();\n        uploadObj.current.element.setAttribute('name', 'UploadFiles');\n    };\n    const onRemoveFile = (args) => {\n        args.postRawFile = false;\n    };\n    const clearButtonClick = () => {\n        uploadObj.current.clearAll();\n    };\n    return (<div className='control-pane' ref={dropContainerRef}>\r\n\t\t\t<div className='control-section uploadpreview'>\r\n\t\t\t\t<div className='col-lg-9'>\r\n\t\t\t\t\t<div className='validation_wrapper'>\r\n\t\t\t\t\t\t<UploaderComponent id='validation' type='file' ref={uploadObj} asyncSettings={asyncSettings} removing={onRemoveFile.bind(this)}>\r\n\t\t\t\t\t\t\t<FilesDirective>\r\n\t\t\t\t\t\t\t\t<UploadedFilesDirective name=\"Nature\" size={25000} type=\".png\"></UploadedFilesDirective>\r\n\t\t\t\t\t\t\t\t<UploadedFilesDirective name=\"TypeScript succinctly\" size={12000} type=\".pdf\"></UploadedFilesDirective>\r\n\t\t\t\t\t\t\t\t<UploadedFilesDirective name=\"ASP.NET\" size={17000} type=\".docx\"></UploadedFilesDirective>\r\n\t\t\t\t\t\t\t</FilesDirective>\r\n\t\t\t\t\t\t</UploaderComponent>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='property-section preload-panel col-lg-3'>\r\n\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t<div className='panel-style'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" onClick={clearButtonClick.bind(this)} id=\"clearbtn\" title=\"Clear All\">Clear All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n      \t</div>);\n};\nexport default Preloadfiles;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Preloadfiles />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}