{"index.css":".control-section .imagepreview{\n    max-width: 505px;\n    margin: auto;\n}\n.imagepreview .e-file-select-wrap {\n    display: none;\n}\n.imagepreview .e-upload {\n    border: none;\n    margin-top: 10px;\n    width: 100%;\n}\n.imagepreview #dropimage {\n    font-size: 14px;\n}\n.e-bigger .imagepreview #dropimage {\n    font-size: 15px;\n}\n.control-pane #uploadpreview {\n    overflow: initial;\n}\n.imagepreview #dropArea {\n    border: 1px dashed #c3c3cc;\n    position: relative;\n    text-align: center;\n    padding-top: 20px;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n}\n.imagepreview #dropArea .e-upload .e-upload-files {\n    text-align: initial;\n    border-top: none;\n}\n.imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons,\n.imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons {\n    top: 120px;\n    background-color: white;\n    border-radius: 50%;\n    font-size: 12px;\n    left: 80px;\n}\n.imagepreview #dropArea .e-upload-files li .e-file-remove-btn.e-icons.e-upload-icon {\n    font-size: 14px;\n    left: 20px;\n}\n.imagepreview #dropArea .e-upload-files li:hover .e-icons {\n    visibility: visible;\n}\n.imagepreview #dropArea .e-upload-files li .e-icons {\n    visibility: hidden;\n}\n@font-face {\n    font-family: 'Uploader_Icon';\n    src:\n    url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmoZcPvgAAAcgAAABAaGVhZBLQTSUAAADQAAAANmhoZWEINQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAgAAAAAAHAAAAABm1heHABDgAdAAABCAAAACBuYW1lQySinQAAAggAAAIxcG9zdLfl0usAAAQ8AAAAMgABAAAEAAAAAFwEAAAAAAAD2AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAA2vKJUF8PPPUACwQAAAAAANftBBgAAAAA1+0EGAAAAAAD2AP4AAAACAACAAAAAAAAAAEAAAACABEAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAIAAAAAIAAAAAA9gD+AAHABAAADchESMVITUjEzM3ETMRFzMBKAOwPvzMPp1mtUC1Zv7FCAF6vb0BO7X+EAHwtQE7AAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBVcGxvYWRlclJlZ3VsYXJVcGxvYWRlclVwbG9hZGVyVmVyc2lvbiAxLjBVcGxvYWRlckZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAVQBwAGwAbwBhAGQAZQByAFIAZQBnAHUAbABhAHIAVQBwAGwAbwBhAGQAZQByAFUAcABsAG8AYQBkAGUAcgBWAGUAcgBzAGkAbwBuACAAMQAuADAAVQBwAGwAbwBhAGQAZQByAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAAhVcGxvYWRlcgAAAAA=) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n}\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon{\n    font-family: 'Uploader_Icon';\n    speak: none;\n    font-size: 16px;\n    left: 20px;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon::before{\n    content: '\\e700';\n}\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons:not(.e-uploaded):hover{\n    background-color: #e6e6e6;\n    border-color: #adadad;\n    color: #333;\n}\n.material-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons,\n.material3-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons,\n.fabric-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons,\n.bootstrap-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons, \n.bootstrap5-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons,\n.tailwind-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons,\n.tailwind3-dark .imagepreview #dropArea .e-upload .e-upload-files .e-icons {\n    color: #333;\n}\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons,\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons {\n    background-color: #ffd939;\n}\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-delete-btn.e-icons::before,\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons::before{\n    color: black;\n}\n.imagepreview #dropArea .e-upload .e-upload-files .e-upload-file-list {\n    border: 0;\n    display: inline-block;\n    width: 165px;\n}\n.imagepreview .upload-image {\n    width: 150px;\n    height: 150px;\n    display: inline-flex;\n    background-size: contain;\n    margin: 7px;\n    text-align: center;\n    line-height: 10;\n    border-radius: 5px;\n}\n.imagepreview .upload-image:after {\n    content: \"\";\n    position: absolute;\n    top: 6px;\n    left: 6px;\n    width: inherit;\n    height: inherit;\n    background: lightgray url('http://via.placeholder.com/300?text=Loading...') no-repeat center;\n    color: transparent;\n    border-radius: 5px;\n}\n.highcontrast .imagepreview div.file-name,\n.material-dark .imagepreview div.file-name,\n.material3-dark .imagepreview div.file-name,\n.fabric-dark .imagepreview div.file-name,\n.bootstrap-dark .imagepreview div.file-name,\n.bootstrap5-dark .imagepreview div.file-name,\n.tailwind-dark .imagepreview div.file-name,\n.tailwind3-dark .imagepreview div.file-name,\n.fluent-dark .imagepreview div.file-name,\n.fluent2-dark .imagepreview div.file-name {\n    color: white;\n}\n.imagepreview div.file-name {\n    color: rgba(0, 0, 0, 0.87);\n    font-size: 14px;\n    padding: 3px 10px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 90%;\n    white-space: nowrap;\n}\n.highcontrast .imagepreview div.file-size {\n    color: white;\n}\n.imagepreview div.file-size {\n    font-size: 13px;\n    padding: 3px 10px;\n    overflow: hidden;\n}\n.imagepreview .progressbar {\n    background: #ff4081;\n    border: none;\n    border-radius: 10px;\n    height: 4px;\n    margin-left: 7px;\n    width: 90%;\n    top: -60px;\n    position: relative;\n}\n.bootstrap5 .imagepreview  .progressbar,\n.bootstrap5-dark .imagepreview  .progressbar,\n.tailwind .imagepreview  .progressbar,\n.tailwind3 .imagepreview  .progressbar,\n.tailwind-dark .imagepreview  .progressbar,\n.tailwind3-dark .imagepreview  .progressbar,\n.fluent-dark .imagepreview  .progressbar {\n    top: -70px;\n}\n.imagepreview #dropArea progress {\n    border: none;\n    background: #fff;\n    margin-left: 8px;\n}\n\n.highcontrast .imagepreview #dropArea progress,\n.material-dark .imagepreview #dropArea progress,\n.material3-dark .imagepreview #dropArea progress,\n.fabric-dark .imagepreview #dropArea progress,\n.bootstrap-dark .imagepreview #dropArea progress,\n.bootstrap5-dark .imagepreview #dropArea progress,\n.tailwind-dark .imagepreview #dropArea progress,\n.tailwind3-dark .imagepreview #dropArea progress {\n    border: none;\n    background: black;\n}\n.imagepreview progress::-webkit-progress-bar {\n    border: none;\n    background-color: #ffffff;\n}\n.highcontrast .imagepreview progress::-webkit-progress-bar {\n    border: none;\n    background-color: #000000;\n}\n.material .imagepreview progress::-webkit-progress-value {\n    border-radius: 2px; \n    background-color: #ff4081;\n}\n.bootstrap .imagepreview progress::-webkit-progress-value {\n    border-radius: 2px; \n    background-color: #1f496e;\n}\n.fabric .imagepreview progress::-webkit-progress-value {\n    background-color: #1763ff;\n    border-radius: 2px; \n    top: -66px;\n}\n.highcontrast .imagepreview progress::-webkit-progress-value {\n    background-color: #ffd939;\n    border-radius: 2px; \n}\n.material .imagepreview progress::-moz-progress-bar {\n    border-radius: 2px; \n    background-color: #ff4081;\n}\n.bootstrap .imagepreview progress::-moz-progress-bar {\n    border-radius: 2px; \n    background-color: #1f496e;\n}\n.fabric .imagepreview progress::-moz-progress-bar {\n    background-color: #1763ff;\n    border-radius: 2px; \n    top: -66px;\n}\n.highcontrast .imagepreview progress::-moz-progress-bar {\n    background-color: #ffd939;\n    border-radius: 2px; \n}\n.material .imagepreview #dropimage a {\n    color:#ff4081;\n}\n.fabric .imagepreview #dropimage a {\n    color: #1763ff;\n}\n.bootstrap .imagepreview #dropimage a {\n    color: #1f496e;\n}\n.highcontrast .imagepreview #dropimage a {\n    color: #ffd939;\n}\n.material3-dark .imagepreview #dropimage a,\n.material-dark .imagepreview #dropimage a {\n    color:#56a4fd;\n}\n.fabric-dark .imagepreview #dropimage a {\n    color:#0074cc;\n}\n.bootstrap-dark .imagepreview #dropimage a {\n    color:#0070f0;\n}\n.bootstrap5-dark .imagepreview #dropimage a {\n    color:#0d6efd;\n}\n.tailwind-dark .imagepreview #dropimage a,\n.tailwind3-dark .imagepreview #dropimage a {\n    color:#22d3ee;\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n\t.imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons, .e-bigger .imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons {\n\t   padding: 18px 25px 18px 12px;\n\t}\n}\n\n.panel-style {\n    padding-top: 25px;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\n\nimport { PropertyPane } from './property-pane';\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-react-popups';\nimport { detach, Browser, createElement, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\n\nimport { useEffect, useRef } from 'react';\nconst Preview = () => {\n    useEffect(() => {\n        renderComplete();\n    }, []);\n    // Uploader component\n    let uploadObj = useRef(null);\n    let filesDetails = [];\n    let dropElement;\n    let filesList = [];\n    let filesName = [];\n    let parentElement;\n    let asyncSettings;\n    let allowedExtensions;\n    let dropContainerEle = null;\n    let dropAreaEle = null;\n    let dropImageEle = null;\n    let buttonEle;\n    let clearEle;\n    let dropArea;\n    let dropContainerRef = element => {\n        dropContainerEle = element;\n    };\n    let dropAreaRef = element => {\n        dropAreaEle = element;\n    };\n    let dropImageRef = element => {\n        dropImageEle = element;\n    };\n    let buttonRef = (element) => {\n        buttonEle = element;\n    };\n    let clearRef = (element) => {\n        clearEle = element;\n    };\n    asyncSettings = {\n        saveUrl: 'http://localhost:62728/api/FileUploader/Save',\n        removeUrl: 'http://localhost:62728/api/FileUploader/Remove'\n    };\n    allowedExtensions = '.jpg,.png,.jpeg';\n    const renderComplete = () => {\n        dropArea = dropAreaEle;\n        dropElement = dropContainerEle;\n        if (Browser.isDevice) {\n            dropImageEle.style.padding = '0px 10%';\n        }\n        uploadObj.current.element.setAttribute('name', 'UploadFiles');\n        dropAreaEle.children[0].children[0].onclick = () => {\n            dropAreaEle.children[1].children[0].querySelector('button').click();\n            return false;\n        };\n        clearEle.onclick = () => {\n            if (!dropElement.querySelector('ul')) {\n                return;\n            }\n            detach(dropElement.querySelector('ul'));\n            filesList = [];\n            filesDetails = [];\n            filesName = [];\n            if (dropArea.classList.contains('e-spinner-pane')) {\n                hideSpinner(dropArea);\n                detach(dropElement.querySelector('.e-spinner-pane'));\n            }\n        };\n        buttonEle.onclick = () => {\n            if (dropElement.querySelector('ul') && filesDetails.length > 0) {\n                uploadObj.current.upload(filesDetails, true);\n            }\n        };\n        uploadObj.current.dropArea = dropElement;\n        uploadObj.current.dataBind();\n    };\n    const onSelect = (args) => {\n        if (!dropElement.querySelector('li')) {\n            filesDetails = [];\n        }\n        if (isNullOrUndefined(dropArea.querySelector('.e-upload-files'))) {\n            parentElement = createElement('ul', { className: 'e-upload-files' });\n            dropAreaEle.children[1].appendChild(parentElement);\n        }\n        let validFiles = validateFiles(args, filesDetails);\n        if (validFiles.length === 0) {\n            args.cancel = true;\n            return;\n        }\n        for (let i = 0; i < validFiles.length; i++) {\n            formSelectedData(validFiles[i], this);\n        }\n        filesDetails = filesDetails.concat(validFiles);\n        args.cancel = true;\n    };\n    const validateFiles = (args, viewedFiles) => {\n        let modifiedFiles = [];\n        let validFiles = [];\n        let isModified = false;\n        if (args.event.type === 'drop') {\n            isModified = true;\n            let allImages = ['png', 'jpg', 'jpeg'];\n            let files = args.filesData;\n            for (let file of files) {\n                if (allImages.indexOf(file.type) !== -1) {\n                    modifiedFiles.push(file);\n                }\n            }\n        }\n        let files = modifiedFiles.length > 0 || isModified ? modifiedFiles : args.filesData;\n        if (filesName.length > 0) {\n            for (let file of files) {\n                if (filesName.indexOf(file.name) === -1) {\n                    filesName.push(file.name);\n                    validFiles.push(file);\n                }\n            }\n        }\n        else {\n            for (let file of files) {\n                filesName.push(file.name);\n                validFiles.push(file);\n            }\n        }\n        return validFiles;\n    };\n    const formSelectedData = (file, proxy) => {\n        let liEle = createElement('li', { className: 'e-upload-file-list', attrs: { 'data-file-name': file.name } });\n        let imageTag = createElement('IMG', { className: 'upload-image', attrs: { 'alt': 'Image' } });\n        let wrapper = createElement('span', { className: 'wrapper' });\n        wrapper.appendChild(imageTag);\n        liEle.appendChild(wrapper);\n        liEle.appendChild(createElement('div', { className: 'file-name', innerHTML: file.name, attrs: { 'title': file.name } }));\n        liEle.appendChild(createElement('div', { className: 'file-size', innerHTML: uploadObj.current.bytesToSize(file.size) }));\n        let clearbtn;\n        let uploadbtn;\n        clearbtn = createElement('span', { id: 'removeIcon', className: 'e-icons e-file-remove-btn', attrs: { 'title': 'Remove' } });\n        EventHandler.add(clearbtn, 'click', removeFiles, proxy);\n        liEle.setAttribute('title', 'Ready to Upload');\n        uploadbtn = createElement('span', { className: 'e-upload-icon e-icons e-file-remove-btn', attrs: { 'title': 'Upload' } });\n        uploadbtn.setAttribute('id', 'iconUpload');\n        EventHandler.add(uploadbtn, 'click', uploadFile, proxy);\n        let progressbarContainer;\n        progressbarContainer = createElement('progress', { className: 'progressbar', id: 'progressBar', attrs: { value: '0', max: '100' } });\n        liEle.appendChild(clearbtn);\n        liEle.appendChild(uploadbtn);\n        liEle.appendChild(progressbarContainer);\n        readURL(liEle, file);\n        dropAreaEle.children[1].children[1].appendChild(liEle);\n        filesList.push(liEle);\n    };\n    const uploadFile = (args) => {\n        uploadObj.current.upload([filesDetails[filesList.indexOf(args.currentTarget.parentElement)]], true);\n    };\n    const removeFiles = (args) => {\n        let removeFile = filesDetails[filesList.indexOf(args.currentTarget.parentElement)];\n        let statusCode = removeFile.statusCode;\n        if (statusCode === '2' || statusCode === '1') {\n            uploadObj.current.remove(removeFile, true);\n            uploadObj.current.element.value = '';\n        }\n        let index = filesList.indexOf(args.currentTarget.parentElement);\n        filesList.splice(index, 1);\n        filesDetails.splice(index, 1);\n        filesName.splice(filesName.indexOf(removeFile.name), 1);\n        if (statusCode !== '2') {\n            detach(args.currentTarget.parentElement);\n        }\n    };\n    const onFileUpload = (args) => {\n        let li = dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        let iconEle = li.querySelector('#iconUpload');\n        iconEle.style.cursor = 'not-allowed';\n        iconEle.classList.add('e-uploaded');\n        EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);\n        let progressValue = Math.round((args.e.loaded / args.e.total) * 100);\n        if (!isNaN(progressValue) && li.querySelector('.progressbar')) {\n            li.getElementsByTagName('progress')[0].value = progressValue;\n        }\n    };\n    const onUploadSuccess = (args) => {\n        let spinnerElement = dropAreaEle;\n        let li = dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        if (li && !isNullOrUndefined(li.querySelector('.progressbar'))) {\n            li.querySelector('.progressbar').style.visibility = 'hidden';\n        }\n        if (args.operation === 'upload') {\n            EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);\n            li.querySelector('.file-name').style.color = 'green';\n            li.querySelector('.e-icons').onclick = () => {\n                generateSpinner(dropArea);\n            };\n        }\n        else {\n            detach(li);\n            hideSpinner(spinnerElement);\n            detach(spinnerElement.querySelector('.e-spinner-pane'));\n        }\n        if (!isNullOrUndefined(li)) {\n            li.setAttribute('title', args.e.currentTarget.statusText);\n        }\n    };\n    const generateSpinner = (targetElement) => {\n        createSpinner({ target: targetElement, width: '25px' });\n        showSpinner(targetElement);\n    };\n    const onUploadFailed = (args) => {\n        let li = dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        li.querySelector('.file-name').style.color = 'red';\n        li.setAttribute('title', args.e.currentTarget.statusText);\n        if (args.operation === 'upload') {\n            EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);\n            li.querySelector('.progressbar').style.visibility = 'hidden';\n        }\n    };\n    const readURL = (li, args) => {\n        let preview = li.querySelector('.upload-image');\n        let file = args.rawFile;\n        let reader = new FileReader();\n        reader.addEventListener('load', () => { preview.src = reader.result; }, false);\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    };\n    const onRemoveFile = (args) => {\n        args.postRawFile = false;\n    };\n    return (<div className='control-pane' ref={dropContainerRef}>\r\n            <div className='control-section' id='uploadpreview'>\r\n                <div className='col-lg-9'>\r\n                    <div className='imagepreview'>\r\n                        <div id='dropArea' ref={dropAreaRef} className='dropTarget'>\r\n                            <span id='dropimage' ref={dropImageRef} className='file-name-drop'> Drop image (JPG, PNG) files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\r\n                            <UploaderComponent id='previewfileupload' type='file' ref={uploadObj} asyncSettings={asyncSettings} success={onUploadSuccess.bind(this)} selected={onSelect.bind(this)} removing={onRemoveFile.bind(this)} progress={onFileUpload.bind(this)} failure={onUploadFailed.bind(this)} allowedExtensions={allowedExtensions}></UploaderComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='property-section uploader-panel col-lg-3'>\r\n                    <PropertyPane title='Properties'>\r\n                        <div className='panel-style'>\r\n                            <button className=\"e-btn e-css\" id=\"clearbtn\" ref={clearRef} title=\"Clear All\">Clear All</button>\r\n                        </div>\r\n                        <div className='panel-style'>\r\n                            <button className=\"e-btn e-css\" id=\"uploadbtn\" ref={buttonRef} title=\"Upload All\">Upload All</button>\r\n                        </div>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default Preview;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Preview />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}