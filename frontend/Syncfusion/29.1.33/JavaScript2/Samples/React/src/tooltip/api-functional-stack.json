{"index.css":".userselect {\n  -webkit-user-select: none;\n  /* Safari 3.1+ */\n  -moz-user-select: none;\n  /* Firefox 2+ */\n  -ms-user-select: none;\n  /* IE 10+ */\n  user-select: none;\n  /* Standard syntax */\n}\n\n.tooltip-api #property {\n  padding-top: 200px;\n}\n\n#defaultTooltip {\n  width: 130px;\n  margin: 100px auto;\n}\n\n#tooltipContentValue {\n  height: 34px;\n  width: 136px;\n  padding-left: 10px;\n}\n\n.highcontrast #tooltipContentValue {\n  border: 1px solid;\n  border-width: 1px;\n  color: #fff;\n  background: #000;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Loading API sample\n */\nimport * as React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { ButtonComponent, CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { NumericTextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\nimport { TooltipComponent } from \"@syncfusion/ej2-react-popups\";\nimport { PropertyPane } from './property-pane';\n\n\nconst ApiTooltip = () => {\n    let tooltip = useRef(null);\n    let data = [\"Click\", \"Hover\", \"Auto\"];\n    const [content, setContent] = useState(\"Tooltip content\");\n    const [height, setHeight] = useState(45);\n    const [width, setWidth] = useState(100);\n    const [mode, setMode] = useState(\"Click\");\n    const [isSticky, setIsSticky] = useState(false);\n    const onClick = (args) => {\n        if (tooltip.current != null) {\n            if (!args.target.classList.contains(\"e-control\") && !args.target.classList.contains(\"e-btn\")) {\n                if (!tooltip.current.isSticky && document.getElementsByClassName(\"e-tooltip-wrap\").length > 0) {\n                    tooltip.current.close();\n                }\n            }\n        }\n    };\n    const onScroll = () => {\n        if (tooltip.current != null) {\n            if (document.getElementsByClassName(\"e-tooltip-wrap\").length > 0) {\n                tooltip.current.close();\n            }\n        }\n    };\n    const created = () => {\n        if (document.getElementById(\"right-pane\")) {\n            document.getElementById(\"right-pane\").addEventListener(\"click\", onClick.bind(this));\n            document.getElementById(\"right-pane\").addEventListener(\"scroll\", onScroll.bind(this));\n        }\n    };\n    const onModeChange = (args) => {\n        tooltip.current.close();\n        setMode(args.value);\n    };\n    const onHeightChange = (args) => {\n        tooltip.current.close();\n        setHeight(args.value);\n        tooltip.current.refresh(tooltip.current.element);\n    };\n    const onWidthChange = (args) => {\n        tooltip.current.close();\n        setWidth(args.value);\n        tooltip.current.refresh(tooltip.current.element);\n    };\n    const handleKeyPress = (args) => {\n        tooltip.current.close();\n        setContent(args.currentTarget.value);\n    };\n    const checkboxChange = (args) => {\n        if (tooltip.current != null) {\n            tooltip.current.close();\n            setIsSticky(args.checked);\n        }\n    };\n    return (<div className=\"control-pane\">\r\n            <div className=\"control-section\">\r\n                <div className=\"col-lg-8 control-section\">\r\n                    <TooltipComponent created={created.bind(this)} id=\"defaultTooltip\" ref={tooltip} content={content} height={height} width={width} opensOn={mode} isSticky={isSticky}>\r\n                        <ButtonComponent>Show Tooltip</ButtonComponent>\r\n                    </TooltipComponent>\r\n                </div>\r\n                <div className=\"col-lg-4 property-section tooltip-api\">\r\n                    <PropertyPane title=\"Properties\">\r\n                        <table id=\"property\" title=\"Properties\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Content</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            <input id=\"tooltipContentValue\" onKeyUp={handleKeyPress.bind(this)} type=\"text\" className=\"e-input\" placeholder=\"Tooltip content\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Height</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent id=\"height\" value={height} change={onHeightChange.bind(this)} aria-label=\"height value\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Width</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent id=\"width\" className=\"e-input\" value={width} change={onWidthChange.bind(this)} aria-label=\"width value\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Open Mode</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            <DropDownListComponent dataSource={data} value={mode} placeholder=\"Select mode\" change={onModeChange.bind(this)} id=\"ddlelement\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Sticky Mode</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            <CheckBoxComponent id=\"sticky\" checked={isSticky} change={checkboxChange.bind(this)} aria-label=\"sticky\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default ApiTooltip;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ApiTooltip />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}