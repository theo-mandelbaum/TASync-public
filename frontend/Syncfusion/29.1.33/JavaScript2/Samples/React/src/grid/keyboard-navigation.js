"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyboardNavigation = void 0;
var React = require("react");
var ej2_react_grids_1 = require("@syncfusion/ej2-react-grids");
var data_1 = require("./data");
var sample_base_1 = require("../common/sample-base");
require("./keyboard-nav.css");
var KeyboardNavigation = /** @class */ (function (_super) {
    __extends(KeyboardNavigation, _super);
    function KeyboardNavigation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.toolbarOptions = ['Add', 'Edit', 'Delete', 'Update', 'Cancel'];
        _this.editSettings = { allowEditing: true, allowAdding: true, allowDeleting: true, mode: 'Normal' };
        _this.editparams = { params: { popupHeight: '300px' } };
        _this.validationRules = { required: true };
        _this.orderidRules = { required: true, number: true };
        _this.pageSettings = { pageCount: 5 };
        _this.filterSettings = { type: 'Menu' };
        return _this;
    }
    KeyboardNavigation.prototype.render = function () {
        return (React.createElement("div", { className: 'control-pane' },
            React.createElement("div", { className: 'control-section' },
                React.createElement(ej2_react_grids_1.GridComponent, { dataSource: data_1.data, toolbar: this.toolbarOptions, allowPaging: true, allowFiltering: true, editSettings: this.editSettings, pageSettings: this.pageSettings, filterSettings: { type: 'Menu' }, allowSorting: true, allowGrouping: true, selectionSettings: { type: 'Multiple' } },
                    React.createElement(ej2_react_grids_1.ColumnsDirective, null,
                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'OrderID', headerText: 'Order ID', width: '120', textAlign: 'Right', validationRules: this.orderidRules, isPrimaryKey: true }),
                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'CustomerName', headerText: 'Customer Name', width: '150', validationRules: this.validationRules }),
                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'Freight', headerText: 'Freight', width: '120', format: 'C2', textAlign: 'Right', editType: 'numericedit' }),
                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'OrderDate', headerText: 'Order Date', textAlign: 'Right', editType: 'datepickeredit', format: 'yMd', width: '170', allowGrouping: false }),
                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'ShipCountry', headerText: 'Ship Country', width: '150', editType: 'dropdownedit', edit: this.editparams })),
                    React.createElement(ej2_react_grids_1.Inject, { services: [ej2_react_grids_1.Page, ej2_react_grids_1.Toolbar, ej2_react_grids_1.Edit, ej2_react_grids_1.Filter, ej2_react_grids_1.Sort, ej2_react_grids_1.Group, ej2_react_grids_1.Selection] })),
                React.createElement("div", { id: "action-description" },
                    React.createElement("p", null, "Keyboard shortcuts can be used to interact with DataGrid functionality. In the example below, various key combinations can be used to interact with the grid.")),
                React.createElement("div", { id: "description" },
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, "FOCUS ELEMENTS"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Home")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the focus to the first cell of the focused row.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "End")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the focus to the last cell of the focused row.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Home")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the focus to the first Cell of the first row in our DataGrid component."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "End")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the focus to the last Cell of the last row in our DataGrid component."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Down arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the cell focus downward from the focused cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Up arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the cell focus upward from the focused cell."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Right arrow"),
                                        "/",
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the cell focus right side from the focused cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Left arrow"),
                                        "/",
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the cell focus left side from the focused cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Alt"),
                                        "+",
                                        React.createElement("kbd", null, "J")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the focus to the entire grid. "),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Alt"),
                                        "+",
                                        React.createElement("kbd", null, "W")),
                                    React.createElement("span", { className: "keydescription" }, "- Move the focus to the grid content element"))))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, " PAGER"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Page down"),
                                        " / ",
                                        React.createElement("kbd", null, "Right arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Navigates to the next page.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Page up"),
                                        " / ",
                                        React.createElement("kbd", null, "Left arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Navigates to the previous page."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Enter"),
                                        " / ",
                                        React.createElement("kbd", null, "Space")),
                                    React.createElement("span", { className: "keydescription" }, "- Select the currently focused page.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }, "- Focus on the next pager item.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }, "- Focus on the previous pager item.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Home"),
                                        " / ",
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Alt"),
                                        "+",
                                        React.createElement("kbd", null, "Page up")),
                                    React.createElement("span", { className: "keydescription" }, "- Navigates to the first page.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "End"),
                                        " / ",
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Alt"),
                                        "+",
                                        React.createElement("kbd", null, "Page down")),
                                    React.createElement("span", { className: "keydescription" }, "- Navigates to the last page."))))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, "SELECTION"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Down arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Extends the row/cell selection downwards from the selected row/cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Up arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Extends the row/cell selection upwards from the selected row/cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Left arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Extends the cell selection to the left side from the selected cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Right arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Extends the cell selection to the right side from the selected cell."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves the row/cell selection upward from the selected row.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Esc")),
                                    React.createElement("span", { className: "keydescription" }, "- Deselects all the selected row/cells.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "A")),
                                    React.createElement("span", { className: "keydescription" }, "- Select all the row/cells in the current page.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Up arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves up a row/cell selection from the selected row/cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Down arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves down a row/cell selection from the selected row/cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Right arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves to the right cell selection from the selected cell.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Left arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Moves to the left cell selection from the selected cell."))))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, "EDITING"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "F2")),
                                    React.createElement("span", { className: "keydescription" }, "- Starts editing of selected row if Mode is Normal/Dialog or Starts editing of selected cell if Mode is Batch.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Saves the current form it the Mode is Normal or Dialog / Saves the current cell and starts editing the next row cell if Mode is Batch."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Del")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Deletes the current selected record."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Insert")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Creates a new add form depending on the NewRowPosition."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Navigates to the next editable cell if the Mode is Normal or Dialog / Saves the current cell and starts editing the next cell is Mode is Batch."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Tab")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Navigates to the previous editable cell if the Mode is Normal or Dialog / Saves the current cell and starts editing the previous cell is Mode is Batch"),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Saves the current cell and starts editing the previous row cell if Mode is Batch.")))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            " ",
                            React.createElement("b", null, "FILTERING"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Alt"),
                                        "+",
                                        React.createElement("kbd", null, "Down arrow")),
                                    React.createElement("span", { className: "keydescription" }, "- Opens the filter menu excel, menu and checkbox filter when its header element is in focused state."),
                                    " ")))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, "SORTING"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }, "- Performs sorting, ascending/descending on a column when its header element is in focused state."),
                                    " "),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }, "- Performs multi-sorting on a column when its header element is in focused state.")),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Shift"),
                                        "+",
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }, "- Clears sorting for the focused header column."),
                                    " ")))),
                    React.createElement("hr", null),
                    React.createElement("ul", null,
                        React.createElement("li", null,
                            React.createElement("b", null, "GROUPING"),
                            React.createElement("ul", null,
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Down arrow")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Expands all the Visible Group."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Up arrow")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Collapses all the visible groups."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Ctrl"),
                                        "+",
                                        React.createElement("kbd", null, "Space")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- Performs grouping when focused on a header element."),
                                React.createElement("li", null,
                                    React.createElement("span", { className: "keys" },
                                        React.createElement("kbd", null, "Enter")),
                                    React.createElement("span", { className: "keydescription" }),
                                    "- If the current cell is an expand/collapse cell then expands/collapses the current group/detailrow/childgrid.")))),
                    React.createElement("hr", null)))));
    };
    return KeyboardNavigation;
}(sample_base_1.SampleBase));
exports.KeyboardNavigation = KeyboardNavigation;
