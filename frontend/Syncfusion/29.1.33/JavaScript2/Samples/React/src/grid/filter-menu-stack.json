{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { GridComponent, ColumnsDirective, ColumnDirective, Page, Sort, Filter, Inject } from '@syncfusion/ej2-react-grids';\nimport { SampleBase } from './sample-base';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { Query, DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\nconst SAMPLE_CSS = `\nspan.e-input-group.e-ddl[aria-controls=\"ddlelement_popups\"],\nspan.e-input-group.e-ddl[aria-controls=\"ddlelement\"] {\n    margin-right: 15px;\n}`;\nexport class FilterMenu extends SampleBase {\n    gridInstance;\n    checkBoxInstance;\n    hostUrl = 'http://localhost:62728/';\n    data = new DataManager({ url: this.hostUrl + 'api/UrlDataSource', adaptor: new UrlAdaptor });\n    query = new Query().addParams('dataCount', '10000');\n    filterType = [\n        { text: 'Menu', value: 'Menu' },\n        { text: 'Checkbox', value: 'CheckBox' },\n        { text: 'Excel', value: 'Excel' },\n    ];\n    filterSettings = { type: 'Menu' };\n    fields = { text: 'text', value: 'value' };\n    onChange(sel) {\n        this.checkBoxInstance.checked = false;\n        this.gridInstance.filterSettings.enableInfiniteScrolling = false;\n        this.gridInstance.filterSettings.type = sel.itemData.value;\n        this.gridInstance.clearFiltering();\n        if (this.gridInstance.filterSettings.type === 'Excel' || this.gridInstance.filterSettings.type === 'CheckBox') {\n            this.checkBoxInstance.disabled = false;\n        }\n        else {\n            this.checkBoxInstance.disabled = true;\n        }\n    }\n    checkboxOnChange(args) {\n        this.gridInstance.filterSettings.enableInfiniteScrolling = args.checked;\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section row'>\n                    <style>\n                        {SAMPLE_CSS}\n                    </style>\n                    <div>\n                        <div style={{ padding: '14px', display: 'inline-block' }}>\n                            <DropDownListComponent id=\"ddlelement\" dataSource={this.filterType} fields={this.fields} change={this.onChange.bind(this)} index={0} popupHeight=\"150px\" width=\"200px\"/>\n                        </div>\n                            <CheckBoxComponent ref={checkBox => this.checkBoxInstance = checkBox} disabled={true} label='Enable OnDemand: ' labelPosition='Before' change={this.checkboxOnChange.bind(this)}></CheckBoxComponent>\n                    </div>\n                    <GridComponent dataSource={this.data} query={this.query} allowSorting={true} allowPaging={true} ref={grid => this.gridInstance = grid} pageSettings={{ pageSize: 10, pageCount: 5 }} allowFiltering={true} filterSettings={this.filterSettings}>\n                        <ColumnsDirective>\n                        <ColumnDirective field='EmployeeID' headerText='Employee ID' width='120' textAlign='Right'></ColumnDirective>\n                        <ColumnDirective field='Employees' headerText='Employee Name' width='150'></ColumnDirective>\n                        <ColumnDirective field='Designation' headerText='Designation' width='130' textAlign='Right'/>\n                        <ColumnDirective field='CurrentSalary' headerText='CurrentSalary' width='120' format='C2' textAlign='Right' editType='numericedit'/>\n                        </ColumnsDirective>\n                        <Inject services={[Filter, Page, Sort]}/>\n                    </GridComponent>\n                </div>\n\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<FilterMenu />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-react-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}