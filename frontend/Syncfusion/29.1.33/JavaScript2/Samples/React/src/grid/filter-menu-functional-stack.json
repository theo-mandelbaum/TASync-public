{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { GridComponent, ColumnsDirective, ColumnDirective, Page, Sort, Filter, Inject } from '@syncfusion/ej2-react-grids';\n\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { Query, DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\nfunction FilterMenu() {\n    const SAMPLE_CSS = `\n    span.e-input-group.e-ddl[aria-controls=\"ddlelement_popups\"],\n    span.e-input-group.e-ddl[aria-controls=\"ddlelement\"] {\n        margin-right: 15px;\n    }`;\n    let checkBoxInstance;\n    const hostUrl = 'http://localhost:62728/';\n    const data = new DataManager({ url: hostUrl + 'api/UrlDataSource', adaptor: new UrlAdaptor });\n    const query = new Query().addParams('dataCount', '10000');\n    let gridInstance;\n    const filterType = [\n        { text: 'Menu', value: 'Menu' },\n        { text: 'Checkbox', value: 'CheckBox' },\n        { text: 'Excel', value: 'Excel' },\n    ];\n    const filterSettings = { type: 'Menu' };\n    const fields = { text: 'text', value: 'value' };\n    function onChange(sel) {\n        checkBoxInstance.checked = false;\n        gridInstance.filterSettings.enableInfiniteScrolling = false;\n        gridInstance.filterSettings.type = sel.itemData.value;\n        gridInstance.clearFiltering();\n        if (gridInstance.filterSettings.type === 'Excel' || gridInstance.filterSettings.type === 'CheckBox') {\n            checkBoxInstance.disabled = false;\n        }\n        else {\n            checkBoxInstance.disabled = true;\n        }\n    }\n    function checkboxOnChange(args) {\n        gridInstance.filterSettings.enableInfiniteScrolling = args.checked;\n    }\n    return (<div className='control-pane'>\n            <div className='control-section row'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div>\n                    <div style={{ padding: '14px', display: 'inline-block' }}>\n                        <DropDownListComponent id=\"ddlelement\" dataSource={filterType} fields={fields} change={onChange.bind(this)} index={0} popupHeight=\"150px\" width=\"200px\"/>\n                    </div>\n                        <CheckBoxComponent ref={checkBox => checkBoxInstance = checkBox} label='Enable OnDemand: ' labelPosition='Before' disabled={true} change={checkboxOnChange.bind(this)}></CheckBoxComponent>\n                </div>\n                <GridComponent dataSource={data} query={query} allowSorting={true} allowPaging={true} ref={grid => gridInstance = grid} pageSettings={{ pageSize: 10, pageCount: 5 }} allowFiltering={true} filterSettings={filterSettings}>\n                    <ColumnsDirective>\n                        <ColumnDirective field='EmployeeID' headerText='Employee ID' width='120' textAlign='Right'></ColumnDirective>\n                        <ColumnDirective field='Employees' headerText='Employee Name' width='150'></ColumnDirective>\n                        <ColumnDirective field='Designation' headerText='Designation' width='130' textAlign='Right'/>\n                        <ColumnDirective field='CurrentSalary' headerText='CurrentSalary' width='120' format='C2' textAlign='Right'/>\n                    </ColumnsDirective>\n                    <Inject services={[Filter, Page, Sort]}/>\n                </GridComponent>\n            </div>\n\n        </div>);\n}\nexport default FilterMenu;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<FilterMenu />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-react-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}