{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, Annotations, AnnotationsDirective, AnnotationDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class SleepTracker extends SampleBase {\n    gauge;\n    load(args) {\n    }\n    axisLabelRender(args) {\n        if (args.value == 3 || args.value == 6 || args.value == 9 || args.value == 12) {\n            args.text = args.value.toString();\n        }\n        else {\n            args.text = \"\";\n        }\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <CircularGaugeComponent load={this.load.bind(this)} axisLabelRender={this.axisLabelRender.bind(this)} id='custom-labels' ref={gauge => this.gauge = gauge} background='transparent'>\n                        <Inject services={[Annotations]}/>\n                        <AxesDirective>\n                            <AxisDirective startAngle={0} endAngle={0} radius='70%' minimum={0} maximum={12} majorTicks={{\n                width: 2, height: 12, interval: 1, offset: 4\n            }} lineStyle={{ width: 0 }} minorTicks={{\n                width: 1, height: 7, interval: 0.2, offset: 4\n            }} labelStyle={{\n                hiddenLabel: 'First',\n                font: {\n                    fontFamily: 'inherit'\n                }\n            }}>\n                                <PointersDirective>\n                                    <PointerDirective type=\"Marker\" value={4.7} markerShape='Image' radius='97%' markerWidth={28} markerHeight={28} imageUrl=\"https://ej2.syncfusion.com/react/demos/src/circular-gauge/images/sun-icon.png\" animation={{\n                enable: false\n            }}>\n                                    </PointerDirective>\n                                    <PointerDirective type=\"Marker\" value={9} markerShape='Image' radius='98%' markerWidth={28} markerHeight={28} imageUrl=\"https://ej2.syncfusion.com/react/demos/src/circular-gauge/images/moon-icon.png\" animation={{\n                enable: false\n            }}>\n                                    </PointerDirective>\n                                </PointersDirective>\n                                <RangesDirective>\n                                    <RangeDirective start={0} end={4.7} startWidth={4} endWidth={4} color='#6453D0'></RangeDirective>\n                                    <RangeDirective start={12} end={9} startWidth={4} endWidth={4} color='#6453D0'></RangeDirective>\n                                    <RangeDirective start={4.7} end={9} startWidth={4} endWidth={4} color='#d7d3ed'></RangeDirective>\n                                </RangesDirective>\n                                <AnnotationsDirective>\n                                    <AnnotationDirective description='Mon, 5 Apr' content='<div style=\"font-size:15px;border-radius: 20px;border: 2px solid gray;padding: 5px 4px 5px;width: 93%;text-align: center;margin-left: 67px;\">Mon, 5 Apr</div>' angle={342} radius='129%' zIndex='1'/>\n                                    <AnnotationDirective content='<div style=\"font-size:15px;margin-left:25px\">07 hrs 43 mins</div>' description='07 hrs 43 mins' angle={185} radius='120%' zIndex='1'/>\n                                    <AnnotationDirective content='<div style=\"font-size:15px;margin-left: 34px;\">Sleep Time</div>' description='Sleep time' angle={185} radius='140%' zIndex='1'/>\n                                    <AnnotationDirective content='<div style=\"color:#6453D0;font-size:15px;margin-top: 54px;margin-left:28px\"><p style=\"text-align: center;\">4 Apr</p><p style=\"margin-top: -10px;\">9:00 PM</p></div>' description='4 Apr 9:00 PM' angle={285} radius='60%' zIndex='1'/>\n                                    <AnnotationDirective content='<div style=\"color:#6453D0;margin-top: -8px;\"> - </div>' description='-' angle={0} radius='0%' zIndex='1'/>\n                                    <AnnotationDirective content='<div style=\"color:#6453D0;font-size:15px;margin-left: -15px;margin-top: 56px;\"><p style=\"text-align: center;\">5 Apr </p><p style=\"margin-top: -10px;\">4:43 AM</p></div>' description='5 Apr 4:43 AM' angle={70} radius='50%' zIndex='1'/>\n                                </AnnotationsDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </CircularGaugeComponent>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                    <p>\n                        This sample represents the number of hours slept by a person using a sleep tracker. The sleep tracker also displays the start and end time of each sleep cycle.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to make the circular gauge look like a sleep tracker. Additionally, the date, start and end time, and duration of sleep are all displayed.\n                    </p>\n                    <p>\n                        More information on the circular gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\">documentation section</a>.\n                    </p>\n                </section>\n            </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<SleepTracker />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}