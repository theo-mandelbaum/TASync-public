{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class RangeColorAxis extends SampleBase {\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <CircularGaugeComponent animationDuration={2000} load={this.load.bind(this)} id='range-color' background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective startAngle={0} endAngle={0} radius='100%' direction='AntiClockWise' majorTicks={{\n                position: 'Outside',\n                width: 1,\n                height: 25,\n                interval: 10,\n                useRangeColor: true\n            }} lineStyle={{ width: 0 }} minorTicks={{\n                position: 'Outside',\n                width: 1,\n                height: 8,\n                interval: 2,\n                useRangeColor: true\n            }} labelStyle={{\n                offset: 2,\n                position: 'Outside',\n                useRangeColor: true,\n                hiddenLabel: 'First',\n                font: { fontFamily: 'inherit' }\n            }}>\n                                <PointersDirective>\n                                    <PointerDirective radius='0%' cap={{ radius: 0 }}/>\n                                </PointersDirective>\n                                <RangesDirective>\n                                    <RangeDirective start={0} end={35} radius='90%' color='#F8A197' startWidth={55} endWidth={55}/>\n                                    <RangeDirective start={35} end={70} radius='90%' color='#C45072' startWidth={55} endWidth={55}/>\n                                    <RangeDirective start={70} end={100} radius='90%' color='#1B679F' startWidth={55} endWidth={55}/>\n                                </RangesDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </CircularGaugeComponent>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                    <p>\n                        This sample shows the basic rendering of the circular gauge, which includes an axis and a range. Here, the appropriate range color is applied to its respective axis labels, minor ticks, and major ticks.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to render and configure the range and axis in the circular gauge with the same color. To accomplish this, set the <a target='_blank' href='https://ej2.syncfusion.com/react/documentation/api/circular-gauge/labelModel/#userangecolor'>useRangeColor</a> property in <a target='_blank' href='https://ej2.syncfusion.com/react/documentation/api/circular-gauge/labelModel/'>labelStyle</a>, <a target='_blank' href='https://ej2.syncfusion.com/react/documentation/api/circular-gauge/tickModel/'>majorTicks</a> and <a target='_blank' href='https://ej2.syncfusion.com/react/documentation/api/circular-gauge/tickModel/'>minorTicks</a>  to <b>true</b>.\n                    </p>\n                </section>\n            </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RangeColorAxis />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}