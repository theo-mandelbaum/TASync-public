{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, Annotations, AnnotationsDirective, AnnotationDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nconst MultipleRanges = () => {\n    const load = (args) => {\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className='control-section'>\n                <CircularGaugeComponent load={load.bind(this)} animationDuration={2000} id='multiple-ranges' background='transparent'>\n                    <Inject services={[Annotations]}/>\n                    <AxesDirective>\n                        <AxisDirective startAngle={230} endAngle={130} radius='90%' minimum={-30} maximum={120} hideIntersectingLabel={true} majorTicks={{ width: 0, interval: 10 }} lineStyle={{ width: 0 }} minorTicks={{ width: 0 }} labelStyle={{ offset: 50, position: 'Inside', autoAngle: true, font: { fontFamily: 'inherit' } }}>\n                            <AnnotationsDirective>\n                                <AnnotationDirective content='<div style=\"font-size:18px;margin-left: 5px;color:#9DD55A\"> 22.5\\u00b0C </div>' angle={180} radius='20%' zIndex='1'/>\n                            </AnnotationsDirective>\n                            <PointersDirective>\n                                <PointerDirective radius='45%' cap={{ radius: 10, color: 'white', border: { width: 4, color: '#F7B194' } }} value={22.5} pointerWidth={7} color='#F7B194' animation={{ enable: false }} needleTail={{ length: '25%', color: '#F7B194' }}/>\n                            </PointersDirective>\n                            <RangesDirective>\n                                <RangeDirective start={-30} end={-20} radius='90%' color='#58ABD5' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={-20} end={-10} radius='90%' color='#58ABD5' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={-10} end={0} radius='90%' color='#58ABD5' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={0} end={10} radius='90%' color='#58D2D5' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={10} end={20} radius='90%' color='#9DD55A' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={20} end={30} radius='90%' color='#9DD55A' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={30} end={40} radius='90%' color='#F1D158' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={40} end={50} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={50} end={60} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={60} end={70} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={70} end={80} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={80} end={90} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={90} end={100} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={100} end={110} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                                <RangeDirective start={110} end={120} radius='90%' color='#F48C6F' startWidth={35} endWidth={35}/>\n                            </RangesDirective>\n                        </AxisDirective>\n                    </AxesDirective>\n                </CircularGaugeComponent>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                <p>This sample shows temperature variations in a circular gauge using multiple ranges. In addition, the needle pointer and annotation help in displaying the temperature that has been measured.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to render and configure multiple ranges in the circular gauge. The <a target='_blank' href='https://ej2.syncfusion.com/react/documentation/api/circular-gauge/rangeModel/'>RangesDirective</a> collection can be used to define multiple ranges, each of which points to a different start and end value.\n                </p>\n                <p>\n                    More information on the ranges can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/gauge-ranges/\">documentation section</a>.\n                </p>\n            </section>\n        </main>);\n};\nexport default MultipleRanges;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<MultipleRanges />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}