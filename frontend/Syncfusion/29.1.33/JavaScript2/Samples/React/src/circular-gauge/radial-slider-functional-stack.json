{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, Annotations, AnnotationsDirective, AnnotationDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\n\nconst SAMPLE_CSS = `\n    .control-fluid {\n        padding: 0px !important;\n    }`;\nconst RadialSlider = () => {\n    let gauge = useRef(null);\n    let pointerValue;\n    const load = (args) => {\n    };\n    const dragMove = (args) => {\n        pointerValue = args.currentValue;\n        if (pointerValue != null) {\n            gauge.current.setPointerValue(0, 0, pointerValue);\n            gauge.current.setRangeValue(0, 0, 0, pointerValue);\n            gauge.current.setRangeValue(0, 1, pointerValue, 100);\n            gauge.current.setAnnotationValue(0, 0, '<div style=\"font-style: oblique; margin-left: 5px;font-size: 20px; margin-top: -2px;\"><span>' + Math.ceil(pointerValue) + '%</span></div>');\n        }\n    };\n    return (<main><div className='control-pane'>\n            <style>{SAMPLE_CSS}</style>\n            <div className='control-section'>\n                <CircularGaugeComponent load={load.bind(this)} dragMove={dragMove.bind(this)} enablePointerDrag={true} id='custom-labels' ref={gauge} background='transparent'>\n                    <Inject services={[Annotations]}/>\n                    <AxesDirective>\n                        <AxisDirective startAngle={0} endAngle={0} radius='80%' majorTicks={{ height: 0 }} lineStyle={{ width: 0 }} minorTicks={{ height: 0 }} labelStyle={{ offset: -1, font: { size: '0px' } }}>\n                            <PointersDirective>\n                                <PointerDirective type='Marker' value={30} markerShape='Circle' color='#2C75DC' radius='97%' markerWidth={25} markerHeight={25} animation={{ enable: false }}>\n                                </PointerDirective>\n                            </PointersDirective>\n                            <RangesDirective>\n                                <RangeDirective start={0} end={30} color='#2C75DC' startWidth={12} endWidth={12} radius='100%'/>\n                                <RangeDirective start={30} end={100} color='#BFD6F5' startWidth={12} endWidth={12} radius='100%'/>\n                            </RangesDirective>\n                            <AnnotationsDirective>\n                                <AnnotationDirective content='<div style=\"font-style: oblique; font-size: 20px; margin-top: -2px; margin-left: 5px\"><span>30%</span></div>' angle={180} radius='0%' zIndex='1'/>\n                            </AnnotationsDirective>\n                        </AxisDirective>\n                    </AxesDirective>\n                </CircularGaugeComponent>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                <p>This sample demonstrates how to create a range slider component by utilizing the functions available in the circular gauge.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                <p>In this example, you can see how to render and configure a new range slider in the circular gauge. It is possible to achieve this by combining ranges and a marker pointer. The marker pointer has been made interactive, so the value changes as you drag it.</p>\n                <p>\n                    More information on the circular gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\">documentation section</a>.\n                </p>\n            </section>\n        </main>);\n};\nexport default RadialSlider;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RadialSlider />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}