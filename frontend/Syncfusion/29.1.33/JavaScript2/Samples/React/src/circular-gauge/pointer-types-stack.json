{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, Annotations, AnnotationDirective, AnnotationsDirective, } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class Pointers extends SampleBase {\n    needlePointerGauge;\n    liveUpdateGauge;\n    needleInterval;\n    liveUpdateInterval;\n    load(args) {\n    }\n    onChartLoad(args) {\n        let id = args.gauge.element.id;\n        document.getElementById(id).setAttribute('title', '');\n        if (id === 'needle-pointer-container') {\n            this.needleInterval = setInterval(() => {\n                let newVal = Math.random() * (90 - 20) + 20;\n                if (document.getElementById('needle-pointer-container')) {\n                    this.needlePointerGauge.setPointerValue(0, 0, newVal);\n                }\n                else {\n                    clearInterval(+this.needleInterval);\n                }\n            }, 1000);\n        }\n        if (id === 'live-update-container') {\n            this.liveUpdateInterval = setInterval(() => {\n                let newVal = Math.random() * (80 - 30) + 30;\n                if (document.getElementById('live-update-container')) {\n                    this.liveUpdateGauge.setPointerValue(0, 0, newVal);\n                    this.liveUpdateGauge.setPointerValue(0, 1, newVal);\n                }\n                else {\n                    clearInterval(+this.needleInterval);\n                }\n            }, 1000);\n        }\n    }\n    ;\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <div className=\"row\" style={{ margin: '0px' }}>\n                        <div className=\"col-sm-12\" style={{ padding: '0px' }}>\n                            <div className=\"row\" style={{ margin: '0px' }}>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} background='transparent' centerY='40%' loaded={this.onChartLoad.bind(this)} id='marker-pointer-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 3, color: '#01aebe'\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={80} radius='100%' color='rgb(0,171,169)' type='Marker' markerShape='InvertedTriangle' markerHeight={15} markerWidth={15}/>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Marker bar pointer' content='<div style=\"font-size:14px;margin-top:10px;\">Marker pointer</div>' angle={180} zIndex='1' radius='28%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} centerY='40%' background='transparent' loaded={this.onChartLoad.bind(this)} id='rangebar-pointer-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 3, color: '#ff5985'\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n                width: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={66} radius='90%' color='#ff5985' type=\"RangeBar\" pointerWidth={10} animation={{ enable: true, duration: 1000 }}>\n                                                    </PointerDirective>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Range bar pointer' content='<div style=\"font-size:14px;margin-top:11px;\">Range bar pointer</div>' angle={180} zIndex='1' radius='28%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} centerY='40%' background='transparent' ref={gauge => this.needlePointerGauge = gauge} loaded={this.onChartLoad.bind(this)} id='needle-pointer-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 3, color: '#9250e6'\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={80} animation={{\n                enable: true, duration: 900\n            }} radius='100%' color='#923C99' pointerWidth={6} cap={{\n                radius: 0\n            }} needleTail={{ length: '4%', color: '#923C99' }}/>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Needle pointer' content='<div style=\"font-size:14px;margin-top:10px;\">Needle pointer</div>' angle={180} zIndex='1' radius='28%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\" style={{ margin: '0px' }}>\n                        <div className=\"col-sm-12\" style={{ padding: '0px' }}>\n                            <div className=\"row\" style={{ margin: '0px' }}>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} centerY='40%' background='transparent' loaded={this.onChartLoad.bind(this)} id='customized-pointer-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 3, color: '#1E7145'\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px', color: '#1E7145' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={80} radius='80%' color='green' pointerWidth={2} needleStartWidth={4} needleEndWidth={4} animation={{\n                enable: true, duration: 1000\n            }} cap={{\n                radius: 8,\n                color: 'green'\n            }} needleTail={{\n                length: '0%'\n            }}/>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Customized pointer' content='<div style=\"font-size:14px;margin-top:29px;\">Customized pointer</div>' angle={180} zIndex='1' radius='28%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} centerY='40%' background='transparent' loaded={this.onChartLoad.bind(this)} id='multiple-pointer-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 3, color: '#e3a21a'\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px', color: '#e3a21a' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={80} markerWidth={5} markerHeight={5} radius='60%' color='#e3a21a' pointerWidth={10} cap={{\n                radius: 8,\n                color: 'white',\n                border: {\n                    color: '#e3a21a',\n                    width: 1\n                }\n            }} animation={{\n                enable: true, duration: 1000\n            }} needleTail={{\n                length: '20%',\n                color: '#e3a21a'\n            }}/>\n                                                    <PointerDirective value={40} radius='60%' color='#ffb133' pointerWidth={10} markerWidth={5} markerHeight={5} cap={{\n                radius: 8, color: 'white',\n                border: {\n                    color: '#ffb133',\n                    width: 1\n                }\n            }} animation={{\n                enable: true, duration: 1000\n            }} needleTail={{\n                length: '20%',\n                color: '#e3a21a'\n            }}/>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Multiple pointers' content='<div style=\"font-size:14px;margin-top:22px;\">Multiple pointers</div>' angle={180} zIndex='1' radius='32%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <CircularGaugeComponent load={this.load.bind(this)} style={{ height: \"250px\" }} background='transparent' ref={gauge => this.liveUpdateGauge = gauge} centerY='40%' loaded={this.onChartLoad.bind(this)} id='live-update-container'>\n                                        <Inject services={[Annotations]}/>\n                                        <AxesDirective>\n                                            <AxisDirective startAngle={270} endAngle={90} radius='90%' minimum={0} maximum={100} lineStyle={{\n                width: 0\n            }} majorTicks={{\n                height: 0,\n                interval: 100\n            }} minorTicks={{\n                height: 0,\n            }} labelStyle={{\n                position: 'Outside',\n                font: { size: '0px' }\n            }}>\n                                                <PointersDirective>\n                                                    <PointerDirective value={40} animation={{\n                enable: false, duration: 100\n            }} radius='100%' color='#067bc2' pointerWidth={6} cap={{\n                radius: 0\n            }} needleTail={{ length: '4%', color: '#067bc2' }}/>\n                                                    <PointerDirective value={40} type=\"RangeBar\" radius=\"100%\" animation={{\n                enable: false, duration: 100\n            }} color='#067bc2' pointerWidth={5}/>\n                                                </PointersDirective>\n                                                <AnnotationsDirective>\n                                                    <AnnotationDirective description='Live update' content='<div style=\"font-size:14px;margin-top:22px;\">Live update</div>' angle={180} zIndex='1' radius='32%'></AnnotationDirective>\n                                                </AnnotationsDirective>\n                                            </AxisDirective>\n                                        </AxesDirective>\n                                    </CircularGaugeComponent>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n            </div>\n                    <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                        <p>\n                            This sample demonstrates the various pointer types available in the circular gauge.\n                        </p>\n                    </section>\n                    <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                        <p>\n                            In this example, you can see how to customize the pointer for an axis in the circular gauge. The circular gauge supports a variety of pointers, including marker, needle, and range bar. Additionally, the pointer can be customized, and multiple pointers can also be enabled.\n                        </p>\n                        <p>\n                            More information on the pointers can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/gauge-pointers/\">documentation section</a>.\n                        </p>\n                    </section>\n            </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Pointers />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}