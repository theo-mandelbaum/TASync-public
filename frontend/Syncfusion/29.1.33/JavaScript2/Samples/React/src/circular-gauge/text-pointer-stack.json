{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class TextPointer extends SampleBase {\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <CircularGaugeComponent load={this.load.bind(this)} centerY='75%' id='text-pointer' background='transparent'>\n                        <AxesDirective>\n                            <AxisDirective startAngle={270} endAngle={90} radius='120%' minimum={0} maximum={120} rangeGap={3} majorTicks={{\n                width: 0\n            }} lineStyle={{ width: 0 }} minorTicks={{\n                width: 0\n            }} labelStyle={{\n                font: {\n                    size: '0px'\n                }\n            }}>\n                                <PointersDirective>\n                                    <PointerDirective pointerWidth={10} radius='60%' needleStartWidth={1} needleEndWidth={1} value={82} cap={{ radius: 0 }} animation={{ enable: true }}>\n                                    </PointerDirective>\n                                    <PointerDirective radius='85%' type='Marker' value={20} text='Poor' markerShape='Text' animation={{ enable: false }} textStyle={{ size: '18px', fontFamily: 'inherit' }}>\n                                    </PointerDirective>\n                                    <PointerDirective radius='85%' type='Marker' value={60} text='Average' markerShape='Text' animation={{ enable: false }} textStyle={{ size: '18px', fontFamily: 'inherit' }}>\n                                    </PointerDirective>\n                                    <PointerDirective radius='85%' type='Marker' value={100} text='Good' markerShape='Text' animation={{ enable: false }} textStyle={{ size: '18px', fontFamily: 'inherit' }}>\n                                    </PointerDirective>\n                                </PointersDirective>\n                                <RangesDirective>\n                                    <RangeDirective start={0} end={20} radius='80%' startWidth={85} endWidth={85} color='#dd3800'>\n                                    </RangeDirective>\n                                    <RangeDirective start={20.5} end={40} radius='80%' startWidth={85} endWidth={85} color='#ff4100'>\n                                    </RangeDirective>\n                                    <RangeDirective start={40.5} end={60} radius='80%' startWidth={85} endWidth={85} color='#ffba00'>\n                                    </RangeDirective>\n                                    <RangeDirective start={60.5} end={80} radius='80%' startWidth={85} endWidth={85} color='#ffdf10'>\n                                    </RangeDirective>\n                                    <RangeDirective start={80.5} end={100} radius='80%' startWidth={85} endWidth={85} color='#8be724'>\n                                    </RangeDirective>\n                                    <RangeDirective start={100.5} end={120} radius='80%' startWidth={85} endWidth={85} color='#64be00'>\n                                    </RangeDirective>\n                                </RangesDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </CircularGaugeComponent>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                    <p>\n                        This sample visualizes the performance outcome of a work using the text pointer in the circular gauge.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                    <p>In this example, you can see how to use a text to customize the pointer in the circular gauge. The text can be added to the circular gauge's pointer primarily through the use of the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/pointerModel/#type\">type</a>, <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/pointerModel/#markershape\">markerShape</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/pointerModel/#text\">text</a> properties in the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/pointerModel/\">PointersDirective</a>.\n                    </p>\n                    <p>\n                        More information on the pointers can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/gauge-pointers/\">documentation section</a>.\n                    </p>\n                </section>\n            </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<TextPointer />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}