{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, Gradient } from '@syncfusion/ej2-react-circulargauge';\nimport { SampleBase } from './sample-base';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class Direction extends SampleBase {\n    gauge;\n    pointerColor;\n    labelColor;\n    pointerLinearGradient = {\n        startValue: '0%',\n        endValue: '100%',\n        colorStop: [\n            { color: '#ff6b78', offset: '0%', opacity: 0.9 },\n            { color: '#e20a22', offset: '70%', opacity: 0.9 }\n        ]\n    };\n    onLabelRender(args) {\n        args.text = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', ''][args.value];\n    }\n    ;\n    load(args) {\n    }\n    render() {\n        return (<main><div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <CircularGaugeComponent load={this.load.bind(this)} id='direction-gauge' background='transparent' ref={gauge => this.gauge = gauge} axisLabelRender={this.onLabelRender.bind(this)}>\n                        <Inject services={[Gradient]}/>\n                        <AxesDirective>\n                            <AxisDirective radius='80%' startAngle={0} endAngle={360} minimum={0} maximum={8} majorTicks={{\n                height: 15,\n                interval: 1\n            }} lineStyle={{ width: 20, color: '#E0E0E0' }} minorTicks={{\n                height: 10,\n                interval: 0.5\n            }} labelStyle={{\n                font: {\n                    fontFamily: 'inherit'\n                },\n                autoAngle: true,\n                offset: 10,\n                hiddenLabel: 'Last'\n            }}>\n                                <PointersDirective>\n                                    <PointerDirective value={7} radius='50%' color='#e20a22' pointerWidth={30} linearGradient={this.pointerLinearGradient} cap={{\n                radius: 15,\n                color: '#ffffff',\n                border: {\n                    width: 0\n                }\n            }} animation={{\n                enable: false\n            }}/>\n                                    <PointerDirective value={3} radius='50%' color='#f7f7f7' pointerWidth={30} cap={{\n                radius: 15, color: '#ffffff', border: {\n                    width: 0\n                }\n            }} animation={{\n                enable: false\n            }}/>\n                                </PointersDirective>\n                            </AxisDirective>\n                        </AxesDirective>\n                    </CircularGaugeComponent>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of Circular Gauge sample\">\n                    <p>\n                        This sample demonstrates how to create a direction compass by modifying the circular gauge's functionalities to meet the needs of the user.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the Circular Gauge features demonstrated in this sample\">\n                    <p>\n                        In this example, a direction compass has been depicted by adding a couple of needle pointers in the circular gauge and customizing labels to show the direction.\n                    </p>\n                    <p>\n                        More information on the circular gauge can be found in this <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\">documentation section</a>.\n                    </p>\n                </section>\n        </main>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Direction />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-react-circulargauge\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\"}"}