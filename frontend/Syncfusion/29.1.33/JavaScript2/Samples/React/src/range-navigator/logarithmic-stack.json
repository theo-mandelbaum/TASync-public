{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Logarithmic Axis Range Navigator\n */\nimport * as React from \"react\";\nimport { Inject, ChartComponent, Logarithmic, StepAreaSeries, StepLineSeries, SeriesCollectionDirective, SeriesDirective, Tooltip, Crosshair, RangeNavigatorComponent, RangenavigatorSeriesCollectionDirective, RangenavigatorSeriesDirective, RangeTooltip } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SampleBase } from './sample-base';\nexport let zoomFactor;\nexport let zoomPosition;\nexport let data = [];\nexport let max = 100;\nfor (let i = 0; i < 100; i++) {\n    data.push({\n        x: Math.pow(10, i * 0.1),\n        y: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    });\n}\nexport let themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2highcontrast', 'fluent2dark', 'tailwind3', 'tailwind3dark'];\nexport let borderColor = ['#FD7E14', '#FD7E14', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449', '#9BB449', '#2F4074', '#8029F1'];\nexport let regionColor = ['rgba(38, 46, 11, 0.3)', 'rgba(94, 203, 155, 0.3)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(0, 189, 174, 0.3)',\n    'rgba(158, 203, 8, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(68, 114, 196, 0.3)',\n    'rgba(68, 114, 196, 0.3)', 'rgba(121, 236, 228, 0.3)', 'rgba(97, 69, 112, 0.3)', 'rgba(138, 177, 19, 0.3)', 'rgba(47, 64, 116, 0.3)', 'rgba(128, 41, 241, 0.3)'];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px;\n    }\n    #title{\n        font-size: 15px;\n        font-style: normal;\n        font-family: \"Segoe UI\";\n        font-weight: 500;\n        text-anchor: middle;\n        transform: none;\n        opacity: 1;\n    }\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #material-gradient-chart stop {\n        stop-color: #00bdae;\n    }\n\n    #fabric-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n\n    #bootstrap-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #bootstrap4-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #highcontrast-gradient-chart stop {\n        stop-color: #79ECE4;\n    }\n\n    #tailwind-gradient-chart stop {\n        stop-color: #5A61F6;\n    }\n\n\t#tailwind3-gradient-chart stop {\n        stop-color: #2F4074;\n    }\n\n    #bootstrap5-gradient-chart stop {\n        stop-color: #FD7E14;\n    }\n\n    #material-dark-gradient-chart stop {\n        stop-color: #9ECB08;\n    }\n\n    #fabric-dark-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n\n    #bootstrap-dark-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #tailwinddark-gradient-chart stop {\n        stop-color: #8B5CF6;\n    }\n\n    #tailwind3-dark-gradient-chart stop {\n        stop-color: #8029F1;\n    }\n\n    #bootstrap5-dark-gradient-chart stop {\n        stop-color: #5ECB9B;\n    }\n\n    #fluent-gradient-chart stop {\n        stop-color: #614570;\n    }\n\n    #fluent-dark-gradient-chart stop {\n        stop-color: #8AB113;\n    }\n\n    #material3-gradient-chart stop {\n        stop-color: #6355C7;\n    }\n\n    #material3-dark-gradient-chart stop {\n        stop-color: #4EAAFF;\n    }\n\n    .chart-gradient stop[offset=\"0\"] {\n        stop-opacity: 0.9;\n    }\n\n    .chart-gradient stop[offset=\"0\"] {\n        stop-opacity: 0.9;\n    }\n\n    .chart-gradient stop[offset=\"1\"] {\n        stop-opacity: 0.3;\n    }\n    `;\nexport class LogarithmicAxis extends SampleBase {\n    chart1;\n    rangenavigator1;\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                <div className=\"row\" style={{ textAlign: \"center\" }}>\n                        <div id=\"title\">Inflation vs Goods Consumers</div>\n                    </div>\n                 <div className=\"row\">\n                 <RangeNavigatorComponent id='rangenavigator' ref={rangenavigator => this.rangenavigator1 = rangenavigator} style={{ textAlign: \"center\" }} labelPosition='Outside' valueType='Logarithmic' tooltip={{ enable: true }} interval={1} value={[4, 6]} labelIntersectAction='None' width={Browser.isDevice ? '100%' : '80%'} load={this.rangeLoad.bind(this)} labelRender={this.renderLabel.bind(this)} tooltipRender={this.renderTooltip.bind(this)} changed={this.changed.bind(this)}>\n                    <Inject services={[StepLineSeries, Logarithmic, RangeTooltip]}/>\n                    <RangenavigatorSeriesCollectionDirective>\n                            <RangenavigatorSeriesDirective dataSource={data} xName='x' yName='y' type='StepLine' width={2}>\n                            </RangenavigatorSeriesDirective>\n                        </RangenavigatorSeriesCollectionDirective>\n                    </RangeNavigatorComponent>\n                    </div>\n                     <div className=\"row\">\n                    <ChartComponent id='charts' ref={chart => this.chart1 = chart} style={{ textAlign: \"center\" }} primaryXAxis={{\n                valueType: 'Logarithmic',\n                crosshairTooltip: { enable: false },\n                interval: 1,\n                edgeLabelPlacement: 'Shift',\n                majorGridLines: { width: 0 },\n                title: 'Numbers of Goods Consumers'\n            }} primaryYAxis={{\n                minimum: 0, maximum: 100,\n                title: 'Inflation',\n                labelFormat: '{value}%',\n                majorTickLines: { width: 0 },\n                lineStyle: { width: 0 }\n            }} width={Browser.isDevice ? '100%' : '80%'} height='350' load={this.chartLoad.bind(this)} chartArea={{ border: { width: 0 } }} crosshair={{\n                enable: false,\n                lineType: 'Vertical'\n            }}>\n                        <Inject services={[StepAreaSeries, Logarithmic, Tooltip, Crosshair]}/>\n                        <SeriesCollectionDirective>\n                            <SeriesDirective dataSource={data} xName='x' yName='y' border={{ width: 2 }} type='StepArea' animation={{ enable: false }} marker={{ visible: true }} width={2}>\n                            </SeriesDirective>\n                        </SeriesCollectionDirective>\n                    </ChartComponent>\n                    </div>\n                    <svg style={{ height: '0' }}>\n                    <defs>\n                        <linearGradient id=\"material-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"fabric-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"bootstrap-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"bootstrap4-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"highcontrast-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n\t\t\t\t\t\t<linearGradient id=\"tailwind-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"tailwind3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"bootstrap5-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"material-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"fabric-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"bootstrap-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"tailwind-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"tailwind3-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"bootstrap5-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"fluent-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                       <linearGradient id=\"fluent-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"material3-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"material3-dark-gradient-chart\" style={{ opacity: 0.75 }} className=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                            <stop offset=\"0\"></stop>\n                            <stop offset=\"1\"></stop>\n                        </linearGradient>\n                    </defs>\n                </svg>\n            </div>\n        </div>);\n    }\n    changed(args) {\n        if (this.chart1) {\n            this.chart1.primaryXAxis.zoomFactor = args.zoomFactor;\n            this.chart1.primaryXAxis.zoomPosition = args.zoomPosition;\n            this.chart1.dataBind();\n        }\n        else {\n            zoomFactor = args.zoomFactor;\n            zoomPosition = args.zoomPosition;\n        }\n    }\n    ;\n    chartLoad(args) {\n        args.chart.primaryXAxis.zoomFactor = zoomFactor;\n        args.chart.primaryXAxis.zoomPosition = zoomPosition;\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        args.chart.series[0].fill = 'url(#' + selectedTheme.toLowerCase() + '-gradient-chart)';\n        args.chart.series[0].border.color = borderColor[themes.indexOf(args.chart.theme.toLowerCase())];\n    }\n    ;\n    rangeLoad(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.rangeNavigator.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        args.rangeNavigator.series[0].fill = 'url(#' + selectedTheme.toLowerCase() + '-gradient-chart)';\n        args.rangeNavigator.series[0].border.width = 2;\n        args.rangeNavigator.series[0].border.color = borderColor[themes.indexOf(args.rangeNavigator.theme.toLowerCase())];\n    }\n    ;\n    renderLabel(args) {\n        args.text = (+args.text).toExponential().toLocaleUpperCase();\n    }\n    ;\n    renderTooltip(args) {\n        args.text = [(+(+args.text).toFixed(1)).toExponential(1).toString().toLocaleUpperCase()];\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<LogarithmicAxis />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}