{"index.css":"/* css */","data-source.js":"/**\n * Chart datasource\n */\nexport let employeeData = [{\n        'EmployeeID': 1,\n        'yValue': 2,\n        'FirstName': 'Nancy',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 0, 1),\n    },\n    {\n        'EmployeeID': 2,\n        'yValue': 5,\n        'FirstName': 'Andrew',\n        'Title': 'Vice President, Sales',\n        'HireDate': new Date(1992, 1, 1),\n    },\n    {\n        'EmployeeID': 3,\n        'yValue': 8,\n        'FirstName': 'Janet',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 2, 1),\n    },\n    {\n        'EmployeeID': 4,\n        'yValue': 4,\n        'FirstName': 'Margaret',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 3, 1),\n    },\n    {\n        'EmployeeID': 5,\n        'yValue': 7,\n        'FirstName': 'Steven',\n        'Title': 'Sales Manager',\n        'HireDate': new Date(1992, 4, 1),\n    },\n    {\n        'EmployeeID': 6,\n        'yValue': 9,\n        'FirstName': 'Michael',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 5, 1),\n    },\n    {\n        'EmployeeID': 7,\n        'yValue': 6,\n        'FirstName': 'Robert',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 6, 1),\n    },\n    {\n        'EmployeeID': 8,\n        'yValue': 4,\n        'FirstName': 'Laura',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1992, 7, 1),\n    },\n    {\n        'EmployeeID': 9,\n        'yValue': 8,\n        'FirstName': 'Anne',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 8, 1),\n    }, {\n        'EmployeeID': 10,\n        'yValue': 2,\n        'FirstName': 'Fletcher',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 9, 1),\n    },\n    {\n        'EmployeeID': 11,\n        'yValue': 5,\n        'FirstName': 'Robin',\n        'Title': 'Vice President, Sales',\n        'HireDate': new Date(1992, 10, 1),\n    },\n    {\n        'EmployeeID': 12,\n        'yValue': 8,\n        'FirstName': 'Mathew',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 11, 1),\n    },\n    {\n        'EmployeeID': 13,\n        'yValue': 4,\n        'FirstName': 'Henry',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 0, 1),\n    },\n    {\n        'EmployeeID': 14,\n        'yValue': 7,\n        'FirstName': 'Flemming',\n        'Title': 'Sales Manager',\n        'HireDate': new Date(1993, 1, 1),\n    },\n    {\n        'EmployeeID': 15,\n        'yValue': 9,\n        'FirstName': 'Clarke',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 2, 1),\n    },\n    {\n        'EmployeeID': 16,\n        'yValue': 6,\n        'FirstName': 'Martin',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 3, 1),\n    },\n    {\n        'EmployeeID': 17,\n        'yValue': 4,\n        'FirstName': 'Loius',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 4, 1),\n    },\n    {\n        'EmployeeID': 18,\n        'yValue': 8,\n        'FirstName': 'Arthur',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 5, 1),\n    },\n    {\n        'EmployeeID': 19,\n        'yValue': 5,\n        'FirstName': 'Marcus',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 6, 1),\n    },\n    {\n        'EmployeeID': 20,\n        'yValue': 7,\n        'FirstName': 'Albert',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 7, 1),\n    },\n    {\n        'EmployeeID': 21,\n        'yValue': 9,\n        'FirstName': 'Nicolas',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 8, 1),\n    },\n    {\n        'EmployeeID': 22,\n        'yValue': 7,\n        'FirstName': 'Behardien',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 9, 1),\n    },\n    {\n        'EmployeeID': 23,\n        'yValue': 3,\n        'FirstName': 'Bruce',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 10, 1),\n    },\n    {\n        'EmployeeID': 24,\n        'yValue': 7,\n        'FirstName': 'Kimi',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 11, 1),\n    }];\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for Range Navigator Customization\n */\nimport * as React from \"react\";\nimport { DateTime, Inject, RangeNavigatorComponent } from '@syncfusion/ej2-react-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { GridComponent, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-grids';\nimport { employeeData } from './data-source';\nimport { SampleBase } from './sample-base';\nexport let transX = 'translateX(10%)';\nconst divStyle = {\n    transform: transX\n};\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px;\n    }\n    #days {\n        font-size: 15px;\n        font-style: normal;\n        font-family: \"Segoe UI\";\n        font-weight: 500;\n        text-anchor: middle;\n        transform: none;\n        opacity: 1;\n    }\n    `;\nexport class Customization extends SampleBase {\n    grid1;\n    rangenavigator1;\n    gridRender;\n    gridData = employeeData.filter((data) => {\n        return (data.HireDate >= new Date(1992, 5, 1) && data.HireDate <= new Date(1993, 4, 1));\n    });\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\n                        <div id=\"days\">Filter From Hire Date</div>\n                    </div>\n                    <div className=\"row\">\n                        <RangeNavigatorComponent id='rangenavigator' ref={rangenavigator => this.rangenavigator1 = rangenavigator} style={{ textAlign: \"center\" }} height='75' valueType='DateTime' intervalType='Quarter' load={this.load.bind(this)} changed={this.changed.bind(this)} width={Browser.isDevice ? '100%' : '80%'} enableGrouping={true} allowSnapping={true} groupBy='Years' enableDeferredUpdate={true} value={[new Date('1992-06-01'), new Date('1993-05-01')]} dataSource={employeeData} xName='HireDate' yName='yValue'>\n                            <Inject services={[DateTime]}/>\n                        </RangeNavigatorComponent>\n                    </div>\n                    <div className=\"row\" style={divStyle}>\n                        <GridComponent id=\"grid\" ref={grid => this.grid1 = grid} dataSource={this.gridData} created={this.gridCreated.bind(this)} width={Browser.isDevice ? '100%' : '80%'}>                            \n                            <Inject services={[DateTime]}/>\n                            <ColumnsDirective>\n                                <ColumnDirective field='EmployeeID' headerText='Employee ID' textAlign='Center'></ColumnDirective>\n                                <ColumnDirective field='FirstName' headerText='Name' textAlign='Center'></ColumnDirective>\n                                <ColumnDirective field='Title' headerText='Title' textAlign='Center'></ColumnDirective>\n                                <ColumnDirective field='HireDate' headerText='Hire Date' format={{ skeleton: 'yMd', type: 'date' }} textAlign='Center'></ColumnDirective>\n                            </ColumnsDirective>\n                        </GridComponent>\n                        </div>\n                </div>\n            </div>);\n    }\n    changed(args) {\n        if (this.grid1 && this.gridRender) {\n            this.grid1.dataSource = employeeData.filter((data) => {\n                return (data.HireDate >= new Date(+args.start) && data.HireDate <= new Date(+args.end));\n            });\n            this.grid1.refresh();\n        }\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.rangeNavigator.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n            replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n    gridCreated(args) {\n        this.gridRender = true;\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Customization />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-react-grids\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}