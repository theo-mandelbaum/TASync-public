{"index.css":".ms-chip-customize #multi-customize {\n    width: 80%;\n    margin: 0 auto;\n    min-width: 185px;\n}\n.e-bigger .ms-chip-customize #multi-customize{\n    width: 100%;\n}\n\n.ms-chip-customize .e-multi-select-wrapper .e-chips{\n  opacity: 0.9;\n}\n\n.ms-chip-customize .e-multi-select-wrapper .e-chips:hover{\n  opacity: 1;\n}\n\n.ms-chip-customize .e-multi-select-wrapper .e-chips .e-chips-close.e-icon::before,\n.ms-chip-customize .e-multi-select-wrapper .e-chips .e-chipcontent,\n.ms-chip-customize .e-multi-select-wrapper .e-chips .e-chipcontent:hover {\n    color: #ffffff;\n}\n\n.e-chips.chocolate,\n.e-chips.chocolate:hover {\n    background-color: #75523C;\n}\n\n.e-chips.darkorange,\n.e-chips.darkorange:hover {\n    background-color: #FF843D;\n}\n\n.e-chips.darkred,\n.e-chips.darkred:hover {\n    background-color: #CA3832;\n}\n\n.e-chips.fuchsia,\n.e-chips.fuchsia:hover {\n    background-color: #D44FA3;\n}\n\n.e-chips.cadetblue,\n.e-chips.cadetblue:hover {\n    background-color: #3B8289;\n}\n\n.e-chips.hotpink,\n.e-chips.hotpink:hover {\n    background-color: #F23F82;\n}\n\n.e-chips.indigo,\n.e-chips.indigo:hover {\n    background-color: #2F5D81;\n}\n\n.e-chips.limegreen,\n.e-chips.limegreen:hover {\n    background-color: #4CD242;\n}\n\n.e-chips.orangered,\n.e-chips.orangered:hover {\n    background-color: #FE2A00;\n}\n\n.e-chips.tomato,\n.e-chips.tomato:hover {\n    background-color: #FF745C;\n}\n\n.fabric .e-chips.chocolate,\n.fabric .e-chips.chocolate:hover {\n    background-color: #3c2f27;\n}\n\n.fabric .e-chips.darkred,\n.fabric .e-chips.darkred:hover {\n    background-color: #960f0a;\n}\n\n.fabric .e-chips.cadetblue,\n.fabric .e-chips.cadetblue:hover {\n    background-color: #36bac7;\n}\n\n.fabric .e-chips.indigo,\n.fabric .e-chips.indigo:hover {\n    background-color: #58a4df;\n}\n.control-styles .h4 {\n    font-size: 16px;\n    margin: 0 0 10px;\n    font-weight: bold;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from './sample-base';\n\nexport class ChipCustomization extends SampleBase {\n    // define the JSON of data\n    colorsData = [\n        { Color: 'Chocolate', Code: '#75523C' },\n        { Color: 'CadetBlue', Code: '#3B8289' },\n        { Color: 'DarkOrange', Code: '#FF843D' },\n        { Color: 'DarkRed', Code: '#CA3832' },\n        { Color: 'Fuchsia', Code: '#D44FA3' },\n        { Color: 'HotPink', Code: '#F23F82' },\n        { Color: 'Indigo', Code: '#2F5D81' },\n        { Color: 'LimeGreen', Code: '#4CD242' },\n        { Color: 'OrangeRed', Code: '#FE2A00' },\n        { Color: 'Tomato', Code: '#FF745C' }\n    ];\n    // maps the appropriate column to fields property\n    fields = { text: 'Color', value: 'Code' };\n    // set the value to MultiSelect\n    colorValues = ['#75523C', '#4CD242', '#FF745C', '#3B8289', '#CA3832'];\n    // bind the tagging event\n    onTagging = (e) => {\n        // set the current selected item text as class to chip element.\n        e.setClass(e.itemData[this.fields.text].toLowerCase());\n    };\n    render() {\n        return (<div className='col-lg-12 control-pane'>\n        <div className='control-section ms-chip-customize'>\n          <div id='multi-customize' className=\"control-styles\">\n            <h4>Chip Customization</h4>\n            <MultiSelectComponent id=\"chip-customization\" value={this.colorValues} dataSource={this.colorsData} fields={this.fields} mode=\"Box\" placeholder=\"Favorite Colors\" tagging={this.onTagging.bind(this)}/>\n          </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ChipCustomization />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}