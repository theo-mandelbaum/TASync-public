{"index.css":".control-section .multi-control-wrapper {\n    width: 80%;\n    margin: 0 auto;\n    width: 250px;\n    padding-top: 15px\n}\n\n#Template_popup .header {\n    font-weight: 600;\n    color: rgba(0, 0, 0, .54);\n    height: 48px;\n    padding: 15px 0 0 16px;\n    font-size: 16px;\n    background-color: #f5f5f5;\n}\n\n/* custom code start*/\n.fabric #Template_popup .header {\n    background-color: #fff;\n    border-bottom: 1px solid #ccc;\n    color: #0078d7;\n    font-weight: 400;\n}\n\n.multi-control-wrapper .h4 {\n    font-size: 16px;\n    font-weight: bold;\n    margin: 0 0 10px;\n}\n\n.fluent-dark #Template_popup .header,\n.fluent2-dark #Template_popup .header,\n.fluent2-highcontrast #Template_popup .header {\n    background: #252423;\n    color: #2899F5;\n}\n\n.bootstrap5-dark #Template_popup .header {\n    background: #343A40;\n    color: #7B848D;\n}\n\n.fluent #Template_popup .header {\n    color: #2899F5;\n}\n\n.tailwind-dark #Template_popup .header ,\n.tailwind3-dark #Template_popup .header {\n    background: #374151;\n    color: rgb(255, 255, 255);\n}\n\n.material3-dark #Template_popup .header,\n.material-dark #Template_popup .header {\n    background: rgb(66, 66, 66);\n    color: rgb(255, 255, 255);\n}\n\n.fabric-dark #Template_popup .header {\n    background: rgb(40, 39, 39);\n    color: rgb(255, 255, 255);\n}\n\n.bootstrap-dark #Template_popup .header {\n    background: rgb(49, 49, 49);\n    color: rgb(255, 255, 255);\n}\n\n.bootstrap #Template_popup .header {\n    background-color: #f5f5f5;\n    border-bottom: 1px solid #ccc;\n    color: #777;\n    font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\n    font-weight: 600;\n    font-size: 15px;\n    height: 48px;\n    padding: 15px 0 0 16px;\n}\n\n.highcontrast #Template_popup .header {\n    color: #fff;\n    background-color: #000;\n}\n\n.bootstrap4 #Template_popup .header {\n    color: #6c757d;\n}\n\n.e-bigger.bootstrap #Template_popup .header {\n    height: 44px;\n    font-size: 13px;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","dataSource.json":"{\n    \"countries\":[\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\n        { \"Name\": \"France\", \"Code\": \"FR\" },\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\n        { \"Name\": \"Greenland\", \"Code\": \"GL\" },\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" },\n        { \"Name\": \"India\", \"Code\": \"IN\" },\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\n        { \"Name\": \"United States\", \"Code\": \"US\" }\n    ],\n    \"colorsData\":[\n        { \"Color\": \"Chocolate\", \"Code\": \"#75523C\" },\n        { \"Color\": \"CadetBlue\", \"Code\": \"#3B8289\" },\n        { \"Color\": \"DarkOrange\", \"Code\": \"#FF843D\" },\n        { \"Color\": \"DarkRed\", \"Code\": \"#CA3832\" },\n        { \"Color\": \"Fuchsia\", \"Code\": \"#D44FA3\" },\n        { \"Color\": \"HotPink\", \"Code\": \"#F23F82\" },\n        { \"Color\": \"Indigo\", \"Code\": \"#2F5D81\" },\n        { \"Color\": \"LimeGreen\", \"Code\": \"#4CD242\" },\n        { \"Color\": \"OrangeRed\", \"Code\": \"#FE2A00\" },\n        { \"Color\": \"Tomato\", \"Code\": \"#FF745C\" }\n    ],\n    \"data\":[\n        \"Águilas\",\n        \"Ajedrez\",\n        \"Ala Delta\",\n        \"Álbumes de Música\",\n        \"Alusivos\",\n        \"Análisis de Escritura a Mano\",\n        \"Dyarbakır\",\n        \"Derepazarı \",\n        \"Gülümsemek \",\n        \"Teşekkürler\",\n        \"Güle güle.\",\n        \"Gülhatmi\",\n        \"Gülünç\"\n    ],\n    \"vegetableData\":[\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"Id\": \"item1\" },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"Id\": \"item2\" },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"Id\": \"item3\" },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"Id\": \"item4\" },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"Id\": \"item5\" },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"Id\": \"item6\" },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"Id\": \"item7\" },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"Id\": \"item8\" },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"Id\": \"item9\" },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"Id\": \"item10\" },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"Id\": \"item11\" }\n    ],\n    \"sportsData\" :[\n        { \"Id\": \"Game1\", \"Game\": \"American Football\" },\n        { \"Id\": \"Game2\", \"Game\": \"Badminton\" },\n        { \"Id\": \"Game3\", \"Game\": \"Basketball\" },\n        { \"Id\": \"Game4\", \"Game\": \"Cricket\" },\n        { \"Id\": \"Game5\", \"Game\": \"Football\" },\n        { \"Id\": \"Game6\", \"Game\": \"Golf\" },\n        { \"Id\": \"Game7\", \"Game\": \"Hockey\" },\n        { \"Id\": \"Game8\", \"Game\": \"Rugby\" },\n        { \"Id\": \"Game9\", \"Game\": \"Snooker\" },\n        { \"Id\": \"Game10\", \"Game\": \"Tennis\" }\n    ],\n    \"empList\":[\n        { \"Name\": \"Andrew Fuller\", \"Eimg\": \"7\", \"Job\": \"Team Lead\", \"Country\": \"England\" },\n        { \"Name\": \"Anne Dodsworth\", \"Eimg\": \"1\", \"Job\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Janet Leverling\", \"Eimg\": \"3\", \"Job\": \"HR\", \"Country\": \"USA\" },\n        { \"Name\": \"Laura Callahan\", \"Eimg\": \"2\", \"Job\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Margaret Peacock\", \"Eimg\": \"6\", \"Job\": \"Developer\", \"Country\": \"USA\" },\n        { \"Name\": \"Michael Suyama\", \"Eimg\": \"9\", \"Job\": \"Team Lead\", \"Country\": \"USA\" },\n        { \"Name\": \"Nancy Davolio\", \"Eimg\": \"4\", \"Job\": \"Product Manager\", \"Country\": \"USA\" },\n        { \"Name\": \"Robert King\", \"Eimg\": \"8\", \"Job\": \"Developer \", \"Country\": \"England\" },\n        { \"Name\": \"Steven Buchanan\", \"Eimg\": \"10\", \"Job\": \"CEO\", \"Country\": \"England\" }\n    ],\n    \"tag\": [\n        { \"ID\": \"state1\", \"Text\": \"Add to KB\", \"State\": false },\n        { \"ID\": \"state2\", \"Text\": \"Crisis\", \"State\": false },\n        { \"ID\": \"state3\", \"Text\": \"Enhancement\", \"State\": true },\n        { \"ID\": \"state4\", \"Text\": \"Presale\", \"State\": false },\n        { \"ID\": \"state5\", \"Text\": \"Needs Approval\", \"State\": false },\n        { \"ID\": \"state6\", \"Text\": \"Approved\", \"State\": true },\n        { \"ID\": \"state7\", \"Text\": \"Internal Issue\", \"State\": true },\n        { \"ID\": \"state8\", \"Text\": \"Breaking Issue\", \"State\": false },\n        { \"ID\": \"state9\", \"Text\": \"New Feature\", \"State\": true },\n        { \"ID\": \"state10\", \"Text\": \"New Component\", \"State\": false },\n        { \"ID\": \"state11\", \"Text\": \"Mobile Issue\", \"State\": false }\n    ],\n    \"vegetables\": [\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"ID\": \"item1\", \"State\": true },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"ID\": \"item2\", \"State\": false },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"ID\": \"item3\", \"State\": true },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"ID\": \"item4\", \"State\": false },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"ID\": \"item5\", \"State\": false },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"ID\": \"item6\", \"State\": true },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"ID\": \"item7\", \"State\": false },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"ID\": \"item8\", \"State\": true },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"ID\": \"item9\", \"State\": false },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"ID\": \"item10\", \"State\": true },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"ID\": \"item11\", \"State\": false }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { MultiSelectComponent, Inject, VirtualScroll, CheckBoxSelection } from '@syncfusion/ej2-react-dropdowns';\nimport { DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\n\nexport class Default extends SampleBase {\n    localObj;\n    remoteObj;\n    databindObj;\n    groupObj;\n    templateObj;\n    checkboxObj;\n    // define the array of string\n    records = [];\n    constructor(props) {\n        super(props);\n        for (let i = 1; i <= 150; i++) {\n            let item = {};\n            item.id = 'id' + i;\n            item.text = `Item ${i}`;\n            // Generate a random number between 1 and 4 to determine the group\n            const randomGroup = Math.floor(Math.random() * 4) + 1;\n            switch (randomGroup) {\n                case 1:\n                    item.group = 'Group A';\n                    break;\n                case 2:\n                    item.group = 'Group B';\n                    break;\n                case 3:\n                    item.group = 'Group C';\n                    break;\n                case 4:\n                    item.group = 'Group D';\n                    break;\n                default:\n                    break;\n            }\n            this.records.push(item);\n        }\n    }\n    // bind the DataManager instance to dataSource property\n    customerData = new DataManager({\n        url: 'http://localhost:62728/api/VirtualDropdownData',\n        adaptor: new UrlAdaptor,\n        crossDomain: true\n    });\n    // maps the appropriate column to fields property\n    fields = { text: 'text', value: 'id' };\n    customerField = { text: 'OrderID', value: 'OrderID' };\n    groupField = { groupBy: 'group', text: 'text', value: 'id' };\n    value = ['id10', 'id50', 'id100', \"custom\"];\n    headerTemplate(data) {\n        return (<div className=\"header\"><span style={{ marginLeft: '17px' }}>Items Info</span></div>);\n    }\n    //set the value to item template\n    itemTemplate(data) {\n        return (<div className=\"ename\" style={{ height: '40px' }}> {data.text} </div>);\n    }\n    //set the value to value template\n    valueTemplate(data) {\n        return (<div className=\"name\"> {data.text} </div>);\n    }\n    onChange(args) {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        this.localObj.allowFiltering = args.checked;\n        this.remoteObj.allowFiltering = args.checked;\n        this.databindObj.allowFiltering = args.checked;\n        this.groupObj.allowFiltering = args.checked;\n        this.templateObj.allowFiltering = args.checked;\n    }\n    onChangeHide(args) {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        this.localObj.hideSelectedItem = args.checked;\n        this.remoteObj.hideSelectedItem = args.checked;\n        this.databindObj.hideSelectedItem = args.checked;\n        this.groupObj.hideSelectedItem = args.checked;\n        this.templateObj.hideSelectedItem = args.checked;\n    }\n    onChangeClose(args) {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        this.localObj.closePopupOnSelect = args.checked;\n        this.remoteObj.closePopupOnSelect = args.checked;\n        this.databindObj.closePopupOnSelect = args.checked;\n        this.groupObj.closePopupOnSelect = args.checked;\n        this.templateObj.closePopupOnSelect = args.checked;\n    }\n    onChangeCustom(args) {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        this.localObj.allowCustomValue = args.checked;\n        this.remoteObj.allowCustomValue = args.checked;\n        this.databindObj.allowCustomValue = args.checked;\n        this.templateObj.allowCustomValue = args.checked;\n    }\n    // call the change event's function after initialized the component.\n    rendereComplete() {\n    }\n    render() {\n        return (<div>\n        <div className=\"control-section col-lg-8\">\n          <div className=\"multi-control-wrapper\">\n            <h4>Local Data</h4>\n            <MultiSelectComponent id=\"local\" ref={(scope) => { this.localObj = scope; }} dataSource={this.records} placeholder=\"e.g. Item 1\" mode=\"Box\" allowFiltering={true} enableVirtualization={true} allowCustomValue={true} showDropDownIcon={true} hideSelectedItem={true} closePopupOnSelect={true} fields={this.fields} popupHeight=\"200px\">\n              <Inject services={[VirtualScroll]}/>\n            </MultiSelectComponent>\n          </div>\n          <div className=\"multi-control-wrapper\">\n            <h4>Remote Data</h4>\n            <MultiSelectComponent id=\"remote\" ref={(scope) => { this.remoteObj = scope; }} dataSource={this.customerData} placeholder=\"e.g. OrderID\" mode=\"Delimiter\" allowFiltering={true} enableVirtualization={true} allowCustomValue={true} showDropDownIcon={true} hideSelectedItem={true} closePopupOnSelect={true} fields={this.customerField} popupHeight=\"200px\">\n              <Inject services={[VirtualScroll]}/>\n            </MultiSelectComponent>\n          </div>\n          <div className=\"multi-control-wrapper\">\n            <h4>Default Values</h4>\n            <MultiSelectComponent id=\"databind\" ref={(scope) => { this.databindObj = scope; }} dataSource={this.records} placeholder=\"e.g. Item 1\" value={this.value} mode=\"Default\" allowFiltering={true} enableVirtualization={true} allowCustomValue={true} showDropDownIcon={true} hideSelectedItem={true} closePopupOnSelect={true} fields={this.fields} popupHeight=\"200px\">\n              <Inject services={[VirtualScroll]}/>\n            </MultiSelectComponent>\n          </div>\n          <div className=\"multi-control-wrapper\">\n            <h4>Grouping</h4>\n            <MultiSelectComponent id=\"group\" ref={(scope) => { this.groupObj = scope; }} dataSource={this.records} placeholder=\"e.g. Item 1\" mode=\"CheckBox\" allowFiltering={true} enableVirtualization={true} enableSelectionOrder={false} allowCustomValue={true} showDropDownIcon={true} hideSelectedItem={true} closePopupOnSelect={true} fields={this.groupField} popupHeight=\"200px\">\n              <Inject services={[VirtualScroll, CheckBoxSelection]}/>\n            </MultiSelectComponent>\n          </div>\n          <div className=\"multi-control-wrapper\">\n            <h4>Template</h4>\n            <MultiSelectComponent id=\"Template\" ref={(scope) => { this.templateObj = scope; }} dataSource={this.records} placeholder=\"e.g. Item 1\" mode=\"Default\" allowFiltering={true} enableVirtualization={true} allowCustomValue={true} showDropDownIcon={true} hideSelectedItem={true} closePopupOnSelect={true} fields={this.fields} popupHeight=\"200px\" itemTemplate={this.itemTemplate} valueTemplate={this.valueTemplate} headerTemplate={this.headerTemplate}>\n              <Inject services={[VirtualScroll]}/>\n            </MultiSelectComponent>\n          </div>\n        </div>\n        <div className='col-lg-4 property-section' style={{ left: '0px', width: '250px' }}>\n          <PropertyPane title='Properties'>\n            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='AllowFiltering' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChange.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='AllowCustomValue' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeCustom.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='HideSelectedItem' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeHide.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='ClosePopupOnSelect' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeClose.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n            </table>\n          </PropertyPane>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Default />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}