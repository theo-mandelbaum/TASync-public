{"index.css":"#multichecbox .property-panel-content {\n    overflow: initial;\n}\n#multichecbox .col-lg-9 {\n    min-height: 250px;\n}\n#multichecbox #multigroup {\n    margin: 0 auto;\n    width: 300px !important;\n    padding-top: 15px;\n}\n\n#multiselection .property-panel-content {\n    width: 300px;\n}\n#multichecbox .property-section{\n    left:0px;\n}\n\n.e-specific.e-multiselect.e-input-group .e-ddl-icon::before {\n    transform: translateY(1px);\n}\n\n.e-bigger .e-specific.e-multiselect.e-input-group .e-ddl-icon::before {\n    transform: translateY(2px);\n}\n.control-styles .h4 {\n    font-size: 16px;\n    margin: 0 0 10px;\n    font-weight: bold;\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { MultiSelectComponent, CheckBoxSelection, Inject } from '@syncfusion/ej2-react-dropdowns';\nimport { PropertyPane } from './property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\n\nconst CheckBox = () => {\n    //define the data with category\n    const countries = [\n        { Name: 'Australia', Code: 'AU' },\n        { Name: 'Bermuda', Code: 'BM' },\n        { Name: 'Canada', Code: 'CA' },\n        { Name: 'Cameroon', Code: 'CM' },\n        { Name: 'Denmark', Code: 'DK' },\n        { Name: 'France', Code: 'FR' },\n        { Name: 'Finland', Code: 'FI' },\n        { Name: 'Germany', Code: 'DE' },\n        { Name: 'Greenland', Code: 'GL' },\n        { Name: 'Hong Kong', Code: 'HK' },\n        { Name: 'India', Code: 'IN' },\n        { Name: 'Italy', Code: 'IT' },\n        { Name: 'Japan', Code: 'JP' },\n        { Name: 'Mexico', Code: 'MX' },\n        { Name: 'Norway', Code: 'NO' },\n        { Name: 'Poland', Code: 'PL' },\n        { Name: 'Switzerland', Code: 'CH' },\n        { Name: 'United Kingdom', Code: 'GB' },\n        { Name: 'United States', Code: 'US' }\n    ];\n    // maps the appropriate column to fields property\n    const checkFields = { text: 'Name', value: 'Code' };\n    // enable or disable the SelectAll in multiselect on CheckBox checked state\n    const [showSelectAll, setShowSelectAll] = useState(true);\n    // enable or disable the Dropdown button in multiselect on CheckBox checked state\n    const [showDropDownIcon, setShowDropDownIcon] = useState(true);\n    // enable or disable the selection limit in multiselect on CheckBox checked state\n    const [enableSelectionOrder, setEnableSelectionOrdern] = useState(true);\n    // function to handle the CheckBox change event\n    const onChange = (args) => {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        setShowSelectAll(args.checked);\n    };\n    // function to handle the CheckBox change event\n    const onChangeDrop = (args) => {\n        // enable or disable the Dropdown button in multiselect on CheckBox checked state\n        setShowDropDownIcon(args.checked);\n    };\n    // function to handle the CheckBox change event\n    const onChangeLimit = (args) => {\n        // enable or disable the selection limit in multiselect on CheckBox checked state\n        setEnableSelectionOrdern(args.checked);\n    };\n    return (<div id=\"multichecbox\" className='control-pane'>\r\n            <div className='control-section col-lg-8'>\r\n                <div id=\"multigroup\" className=\"control-styles\">\r\n                <label className=\"h4\">CheckBox</label>\r\n                    <MultiSelectComponent id=\"checkbox\" dataSource={countries} fields={checkFields} placeholder=\"Select countries\" value={null} mode=\"CheckBox\" showSelectAll={showSelectAll} showDropDownIcon={showDropDownIcon} enableSelectionOrder={enableSelectionOrder} filterBarPlaceholder=\"Search countries\" popupHeight=\"350px\">\r\n                        <Inject services={[CheckBoxSelection]}/>\r\n                    </MultiSelectComponent>\r\n                </div>\r\n            </div>\r\n            <div className='col-lg-4 property-section'>\r\n                <PropertyPane title='Properties'>\r\n                    <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div>\r\n                                        <CheckBoxComponent checked={showSelectAll} label='Show Select All' change={onChange.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div>\r\n                                        <CheckBoxComponent checked={showDropDownIcon} label='DropDown Button' change={onChangeDrop.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div>\r\n                                        <CheckBoxComponent checked={enableSelectionOrder} label='Selection Reorder' change={onChangeLimit.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </PropertyPane>\r\n            </div>\r\n        </div>);\n};\nexport default CheckBox;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CheckBox />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}