{"index.css":".control-section.spreadsheet-control {\n    height: 550px;\n}\n\n#sb-content .e-spreadsheet .e-tab .e-tab-text {\n    display: inherit;\n}\n\n.e-spreadsheet .e-cell .e-radio-wrapper {\n    margin: 5px;\n}\n\n.e-spreadsheet .e-cell .e-radio-wrapper:first-child {\n        margin-left: 0;\n}\n\n.e-spreadsheet .e-cell .e-radio + label .e-label {\n    color: rgba(0, 0, 0, 0.87);\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-input-group.e-control-wrapper {\n    background-color: rgb(56, 56, 56);\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-radio+label .e-label {\n    color: #000;\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-radio+label::before {\n    background-color: #fff;\n    border-color: #757575;\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-radio:checked+label::before {\n    border-color: #00b0ff;\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-radio-wrapper {\n    padding-right: 10px;\n}\n\n.material-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-btn.e-flat {\n    color: #000;\n}\n\n.fluent2-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-btn.e-flat {\n    background-color: #292929;\n}\n\n.bootstrap5\\.3-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-btn.e-flat {\n    background-color: #212529;\n    color: #dee2e6;\n}\n\n.tailwind3-dark .e-custom-spreadsheet.e-spreadsheet .e-sheet .e-sheet-content .e-cell-template .e-btn.e-flat {\n        background-color: #111827;\n}\n","CustomAdaptor.js":"import { ODataAdaptor } from \"@syncfusion/ej2-data\";\nexport class CustomAdaptor extends ODataAdaptor {\n    processResponse() {\n        let result = [];\n        let original = super.processResponse.apply(this, arguments);\n        original.result.forEach((item, idx) => {\n            result[idx] = {};\n            Object.keys(item).forEach((key) => {\n                if (['OrderID', 'CustomerID', 'ShipName', 'ShipCity', 'ShipCountry'].indexOf(key) > -1) {\n                    result[idx][key] = item[key];\n                }\n            });\n        });\n        return { result: result, count: original.count };\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SpreadsheetComponent, SheetsDirective, SheetDirective, ColumnsDirective, RangesDirective, RangeDirective, RowsDirective, RowDirective, CellsDirective, CellDirective, ColumnDirective } from '@syncfusion/ej2-react-spreadsheet';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { SampleBase } from './sample-base';\n\nimport { CustomAdaptor } from './CustomAdaptor';\n/**\n * Remote data binding sample\n */\nexport class RemoteDataBinding extends SampleBase {\n    spreadsheet;\n    //Initialize DataManager.\n    data = new DataManager({\n        // Remote service url\n        url: 'http://localhost:62728/api/Orders',\n        adaptor: new CustomAdaptor,\n        crossDomain: true\n    });\n    onCreated() {\n        this.spreadsheet.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'A1:G1');\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className='control-section spreadsheet-control'>\n                    <SpreadsheetComponent openUrl='http://localhost:62728/api/spreadsheet/open' saveUrl='http://localhost:62728/api/spreadsheet/save' ref={(ssObj) => { this.spreadsheet = ssObj; }} created={this.onCreated.bind(this)}>\n                            <SheetsDirective>\n                            <SheetDirective name='Shipment Details'>\n                                <RangesDirective>\n                                    <RangeDirective dataSource={this.data} showFieldAsHeader={false} startCell='A2'></RangeDirective>\n                                </RangesDirective>\n                                <RowsDirective>\n                                    <RowDirective>\n                                        <CellsDirective>\n                                            <CellDirective value='Order ID'></CellDirective>\n                                            <CellDirective value='Customer Name'></CellDirective>\n                                            <CellDirective value='Ship Name'></CellDirective>\n                                            <CellDirective value='Ship City'></CellDirective>\n                                            <CellDirective value='Ship Country'></CellDirective>\n                                        </CellsDirective>\n                                    </RowDirective>\n                                </RowsDirective>\n                                <ColumnsDirective>\n                                    <ColumnDirective width={100}></ColumnDirective>\n                                    <ColumnDirective width={130}></ColumnDirective>\n                                    <ColumnDirective width={150}></ColumnDirective>\n                                    <ColumnDirective width={200}></ColumnDirective>\n                                    <ColumnDirective width={180}></ColumnDirective>\n                                </ColumnsDirective>\n                            </SheetDirective>\n                        </SheetsDirective>\n                    </SpreadsheetComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RemoteDataBinding />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-spreadsheet\":\"*\",\"@syncfusion/ej2-react-spreadsheet\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}