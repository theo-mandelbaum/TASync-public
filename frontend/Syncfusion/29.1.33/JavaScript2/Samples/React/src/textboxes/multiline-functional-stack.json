{"index.css":".e-upload-picture:before {\n    content: '\\e60f';\n    font-family: e-icons;\n    font-size: 14px;\n}\n\n.tailwind .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind3 .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind-dark .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind3-dark .control-section.input-content-wrapper .e-upload-picture:before {\n    content: '\\e712';\n    font-size: 17px;\n}\n\n.e-bigger .control-section.input-content-wrapper .e-upload-picture::before { \n    font-size: 17px;\n}\n\n.tailwind.e-bigger .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind3.e-bigger .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind-dark.e-bigger .control-section.input-content-wrapper .e-upload-picture:before,\n.tailwind3-dark.e-bigger .control-section.input-content-wrapper .e-upload-picture:before {\n    font-size: 20px;\n}\n\n.bootstrap5 .e-upload-picture::before,\n.bootstrap5-dark .e-upload-picture::before,\n.material3 .e-upload-picture:before,\n.material3-dark .e-upload-picture:before {\n    content: '\\e712';\n    font-family: e-icons;\n}\n\n.bootstrap4 .control-section.input-content-wrapper .e-upload-picture::before {\n    content: '\\e769';\n    font-family: e-icons;\n}\n\n.control-section.input-content-wrapper .e-input-group.e-small { /* csslint allow: adjoining-classes */\n    padding-top: 0px;\n}\n\n.control-section.input-content-wrapper .control-label {\n    font-size: 12px;\n    opacity: 0.54;\n    padding:24px 0 0;\n}\n\n.control-section.input-content-wrapper div.row {\n    padding: 0 30px;\n}\n\n@media only screen and (max-width: 480px) {\n    .control-section.input-content-wrapper .col-xs-6,\n    .control-section.input-content-wrapper .col-xs-4,\n    .control-section.input-content-wrapper .col-xs-12 {\n        box-sizing: border-box;\n        padding: 10px 5px;\n        width: 100%;\n    }\n\t.control-section.input-content-wrapper div.row {\n        padding: 0 15px;\n    }\n}\n\n#description td { /* csslint allow: adjoining-classes */\n    vertical-align: top;\n}\n\n.control-section.input-content-wrapper .custom-padding-10 {\n    padding:10px 0 0;\n}\n\n.control-section.input-content-wrapper .custom-padding-5 {\n    padding:5px 0;\n}\n\n.control-section.input-content-wrapper .custom-width {\n    width: 100%;\n}\n\n.control-section.input-content-wrapper .custom-padding-bottom-10 {\n    padding-bottom: 10px;\n}\n\n.control-section .row.custom-margin {\n    margin-top: 20px;\n}\n\n.e-bigger .control-section .row.custom-margin {\n    margin-top: 15px;\n}\n\n @media only screen and (max-width: 480px) {\n        .control-section.input-content-wrapper .content-wrapper {\n            width: 92%;\n        }\n        .control-section.input-content-wrapper .col-xs-6,\n        .control-section.input-content-wrapper .col-xs-4,\n        .control-section.input-content-wrapper .col-xs-12 {\n            padding: 10px 5px;\n            width: 100%;\n        }\n        \n    }\n.e-outline.e-float-input,\n.e-outline.e-float-input.e-control-wrapper {\n    margin-top: 0;\n}\n.fabric .row.material,\n.bootstrap .row.material,\n.bootstrap4 .row.material,\n.highcontrast .row.material,\n.tailwind .row.material,\n.tailwind3 .row.material,\n.bootstrap5 .row.material,\n.bootstrap5-dark .row.material,\n.bootstrap5\\.3 .row.material,\n.bootstrap5\\.3-dark .row.material,\n.tailwind-dark .row.material,\n.tailwind3-dark .row.material,\n.fabric-dark .row.material,\n.bootstrap-dark .row.material,\n.fluent .row.material,\n.fluent-dark .row.material {\n    display: none;\n}\n.control-section.input-content-wrapper .col-xs-12.col-sm-12.col-lg-12.col-md-12 {\n    padding: 0px 15px;\n}\n.multiline-wrapper {\n    max-width: 250px;\n    margin: 0 auto;\n    padding: 40px 0px 0px;\n}\n.multiline-property .left-side{\n    font-size: 14px;\n    padding: 8px;\n    width: 50%;\n}\n.small-textbox {\n    padding-top: 5px;\n}\n\n.tailwind .small-textbox,\n.tailwind3 .small-textbox,\n.tailwind-dark .small-textbox,\n.tailwind3-dark .small-textbox {\n    padding-top: 3px;\n}\n\n.e-bigger .small-textbox {\n    padding-top: 10px;\n}\n\n.tailwind.e-bigger .small-textbox,\n.tailwind3.e-bigger .small-textbox,\n.tailwind-dark.e-bigger .small-textbox,\n.tailwind3-dark.e-bigger .small-textbox {\n    padding-top: 1px;\n}\n\n.fluent .e-upload-picture::before,\n.fluent-dark .e-upload-picture::before {\n    content: '\\e712';\n    font-family: e-icons;\n}\n\n.fluent .e-float-input.e-control-wrapper.e-filled,\n.fluent-dark .e-float-input.e-control-wrapper.e-filled {\n    margin-top: 0px;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\n\nimport { PropertyPane } from './property-pane';\nimport { TextBoxComponent, NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\nconst Multiline = () => {\n    // Multiline TextBox\n    const [isTextareaEnable, setIsTextareaEnable] = useState(true);\n    const [isTextareaReadonly, setIsTextareaReadonly] = useState(false);\n    const [floatLabelType, setFloatLabelType] = useState('Auto');\n    const textareaObj = useRef(null);\n    let floatData;\n    let fields;\n    floatData = [\n        { Id: 'Auto', Label: 'Auto' },\n        { Id: 'Never', Label: 'Never' },\n        { Id: 'Always', Label: 'Always' }\n    ];\n    fields = { text: 'Label', value: 'Id' };\n    const enabledHandler = (args) => {\n        setIsTextareaEnable(!args.checked);\n    };\n    const readonlyHandler = (args) => {\n        setIsTextareaReadonly(args.checked);\n    };\n    const floatHandler = (args) => {\n        setFloatLabelType(args.value);\n    };\n    const rowHandler = (args) => {\n        textareaObj.current.addAttributes({ rows: args.value });\n    };\n    return (<div className='control-pane multiline'>\r\n            <div className='control-section row multilinepreview'>\r\n                <div className='col-lg-8'>\r\n                    <div className='multiline-wrapper'>\r\n                        {/* Render Multiline TextBox */}\r\n                        <TextBoxComponent id='default' multiline={true} floatLabelType={floatLabelType} enabled={isTextareaEnable} readonly={isTextareaReadonly} placeholder=\"Enter your address\" ref={textareaObj}></TextBoxComponent>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-4 property-section' id=\"multiline\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" className='multiline-property'>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='left-side'>FLoat label type</td>\r\n                                    <td>\r\n                                        <DropDownListComponent id=\"float\" value={floatLabelType} dataSource={floatData} fields={fields} change={floatHandler.bind(this)} placeholder=\"Select float type\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='left-side'>Disabled</td>\r\n                                    <td>\r\n                                        <CheckBoxComponent checked={false} change={enabledHandler.bind(this)}></CheckBoxComponent>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='left-side'>Read only</td>\r\n                                    <td>\r\n                                        <CheckBoxComponent checked={false} change={readonlyHandler.bind(this)}></CheckBoxComponent>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='left-side'>Rows</td>\r\n                                    <td>\r\n                                        <NumericTextBoxComponent format='##' value={2} min={1} max={20} step={1} change={rowHandler.bind(this)}></NumericTextBoxComponent>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default Multiline;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Multiline />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}