{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from \"react\";\nimport { SliderComponent, NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\n\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { PropertyPane } from './property-pane';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nconst slidercss = `\r\n.content-wrapper {\r\n    width: 52%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    margin-top: 45px;\r\n}\r\n.e-bigger .content-wrapper {\r\n    width: 80%;\r\n}\r\n.sliderwrap label {\r\n    padding-bottom: 50px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    margin-top: 15px;\r\n}\r\n.userselect {\r\n    -webkit-user-select: none;\r\n    /* Safari 3.1+ */\r\n    -moz-user-select: none;\r\n    /* Firefox 2+ */\r\n    -ms-user-select: none;\r\n    /* IE 10+ */\r\n    user-select: none;\r\n    /* Standard syntax */\r\n}\r\n.property-custom td {\r\n    padding: 5px;\r\n}\r\n.property-custom .property-panel-content {\r\n    height: 320px;\r\n}\r\nbody.fluent2-highcontrast .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick,\r\nbody.fluent2 .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick,\r\nbody.fluent2-dark .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick {\r\n    top: -5px;\r\n}\r\n`;\nconst Limits = () => {\n    const [slider, SetSlider] = useState({\n        enabled: true,\n        minStart: 10,\n        minEnd: 40,\n        startHandleFixed: false,\n    });\n    const [rangeSlider, SetRangeSlider] = useState({\n        enabled: true,\n        minStart: 10,\n        minEnd: 40,\n        maxStart: 60,\n        maxEnd: 90,\n        startHandleFixed: false,\n        endHandleFixed: false,\n    });\n    // Instance of the control\n    let minRangeObj = useRef(null);\n    let rangeObj = useRef(null);\n    let minEndObj = useRef(null);\n    // Initialize ticks with placement, largestep, smallstep\n    let ticks = { placement: 'After', largeStep: 20, smallStep: 5, showSmallTicks: true };\n    let tooltip = { isVisible: true, placement: 'Before' };\n    const minStart = (args) => {\n        SetSlider({ ...slider, minStart: args.value });\n        SetRangeSlider({ ...rangeSlider, minStart: args.value });\n    };\n    const minEnd = (args) => {\n        SetSlider({ ...slider, minEnd: args.value });\n        SetRangeSlider({ ...rangeSlider, minEnd: args.value });\n    };\n    const maxStart = (args) => {\n        SetRangeSlider({ ...rangeSlider, maxStart: args.value });\n    };\n    const maxEnd = (args) => {\n        SetRangeSlider({ ...rangeSlider, maxEnd: args.value });\n    };\n    const fixOneChange = (args) => {\n        SetSlider({ ...slider, startHandleFixed: args.checked });\n        SetRangeSlider({ ...rangeSlider, startHandleFixed: args.checked });\n    };\n    const fixTwoChange = (args) => {\n        SetRangeSlider({ ...rangeSlider, endHandleFixed: args.checked });\n    };\n    const refreshTooltip = (e) => {\n        if (minRangeObj.current && rangeObj.current) {\n            minRangeObj.current.refreshTooltip(minRangeObj.tooltipTarget);\n            rangeObj.current.refreshTooltip(rangeObj.tooltipTarget);\n        }\n    };\n    if (!isNullOrUndefined(document.getElementById('right-pane'))) {\n        document.getElementById('right-pane').addEventListener('scroll', refreshTooltip.bind(this));\n    }\n    return (<div className='control-pane'>\r\n            <div className='control-section'>\r\n                <div className='col-lg-8'>\r\n                    <div className=\"content-wrapper\">\r\n                        <style>{slidercss}</style>\r\n                        <div className='sliderwrap'>\r\n                            <label>MinRange Slider With Limits</label>\r\n                            {/* Initialize Slider Component with ticks with placement, largestep, smallstep */}\r\n                            <SliderComponent id='minrange' type=\"MinRange\" value={25} min={0} max={100} ticks={ticks} limits={slider} tooltip={tooltip} ref={minRangeObj}/>\r\n                        </div>\r\n                        <div className='sliderwrap'>\r\n                            <label>Range Slider With Limits</label>\r\n                            {/* Initialize Range Slider Component with ticks with placement, largestep, smallstep */}\r\n                            <SliderComponent id='range' value={[25, 75]} min={0} max={100} type='Range' limits={rangeSlider} ticks={ticks} tooltip={tooltip} ref={rangeObj}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"#slider_event\" className='col-lg-4 property-section property-custom'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"minStartLabel\" className=\"userselect\">MinStart</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <NumericTextBoxComponent value={10} min={0} max={100} change={minStart.bind(this)} aria-labelledby=\"minStartLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"minEndLabel\" className=\"userselect\">MinEnd</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <NumericTextBoxComponent value={40} min={0} max={100} change={minEnd.bind(this)} ref={minEndObj} aria-labelledby=\"minEndLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"maxStartLabel\" className=\"userselect\">MaxStart</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <NumericTextBoxComponent value={60} min={0} max={100} change={maxStart.bind(this)} aria-labelledby=\"maxStartLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"maxEndLabel\" className=\"userselect\">MaxEnd</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <NumericTextBoxComponent value={90} min={0} max={100} change={maxEnd.bind(this)} aria-labelledby=\"maxEndLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"lockFirstHandleLabel\" className=\"userselect\">Lock First Handle</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <CheckBoxComponent checked={false} change={fixOneChange.bind(this)} aria-labelledby=\"lockFirstHandleLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"lockSecondHandleLabel\" className=\"userselect\">Lock Second Handle</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <CheckBoxComponent checked={false} change={fixTwoChange.bind(this)} aria-labelledby=\"lockSecondHandleLabel\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default Limits;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Limits />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}