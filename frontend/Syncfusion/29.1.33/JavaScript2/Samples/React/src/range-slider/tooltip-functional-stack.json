{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { SliderComponent } from '@syncfusion/ej2-react-inputs';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\nimport { PropertyPane } from './property-pane';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nconst slidercss = `\r\n.material #property tr#showon {\r\n    display: none;\r\n}\r\n\r\n.content-wrapper {\r\n    width: 52%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap label {\r\n    padding-bottom: 26px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    margin-top: 15px;\r\n}\r\n\r\n.userselect {\r\n    -webkit-user-select: none;\r\n    /* Safari 3.1+ */\r\n    -moz-user-select: none;\r\n    /* Firefox 2+ */\r\n    -ms-user-select: none;\r\n    /* IE 10+ */\r\n    user-select: none;\r\n    /* Standard syntax */\r\n}\r\n`;\nconst Tooltip = () => {\n    const [tooltip, setTooltip] = useState({\n        placement: 'Before',\n        isVisible: true,\n        showOn: 'Focus'\n    });\n    //Instance of the component\n    let defaultObj = useRef(null);\n    let rangeObj = useRef(null);\n    //Dropdownlist datasource values for changing tooltip placement for slider component\n    let option = [{ text: 'Focus', value: 'Focus' }, { text: 'Hover', value: 'Hover' }, { text: 'Auto', value: 'Auto' },\n        { text: 'Always', value: 'Always' }];\n    let fields = { value: 'value', text: 'text' };\n    let placement = [{ text: 'Before', value: 'Before' }, { text: 'After', value: 'After' }];\n    let placementField = { value: 'value', text: 'text' };\n    // Handling the dropdown list change event to change slider tooltip showOn property\n    const onChange = (args) => {\n        setTooltip({ ...tooltip, showOn: args.value });\n    };\n    // Handling the dropdown list change event to change slider tooltip placement\n    const onPlacementChange = (args) => {\n        setTooltip({ ...tooltip, placement: args.value });\n    };\n    // Handler used to reposition the tooltip on page scroll\n    const onScroll = () => {\n        if (rangeObj.current && defaultObj.current) {\n            defaultObj.current.refreshTooltip(defaultObj.tooltipTarget);\n            rangeObj.current.refreshTooltip(rangeObj.tooltipTarget);\n        }\n    };\n    if (!isNullOrUndefined(document.getElementById('right-pane'))) {\n        document.getElementById('right-pane').addEventListener('scroll', onScroll.bind(this));\n    }\n    return (<div className='control-pane'>\r\n            <div className='control-section'>\r\n                <div className='col-lg-8'>\r\n                    <div className=\"content-wrapper\">\r\n                        <style>{slidercss}</style>\r\n                        <div className='sliderwrap'>\r\n                            <label>Default Slider</label>\r\n                            {/* Initialize Slider Component */}\r\n                            <SliderComponent id=\"slider01\" value={30} showButtons={true} tooltip={tooltip} ref={defaultObj}/>\r\n                        </div>\r\n                        <div className='sliderwrap'>\r\n                            <label>Range Slider</label>\r\n                            {/* Initialize Slider Component with type Range */}\r\n                            <SliderComponent id=\"slider02\" value={[30, 70]} showButtons={true} type='Range' tooltip={tooltip} ref={rangeObj}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"#slider_event\" className='col-lg-4 property-section'>\r\n                    <PropertyPane title='Tooltip'>\r\n                        <table id=\"property\" title=\"Tooltip\" className='property-panel-table' style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>Placement</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                        <div>\r\n                                            {/* Initialize DropDownList Component */}\r\n                                            <DropDownListComponent dataSource={placement} fields={placementField} index={0} placeholder=\"Select a Placement\" popupHeight=\"200px\" change={onPlacementChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"showon\">\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>ShowOn</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                        <div>\r\n                                            {/* Initialize DropDownList Component */}\r\n                                            <DropDownListComponent dataSource={option} fields={fields} index={0} placeholder=\"Select a ShowOn\" popupHeight=\"200px\" change={onChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default Tooltip;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Tooltip />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}