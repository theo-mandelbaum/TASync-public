{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { SliderComponent, NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\n\nimport { PropertyPane } from './property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nconst slidercss = `\r\n.content-wrapper {\r\n    width: 52%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    margin-top: 30px;\r\n}\r\n\r\n.sb-mobile-prop-pane #property #desktop-checkbox-row-1,\r\n.sb-mobile-prop-pane #property #desktop-checkbox-row-2 {\r\n    display: none;\r\n\r\n}\r\n\r\n.sb-mobile-prop-pane #property #mobile-checkbox-row-1,\r\n.sb-mobile-prop-pane #property #mobile-checkbox-row-2,\r\n.sb-mobile-prop-pane #property #mobile-checkbox-row-3,\r\n.sb-mobile-prop-pane #property #mobile-checkbox-row-4 {\r\n    display: table-row;\r\n\r\n}\r\n\r\n#all-option-table #mobile-checkbox-row-1,\r\n#all-option-table #mobile-checkbox-row-2,\r\n#all-option-table #mobile-checkbox-row-3,\r\n#all-option-table #mobile-checkbox-row-4 {\r\n    display: none;\r\n\r\n}\r\n\r\n#all-option-table .property-panel-section .property-panel-content table#property tr {\r\n    height: 50px;\r\n}\r\n\r\n#all-option-sample .e-slider-container.e-horizontal {\r\n    margin-top: 160px;\r\n}\r\n\r\n#all-option-sample .e-slider-container.e-vertical {\r\n    margin-left: 40%;\r\n}\r\n\r\n#all-option-sample.content-wrapper {\r\n    height: 363px;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    height: 340px;\r\n}\r\n\r\n.e-bigger .content-wrapper {\r\n    width: 50%;\r\n}\r\n\r\n.sliderwrap label {\r\n    padding-bottom: 26px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    margin-top: 15px;\r\n    text-align: left;\r\n    width: 100%;\r\n}\r\n\r\n.userselect {\r\n    -webkit-user-select: none;\r\n    /* Safari 3.1+ */\r\n    -moz-user-select: none;\r\n    /* Firefox 2+ */\r\n    -ms-user-select: none;\r\n    /* IE 10+ */\r\n    user-select: none;\r\n    /* Standard syntax */\r\n}\r\n\r\n.e-bigger .e-sidebar .sb-mobile-right-pane .property-section .e-numerictextbox {\r\n    display: flex;\r\n    padding-left: 0;\r\n    text-align: center;\r\n}\r\n\r\nbody.tailwind3 .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,\r\nbody.tailwind3-dark .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,\r\nbody.tailwind3.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick\r\nbody.tailwind3-dark.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick {\r\n    top: 0px;\r\n}\r\n`;\nconst APIs = () => {\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(100);\n    const [value, setValue] = useState(30);\n    const [step, setStep] = useState(1);\n    const [orientation, setOrientation] = useState(\"Horizontal\");\n    const [readonly, setReadonly] = useState(false);\n    const [enabled, setEnabled] = useState(true);\n    const [button, setButton] = useState(false);\n    /**\n * slider property customization\n */\n    let defaultObj = useRef(null);\n    let tooltip = { placement: 'Before', isVisible: true, showOn: 'Hover' };\n    let ticks = { placement: 'Before', largeStep: 20 };\n    const onValueChange = (args) => {\n        setValue(args.value);\n    };\n    const onMinChange = (args) => {\n        setMin(args.value);\n    };\n    const onMaxChange = (args) => {\n        setMax(args.value);\n    };\n    const onStepChange = (args) => {\n        setStep(args.value);\n    };\n    const onOrientationChange = (args) => {\n        setOrientation(args.checked ? \"Vertical\" : \"Horizontal\");\n    };\n    const onReadonlyChange = (args) => {\n        setReadonly(args.checked);\n    };\n    const onDisableChange = (args) => {\n        setEnabled(!args.checked);\n    };\n    const onButtonChange = (args) => {\n        setButton(args.checked);\n    };\n    const refreshTooltip = (e) => {\n        if (defaultObj.current) {\n            defaultObj.current.refreshTooltip(defaultObj.tooltipTarget);\n        }\n    };\n    const sliderChange = (args) => {\n        setValue(args.value);\n    };\n    if (!isNullOrUndefined(document.getElementById('right-pane'))) {\n        document.getElementById('right-pane').addEventListener('scroll', refreshTooltip.bind(this));\n    }\n    return (<div className='control-pane'>\r\n            <style>{slidercss}</style>\r\n            <div className='control-section'>\r\n                <div className='col-lg-8'>\r\n                    <div className=\"content-wrapper\" id=\"all-option-sample\">\r\n                        <div className='sliderwrap'>\r\n                            <SliderComponent id='slider' value={value} min={min} max={max} orientation={orientation} enabled={enabled} step={step} readonly={readonly} showButtons={button} change={sliderChange.bind(this)} ticks={ticks} tooltip={tooltip} type='MinRange' ref={defaultObj}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"all-option-table\" className=\"col-lg-4 property-section\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: \"100%\" }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"valueLabel\" className=\"userselect\">Value</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent value={value} format='n0' change={onValueChange.bind(this)} aria-labelledby=\"valueLabel\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"minLabel\" className=\"userselect\">Min</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent value={0} format='n0' change={onMinChange.bind(this)} aria-labelledby=\"minLabel\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"maxLabel\" className=\"userselect\">Max</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent value={100} format='n0' change={onMaxChange.bind(this)} aria-labelledby=\"maxLabel\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div id=\"stepLabel\" className=\"userselect\">Step</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%' }}>\r\n                                        <div>\r\n                                            <NumericTextBoxComponent value={1} change={onStepChange.bind(this)} aria-labelledby=\"stepLabel\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"desktop-checkbox-row-1\">\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"button\" label={\"Show Buttons\"} checked={false} change={onButtonChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"10\" }}>\r\n                                            <CheckBoxComponent id=\"disabled\" label={\"Disable\"} checked={false} change={onDisableChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"desktop-checkbox-row-2\">\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"readOnly\" label={\"Read Only\"} checked={false} change={onReadonlyChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"orientation\" label={\"Vertical Orientation\"} checked={false} change={onOrientationChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"mobile-checkbox-row-1\">\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Show Buttons</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"mb-button\" checked={false} change={onButtonChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"mobile-checkbox-row-2\">\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Disabled</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"mb-disabled\" checked={false} change={onDisableChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"mobile-checkbox-row-3\">\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Vertical Orientation</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"mb-orientation\" checked={false} change={onOrientationChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr id=\"mobile-checkbox-row-4\">\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Readonly</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            <CheckBoxComponent id=\"mb-readOnly\" checked={false} change={onReadonlyChange.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default APIs;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<APIs />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\"}"}