{"index.css":"    .ajaxcontent .e-dialog .e-dlg-header >img.img1 {\n        height: 20px;\n        width: 20px;\n        float: left;\n\t\tmargin-right: 10px;\n\t\tmargin-top: 5px;\n    }\n    .bootstrap .ajaxcontent .e-dialog .e-dlg-header >img.img1 {\n        margin-top: 1px;\n    }\n    .tailwind .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .tailwind-dark .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .tailwind3 .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .tailwind3-dark .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5 .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5-dark .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5\\.3 .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .bootstrap5\\.3-dark .ajaxcontent .e-dialog .e-dlg-header >img.img1,\n    .bootstrap4 .ajaxcontent .e-dialog .e-dlg-header >img.img1 {\n        margin-top: 0px;\n    }\n    \n    .fabric .ajaxcontent .e-dialog, .bootstrap .ajaxcontent .e-dialog {\n        height: 329px;\n    }\n    .highcontrast .ajaxcontent .e-dialog {\n        height: 345px;\n    }\n    .material .ajaxcontent .e-dialog {\n        height: 265px;\n    }\n    .material.e-bigger .ajaxcontent .e-dialog {\n        height: 285px;\n    }\n    .ajaxcontent .e-footer-content button.e-control.e-btn.e-flat {\n        width: 100%\n    }\n    .ajaxcontent .e-dialog .e-footer-content .e-btn {\n\t\tmargin-left: 0px;\n\t}\n\t\n    .ajaxcontent .e-dlg-header-content {\n       min-height: 65px; \n    }\n\n    .tailwind .ajaxcontent .e-dlg-header-content,\n    .tailwind-dark .ajaxcontent .e-dlg-header-content,\n    .tailwind3 .ajaxcontent .e-dlg-header-content,\n    .tailwind3-dark .ajaxcontent .e-dlg-header-content,\n    .bootstrap5 .ajaxcontent .e-dlg-header-content,\n    .bootstrap5-dark .ajaxcontent .e-dlg-header-content,\n    .bootstrap5\\.3 .ajaxcontent .e-dlg-header-content,\n    .bootstrap5\\.3-dark .ajaxcontent .e-dlg-header-content {\n       min-height: 50px; \n    }\n\n    .bootstrap4 .ajaxcontent .e-dlg-header-content {\n       min-height: 50px; \n    }\n \n    .ajaxcontent .e-btn .e-btn-icon{\n\t  margin-top: -14px;\n\t}\n    #target {\n        height: 100%;\n        min-height: 350px;\n    }\n\t.ajaxcontent .e-dialog .e-icon-dlg-close::before{\n\t    top: 6px;\n\t}\n\t.ajaxcontent .e-footer-content button.e-control.e-btn.e-flat {\n\t\twidth: initial;\n\t}\n\n\n@media screen and (min-width: 150px) and (max-width: 480px) {\n    .control-section{\n        margin-bottom: 30px;\n    }\n    .control-wrapper{\n            margin-bottom: 0px;\n    }\n\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\n\n\nconst AjaxContent = () => {\n    let dialogInstance = useRef(null);\n    let buttons;\n    let animationSettings;\n    let buttonEle;\n    const [display, setDisplay] = useState('none');\n    const [status, setStatus] = useState(true);\n    let buttonRef = (element) => {\n        buttonEle = element;\n    };\n    animationSettings = { effect: 'None' };\n    const dlgButtonClick = () => {\n        if (document.querySelector('.e-footer-content .e-btn').textContent === 'More Details') {\n            let fetchApi = new Fetch('https://ej2.syncfusion.com/react/demos/src/dialog/blog.html', 'GET');\n            fetchApi.send().then();\n            fetchApi.onSuccess = (data) => {\n                dialogInstance.current.target = document.getElementById('target');\n                dialogInstance.current.content = data;\n            };\n            dialogInstance.current.buttons = [\n                {\n                    click: dlgButtonClick,\n                    buttonModel: { content: \"Less Details\", isPrimary: true }\n                }\n            ];\n        }\n        else {\n            dialogInstance.current.content = innerContent;\n            dialogInstance.current.buttons = [\n                {\n                    click: dlgButtonClick,\n                    buttonModel: { content: \"More Details\", isPrimary: true }\n                }\n            ];\n        }\n    };\n    buttons = [\n        {\n            click: dlgButtonClick,\n            buttonModel: {\n                content: 'More Details',\n                isPrimary: true,\n            },\n        },\n    ];\n    const buttonClick = () => {\n        setStatus(true);\n    };\n    const dialogClose = () => {\n        setStatus(false);\n        setDisplay('inline-block');\n    };\n    const dialogOpen = () => {\n        setStatus(true);\n        setDisplay('none');\n    };\n    const innerContent = `On October 17, Microsoft will release its Fall Creators Update for the Windows\n    10 platform. Much like its previous counterpart, the Spring Creators Update, the release is set to deliver more \n    features to Windows 10 for both developers and users, with particular emphasis this time around on app modernization,\n    mixed reality, and game development and software updates. App modernization is the term Microsoft used in its press \n    event to encompass the features that will affect most Windows 10 users and developers.`;\n    return (<div className=\"control-pane\">\n        <div id=\"target\" className=\"control-section ajaxcontent col-lg-12\">\n          <button className=\"e-control e-btn dlgbtn\" ref={buttonRef} style={{ display: display }} onClick={buttonClick} id=\"dialogBtn\">Open</button>\n          <DialogComponent id=\"dialog\" ref={dialogInstance} visible={status} header={'<img class=\"img1\" src=\"https://ej2.syncfusion.com/react/demos/src/dialog/images/2.png\" alt=\"Microsoft roadmap\">' + 'Whatâ€™s Coming from Microsoft this Fall'} showCloseIcon={true} animationSettings={animationSettings} width={'500px'} target={'#target'} close={dialogClose} open={dialogOpen} content={innerContent} buttons={buttons}></DialogComponent>\n        </div>\n      </div>);\n};\nexport default AjaxContent;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<AjaxContent />);","dependencies":"{\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\"}"}