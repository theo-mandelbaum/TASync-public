{"index.css":".text {\n    text-transform: capitalize;\n}\n        \n#customization {\n    display: table;\n    margin: 0 auto;\n}\n\n.animate {\n    display: table-cell;\n    padding: 10px;\n}\n\n.control-pane .dialog-target {\n    min-height: 350px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\n\n\nconst Animation = () => {\n    let dlgButton;\n    const [status, setStatus] = useState(true);\n    const [animation, SetAnimation] = useState({ effect: 'Zoom', duration: 400 });\n    const [content, setContent] = useState('The dialog is configured with animation effect. It is opened or closed with \"Zoom In or Out\" animation.');\n    const dialogButtonClick = () => {\n        setStatus(false);\n    };\n    const dialogClose = () => {\n        setStatus(false);\n    };\n    dlgButton = [\n        {\n            click: dialogButtonClick,\n            buttonModel: { content: 'Hide', isPrimary: true },\n        },\n    ];\n    const buttonClick = (args) => {\n        let txt = args.target.parentElement.innerText;\n        txt = txt === 'Zoom In/Out' ? 'Zoom In or Out' : txt;\n        setContent('The dialog is configured with animation effect. It is opened or closed with \"' + txt + '\" animation.');\n        SetAnimation({ ...animation, effect: args.target.id });\n        setStatus(true);\n    };\n    return (<div className=\"control-pane\">\n        <div id=\"target\" className=\"col-lg-12 control-section dialog-target\">\n          <div id=\"customization\">\n            <div className=\"animate\">\n              <button className=\"e-control e-btn e-outline e-primary\" onClick={buttonClick} id=\"Zoom\">Zoom</button>\n            </div>\n            <div className=\"animate\">\n              <button className=\"e-control e-btn e-outline e-primary\" onClick={buttonClick} id=\"FlipXDown\">FlipX Down</button>\n            </div>\n            <div className=\"animate\">\n              <button className=\"e-control e-btn e-outline e-primary\" onClick={buttonClick} id=\"FlipXUp\">FlipX Up</button>\n            </div>\n            <div className=\"animate\">\n              <button className=\"e-control e-btn e-outline e-primary\" onClick={buttonClick} id=\"FlipYLeft\">FlipY Left</button>\n            </div>\n            <div className=\"animate\">\n              <button className=\"e-control e-btn e-outline e-primary\" onClick={buttonClick} id=\"FlipYRight\">FlipY Right</button>\n            </div>\n          </div>\n          <DialogComponent id=\"AnimationDialog\" isModal={true} header=\"Animation Dialog\" showCloseIcon={true} animationSettings={animation} width=\"285px\" target=\"#target\" buttons={dlgButton} visible={status} beforeClose={dialogClose} content={content}></DialogComponent>\n        </div>\n      </div>);\n};\nexport default Animation;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Animation />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\"}"}