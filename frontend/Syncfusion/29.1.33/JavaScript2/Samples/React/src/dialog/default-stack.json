{"index.css":".control-pane .dialog-target {\n    min-height: 350px;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { SampleBase } from './sample-base';\n\nexport class DefaultFunctionalities extends SampleBase {\n    buttons;\n    animationSettings;\n    dialogInstance;\n    buttonEle;\n    buttonRef;\n    constructor(props) {\n        super(props);\n        this.state = {\n            hideDialog: true\n        };\n        this.buttonRef = element => {\n            this.buttonEle = element;\n        };\n        this.buttons = [{\n                click: this.dlgButtonClick,\n                buttonModel: {\n                    content: 'Learn More',\n                    isPrimary: true\n                }\n            }];\n        this.animationSettings = { effect: 'None' };\n    }\n    buttonClick() {\n        this.setState({ hideDialog: true });\n    }\n    dlgButtonClick() {\n        window.open('https://www.syncfusion.com/company/about-us');\n    }\n    dialogClose() {\n        this.setState({ hideDialog: false });\n        this.buttonEle.style.display = \"block\";\n    }\n    dialogOpen() {\n        this.buttonEle.style.display = \"none\";\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div id='targetElement' className='control-section col-lg-12 defaultDialog dialog-target'>\n                    <button className=\"e-control e-btn dlgbtn\" ref={this.buttonRef} onClick={this.buttonClick.bind(this)} id=\"dialogBtn\"> Open</button>\n                    <DialogComponent id=\"defaultdialog\" showCloseIcon={true} animationSettings={this.animationSettings} visible={this.state.hideDialog} width={'500px'} ref={dialog => this.dialogInstance = dialog} target={'#targetElement'} header='About SYNCFUSION Succinctly Series' buttons={this.buttons} open={this.dialogOpen.bind(this)} close={this.dialogClose.bind(this)}>\n                        <div>\n                            <div>\n                                In the Succinctly series, Syncfusion created a\n                    robust free library of more than 130 technical e-books formatted for PDF, Kindle, and EPUB.<br />\n                                <br />The Succinctly series was born in 2012 out of a desire to provide concise technical e-books for software developers\n                                Each title in the Succinctly series is written by a carefully chosen expert and provides essential content\n                                in about 100 pages.\n                </div>\n                        </div>\n                    </DialogComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<DefaultFunctionalities />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\"}"}