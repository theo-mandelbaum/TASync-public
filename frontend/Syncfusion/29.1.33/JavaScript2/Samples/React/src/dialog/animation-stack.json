{"index.css":".text {\n    text-transform: capitalize;\n}\n        \n#customization {\n    display: table;\n    margin: 0 auto;\n}\n\n.animate {\n    display: table-cell;\n    padding: 10px;\n}\n\n.control-pane .dialog-target {\n    min-height: 350px;\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\nimport { SampleBase } from './sample-base';\n\nexport class Animation extends SampleBase {\n    defaultDialogInstance;\n    dlgButton;\n    animationSettings;\n    constructor(props) {\n        super(props);\n        this.state = {\n            hideDialog: true\n        };\n        this.dlgButton = [{\n                click: this.dialogButtonClick.bind(this),\n                buttonModel: { content: 'Hide', isPrimary: true }\n            }];\n        this.buttonClick = this.buttonClick.bind(this);\n        this.animationSettings = { effect: 'Zoom' };\n    }\n    dialogButtonClick() {\n        this.setState({ hideDialog: false });\n    }\n    dialogClose() {\n        this.setState({ hideDialog: false });\n    }\n    buttonClick(args) {\n        let dialog = this.defaultDialogInstance;\n        let effects = args.target.id;\n        let txt = args.target.parentElement.innerText;\n        txt = (txt === 'Zoom In/Out') ? 'Zoom In or Out' : txt;\n        dialog.content = 'The dialog is configured with animation effect. It is opened or closed with \"' + txt + '\" animation.';\n        dialog.animationSettings = { effect: effects, duration: 400 };\n        this.setState({ hideDialog: true });\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div id='target' className='col-lg-12 control-section dialog-target'>\n                    <div id='customization'>\n                        <div className='animate'>\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='Zoom'>Zoom</button>\n                        </div>\n                        <div className='animate'>\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipXDown'>FlipX Down</button>\n                        </div>\n                        <div className='animate'>\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipXUp'>FlipX Up</button>\n                        </div>\n                        <div className='animate'>\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipYLeft'>FlipY Left</button>\n                        </div>\n                        <div className='animate'>\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipYRight'>FlipY Right</button>\n                        </div>\n                    </div>\n                    <DialogComponent id='AnimationDialog' isModal={true} header='Animation Dialog' showCloseIcon={true} animationSettings={this.animationSettings} width='285px' ref={defaultDialog => this.defaultDialogInstance = defaultDialog} target='#target' buttons={this.dlgButton} visible={this.state.hideDialog} beforeClose={this.dialogClose.bind(this)}>\n                        <span>The dialog is configured with animation effect. It is opened or closed with \"Zoom In or Out\" animation.</span>\n                    </DialogComponent>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Animation />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\"}"}