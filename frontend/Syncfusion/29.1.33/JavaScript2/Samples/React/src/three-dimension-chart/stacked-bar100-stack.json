{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for 100 percent StackingBar Series\n */\nimport * as React from \"react\";\nimport { Chart3DComponent, Chart3DSeriesCollectionDirective, Chart3DSeriesDirective, Inject, Legend3D, Category3D, StackingBarSeries3D, Tooltip3D, Highlight3D } from '@syncfusion/ej2-react-charts';\nimport { SampleBase } from './sample-base';\nimport { Browser } from '@syncfusion/ej2-base';\nexport let data = [\n    { x: '2013', y: 9628912, y1: 4298390, y2: 2842133, y3: 2006366 },\n    { x: '2014', y: 9609326, y1: 4513769, y2: 3016710, y3: 2165566 },\n    { x: '2015', y: 7485587, y1: 4543838, y2: 3034081, y3: 2279503 },\n    { x: '2016', y: 7793066, y1: 4999266, y2: 2945295, y3: 2359756 },\n    { x: '2017', y: 6856880, y1: 5235842, y2: 3302336, y3: 2505741 }\n];\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class StackedBar100 extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                <style>\n                    {SAMPLE_CSS}\n                </style>\n                <div className='control-section'>\n                    <Chart3DComponent id='charts' style={{ textAlign: \"center\" }} legendSettings={{ enableHighlight: true }} primaryXAxis={{ valueType: 'Category', labelPlacement: 'BetweenTicks' }} primaryYAxis={{\n                majorTickLines: { width: 0 },\n                edgeLabelPlacement: 'Shift'\n            }} enableRotation={true} rotation={25} tilt={18} depth={100} width={Browser.isDevice ? '100%' : '75%'} load={this.load.bind(this)} title='Sales Comparison' loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, format: '${point.x} : <b>${point.y} (${point.percentage}%)</b>' }}>\n                        <Inject services={[StackingBarSeries3D, Legend3D, Tooltip3D, Category3D, Highlight3D]}/>\n                        <Chart3DSeriesCollectionDirective>\n                            <Chart3DSeriesDirective dataSource={data} xName='x' yName='y' name='General Motors' columnWidth={0.5} type='StackingBar100'/>\n                            <Chart3DSeriesDirective dataSource={data} xName='x' yName='y1' name='Honda' columnWidth={0.5} type='StackingBar100'/>\n                            <Chart3DSeriesDirective dataSource={data} xName='x' yName='y2' name='Suzuki' columnWidth={0.5} type='StackingBar100'/>\n                            <Chart3DSeriesDirective dataSource={data} xName='x' yName='y2' name='BMW' columnWidth={0.5} type='StackingBar100'/>\n                        </Chart3DSeriesCollectionDirective>\n                    </Chart3DComponent>\n                </div>\n            </div>);\n    }\n    onChartLoad(args) {\n        let chart = document.getElementById('charts');\n        chart.setAttribute('title', '');\n    }\n    ;\n    load(args) {\n        let selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<StackedBar100 />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-data\":\"*\"}"}