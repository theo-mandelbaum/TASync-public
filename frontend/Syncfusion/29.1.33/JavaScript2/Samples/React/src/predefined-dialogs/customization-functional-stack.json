{"index.css":"  .dlgbtn {\n    margin-right: 20px;\n  }\n  .control-section {\n    height: 100%;\n  }\n  #predefinedDialogCustomization {\n    height: 100%;\n    padding: 25px 0 0 25px;\n  }\n  #predefinedDialogCustomization #statusText{\n    font-size:16px;\n    margin-top: 20px;\n  }\n  #predefinedDialogCustomization .e-btn{\n    margin-right:10px;\n  }\n  .fileEdit{\n    display:flex;\n    justify-content:space-evenly;\n    padding: 20px 0 0 50px;\n  }\n.e-alert-dialog .e-footer-content {\n    display: flex;\n    justify-content: center;\n  }\n.circle-border{\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: green;\n    width: 60px;\n    height: 60px;\n    border: 5px solid rgb(215,215,215);\n    border-radius: 50%;\n  }\n.e-changes-reject{\n    display: inline;\n    float: left;\n    font-size: 40px;\n    padding-right: 10px; \n  }\n  \n  ","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { DialogUtility } from '@syncfusion/ej2-react-popups';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\n\nconst Customization = () => {\n    const [content, setContent] = useState('');\n    const [display, setDisplay] = useState('');\n    let dialogObj;\n    const buttonClick = (args) => {\n        if (args.target.textContent.toLowerCase() == 'alert') {\n            setDisplay('none');\n            dialogObj = DialogUtility.alert({\n                title: '',\n                content: '<div class=\"new\" style=\"display: flex;flex-direction: column;align-items: center;\"><p><span class=\"circle-border\"><span class=\"e-icons e-check\" style=\"font-size: 30px; color: green; padding:5px 0 0 0; font-weight: 700;\"></span></span></p><p><b style=\"font-size:25px; font-weight: 500 !important;\">Good job!</b></p><p>You clicked the button!</p></div>',\n                okButton: { text: 'OK', click: alertOkAction.bind(this) },\n                position: { X: 'center', Y: 'center' },\n                width: '240px',\n                closeOnEscape: true\n            });\n        }\n        else if (args.target.textContent.toLowerCase() == 'confirm') {\n            setDisplay('none');\n            dialogObj = DialogUtility.confirm({\n                title: ' Delete file',\n                content: '<p ><span class= \"e-icons e-changes-reject\" style=\"float: left;padding-right: 10px;font-size: 25px;display: inline;\"></span>Are you sure you want to permanently delete this file?</p><p class=\"fileEdit\"><span class= \"e-icons e-image\" style=\"font-size: 45px;\"></span><span>failed personas.png<br/>Item type:PNG File<br/>Dimenstion: 1384 * 782<br/>Size:374 KB<br/>Original Location: C:/Users/Images</span></p>',\n                okButton: { text: 'YES', click: confirmOkAction.bind(this) },\n                cancelButton: { text: 'No', click: confirmCancelAction.bind(this) },\n                position: { X: 'center', Y: 'center' },\n                width: '420px',\n                closeOnEscape: true\n            });\n        }\n        else if (args.target.textContent.toLowerCase() == 'prompt') {\n            setDisplay('none');\n            dialogObj = DialogUtility.confirm({\n                title: 'Join Wi-Fi network',\n                content: '<table class=\"Table\"><tbody><tr><td>SSID: <b>AndroidAP</b></td></tr><tr> <td>Password:</td> </tr> <tr> <td> <span class=\"e-input-group\"> <input type=\"password\" id=\"password\" name=\"Required\" class=\"e-input\"> </span> </td> </tr> </tbody> </table> ',\n                okButton: { text: 'OK', click: promptOkAction.bind(this) },\n                cancelButton: { click: promptCancelAction.bind(this) },\n                position: { X: 'center', Y: 'center' },\n                width: '240px',\n                closeOnEscape: true\n            });\n        }\n    };\n    const alertOkAction = () => {\n        dialogObj.hide();\n        setContent('The user canceled the dialog box.');\n        setDisplay('block');\n    };\n    const confirmOkAction = () => {\n        dialogObj.hide();\n        setContent('The user confirmed the dialog box');\n        setDisplay('block');\n    };\n    const confirmCancelAction = () => {\n        dialogObj.hide();\n        setContent('The user canceled the dialog box.');\n        setDisplay('block');\n    };\n    const promptOkAction = () => {\n        dialogObj.hide();\n        setContent('The user confirmed the dialog box');\n        setDisplay('block');\n    };\n    const promptCancelAction = () => {\n        dialogObj.hide();\n        setContent('The user canceled the prompt dialog');\n        setDisplay('block');\n    };\n    return (<div className='control-pane'>\n      <div id='predefinedDialogCustomization' className='col-lg-12 control-section dialog-target'>\n        {/* Buttons to open the corresponding Predefined Dialog */}\n        <ButtonComponent id=\"alertBtn\" cssClass=\"e-danger e-control e-btn dlgbtn\" onClick={buttonClick.bind(this)}>Alert</ButtonComponent>\n        <ButtonComponent id=\"confirmBtn\" cssClass=\"e-success e-control e-btn dlgbtn\" onClick={buttonClick.bind(this)}>Confirm</ButtonComponent>\n        <ButtonComponent id=\"promptBtn\" isPrimary cssClass=\"e-control e-btn dlgbtn\" onClick={buttonClick.bind(this)}>Prompt</ButtonComponent>\n        <span id=\"statusText\" style={{ display: display }}>{content}</span>\n      </div>\n    </div>);\n};\nexport default Customization;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Customization />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\"}"}