{"index.css":"\n#predefinedDialogAnimation {\n    height: 100%;\n    padding: 0 0 0 25px;\n}\n","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { DialogUtility } from \"@syncfusion/ej2-react-popups\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { ButtonComponent } from \"@syncfusion/ej2-react-buttons\";\nimport { PropertyPane } from './property-pane';\n\nconst Animation = () => {\n    const [animation, setAnimation] = useState(\"Zoom\");\n    const effectData = [\n        { Effect: \"FadeZoom\", Name: \"Fade zoom\" },\n        { Effect: \"SlideBottom\", Name: \"Slide bottom\" },\n        { Effect: \"SlideTop\", Name: \"Slide top\" },\n        { Effect: \"Zoom\", Name: \"Zoom\" },\n        { Effect: \"Fade\", Name: \"Fade\" },\n    ];\n    let fields = { text: \"Name\", value: \"Effect\" };\n    const dialogArgs = {\n        title: \" Delete Multiple Items\",\n        content: \"Are you sure you want to permanently delete these items?\",\n        animationSettings: { effect: animation, delay: 0, duration: 400 },\n        position: { X: \"center\", Y: \"center\" },\n        closeOnEscape: true\n    };\n    const buttonClick = (args) => {\n        if (args.target.textContent.toLowerCase() == \"confirm\") {\n            DialogUtility.confirm(dialogArgs);\n        }\n    };\n    const onChange = (args) => {\n        setAnimation(args.value);\n    };\n    return (<div className=\"control-pane\">\n      <div className=\"control-section row\">\n        <div className=\"col-lg-8\" id=\"predefinedDialogAnimation\">\n          <ButtonComponent id=\"confirmBtn\" cssClass=\"e-success e-control e-btn dlgbtn\" onClick={buttonClick.bind(this)}>Confirm</ButtonComponent>\n        </div>\n        <div className=\"col-lg-4 property-section\">\n          <PropertyPane title=\"Properties\">\n            <div>\n              <DropDownListComponent id=\"effectDrop\" dataSource={effectData} fields={fields} change={onChange.bind(this)} placeholder=\"Animation effect\" floatLabelType=\"Always\" value={animation} popupHeight=\"220px\"/>\n            </div>\n          </PropertyPane>\n        </div>\n      </div>\n\n    </div>);\n};\nexport default Animation;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Animation />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\"}"}