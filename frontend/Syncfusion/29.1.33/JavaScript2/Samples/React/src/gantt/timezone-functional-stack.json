{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { GanttComponent, Inject, Selection, ColumnDirective, ColumnsDirective } from '@syncfusion/ej2-react-gantt';\n\nconst Timezone = () => {\n    const timezoneData = [\n        { taskID: 1, taskName: 'Project Schedule', startDate: new Date('02/04/2024 08:00'), endDate: new Date('03/10/2024') },\n        { taskID: 2, taskName: 'Planning', startDate: new Date('02/04/2024 08:00'), endDate: new Date('02/10/2024'), parentID: 1 },\n        { taskID: 3, taskName: 'Plan timeline', startDate: new Date('02/04/2024 08:00'), endDate: new Date('02/10/2024'), duration: 6, progress: '60', parentID: 2 },\n        { taskID: 4, taskName: 'Plan budget', startDate: new Date('02/04/2024 08:00'), endDate: new Date('02/10/2024'), duration: 6, progress: '90', parentID: 2 },\n        { taskID: 5, taskName: 'Allocate resources', startDate: new Date('02/04/2024 08:00'), endDate: new Date('02/10/2024'), duration: 6, progress: '75', parentID: 2 },\n        { taskID: 6, taskName: 'Planning complete', startDate: new Date('02/06/2024 08:00'), endDate: new Date('02/10/2024'), duration: 0, predecessor: '3FS,4FS,5FS', parentID: 2 },\n        { taskID: 7, taskName: 'Design', startDate: new Date('02/13/2024 08:00'), endDate: new Date('02/17/2024 08:00'), parentID: 1, },\n        { taskID: 8, taskName: 'Software Specification', startDate: new Date('02/13/2024 08:00'), endDate: new Date('02/15/2024'), duration: 3, progress: '60', predecessor: '6FS', parentID: 7, },\n        { taskID: 9, taskName: 'Develop prototype', startDate: new Date('02/13/2024 08:00'), endDate: new Date('02/15/2024'), duration: 3, progress: '100', predecessor: '6FS', parentID: 7, },\n        { taskID: 10, taskName: 'Get approval from customer', startDate: new Date('02/16/2024 08:00'), endDate: new Date('02/17/2024 08:00'), duration: 2, progress: '100', predecessor: '9FS', parentID: 7 },\n        { taskID: 11, taskName: 'Design complete', startDate: new Date('02/17/2024 08:00'), endDate: new Date('02/17/2024 08:00'), duration: 0, predecessor: '10FS', parentID: 7 }\n    ];\n    const taskFields = {\n        id: 'taskID',\n        name: 'taskName',\n        startDate: 'startDate',\n        duration: 'duration',\n        progress: 'progress',\n        dependency: 'predecessor',\n        parentID: 'parentID'\n    };\n    const timelineSettings = {\n        timelineUnitSize: 65,\n        topTier: {\n            unit: 'Day',\n            format: 'MMM dd, yyyy'\n        },\n        bottomTier: {\n            unit: 'Hour',\n            format: 'hh:mm a'\n        }\n    };\n    let dayWorkingTime = [{ from: 0, to: 24 }];\n    return (<div className=\"control-pane\">\n      <div className=\"control-section\">\n        <GanttComponent id='Timezone' dataSource={timezoneData} timelineSettings={timelineSettings} height='450px' timezone='UTC' durationUnit='Hour' includeWeekend={true} treeColumnIndex={1} dateFormat='hh:mm a' dayWorkingTime={dayWorkingTime} taskFields={taskFields}>\n          <ColumnsDirective>\n            <ColumnDirective field='taskID' width='80'></ColumnDirective>\n            <ColumnDirective field='taskName' width='250'></ColumnDirective>\n            <ColumnDirective field='startDate'></ColumnDirective>\n            <ColumnDirective field='duration'></ColumnDirective>\n            <ColumnDirective field='predecessor'></ColumnDirective>\n            <ColumnDirective field='progress'></ColumnDirective>\n          </ColumnsDirective>\n          <Inject services={[Selection]}/>\n        </GanttComponent>\n      </div>\n\n    </div>);\n};\nexport default Timezone;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Timezone />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-gantt\":\"*\",\"@syncfusion/ej2-react-gantt\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}