{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { GanttComponent, Inject, Selection, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-gantt';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { SampleBase } from './sample-base';\nexport class RemoteData extends SampleBase {\n    taskFields = {\n        id: 'TaskId',\n        name: 'TaskName',\n        startDate: 'StartDate',\n        duration: 'Duration',\n        dependency: 'Predecessor',\n        child: 'SubTasks'\n    };\n    projectStartDate = new Date('02/24/2021');\n    projectEndDate = new Date('06/10/2021');\n    gridLines = 'Both';\n    timelineSettings = {\n        timelineUnitSize: 50,\n        topTier: {\n            unit: 'Month',\n            format: 'MMM dd, y',\n        },\n        bottomTier: {\n            unit: 'Day',\n            formatter: (date) => {\n                let month = date.getMonth();\n                if (month === 1) {\n                    return '';\n                }\n                else {\n                    let presentDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n                    let start = new Date(presentDate.getFullYear(), 0, 0);\n                    let diff = Number(presentDate) - Number(start);\n                    let oneDay = 1000 * 60 * 60 * 24;\n                    let day = Math.floor(diff / oneDay);\n                    return 'day ' + (day - 59);\n                }\n            },\n        },\n    };\n    dataSource = new DataManager({\n        url: 'http://localhost:62728/api/GanttData',\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n    labelSettings = {\n        leftLabel: 'TaskName'\n    };\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section'>\n          <GanttComponent id='RemoteData' dataSource={this.dataSource} allowSorting={true} dateFormat={'MMM dd, y'} treeColumnIndex={1} allowSelection={true} highlightWeekends={false} includeWeekend={true} allowUnscheduledTasks={true} projectStartDate={this.projectStartDate} projectEndDate={this.projectEndDate} taskFields={this.taskFields} gridLines={this.gridLines} timelineSettings={this.timelineSettings} labelSettings={this.labelSettings} height='410px'>\n            <ColumnsDirective>\n\t\t\t  <ColumnDirective field='TaskId' visible={false}></ColumnDirective>\n              <ColumnDirective field='TaskName' headerText='Task Name' width='250' clipMode='EllipsisWithTooltip'></ColumnDirective>\n              <ColumnDirective field='StartDate'></ColumnDirective>\n              <ColumnDirective field='Duration'></ColumnDirective>\n            </ColumnsDirective>\n            <Inject services={[Selection]}/>\n          </GanttComponent>\n          <div style={{ float: 'right', margin: '10px' }}>Source:\n            <a href=\"https://en.wikipedia.org/wiki/Cereal_growth_staging_scales\" target='_blank'>https://en.wikipedia.org/</a>\n          </div>\n        </div>\n\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<RemoteData />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-gantt\":\"*\",\"@syncfusion/ej2-react-gantt\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}