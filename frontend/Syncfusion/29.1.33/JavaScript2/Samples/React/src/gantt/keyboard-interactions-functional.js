"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_1 = require("react");
var ej2_react_gantt_1 = require("@syncfusion/ej2-react-gantt");
var data_1 = require("./data");
var sample_base_1 = require("../common/sample-base");
var property_pane_1 = require("../common/property-pane");
var KeyboardInteraction = function () {
    (0, react_1.useEffect)(function () {
        (0, sample_base_1.updateSampleSection)();
    }, []);
    var taskFields = {
        id: 'TaskID',
        name: 'TaskName',
        startDate: 'StartDate',
        endDate: 'EndDate',
        duration: 'Duration',
        progress: 'Progress',
        dependency: 'Predecessor',
        child: 'subtasks'
    };
    var editSettings = {
        allowAdding: true,
        allowEditing: true,
        allowDeleting: true,
    };
    var toolbar = ['Search'];
    var labelSettings = {
        leftLabel: 'TaskName'
    };
    var splitterSettings = {
        columnIndex: 2
    };
    var projectStartDate = new Date('03/24/2024');
    var projectEndDate = new Date('07/06/2024');
    return (React.createElement("div", { className: 'control-pane' },
        React.createElement("div", { className: 'control-section' },
            React.createElement("div", { className: 'col-lg-9' },
                React.createElement(ej2_react_gantt_1.GanttComponent, { id: 'KeyboardInteraction', dataSource: data_1.projectNewData, highlightWeekends: true, treeColumnIndex: 1, allowSelection: true, allowKeyboard: true, toolbar: toolbar, editSettings: editSettings, splitterSettings: splitterSettings, taskFields: taskFields, labelSettings: labelSettings, height: '410px', projectStartDate: projectStartDate, projectEndDate: projectEndDate },
                    React.createElement(ej2_react_gantt_1.ColumnsDirective, null,
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'TaskID', width: '80' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'TaskName', width: '250' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'StartDate' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'EndDate' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'Duration' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'Predecessor' }),
                        React.createElement(ej2_react_gantt_1.ColumnDirective, { field: 'Progress' })),
                    React.createElement(ej2_react_gantt_1.Inject, { services: [ej2_react_gantt_1.Selection, ej2_react_gantt_1.DayMarkers, ej2_react_gantt_1.Edit, ej2_react_gantt_1.Filter, ej2_react_gantt_1.Toolbar] }))),
            React.createElement("div", { className: 'col-lg-3 property-section', style: { height: '450px', overflow: 'auto' } },
                React.createElement(property_pane_1.PropertyPane, { title: 'Event Trace' },
                    React.createElement("table", { id: "property", title: "Properties" },
                        React.createElement("tbody", null,
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Keys")),
                                React.createElement("td", { style: { width: '70%' } },
                                    React.createElement("b", null, "Description"))),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Alt + J")),
                                React.createElement("td", { style: { width: '50%' } }, "Focus Gantt Component")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Tab / Shift + Tab")),
                                React.createElement("td", { style: { width: '50%' } }, "Focus the next or previous element")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Home")),
                                React.createElement("td", { style: { width: '50%' } }, "First Row Selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "End")),
                                React.createElement("td", { style: { width: '50%' } }, "Last Row Selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "DownArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Row Selection Down")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "UpArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Row Selection Up")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "LeftArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Left")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "RightArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Right")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + UpArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Collapse All")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + DownArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Expand All")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Shift + UpArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Collapse Row")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Shift + DownArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Expand Row")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Enter")),
                                React.createElement("td", { style: { width: '50%' } }, "Save Request")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Esc")),
                                React.createElement("td", { style: { width: '50%' } }, "Cancel Request")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Insert")),
                                React.createElement("td", { style: { width: '50%' } }, "Add Record")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Insert")),
                                React.createElement("td", { style: { width: '50%' } }, "Add Record By Dialog")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + F2")),
                                React.createElement("td", { style: { width: '50%' } }, "Edit Record By Dialog")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Delete")),
                                React.createElement("td", { style: { width: '50%' } }, "Delete Row")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Shift + F")),
                                React.createElement("td", { style: { width: '50%' } }, "Focus Search TextBox")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Shift + F5")),
                                React.createElement("td", { style: { width: '50%' } }, "Focus Task")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Shift + DownArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Down")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Shift + UpArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Up")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Shift + LeftArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Left")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Shift + RightArrow")),
                                React.createElement("td", { style: { width: '50%' } }, "Move Cell Selection Right")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Z")),
                                React.createElement("td", { style: { width: '50%' } }, "Undo Last Action")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '50%' } },
                                    React.createElement("b", null, "Ctrl + Y")),
                                React.createElement("td", { style: { width: '50%' } }, "Redo Last Action"))))))),
        React.createElement("div", { id: "action-description" },
            React.createElement("p", null, "This demo showcases the keyboard shortcuts applicable on Gantt and also lists out in below descriptions, and this demo also explains how those applicable shortcuts interacts with Gantt actions.")),
        React.createElement("div", { id: "description" },
            React.createElement("p", null,
                "All the Gantt actions can be controlled via keyboard keys and are availed using the ",
                React.createElement("a", { target: "_blank", href: "https://ej2.syncfusion.com/react/documentation/api/gantt#allowkeyboard" }, "allowKeyboard"),
                " property, which is set to true by default. The applicable key combinations and their relative functionalities are listed below."),
            React.createElement("p", null,
                "Gantt component features are segregated into individual feature-wise modules. To use a selection, inject the",
                React.createElement("code", null, "Selection"),
                " module using the ",
                React.createElement("code", null, "Gantt.Inject(Selection)"),
                " method.To use a toolbar, inject the ",
                React.createElement("code", null, "Toolbar"),
                " module using the ",
                React.createElement("code", null, "Gantt.Inject(Toolbar)"),
                " method.To use a edit, inject the",
                React.createElement("code", null, "Edit"),
                " module using the ",
                React.createElement("code", null, "Gantt.Inject(Edit)"),
                " method.To use markers, inject the",
                React.createElement("code", null, "DayMarkers"),
                " module using the ",
                React.createElement("code", null, "Gantt.Inject(DayMarkers)"),
                " method."),
            React.createElement("div", null,
                React.createElement("table", null,
                    React.createElement("thead", null,
                        React.createElement("tr", null,
                            React.createElement("th", null,
                                React.createElement("b", null, "Keys")),
                            React.createElement("th", null,
                                React.createElement("b", null, "Description")))),
                    React.createElement("tbody", null,
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Alt + J")),
                            React.createElement("td", null, "Focus Gantt Component")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Tab / Shift + Tab")),
                            React.createElement("td", null, "Focus the next or previous element")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Home")),
                            React.createElement("td", null, "First Row Selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "End")),
                            React.createElement("td", null, "Last Row Selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "DownArrow")),
                            React.createElement("td", null, "Move Row Selection Down")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "UpArrow")),
                            React.createElement("td", null, "Move Row Selection Up")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "LeftArrow")),
                            React.createElement("td", null, "Move Cell Selection Left")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "RightArrow")),
                            React.createElement("td", null, "Move Cell Selection Right")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + UpArrow")),
                            React.createElement("td", null, "Collapse All")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + DownArrow")),
                            React.createElement("td", null, "Expand All")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Shift + UpArrow")),
                            React.createElement("td", null, "Collapse Row")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Shift + DownArrow")),
                            React.createElement("td", null, "Expand Row")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Enter")),
                            React.createElement("td", null, "Save Request")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Esc")),
                            React.createElement("td", null, "Cancel Request")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Insert")),
                            React.createElement("td", null, "Add Record")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Insert")),
                            React.createElement("td", null, "Add Record By Dialog")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + F2")),
                            React.createElement("td", null, "Edit Record By Dialog")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Delete")),
                            React.createElement("td", null, "Delete Row")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Shift + F")),
                            React.createElement("td", null, "Focus Search Textbox")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + F5")),
                            React.createElement("td", null, "Focus Task")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + DownArrow")),
                            React.createElement("td", null, "Move Cell Selection Down")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + UpArrow")),
                            React.createElement("td", null, "Move Cell Selection Up")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + LeftArrow")),
                            React.createElement("td", null, "Move Cell Selection Left")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + RightArrow")),
                            React.createElement("td", null, "Move Cell Selection Right")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Z")),
                            React.createElement("td", null, "Undo Last Action")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Y")),
                            React.createElement("td", null, "Redo Last Action"))))))));
};
exports.default = KeyboardInteraction;
