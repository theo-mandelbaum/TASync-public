{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","color-range-sample-data.json":"{\n    \"colorRangeSample\":[\n        [17.2, 24.6, 18.4, 9.6, 8.6, 18.8, 10.3, 5.0],\n        [15.8, 29.9, 15.2, 31.3, 18.1, 5.5, 10.2, 14.6],\n        [17.8, 25.5, 19.1, 12.9, 7.5, 30.7, 12.6, 5.6],\n        [7.3, 20.1, 18.8, 20.3, 6.1, 9.0, 29.8, 7.7],\n        [7.8, 30.5, 19.6, 10.8, 7.9, 15.5, 5.2, 14.3],\n        [5.8, 31.7, 17.8, 10.4, 17.3, 15.7, 9.1, 7.7],\n        [11.3, 29.1, 19.5, 11.5, 6.3, 12.9, 10.1, 6.7],\n        [13.7, 31.3, 15.3, 6.2, 7.7, 16.1, 18.9, 12.6],\n        [9.3, 29.9, 16.4, 14.5, 5.2, 12.3, 18.7, 7.3],\n        [16.3, 27.4, 27.0, 5.5, 16.2, 12.6, 8.3, 15.2],\n        [7.2, 20.1, 16.9, 9.0, 7.6, 16.2, 8.4, 29.0]\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useRef, useState } from \"react\";\nimport { HeatMapComponent, Legend, Tooltip, Inject } from '@syncfusion/ej2-react-heatmap';\nimport * as data from './color-range-sample-data.json';\n\nimport { PropertyPane } from './property-pane';\nimport { RadioButtonComponent } from \"@syncfusion/ej2-react-buttons\";\nconst ColorRange = () => {\n    const [paletteType, setPaletteType] = useState('Gradient');\n    let heatmap = useRef(null);\n    let title = {\n        text: 'U.S. Government Energy Consumption by Agency (Trillion Btu)',\n        textStyle: {\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit',\n            size: '15px',\n        }\n    };\n    let xAxis = {\n        labels: ['2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015'],\n        labelIntersectAction: 'None',\n        labelRotation: 45,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    let yAxis = {\n        labels: ['Agriculture', 'Energy', 'Administration', 'Health', 'Interior', 'Justice', 'NASA', 'Transportation'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    let paletteSettings = {\n        palette: [\n            { startValue: 5, endValue: 15, minColor: '#FFFFDA', maxColor: '#EDF8B6' },\n            { startValue: 15, endValue: 20, minColor: '#CAE8B4', maxColor: '#78D1BD' },\n            { startValue: 20, endValue: 31.7, minColor: '#36BCC6', maxColor: '#208FC6' },\n        ],\n        type: paletteType\n    };\n    let cellSettings = {\n        border: { width: 0 },\n        showLabel: false\n    };\n    const fixed = () => {\n        setPaletteType('Fixed');\n        heatmap.current.dataBind();\n    };\n    const gradient = () => {\n        setPaletteType('Gradient');\n        heatmap.current.dataBind();\n    };\n    const load = (args) => {\n        if (args.heatmap.element.offsetWidth < 500) {\n            args.heatmap.xAxis.labelRotation = 0;\n            args.heatmap.xAxis.labelIntersectAction = 'Trim';\n        }\n        else {\n            args.heatmap.xAxis.labelRotation = 45;\n            args.heatmap.xAxis.labelIntersectAction = 'None';\n        }\n    };\n    return (<main><div>\n            <div className='col-md-9 control-section'>\n\n                <HeatMapComponent id='heatmap-container' ref={heatmap} titleSettings={title} legendSettings={{ textStyle: { fontFamily: 'inherit' } }} tooltipSettings={{ textStyle: { fontFamily: 'inherit' } }} xAxis={xAxis} yAxis={yAxis} dataSource={data.colorRangeSample} paletteSettings={paletteSettings} cellSettings={cellSettings} load={load.bind(this)}>\n                    <Inject services={[Legend, Tooltip]}/>\n                </HeatMapComponent>\n            </div>\n            <div className=\"col-md-3 property-section\">\n                <PropertyPane title='Properties'>\n                    <table id='property' role='none' title='Properties' className='property-panel-table' style={{ width: '100%', marginLeft: -10 }}>\n                        <tbody>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '60%' }}>\n                                    <div>Palette Type:</div>\n                                </td>\n                                <td style={{ width: '40%' }}>\n                                    <div className='row'>\n                                        <RadioButtonComponent id='fixed' label='Fixed' name='paletteType' value=\"Fixed\" change={fixed}/>\n                                    </div>\n                                    <div className='row'>\n                                        <RadioButtonComponent id='gradient' checked={true} label='Gradient' name='paletteType' value=\"Gradient\" change={gradient}/>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                <p>\n                    This sample visualizes the energy consumption in trillion British thermal units (btu) by\n                    the various public sectors in US government over the years. The data label is disabled in this sample,\n                    the tooltip displays the data point values.  In property panel, the options are available to change\n                    palette type in Heatmap by means of radio button.\n                </p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n                <p>\n                This example explains how to provide a specific color for specific range in heatmap. The <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteCollectionModel/#startvalue\" target=\"_blank\"> startValue </a> and <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteCollectionModel/#endvalue\" target=\"_blank\"> endValue </a> properties are used to define the range start and end values. The <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteCollectionModel/#mincolor\" target=\"_blank\"> minColor </a> and <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteCollectionModel/#maxcolor\" target=\"_blank\"> maxColor </a> properties represent the colors of given range.\n                </p>\n                <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n                <br></br>\n                <p><b>Injecting Module</b></p>\n                <p>\n                    Heatmap component features are separated into discrete feature-based modules. To use a tooltip and the legend, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/legend\">Legend</a> module using the <code>{'<Inject services={[Tooltip, Legend]} />'}</code> method.\n                </p>\n            </section>\n    </main>);\n};\nexport default ColorRange;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ColorRange />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}