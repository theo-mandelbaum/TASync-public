{"index.css":"/* css */","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { HeatMapComponent, Tooltip, Inject } from '@syncfusion/ej2-react-heatmap';\nimport { Adaptor } from '@syncfusion/ej2-react-heatmap';\nimport { SampleBase } from './sample-base';\nexport class ArrayCell extends SampleBase {\n    arrayCellData = [\n        [0, 0, 10.75], [0, 1, 14.5], [0, 2, 25.5], [0, 3, 39.5], [0, 4, 59.75], [0, 5, 35.50], [0, 6, 75.5],\n        [1, 0, 20.75], [1, 1, 35.5], [1, 2, 29.5], [1, 3, 75.5], [1, 4, 80], [1, 5, 65], [1, 6, 85],\n        [2, 0, 6], [2, 1, 18.5], [2, 2, 30.05], [2, 3, 35.5], [2, 4, 40.75], [2, 5, 50.75], [2, 6, 65],\n        [3, 0, 30.5], [3, 1, 20.5], [3, 2, 45.30], [3, 3, 50], [3, 4, 55], [3, 5, 85.80], [3, 6, 87.5],\n        [4, 0, 10.5], [4, 1, 20.75], [4, 2, 35.5], [4, 3, 35.5], [4, 4, 45.5], [4, 5, 65.], [4, 6, 75.5],\n        [5, 0, 45.5], [5, 1, 20.75], [5, 2, 45.5], [5, 3, 50.75], [5, 4, 79.30], [5, 5, 84.20], [5, 6, 87.36],\n        [6, 0, 26.82], [6, 1, 70], [6, 2, 75], [6, 3, 79.5], [6, 4, 88.5], [6, 5, 89.5], [6, 6, 91.75],\n        [7, 0, 15.75], [7, 1, 20.75], [7, 2, 25.5], [7, 3, 42.35], [7, 4, 45.15], [7, 5, 76.5], [7, 6, 80.5],\n        [8, 0, 1.98], [8, 1, 15.23], [8, 2, 43], [8, 3, 49], [8, 4, 63.80], [8, 5, 67.97], [8, 6, 70.52],\n        [9, 0, 14.31], [9, 1, 42.87], [9, 2, 77.28], [9, 3, 77.82], [9, 4, 81.44], [9, 5, 81.92], [9, 6, 83.75],\n        [10, 0, 25.5], [10, 1, 35.5], [10, 2, 40.5], [10, 3, 45.05], [10, 4, 50.5], [10, 5, 75.5], [10, 6, 90.58]\n    ];\n    render() {\n        return (<main><div className='control-pane'>\n\n                <div className='control-section'>\n                    <HeatMapComponent id='heatmap-container' titleSettings={{\n                text: 'Percentage of Individuals Using Internet by Country',\n                textStyle: {\n                    size: '15px',\n                    fontWeight: '500',\n                    fontStyle: 'Normal',\n                    fontFamily: 'inherit'\n                }\n            }} xAxis={{\n                labels: ['China', 'Australia', 'Mexico', 'Canada', 'Brazil', 'USA',\n                    'UK', 'Germany', 'Russia', 'France', 'Japan'],\n                textStyle: {\n                    fontFamily: 'inherit'\n                }\n            }} yAxis={{\n                labels: ['2000', '2005', '2010', '2011', '2012', '2013', '2014'],\n                textStyle: {\n                    fontFamily: 'inherit'\n                }\n            }} dataSource={this.arrayCellData} dataSourceSettings={{\n                isJsonData: false,\n                adaptorType: 'Cell'\n            }} cellSettings={{\n                border: {\n                    color: 'white'\n                },\n                textStyle: {\n                    color: 'white',\n                    fontFamily: 'inherit'\n                },\n                format: '{value} %'\n            }} paletteSettings={{\n                palette: [{ color: '#3498DB' },\n                    { color: '#2C3E50' }\n                ]\n            }} tooltipSettings={{\n                textStyle: {\n                    fontFamily: 'inherit'\n                }\n            }} legendSettings={{\n                visible: false,\n            }} load={this.load.bind(this)} tooltipRender={this.tooltipTemplate}>\n                        <Inject services={[Adaptor, Tooltip]}/>\n                    </HeatMapComponent>\n                </div>\n            </div>    \n                <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                    <p>\n                        This sample visualizes the percentage growth rate of individuals using the internet in a country\n                        compared to the overall population to the country.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to bind two-dimensional array object as datasource for\n                        heatmap and configure the Heatmap using the data adaptor support.\n                    </p>\n                    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n                    <br></br>\n                    <p><b>Injecting Module</b></p>\n                    <p>\n                        Heatmap component features are separated into discrete feature-based modules. To use a tooltip and the adaptor, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> and <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/adaptorType/\" target='_blank'>Adaptor </a> module using the <code>{'<Inject services={[Tooltip, Adaptor]} />'}</code> method.\n                    </p>\n                </section>\n        </main>);\n    }\n    load(args) {\n    }\n    ;\n    tooltipTemplate(args) {\n        args.content = [args.yLabel + ' | ' + args.xLabel + ' : ' + args.value + ' %'];\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ArrayCell />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}