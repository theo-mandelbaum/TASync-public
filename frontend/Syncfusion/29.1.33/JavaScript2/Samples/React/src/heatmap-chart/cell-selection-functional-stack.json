{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","cell-seletion-data.json":"{\n    \"cellSelectionData\":[\n        [2.9, 5.2, 3.4, 5.6, 4.4],\n        [6.6, 4.8, 8, 3.9, 6.5],\n        [5.1, 4.6, 5.4, 3.9, 4.3],\n        [5.2, 4.3, 3.9, 6.2, 6.4],\n        [7, 3, 1.9, 5.9, 3.5],\n        [7.8, 5.9, 3.9, 4.3, 4.3],\n        [6.5, 4.3, 3.9, 5.2, 3.9]\n    ],\n    \"chartData\":[\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Cereals\", \n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 2.9 }, { \"x\": \"2015\", \"y\": 5.2 }, { \"x\": \"2016\", \"y\": 3.4 },{ \"x\": \"2017\", \"y\": 5.6 },{ \"x\": \"2018\", \"y\": 4.4 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Meat\", \n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 6.6 }, { \"x\": \"2015\", \"y\": 4.8 }, { \"x\": \"2016\", \"y\": 8 },{ \"x\": \"2017\", \"y\": 3.9 },{ \"x\": \"2018\", \"y\": 6.5 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Spices\", \n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 5.1 }, { \"x\": \"2015\", \"y\": 4.6 }, { \"x\": \"2016\", \"y\": 5.4 },{ \"x\": \"2017\", \"y\": 3.9 },{ \"x\": \"2018\", \"y\": 4.3 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Tea\",\n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 5.2 }, { \"x\": \"2015\", \"y\": 4.3 }, { \"x\": \"2016\", \"y\": 3.9 },{ \"x\": \"2017\", \"y\": 6.2 },{ \"x\": \"2018\", \"y\": 6.4 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Edible Oil\",\n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 7 }, { \"x\": \"2015\", \"y\": 3 }, { \"x\": \"2016\", \"y\": 1.9 },{ \"x\": \"2017\", \"y\": 5.9 },{ \"x\": \"2018\", \"y\": 3.5 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Dairy Products\",\n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 7.8 }, { \"x\": \"2015\", \"y\": 5.9 }, { \"x\": \"2016\", \"y\": 3.9 },{ \"x\": \"2017\", \"y\": 4.3 },{ \"x\": \"2018\", \"y\": 4.5 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        },\n        {\n            \"type\": \"Column\", \"xName\": \"x\", \"width\": 2, \"yName\": \"y\",\"name\":\"Wheat\",\n            \"dataSource\": [{ \"x\": \"2014\", \"y\": 6.5 }, { \"x\": \"2015\", \"y\": 4.3 }, { \"x\": \"2016\", \"y\": 3.9 },{ \"x\": \"2017\", \"y\": 5.2 },{ \"x\": \"2018\", \"y\": 3.9 }],\n            \"marker\": { \"dataLabel\": { \"visible\": false } }\n        }\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { HeatMapComponent, Tooltip, Inject, Legend as HeatMapLegend } from '@syncfusion/ej2-react-heatmap';\nimport * as data from './cell-seletion-data.json';\n\nimport { PropertyPane } from './property-pane';\nimport { ChartComponent, Legend, ColumnSeries, Category, DataLabel, Tooltip as chartTooltip } from '@syncfusion/ej2-react-charts';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nconst CellSelection = () => {\n    const [series, setSeries] = useState(data.chartData);\n    let heatmap = useRef(null);\n    let chart = useRef(null);\n    const cellSelected = (args) => {\n        let data = args.data;\n        let length = data.length;\n        let xAxis = [];\n        let flag = [];\n        let series = [];\n        let i;\n        let columnData = {};\n        for (i = 0; i < length; i++) {\n            if (xAxis.indexOf(data[i].xLabel) === -1) {\n                xAxis.push(data[i].xLabel);\n                flag.push(false);\n            }\n        }\n        for (i = 0; i < length; i++) {\n            let index = xAxis.indexOf(data[i].xLabel);\n            if (!flag[index]) {\n                flag[index] = true;\n                let column = {};\n                column.type = 'Column';\n                column.xName = 'x';\n                column.yName = 'y';\n                column.width = 2;\n                column.name = data[i].xLabel;\n                column.marker = { dataLabel: { visible: false } };\n                column.dataSource = [];\n                columnData = {};\n                columnData.x = data[i].yLabel;\n                columnData.y = data[i].value;\n                column.dataSource.push(columnData);\n                series.push(column);\n            }\n            else {\n                columnData = {};\n                columnData.x = data[i].yLabel;\n                columnData.y = data[i].value;\n                series[index].dataSource.push(columnData);\n            }\n        }\n        chart.current.series = series;\n        chart.current.refresh();\n    };\n    const load = (args) => {\n    };\n    const loads = (args) => {\n    };\n    const Change = () => {\n        heatmap.current.clearSelection();\n        chart.current.series = (data.chartData);\n        chart.current.refresh();\n    };\n    return (<main><div>\n            <div className='col-md-9 control-section'>\n\n                <HeatMapComponent id='heatmap-container' style={{ height: '300px' }} ref={heatmap} titleSettings={{ text: 'Top export products 2014-2018, Value in USD million', textStyle: { size: '15px', fontWeight: '500', fontStyle: 'Normal', fontFamily: 'inherit' } }} cellSettings={{ textStyle: { fontFamily: 'inherit' } }} tooltipSettings={{ textStyle: { fontFamily: 'inherit' } }} legendSettings={{ visible: false, textStyle: { fontFamily: 'inherit' } }} xAxis={{ labels: ['Cereals', 'Meat', 'Spices', 'Tea', 'Edible Oil', 'Dairy Products', 'Wheat'], textStyle: { fontFamily: 'inherit' } }} yAxis={{ labels: ['2014', '2015', '2016', '2017', '2018'], textStyle: { fontFamily: 'inherit' } }} dataSource={data.cellSelectionData} allowSelection={true} showTooltip={true} load={loads} cellSelected={cellSelected} paletteSettings={{ palette: [{ color: '#3C5E62 ' }, { color: '#86C843 ' }] }}>\n                    <Inject services={[Tooltip, HeatMapLegend]}/>\n                </HeatMapComponent>\n                <ChartComponent id=\"container1\" style={{ height: '300px' }} ref={chart} primaryXAxis={{ valueType: 'Category', interval: 1, majorGridLines: { width: 0 } }} chartArea={{ border: { width: 0 } }} primaryYAxis={{ majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' } }} series={series} load={load.bind(this)} tooltip={{ enable: true }}>\n                    <Inject services={[ColumnSeries, Legend, DataLabel, Category, chartTooltip]}/>\n                </ChartComponent>\n                <div id=\"source\">Source:\n                    <a href=\"https://en.wikipedia.org/wiki/List_of_countries_by_oil_production\" target=\"_blank\">https://en.wikipedia.org/ </a>\n                </div>\n            </div>\n            <div className=\"col-md-3 property-section\">\n                <PropertyPane title='Properties'>\n                    <table id='property' role='none' title='Properties' className='property-panel-table' style={{ width: '100%', marginLeft: -10 }}>\n                        <tbody>\n                            <tr style={{ height: '50px' }}>\n                                <td style={{ width: '40%' }}>\n                                    <div>\n                                        <ButtonComponent id=\"clearSelection\" onClick={Change.bind(this)}>Clear Selection</ButtonComponent>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </PropertyPane>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                <p>This sample visualizes the revenue from the top exported products between the year 2014 and 2018, valued in USD million.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n                <p>\n                 In this example, you can see how to selected the cell in heat map and render the column chart based on selected data.\n                </p>\n                <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>\n                <br></br>\n                <p><b>Injecting Module</b></p>\n                <p>\n                    Heatmap component features are separated into discrete feature-based modules. To use a tooltip and the legend, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/legend\">Legend</a> module using the <code>{'<Inject services={[Tooltip, Legend]} />'}</code> method.\n                </p>\n            </section>\n    </main>);\n};\nexport default CellSelection;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CellSelection />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}