{"index.css":"/* css */","multi-level-label-data.json":"{\n    \"multiLevelLabelData\": [\n        [52, 65, 67, 45, 37, 52,32, 76, 60, 64, 82, 91],\n        [68, 52, 63, 51, 30, 51,51, 81, 70, 60, 88, 80],\n        [60, 50, 42, 53, 66, 70,41, 69, 76, 74, 86, 97],\n        [66, 64, 46, 40, 47, 41, 45, 76, 83, 69, 92,84],\n        [65, 42, 58, 32, 36, 44,49, 79, 83, 69, 83, 93],\n        [54, 46, 61, 46, 40, 39,41, 69, 61, 84, 84, 87],\n        [48, 46, 61, 47, 49, 41,41, 67, 78, 83, 98, 87],\n        [69, 52, 41, 44, 41, 52,46, 71, 63, 84, 83, 91],\n        [50, 59, 44, 43, 27, 42,26, 64, 76, 65, 81, 86],\n        [47, 49, 66, 53, 50, 34,31, 79, 78, 79, 89, 95],\n        [61, 40, 62, 26, 34, 54,56, 74, 83, 78, 95, 98]\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { HeatMapComponent, Legend, Tooltip, Inject } from '@syncfusion/ej2-react-heatmap';\nimport * as data from './multi-level-label-data.json';\n\nconst MultiLevelLabels = () => {\n    let title = {\n        text: 'Product wise Monthly sales revenue for a e-commerce website',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    let xAxis = {\n        labels: ['Laptop', 'Mobile', 'Gaming', 'Cosmetics', 'Fragrance', 'Watches', 'Handbags', 'Apparel', 'Kitchenware', 'Furniture', 'Home Decor'],\n        border: {\n            width: 1,\n            type: 'Rectangle',\n            color: '#a19d9d'\n        },\n        textStyle: {\n            color: 'black',\n            fontFamily: 'inherit'\n        },\n        multiLevelLabels: [\n            {\n                border: { type: 'Rectangle', color: '#a19d9d' },\n                textStyle: {\n                    color: 'black',\n                    fontWeight: 'Bold',\n                    fontFamily: 'inherit'\n                },\n                categories: [\n                    { start: 0, end: 2, text: 'Electronics', },\n                    { start: 3, end: 4, text: 'Beauty and personal care', },\n                    { start: 5, end: 7, text: 'Fashion', },\n                    { start: 8, end: 10, text: 'Household' }\n                ]\n            }\n        ]\n    };\n    let yAxis = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        border: {\n            width: 0\n        },\n        textStyle: {\n            color: 'black',\n            fontFamily: 'inherit'\n        },\n        isInversed: true,\n        multiLevelLabels: [\n            {\n                border: { type: 'Brace', color: '#a19d9d' },\n                textStyle: {\n                    color: 'black',\n                    fontWeight: 'Bold',\n                    fontFamily: 'inherit'\n                },\n                categories: [\n                    { start: 0, end: 2, text: 'Q1' },\n                    { start: 3, end: 5, text: 'Q2' },\n                    { start: 6, end: 8, text: 'Q3' },\n                    { start: 9, end: 11, text: 'Q4' }\n                ]\n            }\n        ]\n    };\n    let paletteSettings = {\n        palette: [\n            { color: '#F0ADCE' },\n            { color: '#19307B' }\n        ]\n    };\n    const cellTemplate = (args) => {\n        args.displayText = '$ ' + (args.value / 10) + 'K';\n    };\n    const tooltipTemplate = (args) => {\n        args.content = [args.xLabel + ' | ' + args.yLabel + ' : $ ' + (args.value / 10) + 'K'];\n    };\n    const load = (args) => {\n    };\n    return (<main><div className='control-pane'>\n            <div className='control-section'>\n                <HeatMapComponent id='heatmap-container' titleSettings={title} tooltipSettings={{ textStyle: { fontFamily: 'inherit' } }} xAxis={xAxis} yAxis={yAxis} dataSource={data.multiLevelLabelData} tooltipRender={tooltipTemplate} cellRender={cellTemplate} paletteSettings={paletteSettings} legendSettings={{ visible: false }} cellSettings={{ border: { width: 0 }, textStyle: { fontFamily: 'inherit' } }} load={load.bind(this)}>\n                    <Inject services={[Legend, Tooltip]}/>\n                </HeatMapComponent>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                <p>This sample visualizes the product wise monthly sales revenue of the items sold by an online retailer in a year. The products are grouped based on the purchase domains and revenue is displayed as cell data.</p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n                <p>\n                    In this example, you can see how to group axis labels. \n                    You can customize text in each level by using <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/multiLevelLabelsModel/#alignment\" target=\"_blank\">alignment</a>,<a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/multiLevelLabelsModel/#textstyle\" target=\"_blank\">textStyle</a> and <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/multiLevelLabelsModel/#border\" target=\"_blank\">border</a> properties.\n                </p>\n                <p>\n                    Border of the axis labels can be customized by using <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/axisLabelBorderModel/#type\" target=\"_blank\">type</a> property.\n                </p>\n                <ul>\n                    <li><code>Rectangle</code></li>\n                    <li><code>Brace</code></li>\n                    <li><code>WithoutTopBorder</code></li>\n                    <li><code>WithoutBottomBorder</code></li>\n                    <li><code>WithoutTopandBottomBorder</code></li>\n                    <li><code>WithoutBorder</code>.</li>\n                </ul>\n                <br></br>\n                <p> <b>Injecting Module</b></p>\n                <p>\n                    Heatmap component features are separated into discrete feature-based modules. To use a tooltip, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> module using the <code>{'<Inject services={[Tooltip]} />'}</code> method.\n                </p>\n            </section>\n        </main>);\n};\nexport default MultiLevelLabels;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<MultiLevelLabels />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}