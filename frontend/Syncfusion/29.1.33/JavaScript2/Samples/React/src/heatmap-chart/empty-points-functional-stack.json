{"index.css":"/* css */","empty-point-data-source.json":"{\n    \"emptyPointDataSource\":[[8, 5, 2, 6, 8, 2, 9, 3, 7, 8, 7, 6],\n        [5, null, 4, 9, 10, null, 11, 7, 3, 7, 8, null],\n        [8, 7, 2, null, 5, 3, null, 2, 1, 8, null, 4],\n        [10, 2, null, 4, 5, null, 1, 10, 5, 2, 1, null],\n        [1, 2, 9, 4, null, 5, 1, null, 12, 1, null, 4],\n        [4, null, 3, 5, 2, null, null, null, 5, null, 1, 3],\n        [null, null, 4, 10, null, 5, 11, 2, 8, 1, null, 1],\n        [1, 4, null, 4, 5, null, 1, 3, null, 1, null, 3],\n        [null, 2, 1, 4, null, 5, 1, null, 2, 1, null, 2],\n        [1, null, 4, null, null, 2, null, 5, 1, 5, 2, 1],\n        [1, null, 2, 1, 5, null, null, null, 5, 2, 1, null]\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { HeatMapComponent, Legend, Tooltip, Inject } from '@syncfusion/ej2-react-heatmap';\nimport * as data from './empty-point-data-source.json';\n\nconst EmptyPoints = () => {\n    let title = {\n        text: 'Defective Count per 1000 Products from a Manufacturing Unit',\n        textStyle: {\n            size: '15px',\n            fontWeight: '500',\n            fontStyle: 'Normal',\n            fontFamily: 'inherit'\n        }\n    };\n    let xAxis = {\n        labels: ['2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    let yAxis = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    let paletteSettings = {\n        palette: [\n            { color: 'rgb(172, 213, 242)' },\n            { color: 'rgb(127, 168, 201)' },\n            { color: 'rgb(82, 123, 160)' },\n            { color: 'rgb(37, 78, 119)' }\n        ],\n        type: 'Gradient'\n    };\n    let cellSettings = {\n        showLabel: true,\n        border: { width: 0, color: 'white' },\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    let legendSettings = {\n        position: 'Bottom',\n        width: '250px',\n        showLabel: true,\n        textStyle: {\n            fontFamily: 'inherit'\n        }\n    };\n    const tooltipTemplate = (args) => {\n        args.content = [args.yLabel + ' | ' + args.xLabel + ' : ' + args.value + ' defective units'];\n    };\n    const load = (args) => {\n    };\n    return (<main><div className='control-pane'>\n\n            <div className='control-section'>\n                <HeatMapComponent id='heatmap-container' titleSettings={title} tooltipSettings={{ textStyle: { fontFamily: 'inherit' } }} xAxis={xAxis} yAxis={yAxis} dataSource={data.emptyPointDataSource} cellSettings={cellSettings} tooltipRender={tooltipTemplate} paletteSettings={paletteSettings} load={load.bind(this)} legendSettings={legendSettings}>\n                    <Inject services={[Legend, Tooltip]}/>\n                </HeatMapComponent>\n            </div>\n        </div>\n            <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                <p>\n                    This sample visualizes the number of defective product count per 1000 units coming out from a manufacturing unit.\n                    Data points are enhanced with labels and tooltip. Some data points were not marked with any values which indicates\n                    there are no defective products and these data points are termed as empty points.\n                </p>\n            </section>\n            <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n              <p>\n                In this example, you can see how to render empty points in the Heatmap. The empty points or the points with no data\n                can be marked using <code>null</code> in the data source. You can also customize the background color of the\n                empty points by using the <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteSettingsModel/#emptypointcolor\" target='_blank'>emptyPointColor</a> property in <a href=\"https://ej2.syncfusion.com/react/documentation/api/heatmap/paletteSettingsModel/\" target='_blank'>paletteSettings</a>\n                </p>\n                <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over\n                    an item or tap an item on touch-enabled devices.</p>\n                <br></br>\n                <p><b>Injecting Module</b></p>\n                <p>\n                        Heatmap component features are separated into discrete feature-based modules. To use a tooltip and the legend, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/legend\">Legend</a> module using the <code>{'<Inject services={[Tooltip, Legend]} />'}</code> method.\n                </p>\n            </section>\n    </main>);\n};\nexport default EmptyPoints;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<EmptyPoints />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}