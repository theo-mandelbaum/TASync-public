{"index.css":"/* css */","calendar-data-source.json":"{\n    \"calendarDataSource\": [[null, null, null, null, 16, 48, 0],\n        [0, 15, 0, 24, 0, 39, 0],\n        [0, 18, 37, 0, 0, 50, 0],\n        [0, 10, 0, 0, 44, 5, 0],\n        [0, 36, 0, 45, 20, 18, 0],\n        [0, 28, 1, 42, 0, 10, 0],\n        [0, 16, 32, 0, 1, 25, 0],\n        [0, 31, 2, 9, 24, 0, 0],\n        [0, 8, 47, 0, 0, 35, 0],\n        [0, 31, 0, 0, 0, 40, 0],\n        [0, 8, 0, 27, 0, 35, 0],\n        [0, 12, 9, 45, 0, 8, 0],\n        [0, 0, 13, 0, 22, 10, 0],\n        [0, 16, 32, 0, 1, 25, 0],\n        [0, 31, 2, 9, 24, 0, 0],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 28, 14, 10, 0, 0, 0],\n        [0, 36, 0, 45, 20, 18, 0],\n        [0, 28, 1, 42, 0, 10, 0],\n        [0, 31, 0, 24, 0, 40, 0],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 36, 0, 45, 20, 18, 0],\n        [0, 28, 1, 42, 0, 10, 0],\n        [0, 31, 0, 24, 0, 40, 0],\n        [0, 16, 32, 0, 1, 25, 0],\n        [0, 31, 2, 9, 24, 0, 0],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 10, 0, 36, 23, 19, 0],\n        [0, 18, 37, 23, 0, 50, 0],\n        [0, 28, 14, 10, 0, 0, 0],\n        [0, 18, 37, 23, 0, 50, 0],\n        [0, 18, 37, 23, 0, 50, 0],\n        [0, 28, 14, 10, 0, 0, 0],\n        [0, 31, 2, 9, 24, 0, 0],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 10, 2, 0, 44, 5, 0],\n        [0, 36, 0, 45, 20, 18, 0],\n        [0, 28, 1, 42, 0, 10, 0],\n        [0, 31, 0, 24, 0, 40, 1],\n        [0, 16, 32, 0, 1, 25, 0],\n        [0, 31, 2, 9, 24, 0, 0],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 10, 2, 0, 44, 5, 0],\n        [0, 12, 9, 45, 0, 8, 0],\n        [0, 0, 13, 35, 22, 10, 0],\n        [0, 28, 14, 10, 0, 0, 0],\n        [0, 36, 0, 45, 20, 18, 2],\n        [0, 28, 1, 42, 0, 10, 0],\n        [0, 31, 0, 24, 0, 40, 1],\n        [0, 8, 47, 27, 0, 35, 0],\n        [0, 10, 2, 0, 44, 5, 0],\n        [0, 31, 2, 9, 24, 0, 1],\n        [0, 8, 47, 27, 0, 35, 40],\n        [0, 10, 2, 0, 44, 5, null]\n    ]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { HeatMapComponent, Legend, Tooltip, Inject } from '@syncfusion/ej2-react-heatmap';\nimport * as data from './calendar-data-source.json';\nimport { SampleBase } from './sample-base';\nimport { Internationalization } from \"@syncfusion/ej2-base\";\nexport class CalendarHeatmap extends SampleBase {\n    borderColor = 'white';\n    render() {\n        return (<main><div className='control-pane'>\n\n                <div className='control-section'>\n                    <HeatMapComponent id='heatmap-container' titleSettings={{\n                text: 'Annual Summary of User Activities in GitLab',\n                textStyle: {\n                    size: '15px',\n                    fontWeight: '500',\n                    fontStyle: 'Normal',\n                    fontFamily: 'inherit'\n                }\n            }} height={'300px'} xAxis={{\n                opposedPosition: true,\n                valueType: 'DateTime',\n                minimum: new Date(2017, 6, 23),\n                maximum: new Date(2018, 6, 30),\n                intervalType: 'Days',\n                showLabelOn: 'Months',\n                labelFormat: 'MMM',\n                increment: 7,\n                labelIntersectAction: 'Rotate45',\n                textStyle: { fontFamily: 'inherit' }\n            }} tooltipSettings={{\n                textStyle: {\n                    fontFamily: 'inherit'\n                }\n            }} yAxis={{\n                labels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n                isInversed: true,\n                textStyle: { fontFamily: 'inherit' }\n            }} dataSource={data.calendarDataSource} cellSettings={{\n                showLabel: false,\n                border: { color: this.borderColor }\n            }} tooltipRender={this.tooltipTemplate} paletteSettings={{\n                palette: [{ value: 0, color: 'rgb(238,238,238)', label: 'no contributions' },\n                    { value: 1, color: 'rgb(172, 213, 242)', label: '1-15 contributions' },\n                    { value: 16, color: 'rgb(127, 168, 201)', label: '16-31 contributions' },\n                    { value: 32, color: 'rgb(82, 123, 160)', label: '31-49 contributions' },\n                    { value: 50, color: 'rgb(37, 78, 119)', label: '50+ contributions' },\n                ],\n                type: 'Fixed',\n                emptyPointColor: 'white'\n            }} load={this.load.bind(this)} legendSettings={{\n                position: 'Bottom',\n                width: '20%',\n                alignment: 'Near',\n                showLabel: true,\n                labelDisplayType: 'None',\n                enableSmartLegend: true,\n                textStyle: { fontFamily: 'inherit' }\n            }}>\n                        <Inject services={[Legend, Tooltip]}/>\n                    </HeatMapComponent>\n                </div>\n            </div>\n                <section id=\"action-description\" aria-label=\"Description of HeatMap sample\">\n                    <p>\n                        This sample visualizes the summary of user activities in GitLab account such as merge requests,\n                        push events and comments across 52 weeks in a year.\n                    </p>\n                </section>\n                <section id=\"description\" aria-label=\"Description of the HeatMap features demonstrated in this sample\">\n                    <p>\n                        In this example, you can see how to display a calendar data using heatmap. You can make the axis labels to display\n                        at specific time intervals along the datetime axis using the showLabelOn property.\n                    </p>\n                    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over\n                        an item or tap an item on touch-enabled devices.</p>\n                    <br></br>\n                    <p><b>Injecting Module</b></p>\n                    <p>\n                            Heatmap component features are separated into discrete feature-based modules. To use a tooltip and the legend, inject the <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/tooltip\">Tooltip</a> and <a target=\"_blank\" href=\"https://ej2.syncfusion.com/react/documentation/heatmap-chart/legend\">Legend</a> module using the <code>{'<Inject services={[Tooltip, Legend]} />'}</code> method.\n                    </p>\n                </section>\n        </main>);\n    }\n    tooltipTemplate(args) {\n        let intl = new Internationalization();\n        let format = intl.getDateFormat({ format: 'EEE MMM dd, yyyy' });\n        let newDate = new Date(args.xValue);\n        let date = new Date(newDate.getTime());\n        let axisLabel = args.heatmap.axisCollections[1].axisLabels;\n        let index = axisLabel.indexOf(args.yLabel);\n        (date).setDate((date).getDate() + index);\n        let value = format(date);\n        args.content = [(args.value === 0 ? 'No' : args.value) + ' ' + 'contributions' + '<br>' + value];\n    }\n    ;\n    load(args) {\n        this.borderColor = 'white';\n        if (args.heatmap.theme === 'HighContrast' || args.heatmap.theme.indexOf(\"Dark\") > -1 || args.heatmap.theme === 'Fluent2HighContrast') {\n            this.borderColor = 'black';\n        }\n    }\n    ;\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CalendarHeatmap />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-heatmap\":\"*\",\"@syncfusion/ej2-react-heatmap\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}