{"index.css":".skeleton-animation .col-sm-6 {\n    padding: 30px;\n    min-height: 350px;\n    position: relative;\n  }\n  #reloadSkeleton {\n    margin-left: 30px;\n  }\n  /* Skeleton customization */\n  .skeleton-animation .e-card {    \n    display: block;\n  }\n  #skeletondatacard,\n  #skeletonCard {\n    padding: 10px;\n    line-height: inherit;\n    height: 420px;\n  }\n  .skeleton-listProfileView {\n    float: left;\n    margin-right: 15px;\n  }\n  .skeleton-listcard,\n  .e-bigger .skeleton-listcard{\n    line-height: 20px;\n  }\n  .fluent-dark #skeletondatacard,\n  .fluent-dark #skeletonCard,\n  .fluent-dark #skeleton-list{\n    background-color: #313131;\n  }\n  .fluent2 #skeletonCard,\n  .fluent2 #skeleton-list {\n    background-color: #fff;\n  }\n  .skeleton-animation .cardProfile {\n    float: left;\n    margin-right: 15px;\n  }\n  .skeleton-animation .cardinfo {\n    margin-top: 10px;\n    overflow: hidden;\n  }\n  .skeleton-animation #skeleton-list,\n  .skeleton-animation .cardinfo label {\n    margin: 0;\n    white-space: nowrap;\n  }\n  .skeleton-animation .cardContent {\n    margin: 20px 0px 30px;\n  }\n  .skeleton-animation .cardoptions {\n    display: flex;\n    justify-content: space-between;\n  }\n  .skeleton-animation .cardoptions>div {\n       min-width: 60px;\n   }\n  #skeleton-list {\n    padding-left: 12px;\n    padding-top: 7px;\n    height: 420px;\n    line-height: inherit;\n  }\n  #skeleton-list li {\n    list-style: none;\n    display: flow-root;\n    margin-bottom: 9px;\n  }\n  .skeleton-animation .listProfile {\n    float: left;\n    margin-right: 15px;\n    width: 40px;\n    height: 40px;\n  }\n  .skeleton-animation .listCtn {\n    margin: 5px 0px;\n    width: 80%;\n    height: 14px;\n  }\n  .skeleton-animation .distCtn {\n    width: 60%;\n    height: 14px;\n  }\n  .skeleton-animation .image.profile-image {\n    background-image: url('https://ej2.syncfusion.com/react/demos/src/skeleton/images/profile.png');\n    background-size: 60px 60px;\n    height: 60px;\n    width: 60px;\n    border-radius: 50%;\n  }\n  .skeleton-animation .image.post-image {\n    background: url('https://ej2.syncfusion.com/react/demos/src/skeleton/images/post.jpg');\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    background-position: center;\n    height: 250px;\n    width: 100%;\n  }\n  /* List view customization */\n  #skeleton-listview .e-list-item .e-avatar {\n    color: white;\n    background-size: cover;\n  }\n  #skeleton-listview .e-list-item:nth-child(1) .e-avatar {\n    background-color: #039be5;\n  }\n  #skeleton-listview .e-list-item:nth-child(2) .e-avatar {\n    background-color: #e91e63;\n  }\n  #skeleton-listview .e-list-item:nth-child(6) .e-avatar {\n    background-color: #009688;\n  }\n  #skeleton-listview .e-list-item:nth-child(8) .e-avatar {\n    background-color: #0088;\n  }\n\n  #skeleton-listview .pic01 {\n    background-image: url(\"https://ej2.syncfusion.com/react/demos/src/skeleton/images/1.png\");\n  }\n  #skeleton-listview .pic02 {\n    background-image: url(\"https://ej2.syncfusion.com/react/demos/src/skeleton/images/3.png\");\n  }\n  #skeleton-listview .pic03 {\n    background-image: url(\"https://ej2.syncfusion.com/react/demos/src/skeleton/images/5.png\");\n  }\n  #skeleton-listview .pic04 {\n    background-image: url(\"https://ej2.syncfusion.com/react/demos/src/skeleton/images/2.png\");\n  }\n\n  p.displayText {\n    margin: 10px 0px;\n    font-weight: 500;\n  }\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { SkeletonComponent } from '@syncfusion/ej2-react-notifications';\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\n\n\nconst Animation = () => {\n    useEffect(() => {\n        loadData();\n    }, []);\n    const [userRequest, setUserRequest] = useState({\n        isDataLoading: true,\n        profileimage: \"image e-avatar\",\n        postimage: \"image\",\n        cardname: \"\",\n        cardtime: \"\",\n        listData: []\n    });\n    const fields = { text: 'text' };\n    const getData = () => {\n        return new Promise(resolve => setTimeout(() => {\n            let data = {};\n            data['listdata'] = [\n                { text: \"Jenifer\", contact: \"(206) 555-985774\", id: \"1\", avatar: \"\", pic: \"pic01\" },\n                { text: \"Amenda\", contact: \"(206) 555-3412\", id: \"2\", avatar: \"A\", pic: \"\" },\n                { text: \"Isabella\", contact: \"(206) 555-8122\", id: \"4\", avatar: \"\", pic: \"pic02\" },\n                { text: \"William \", contact: \"(206) 555-9482\", id: \"5\", avatar: \"W\", pic: \"\" },\n                { text: \"Jacob\", contact: \"(71) 555-4848\", id: \"6\", avatar: \"\", pic: \"pic04\" },\n                { text: \"Matthew\", contact: \"(71) 555-7773\", id: \"7\", avatar: \"M\", pic: \"\" },\n                { text: \"Oliver\", contact: \"(71) 555-5598\", id: \"8\", avatar: \"\", pic: \"pic03\" },\n                { text: \"Charlotte\", contact: \"(206) 555-1189\", id: \"9\", avatar: \"C\", pic: \"\" },\n            ];\n            data['profImage'] = \"image profile-image e-avatar\";\n            data['postImage'] = \"image post-image\";\n            data['cardName'] = \"Laura Callahan\";\n            data['cardTime'] = new Date().toLocaleString();\n            resolve(data);\n        }, 3000));\n    };\n    const loadData = () => {\n        getData().then((data) => {\n            setUserRequest({\n                profileimage: data.profImage,\n                postimage: data.postImage,\n                cardname: data.cardName,\n                cardtime: data.cardTime,\n                isDataLoading: false,\n                listData: data.listdata\n            });\n        });\n    };\n    // Reload button click event handler.\n    const reload = () => {\n        // if (!this.state.isDataLoading) {\n        setUserRequest({\n            profileimage: \"image  e-avatar\",\n            postimage: \"image\",\n            cardname: \"\",\n            cardtime: \"\",\n            isDataLoading: true,\n            listData: []\n        });\n        loadData();\n        // }\n    };\n    const listTemplate = (data) => {\n        let letterAvatar = <span className='e-avatar e-avatar-circle'>{data.avatar}</span>;\n        let imageAvatar = <span className={`${data.pic} e-avatar e-avatar-circle`}></span>;\n        return (<div className='e-list-wrapper e-list-multi-line e-list-avatar'>\n            {data.avatar !== \"\" ? (letterAvatar) : (imageAvatar)}\n            <span className=\"e-list-item-header\">{data.text}</span>\n            <span className=\"e-list-content\">{data.contact}</span>\n        </div>);\n    };\n    const { isDataLoading, profileimage, postimage, cardname, cardtime, listData } = userRequest;\n    let fade;\n    let pulse;\n    if (isDataLoading) {\n        fade = (<div id=\"skeletonCard\" className=\"e-card\">\n                <div className=\"cardProfile\">\n                    <SkeletonComponent shape='Circle' width='60px' height='60px' shimmerEffect='Fade'></SkeletonComponent>\n                </div>\n                <div className=\"cardinfo\">\n                    <SkeletonComponent width='30%' height='15px' shimmerEffect='Fade'></SkeletonComponent><br />\n                    <SkeletonComponent width='15%' height='15px' shimmerEffect='Fade'></SkeletonComponent><br />\n                </div>\n                <div className=\"cardContent\">\n                    <SkeletonComponent shape='Rectangle' width='100%' height='250px' shimmerEffect='Fade'></SkeletonComponent>\n                </div>\n                <div className=\"cardoptions\">\n                    <SkeletonComponent shape='Rectangle' width='20%' height='30px' shimmerEffect='Fade'></SkeletonComponent>\n                    <SkeletonComponent shape='Rectangle' width='20%' height='30px' shimmerEffect='Fade'></SkeletonComponent>\n                </div>\n            </div>);\n        pulse = (<div className=\"skeleton-listcard e-card\">\n                <ul id=\"skeleton-list\">\n                    {Array.from({ length: 8 }, function (_, index) {\n                return (<li key={index}>\n                            <div className=\"skeleton-listProfileView\">\n                                <SkeletonComponent shape='Circle' width='40px' shimmerEffect='Pulse'></SkeletonComponent>\n                            </div>\n                            <div>\n                                <SkeletonComponent width='80%' height='10px' shimmerEffect='Pulse'></SkeletonComponent><br />\n                                <SkeletonComponent width='60%' height='15px' shimmerEffect='Pulse'></SkeletonComponent>\n                            </div>\n                        </li>);\n            })}\n                </ul>\n            </div>);\n    }\n    else {\n        fade = (<div id=\"skeletondatacard\" className=\"e-card\">\n                <div className=\"cardProfile\">\n                    <div className={profileimage}></div>\n                </div>\n                <div className=\"cardinfo\">\n                    <label id=\"name\" style={{ fontSize: \"15px\" }}>{cardname}</label><br />\n                    <label id=\"time\" style={{ fontWeight: \"normal\" }}>{cardtime}</label>\n                </div>\n                <div className=\"cardContent\">\n                    <div className={postimage}></div>\n                </div>\n                <div className=\"cardoptions\">\n                    <div id=\"cardLeftOptn\" style={{ width: \"20%\" }}>\n                        <button className=\"e-btn e-outline e-primary\" style={{ width: \"100%\" }}>Like</button>\n                    </div>\n                    <div id=\"cardRightOptn\" style={{ width: \"20%\" }}>\n                        <button className=\"e-btn e-primary\" style={{ width: \"100%\" }}>Share</button>\n                    </div>\n                </div>\n            </div>);\n        pulse = (<div className=\"skeleton-listcard e-card\">\n                <ListViewComponent id='skeleton-listview' dataSource={listData} sortOrder=\"Ascending\" height='420px' template={listTemplate} fields={fields} cssClass='e-list-template'></ListViewComponent>\n            </div>);\n    }\n    return (<div className=\"control-section\">\n            <div className=\"row skeleton-animation\">\n                <div>\n                    <button id=\"reloadSkeleton\" className=\"e-btn e-primary\" onClick={reload}>Reload</button>\n                </div>\n                <div className=\"col-sm-6\">\n                    <p className='displayText'>Fade Effect</p>\n                    <br />\n                    {fade}\n                </div>\n                <div className=\"col-sm-6\">\n                    <p className='displayText'>Pulse Effect</p>\n                    <br />\n                    {pulse}\n                </div>\n            </div>\n        </div>);\n};\nexport default Animation;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Animation />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-react-notifications\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-react-lists\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}