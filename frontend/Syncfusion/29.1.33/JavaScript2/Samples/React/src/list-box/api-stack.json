{"index.css":"#listbox-api-control {\n    width: 49%;\n    margin: auto;\n    margin-bottom: 15px;\n}\n@media screen and (max-width: 590px) {\n    #listbox-api-control {\n        width: 100%;\n    }\n}","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","dataSource.json":"{\n    \"groupa\":[\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\n        { \"Name\": \"France\", \"Code\": \"FR\" },\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" }\n    ],\n    \"groupb\": [\n        { \"Name\": \"India\", \"Code\": \"IN\" },\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\n        { \"Name\": \"United States\", \"Code\": \"US\" }\n    ],\n    \"dragAndDropA\":[\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\n        { \"Name\": \"France\", \"Code\": \"FR\" },\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" }\n    ],\n    \"dragAndDropB\": [\n        { \"Name\": \"India\", \"Code\": \"IN\" },\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\n        { \"Name\": \"United States\", \"Code\": \"US\" }\n    ],\n    \"vegetableData\": [\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"Id\": \"item1\" },\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"Id\": \"item2\" },\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"Id\": \"item3\" },\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"Id\": \"item4\" },\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"Id\": \"item5\" },\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"Id\": \"item6\" },\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"Id\": \"item7\" },\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"Id\": \"item8\" },\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"Id\": \"item9\" },\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"Id\": \"item10\" },\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"Id\": \"item11\" }\n    ],\n    \"info\": [\n        { \"text\": \"Hennessey Venom\", \"id\": \"list-01\" },\n        { \"text\": \"Bugatti Chiron\", \"id\": \"list-02\" },\n        { \"text\": \"Bugatti Veyron Super Sport\", \"id\": \"list-03\" },\n        { \"text\": \"SSC Ultimate Aero\", \"id\": \"list-04\" },\n        { \"text\": \"Koenigsegg CCR\", \"id\": \"list-05\" },\n        { \"text\": \"McLaren F1\", \"id\": \"list-06\" },\n        { \"text\": \"Aston Martin One- 77\", \"id\": \"list-07\" },\n        { \"text\": \"Jaguar XJ220\", \"id\": \"list-08\" },\n        { \"text\": \"McLaren P1\", \"id\": \"list-09\" },\n        { \"text\": \"Ferrari LaFerrari\", \"id\": \"list-10\" }\n    ],\n    \"template_data\": [\n        { \"text\": \"JavaScript\", \"pic\": \"javascript\", \"description\": \"It is a lightweight interpreted or JIT-compiled programming language.\"},\n        { \"text\": \"TypeScript\", \"pic\": \"typescript\", \"description\": \"It is a typed superset of JavaScript that compiles to plain JavaScript.\"},\n        { \"text\": \"Angular\", \"pic\": \"angular\", \"description\": \"It is a TypeScript-based open-source web application framework.\"},\n        { \"text\": \"React\", \"pic\": \"react\", \"description\": \"A JavaScript library for building user interfaces. It can also render on the server using Node.\"},\n        { \"text\": \"Vue\", \"pic\": \"vue\", \"description\": \"A progressive framework for building user interfaces. it is incrementally adoptable.\"}\n    ],\n    \"sort\": [{ \"type\": \"None\" }, { \"type\": \"Ascending\" }, { \"type\": \"Descending\" }],\n    \"selectionMode\": [{ \"type\": \"Single\" }, { \"type\": \"Multiple\" }]\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { ListBoxComponent, DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\nimport * as data from './dataSource.json';\n\nexport class Api extends SampleBase {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortOrder: 'None',\n            selectionSettings: { mode: 'Multiple' }\n        };\n    }\n    // Set the vegetableData to the data source.\n    data = data[\"vegetableData\"];\n    ddlData1 = data[\"sort\"];\n    ddlData2 = data[\"selectionMode\"];\n    // Map the appropriate columns to fields property along with groupBy option.\n    fields = { groupBy: 'Category', text: 'Vegetable', value: 'Id' };\n    ddlFields = { text: 'type', value: 'type' };\n    sortChange(args) {\n        this.setState({ sortOrder: args.value });\n    }\n    selectionChange(args) {\n        this.setState({ selectionSettings: { mode: args.value } });\n    }\n    render() {\n        return (<div className='control-pane'>\n                <div className=\"col-lg-8 control-section\">\n                    <div id=\"listbox-api-control\">\n                        <ListBoxComponent dataSource={this.data} fields={this.fields} sortOrder={this.state.sortOrder} selectionSettings={this.state.selectionSettings}/>\n                    </div>\n                </div>\n                <div className='col-lg-4 property-section'>\n                    <PropertyPane title='Properties'>\n                        <table id=\"property\" title=\"Properties\" style={{ width: '100%' }}>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\n                                        <div>Sort order</div>\n                                    </td>\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\n                                        <div style={{ maxWidth: '200px' }}>\n                                            <DropDownListComponent dataSource={this.ddlData1} fields={this.ddlFields} change={this.sortChange.bind(this)} value='None' popupHeight='200px'/>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\n                                        <div>Selection Mode</div>\n                                    </td>\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\n                                        <div style={{ maxWidth: '200px' }}>\n                                            <DropDownListComponent dataSource={this.ddlData2} fields={this.ddlFields} change={this.selectionChange.bind(this)} value='Multiple' popupHeight='200px'/>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </PropertyPane>\n                </div>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<Api />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}