{"index.css":"/* css */","theme-colors.js":"export function loadProgressBarTheme(args) {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return args.progressBar.theme;\n}\n;\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { ProgressBarComponent } from '@syncfusion/ej2-react-progressbar';\n\nimport { loadProgressBarTheme } from './theme-colors';\nconst SAMPLE_CSS = `\n      #control-container {\n         padding: 0px !important;\n     }\n \n     .linear-parent {\n         text-align: center;\n         width: 80%;\n         margin: auto !important;\n     }\n \n     .progressbar-label-tooltip {\n         text-align: left;\n         font-family: Roboto-Regular;\n         font-size: 14px;\n         color: #3D3E3C;\n         margin-left: 10px;\n         padding: 0px;\n         top: 10px;\n     }\n\n     `;\n/**\n * Area sample\n */\nfunction ProgressBarLinearTooltip() {\n    let linearOne;\n    let linearTwo;\n    let linearThree;\n    let linearFour;\n    let linearFive;\n    let progressLoad = (args) => {\n        let div = document.getElementsByClassName('progressbar-label-tooltip');\n        let selectedTheme = loadProgressBarTheme(args);\n        if (selectedTheme === 'HighContrast' || selectedTheme === 'Bootstrap5Dark' || selectedTheme === 'BootstrapDark' || selectedTheme === 'FabricDark'\n            || selectedTheme === 'TailwindDark' || selectedTheme === 'Tailwind3Dark' || selectedTheme === 'MaterialDark' || selectedTheme === 'FluentDark' || selectedTheme === 'Material3Dark' || selectedTheme === 'Fluent2Dark' || selectedTheme === 'Fluent2HighContrast') {\n            for (let i = 0; i < div.length; i++) {\n                div[i].setAttribute('style', 'color:white');\n            }\n        }\n    };\n    return (<div className='control-pane'>\n        <style>\n            {SAMPLE_CSS}\n        </style>\n        <div className='control-section'>\n            <div className=\"row linear-parent\" style={{ marginLeft: '10%' }}>\n                <div style={{ marginTop: '0.5%' }}>\n                    <div className=\"progressbar-label-tooltip\">HTML5</div>\n                    <div className=\"linear-progress\">\n                        <ProgressBarComponent id=\"lineardeterminate\" ref={linear1 => linearOne = linear1} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        }} tooltip={{\n            enable: true\n        }} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n                <div style={{ marginTop: '0.5%' }}>\n                    <div className=\"progressbar-label-tooltip\">CSS3</div>\n                    <div className=\"linear-progress\">\n                        <ProgressBarComponent id=\"linearindeterminate\" ref={linear2 => linearTwo = linear2} type='Linear' height='60' value={65} trackThickness={20} progressThickness={20} animation={{\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        }} tooltip={{\n            enable: true\n        }} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n                <div style={{ marginTop: '0.5%' }}>\n                    <div className=\"progressbar-label-tooltip\">Bootstrap</div>\n                    <div className=\"linear-progress\">\n                        <ProgressBarComponent id=\"linearsegment\" ref={linear3 => linearThree = linear3} type='Linear' height='60' value={55} trackThickness={20} progressThickness={20} animation={{\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        }} tooltip={{\n            enable: true\n        }} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n                <div style={{ marginTop: '0.5%' }}>\n                    <div className=\"progressbar-label-tooltip\">JavaScript</div>\n                    <div className=\"linear-progress\">\n                        <ProgressBarComponent id=\"linearbuffer\" ref={linear4 => linearFour = linear4} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        }} tooltip={{\n            enable: true\n        }} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n                <div style={{ marginTop: '0.5%' }}>\n                    <div className=\"progressbar-label-tooltip\">MySQL</div>\n                    <div className=\"linear-progress\">\n                        <ProgressBarComponent id=\"linearactive\" ref={linear5 => linearFive = linear5} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n            enable: true,\n            duration: 2000,\n            delay: 0,\n        }} tooltip={{\n            enable: true\n        }} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}\nexport default ProgressBarLinearTooltip;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ProgressBarLinearTooltip />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-progressbar\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-react-buttons\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\"}"}