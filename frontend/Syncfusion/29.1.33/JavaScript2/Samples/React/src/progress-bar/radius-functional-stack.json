{"index.css":"/* css */","theme-colors.js":"export function loadProgressBarTheme(args) {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return args.progressBar.theme;\n}\n;\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from \"react\";\nimport { useEffect, useRef } from 'react';\nimport { ProgressBarComponent, ProgressBarAnnotationsDirective, ProgressBarAnnotationDirective, Inject, ProgressAnnotation } from '@syncfusion/ej2-react-progressbar';\n\nimport { loadProgressBarTheme } from './theme-colors';\nconst SAMPLE_CSS = `\n         .control-fluid {\n         padding: 0px !important;\n         }\n    #control-container {\n         padding: 0px !important;\n     }\n    .progress-bar-parent {\n        margin-top: 8%;\n        text-align: center;\n    }\n    .progress-container-align {\n        text-align: center;\n    }\n \n     #reLoad {\n         border-radius: 4px;\n         text-transform: capitalize;\n         margin-top: 3%;\n     }\n \n     .reload-btn {\n         text-align: center;\n     }\n     #reLoad {\n         border-radius: 4px;\n         text-transform: capitalize;\n         margin-top: 3%;\n     }\n     `;\nconst ProgressBarRadius = () => {\n    const fullBackground = useRef(null);\n    const outerRadius = useRef(null);\n    const onRadius = useRef(null);\n    const pie = useRef(null);\n    const animation = {\n        enable: true,\n        duration: 2000,\n        delay: 0,\n    };\n    const replayClick = () => {\n        fullBackground.current.refresh();\n        outerRadius.current.refresh();\n        onRadius.current.refresh();\n        pie.current.refresh();\n    };\n    const content = '<div id=\"point1\" style=\"font-size:20px;font-weight:bold;color:#ffffff;fill:#ffffff\"><span>60%</span></div>';\n    const progressLoad = (args) => {\n        let theme = loadProgressBarTheme(args);\n        if (args.progressBar.element.id === 'full-background') {\n            switch (theme) {\n                case 'Material':\n                    args.progressBar.trackColor = '#f8c2d4';\n                    args.progressBar.progressColor = '#e91e63';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#e91e63\"><span></span></div>';\n                    break;\n                case 'Fabric':\n                    args.progressBar.progressColor = '#0078D6';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0078D6\"><span></span></div>';\n                    break;\n                case 'Bootstrap':\n                    args.progressBar.progressColor = '#317ab9';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#317ab9\"><span></span></div>';\n                    break;\n                case 'Tailwind':\n                case 'Tailwind3':\n                    args.progressBar.progressColor = '#4F46E5';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#4F46E5\"><span></span></div>';\n                    break;\n                case 'HighContrast':\n                    args.progressBar.progressColor = '#FFD939';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:20px;font-weight:bold;color:#FFD939;\"><span>60%</span></div>';\n                    break;\n                case 'BootstrapDark':\n                case 'Fabricdark':\n                case 'MaterialDark':\n                    args.progressBar.progressColor = '#9A9A9A';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#9A9A9A\"><span></span></div>';\n                    break;\n                case 'TailwindDark':\n                    args.progressBar.progressColor = '#22D3EE';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#22D3EE\"><span></span></div>';\n                    break;\n                case 'Tailwind3Dark':\n                    args.progressBar.progressColor = '#6366F1';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#6366F1\"><span></span></div>';\n                    break;\n                case 'Bootstrap4':\n                    args.progressBar.progressColor = '#007bff';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#007bff\"><span></span></div>';\n                    break;\n                case 'Bootstrap5':\n                case 'Bootstrap5Dark':\n                case 'Fluent':\n                case 'FluentDark':\n                    args.progressBar.progressColor = '#0D6EFD';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0D6EFD\"><span></span></div>';\n                    break;\n                case 'Material3':\n                    args.progressBar.progressColor = '#6750A4';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#6750A4\"><span></span></div>';\n                    break;\n                case 'Material3Dark':\n                    args.progressBar.progressColor = '#D0BCFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#D0BCFF\"><span></span></div>';\n                    break;\n                case 'Fluent2':\n                    args.progressBar.progressColor = '#0F6CBD';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#0F6CBD\"><span></span></div>';\n                    break;\n                case 'Fluent2HighContrast':\n                    args.progressBar.progressColor = '#1AEBFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#1AEBFF\"><span></span></div>';\n                    break;\n                case 'Fluent2Dark':\n                    args.progressBar.progressColor = '#115EA3';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#115EA3\"><span></span></div>';\n                    break;\n                default:\n                    args.progressBar.progressColor = '#D0BCFF';\n                    args.progressBar.annotations[0].content = '<div id=\"point1\" style=\"font-size:24px;font-weight:bold;color:#D0BCFF\"><span></span></div>';\n                    break;\n            }\n        }\n    };\n    return (<div className='control-pane'>\n            <style>\n                {SAMPLE_CSS}\n            </style>\n            <div className=\"control-section progress-bar-parent\">\n                <div className=\"row\">\n                    <div className=\"col-lg-3 col-md-3 col-3 progress-container\" style={{ alignContent: 'center' }}>\n                        <ProgressBarComponent id=\"full-background\" ref={fullBackground} type='Circular' width='160px' height='160px' cornerRadius='Round' enableRtl={false} radius='100%' innerRadius='190%' progressThickness={10} trackThickness={80} value={60} animation={animation} load={progressLoad.bind(this)}>\n                            <Inject services={[ProgressAnnotation]}/>\n                            <ProgressBarAnnotationsDirective>\n                                <ProgressBarAnnotationDirective content={content}/>\n                            </ProgressBarAnnotationsDirective>\n                        </ProgressBarComponent>\n                    </div>\n                    <div className=\"col-lg-3 col-md-3 col-3 progress-container\" style={{ alignContent: 'center' }}>\n                        <ProgressBarComponent id=\"outer-radius\" ref={outerRadius} type='Circular' width='160px' height='160px' value={90} innerRadius='72' progressThickness={8} cornerRadius='Round' animation={animation} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n\n                    </div>\n                    <div className=\"col-lg-3 col-md-3 col-3 progress-container\" style={{ alignContent: 'center' }}>\n                        <ProgressBarComponent id=\"on-radius\" ref={onRadius} type='Circular' width='160px' height='160px' value={90} trackThickness={3} progressThickness={8} animation={animation} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                    <div className=\"col-lg-3 col-md-3 col-3 progress-container\" style={{ alignContent: 'center' }}>\n                        <ProgressBarComponent id=\"pie\" ref={pie} type='Circular' width='160px' height='160px' value={70} enablePieProgress={true} animation={animation} load={progressLoad.bind(this)}>\n                        </ProgressBarComponent>\n                    </div>\n                </div>\n                <div id=\"replay-progressbar\" className=\"col-lg-12 col-md-12 col-12 reload-btn\">\n                    <button onClick={replayClick.bind(this)} id=\"reLoad\" className=\"e-control e-btn e-lib e-outline e-primary\">\n                        Reload\n                    </button>\n                </div>\n            </div>\n        </div>);\n};\nexport default ProgressBarRadius;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ProgressBarRadius />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-progressbar\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\"}"}