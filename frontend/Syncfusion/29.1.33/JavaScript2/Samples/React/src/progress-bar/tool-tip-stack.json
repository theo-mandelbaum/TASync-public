{"index.css":"/* css */","theme-colors.js":"export function loadProgressBarTheme(args) {\n    let selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Tailwind3';\n    args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return args.progressBar.theme;\n}\n;\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\n/**\n * Sample for linear progress bar\n */\nimport * as React from \"react\";\nimport { ProgressBarComponent } from '@syncfusion/ej2-react-progressbar';\nimport { SampleBase } from './sample-base';\nimport { loadProgressBarTheme } from './theme-colors';\nconst SAMPLE_CSS = `\n       #control-container {\n          padding: 0px !important;\n      }\n  \n      .linear-parent {\n          text-align: center;\n          width: 80%;\n          margin: auto !important;\n      }\n  \n      .progressbar-label {\n          text-align: left;\n          font-family: Roboto-Regular;\n          font-size: 14px;\n          color: #3D3E3C;\n          margin-left: 10px;\n          padding: 0px;\n          top: 10px;\n      }\n  \n      #reLoad {\n          border-radius: 4px;\n          text-transform: capitalize;\n      }\n      `;\n/**\n * Area sample\n */\nexport class ProgressBarLinearTooltip extends SampleBase {\n    linearOne;\n    linearTwo;\n    linearThree;\n    linearFour;\n    linearFive;\n    progressLoad = (args) => {\n        let div = document.getElementsByClassName('progressbar-label');\n        let selectedTheme = loadProgressBarTheme(args);\n        if (selectedTheme === 'HighContrast' || selectedTheme === 'Bootstrap5Dark' || selectedTheme === 'BootstrapDark' || selectedTheme === 'FabricDark'\n            || selectedTheme === 'TailwindDark' || selectedTheme === 'Tailwind3Dark' || selectedTheme === 'MaterialDark' || selectedTheme === 'FluentDark' || selectedTheme === 'Material3Dark') {\n            for (let i = 0; i < div.length; i++) {\n                div[i].setAttribute('style', 'color:white');\n            }\n        }\n    };\n    replayClick() {\n        this.linearOne.refresh();\n        this.linearTwo.refresh();\n        this.linearThree.refresh();\n        this.linearFour.refresh();\n        this.linearFive.refresh();\n    }\n    render() {\n        return (<div className='control-pane'>\n         <style>\n             {SAMPLE_CSS}\n         </style>\n         <div className='control-section'>\n             <div className=\"row linear-parent\" style={{ marginLeft: '10%' }}>\n                 <div className=\"col-lg-12 col-md-12\" style={{ marginTop: '0.5%' }}>\n                     <div className=\"col-lg-12 col-md-12 progressbar-label\">HTML5</div>\n                     <div className=\"linear-progress\">\n                         <ProgressBarComponent id=\"lineardeterminate\" ref={linear1 => this.linearOne = linear1} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n                enable: true,\n                duration: 2000,\n                delay: 0,\n            }} tooltip={{\n                enable: true\n            }} load={this.progressLoad.bind(this)}>\n                         </ProgressBarComponent>\n                     </div>\n                 </div>\n                 <div className=\"col-lg-12 col-md-12\" style={{ marginTop: '0.5%' }}>\n                     <div className=\"col-lg-12 col-md-12 progressbar-label\">CSS3</div>\n                     <div className=\"linear-progress\">\n                         <ProgressBarComponent id=\"linearindeterminate\" ref={linear2 => this.linearTwo = linear2} type='Linear' height='60' value={65} trackThickness={20} progressThickness={20} animation={{\n                enable: true,\n                duration: 2000,\n                delay: 0,\n            }} tooltip={{\n                enable: true\n            }} load={this.progressLoad.bind(this)}>\n                         </ProgressBarComponent>\n                     </div>\n                 </div>\n                 <div className=\"col-lg-12 col-md-12\" style={{ marginTop: '0.5%' }}>\n                     <div className=\"col-lg-12 col-md-12 progressbar-label\">BOOTSTRAP</div>\n                     <div className=\"linear-progress\">\n                         <ProgressBarComponent id=\"linearsegment\" ref={linear3 => this.linearThree = linear3} type='Linear' height='60' value={55} trackThickness={20} progressThickness={20} animation={{\n                enable: true,\n                duration: 2000,\n                delay: 0,\n            }} tooltip={{\n                enable: true\n            }} load={this.progressLoad.bind(this)}>\n                         </ProgressBarComponent>\n                     </div>\n                 </div>\n                 <div className=\"col-lg-12 col-md-12\" style={{ marginTop: '0.5%' }}>\n                     <div className=\"col-lg-12 col-md-12 progressbar-label\">JQUERY</div>\n                     <div className=\"linear-progress\">\n                         <ProgressBarComponent id=\"linearbuffer\" ref={linear4 => this.linearFour = linear4} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n                enable: true,\n                duration: 2000,\n                delay: 0,\n            }} tooltip={{\n                enable: true\n            }} load={this.progressLoad.bind(this)}>\n                         </ProgressBarComponent>\n                     </div>\n                 </div>\n                 <div className=\"col-lg-12 col-md-12\" style={{ marginTop: '0.5%' }}>\n                     <div className=\"col-lg-12 col-md-12 progressbar-label\">MYSQL</div>\n                     <div className=\"linear-progress\">\n                         <ProgressBarComponent id=\"linearactive\" ref={linear5 => this.linearFive = linear5} type='Linear' height='60' value={75} trackThickness={20} progressThickness={20} animation={{\n                enable: true,\n                duration: 2000,\n                delay: 0,\n            }} tooltip={{\n                enable: true\n            }} load={this.progressLoad.bind(this)}>\n                         </ProgressBarComponent>\n                     </div>\n                 </div>\n             </div>\n             <div id=\"replay-progressbar\" style={{ marginTop: '2%', marginLeft: '45.5%' }}><button onClick={this.replayClick.bind(this)} id=\"reLoad\" className=\"e-control e-btn e-lib e-outline e-primary\">Reload</button></div>\n         </div>\n     </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<ProgressBarLinearTooltip />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-progressbar\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"markdown-spellcheck\":\"^1.3.1\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\"}"}