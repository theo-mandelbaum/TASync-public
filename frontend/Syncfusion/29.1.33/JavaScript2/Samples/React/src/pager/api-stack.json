{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { PagerComponent } from '@syncfusion/ej2-react-grids';\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\nexport class API extends SampleBase {\n    pagerInstance;\n    count;\n    page;\n    size;\n    total;\n    countChange(args) {\n        if (args.value < 10) {\n            this.pagerInstance.pageCount = this.count.value;\n        }\n        else {\n            this.pagerInstance.pageCount = 10;\n            this.count.max = 10;\n        }\n    }\n    click(args) {\n        if (args.currentPage != null && args.currentPage !== 'undefined') {\n            this.page.value = args.currentPage;\n        }\n    }\n    pageChange() {\n        this.pagerInstance.currentPage = this.page.value;\n        this.page.max = this.calc();\n    }\n    ;\n    sizeChange() {\n        this.pagerInstance.pageSize = this.size.value;\n        this.page.max = this.calc();\n        this.count.max = this.calc();\n    }\n    ;\n    totalChange() {\n        this.pagerInstance.totalRecordsCount = this.total.value;\n        this.page.max = this.calc();\n        this.count.max = this.calc();\n    }\n    ;\n    calc() {\n        let tot = this.pagerInstance.totalRecordsCount;\n        let size = this.pagerInstance.pageSize;\n        let totalPages = Math.ceil(tot % size) === 0 ? Math.ceil(tot / size) : Math.ceil(tot / size) + 1;\n        return totalPages;\n    }\n    ;\n    render() {\n        return (<div className='control-pane'>\n        <div className='control-section'>\n          <div className='col-lg-9'>\n            <PagerComponent pageSize={1} totalRecordsCount={20} pageCount={5} ref={pager => this.pagerInstance = pager} click={this.click.bind(this)}>\n            </PagerComponent>\n          </div>\n          <div className='col-lg-3 property-section'>\n            <PropertyPane title='Properties'>\n              <table id='property' title='Properties' style={{ width: '100%', margin: '10px' }}>\n                <tbody>\n                  <tr>\n                    <td style={{ width: '50%' }}>\n                      <div style={{ paddingTop: '7px' }}>\n                        Page Count\n                    </div>\n                    </td>\n                    <td style={{ width: '50%', padding: '10px 10px 10px 0px' }}>\n                      <div>\n                        <NumericTextBoxComponent id='count' format='##' min={1} value={5} floatLabelType='Auto' ref={numerictextbox => this.count = numerictextbox} change={this.countChange.bind(this)}>\n                        </NumericTextBoxComponent>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: '50%' }}>\n                      <div style={{ paddingTop: '7px' }}>\n                        Current Page\n                    </div>\n                    </td>\n                    <td style={{ width: '50%', padding: '10px 10px 10px 0px' }}>\n                      <div>\n                        <NumericTextBoxComponent id='pageno' format='##' min={1} value={1} floatLabelType='Auto' ref={numerictextbox => this.page = numerictextbox} change={this.pageChange.bind(this)}>\n                        </NumericTextBoxComponent>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: '50%' }}>\n                      <div style={{ paddingTop: '7px' }}>\n                        Page Size\n                    </div>\n                    </td>\n                    <td style={{ width: '50%', padding: '10px 10px 10px 0px' }}>\n                      <div>\n                        <NumericTextBoxComponent id='pagesize' format='##' min={1} value={1} max={5} floatLabelType='Auto' ref={numerictextbox => this.size = numerictextbox} change={this.sizeChange.bind(this)}>\n                        </NumericTextBoxComponent>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: '50%' }}>\n                      <div style={{ paddingTop: '7px' }}>\n                        Total Records\n                    </div>\n                    </td>\n                    <td style={{ width: '50%', padding: '10px 10px 10px 0px' }}>\n                      <div>\n                        <NumericTextBoxComponent id='totalrecords' format='##' min={1} value={20} floatLabelType='Auto' ref={numerictextbox => this.total = numerictextbox} change={this.totalChange.bind(this)}>\n                        </NumericTextBoxComponent>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </PropertyPane>\n          </div>\n        </div>\n      </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<API />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-react-grids\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-react-inputs\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\"}"}