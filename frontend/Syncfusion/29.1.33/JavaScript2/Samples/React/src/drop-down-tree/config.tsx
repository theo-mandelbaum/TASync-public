export const DropDownTreeSampleOrder: Object = [
    { 'path': 'drop-down-tree/default', 'component': 'Default', 'name': 'Default Functionalities', 'description': 'This example demonstrates the default functionalities of the React drop-down tree component with minimum configuration.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "change", "fields"]}', 'sourceFiles': [{ 'displayName': 'default.tsx', 'path': 'src/drop-down-tree/default.tsx' }, { 'displayName': 'default.jsx', 'path': 'src/drop-down-tree/default.jsx' }, { 'displayName': 'default-data.json', 'path': 'src/drop-down-tree/default-data.json' }] },
    { 'path': 'drop-down-tree/icons', 'component': 'Icons', 'name': 'Icons and Images', 'description': 'The Dropdown Tree items can be rendered with any custom icons. This sample demonstrated like a file system with custom icons and images.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "fields"]}', 'sourceFiles': [{ 'displayName': 'icons.tsx', 'path': 'src/drop-down-tree/icons.tsx' }, { 'displayName': 'icons.jsx', 'path': 'src/drop-down-tree/icons.jsx' }, { 'displayName': 'icons-data.json', 'path': 'src/drop-down-tree/icons-data.json' }] },
    { 'path': 'drop-down-tree/checkbox', 'component': 'Checkbox', 'name': 'Checkbox', 'description': 'This demo demonstrates the Dropdown Tree with checkbox functionality, this allows the user to check more than one items.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "fields"]}', 'sourceFiles': [{ 'displayName': 'checkbox.tsx', 'path': 'src/drop-down-tree/checkbox.tsx' }, { 'displayName': 'checkbox.jsx', 'path': 'src/drop-down-tree/checkbox.jsx' }, { 'displayName': 'checkbox-data.json', 'path': 'src/drop-down-tree/checkbox-data.json' }] },
    { 'path': 'drop-down-tree/multiple-selection', 'component': 'MultiSelect', 'name': 'Multiple Selection', 'description': 'The Dropdown Tree component allows to select multiple items by pressing CTRL key, also can select the range of items by pressing SHIFT key.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "fields"]}', 'sourceFiles': [{ 'displayName': 'multiple-selection.tsx', 'path': 'src/drop-down-tree/multiple-selection.tsx' }, { 'displayName': 'multiple-selection.jsx', 'path': 'src/drop-down-tree/multiple-selection.jsx' }, { 'displayName': 'multiSelect-data.json', 'path': 'src/drop-down-tree/multiSelect-data.json' }] },
    { 'path': 'drop-down-tree/template', 'component': 'Templates', 'name': 'Template', 'description': 'This example demonstrates how to customize the appearance of each item in the React Dropdown Tree component pop-up list using the template.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "fields", "headerTemplate", "itemTemplate", "footerTemplate"]}', 'sourceFiles': [{ 'displayName': 'template.tsx', 'path': 'src/drop-down-tree/template.tsx' }, { 'displayName': 'template.jsx', 'path': 'src/drop-down-tree/template.jsx' }, { 'displayName': 'template-data.json', 'path': 'src/drop-down-tree/template-data.json' }] },
    { 'path': 'drop-down-tree/custom-template', 'component': 'CustomTemplate', 'name': 'Custom Template', 'description': 'This example demonstrates how to customize the display text of the selected items in the React drop-down tree component using the customTemplate.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "placeholder", "fields", "mode", "customTemplate"]}', 'sourceFiles': [{ 'displayName': 'custom-template.tsx', 'path': 'src/drop-down-tree/custom-template.tsx' }, { 'displayName': 'custom-template.jsx', 'path': 'src/drop-down-tree/custom-template.jsx' }, { 'displayName': 'customTemplate-data.json', 'path': 'src/drop-down-tree/customTemplate-data.json' }] },
    { 'path': 'drop-down-tree/filtering', 'component': 'Filtering', 'name': 'Filtering', 'description': 'This example for React drop-down tree component explains the choosing an item from the filtered list based on the typed characters.', 'order': '01', 'category': 'Dropdown Tree', 'api': '{"DropDownTree": ["popupHeight", "allowFiltering", "filterBarPlaceholder", "placeholder", "fields"]}', 'sourceFiles': [{ 'displayName': 'filtering.tsx', 'path': 'src/drop-down-tree/filtering.tsx' }, { 'displayName': 'filtering.jsx', 'path': 'src/drop-down-tree/filtering.jsx' }, { 'displayName': 'filtering-data.json', 'path': 'src/drop-down-tree/filtering-data.json' }] },
    { 'path': 'drop-down-tree/local-data', 'component': 'LocalData', 'name': 'Local Data', 'description': 'This demo demonstrates the binding of local data to the React drop-down tree component. The local data structure can be hierarchical data or list data.', 'order': '02', 'category': 'Data Binding', 'api': '{"DropDownTree": ["fields", "popupHeight", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'local-data.tsx', 'path': 'src/drop-down-tree/local-data.tsx' }, { 'displayName': 'local-data.jsx', 'path': 'src/drop-down-tree/local-data.jsx' }, { 'displayName': 'local-data.json', 'path': 'src/drop-down-tree/local-data.json' }] },
    { 'path': 'drop-down-tree/remote-data', 'component': 'RemoteData', 'name': 'Remote Data', 'description': 'This example demonstrates how to fetch data from remote data service in the React drop-down tree component.', 'order': '02', 'category': 'Data Binding', 'api': '{"DropDownTree": ["fields", "popupHeight", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'remote-data.tsx', 'path': 'src/drop-down-tree/remote-data.tsx' }, { 'displayName': 'remote-data.jsx', 'path': 'src/drop-down-tree/remote-data.jsx' }] }
]