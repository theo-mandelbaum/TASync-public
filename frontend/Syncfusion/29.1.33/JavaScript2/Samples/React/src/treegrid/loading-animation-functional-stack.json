{"index.css":"/* css */","property-pane.js":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { select } from '@syncfusion/ej2-base';\nexport class PropertyPane extends React.Component {\n    render() {\n        const mobilePropPane = select('.sb-mobile-prop-pane');\n        const isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>, mobilePropPane)\n            :\n                (<div className='property-panel-section'>\n                    <div className=\"property-panel-header\">\n                        {this.props.title}\n                    </div>\n                    <div className=\"property-panel-content\">\n                        {this.props.children}\n                    </div>\n                </div>);\n    }\n}\n","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n     <style>\n            .control-section\n            {\n                margin-top: 100px;\n            }\n    </style>\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { TreeGridComponent, ColumnsDirective, ColumnDirective, Page, Sort, Inject } from '@syncfusion/ej2-react-treegrid';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\nimport { PropertyPane } from './property-pane';\nconst LoadingAnimation = () => {\n    const data = new DataManager({\n        url: \"http://localhost:62728/api/SelfReferenceData\",\n        adaptor: new WebApiAdaptor(),\n    });\n    let treegridInstance = useRef(null);\n    const indicatortypes = [\n        { id: \"Shimmer\", name: \"Shimmer\" },\n        { id: \"Spinner\", name: \"Spinner\" },\n    ];\n    const fields = { text: \"name\", value: \"id\" };\n    let indicatorDropDown;\n    const indicatorChange = (e) => {\n        if (indicatorDropDown.value === \"Shimmer\") {\n            treegridInstance.current.loadingIndicator.indicatorType = \"Shimmer\";\n        }\n        else {\n            treegridInstance.current.loadingIndicator.indicatorType = \"Spinner\";\n        }\n        treegridInstance.current.refresh();\n    };\n    return (<div className=\"control-pane\">\r\n            <div className=\"control-section\">\r\n                <div className=\"col-md-9\">\r\n                    <TreeGridComponent id=\"TreeGrid\" dataSource={data} ref={treegridInstance} hasChildMapping=\"isParent\" height=\"400\" pageSettings={{ pageCount: 3 }} treeColumnIndex={1} allowPaging={true} idMapping=\"TaskID\" parentIdMapping=\"parentItem\" loadingIndicator={{ indicatorType: \"Shimmer\" }} allowSorting={true}>\r\n                        <ColumnsDirective>\r\n                            <ColumnDirective field=\"TaskID\" headerText=\"Task ID\" width=\"120\" textAlign=\"Right\"></ColumnDirective>\r\n                            <ColumnDirective field=\"TaskName\" headerText=\"Task Name\" width=\"240\"></ColumnDirective>\r\n                            <ColumnDirective field=\"StartDate\" headerText=\"Start Date\" width=\"140\" format=\"yMd\" textAlign=\"Right\"/>\r\n                            <ColumnDirective field=\"Duration\" headerText=\"Duration\" width=\"130\" textAlign=\"Right\"/>\r\n                            <ColumnDirective field=\"Progress\" headerText=\"Progress\" width=\"130\"/>\r\n                        </ColumnsDirective>\r\n                        <Inject services={[Page, Sort]}/>\r\n                    </TreeGridComponent>\r\n                </div>\r\n                <div className=\"col-md-3 property-section\">\r\n                    <PropertyPane title=\"Properties\">\r\n                        <table id=\"property\" title=\"Properties\" className=\"property-panel-table\" style={{ width: \"100%\" }}>\r\n                            <tbody>\r\n                                <tr style={{ height: \"50px\" }}>\r\n                                    <td>\r\n                                        <div> Indicator Type </div>\r\n                                    </td>\r\n                                    <td style={{ width: \"70%\" }}>\r\n                                        <div id=\"columnddl\">\r\n                                            <DropDownListComponent dataSource={indicatortypes} value=\"Shimmer\" change={indicatorChange.bind(this)} fields={fields} width=\"130px\" ref={(indicateDropDown) => {\n            indicatorDropDown = indicateDropDown;\n        }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\n};\nexport default LoadingAnimation;\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<LoadingAnimation />);","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-treegrid\":\"*\",\"@syncfusion/ej2-react-treegrid\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-react-dropdowns\":\"*\",\"@syncfusion/ej2-react-charts\":\"*\",\"@syncfusion/ej2/base\":\"*\",\"@syncfusion/ej2-charts'; // Import the necessary types from Syncfusion\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-documenteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-react-popups\":\"*\",\"@syncfusion/ej2-pivotview\":\"*\",\"@syncfusion/ej2-react-progressbar\":\"*\",\"@syncfusion/ej2-schedule\":\"*\"}"}