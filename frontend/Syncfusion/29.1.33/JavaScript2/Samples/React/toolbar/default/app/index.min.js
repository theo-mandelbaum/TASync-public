/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/toolbar/default/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/toolbar/default/app/index.tsx","navigations.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/toolbar/default/app/index.tsx":
/*!***********************************************!*\
  !*** ./samples/toolbar/default/app/index.tsx ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Default = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_navigations_1 = __webpack_require__(/*! @syncfusion/ej2-react-navigations */ \"./node_modules/@syncfusion/ej2-react-navigations/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/toolbar/default/app/sample-base.tsx\");\nvar Default = /** @class */ (function (_super) {\n    __extends(Default, _super);\n    function Default() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Default.prototype.render = function () {\n        return (React.createElement(\"div\", { className: 'control-pane' },\n            React.createElement(\"div\", { className: 'control-section tbar-control-section', style: { paddingBottom: '100px' } },\n                React.createElement(\"div\", { className: 'control toolbar-sample tbar-sample', style: { width: '80%', maxWidth: \"none\" } },\n                    React.createElement(\"h1\", { style: { display: 'inline-block' } }, \"Simple Toolbar\"),\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, null,\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-cut', tooltipText: 'Cut' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-copy', tooltipText: 'Copy' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-bold', tooltipText: 'Bold' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-underline', tooltipText: 'Underline' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-italic', tooltipText: 'Italic' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paint-bucket', tooltipText: 'Color-Picker' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-left', tooltipText: 'Align_Left' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-right', tooltipText: 'Align_Right' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-center', tooltipText: 'Align_Center' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-justify', tooltipText: 'Align_Justify' }))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"h1\", { style: { display: 'inline-block' } }, \"Scrollable Toolbar\"),\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, { overflowMode: 'Scrollable', id: \"toolbar_scrollable\" },\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-cut', tooltipText: 'Cut', text: 'Cut' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-copy', tooltipText: 'Copy', text: 'Copy' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', text: 'Paste' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-bold', tooltipText: 'Bold', text: 'Bold' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-underline', tooltipText: 'Underline', text: 'Underline' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-italic', tooltipText: 'Italic', text: 'Italic' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-left', tooltipText: 'Align_Left', text: 'Align_Left' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-right', tooltipText: 'Align_Right', text: 'Align_Right' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-center', tooltipText: 'Align_Center', text: 'Align_Center' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-justify', tooltipText: 'Align_Justify', text: 'Align_Justify' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-unordered', tooltipText: 'Bullets', text: 'Bullets' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-ordered', tooltipText: 'Numbering', text: 'Numbering' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-undo', tooltipText: 'Undo', text: 'Undo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-redo', tooltipText: 'Redo', text: 'Redo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-increase-indent', tooltipText: 'Text Indent', text: 'Text Indent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-decrease-indent', tooltipText: 'Text Outdent', text: 'Text Outdent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-erase', tooltipText: 'Clear', text: 'Clear' }))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"h1\", { style: { display: 'inline-block' } }, \"Popup Toolbar\"),\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, { overflowMode: 'Popup', id: \"toolbar_popup\" },\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-cut', tooltipText: 'Cut', text: 'Cut' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-copy', tooltipText: 'Copy', text: 'Copy' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', text: 'Paste' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-bold', tooltipText: 'Bold', text: 'Bold' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-underline', tooltipText: 'Underline', text: 'Underline' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-italic', tooltipText: 'Italic', text: 'Italic' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-left', tooltipText: 'Align_Left', text: 'Align_Left' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-right', tooltipText: 'Align_Right', text: 'Align_Right' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-center', tooltipText: 'Align_Center', text: 'Align_Center' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-justify', tooltipText: 'Align_Justify', text: 'Align_Justify' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-unordered', tooltipText: 'Bullets', text: 'Bullets' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-ordered', tooltipText: 'Numbering', text: 'Numbering' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-undo', tooltipText: 'Undo', text: 'Undo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-redo', tooltipText: 'Redo', text: 'Redo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-increase-indent', tooltipText: 'Text Indent', text: 'Text Indent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-decrease-indent', tooltipText: 'Text Outdent', text: 'Text Outdent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-erase', tooltipText: 'Clear', text: 'Clear' }))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"h1\", { style: { display: 'inline-block' } }, \"MultiRow Toolbar\"),\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, { overflowMode: 'MultiRow', id: \"toolbar_multirow\" },\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-cut', tooltipText: 'Cut', text: 'Cut' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-copy', tooltipText: 'Copy', text: 'Copy' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', text: 'Paste' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-bold', tooltipText: 'Bold', text: 'Bold' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-underline', tooltipText: 'Underline', text: 'Underline' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-italic', tooltipText: 'Italic', text: 'Italic' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-left', tooltipText: 'Align_Left', text: 'Align_Left' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-right', tooltipText: 'Align_Right', text: 'Align_Right' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-center', tooltipText: 'Align_Center', text: 'Align_Center' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-justify', tooltipText: 'Align_Justify', text: 'Align_Justify' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-unordered', tooltipText: 'Bullets', text: 'Bullets' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-ordered', tooltipText: 'Numbering', text: 'Numbering' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-undo', tooltipText: 'Undo', text: 'Undo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-redo', tooltipText: 'Redo', text: 'Redo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-increase-indent', tooltipText: 'Text Indent', text: 'Text Indent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-decrease-indent', tooltipText: 'Text Outdent', text: 'Text Outdent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-erase', tooltipText: 'Clear', text: 'Clear' }))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"h1\", { style: { display: 'inline-block' } }, \"Extended Toolbar\"),\n                    React.createElement(ej2_react_navigations_1.ToolbarComponent, { overflowMode: 'Extended', id: \"toolbar_extended\" },\n                        React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-cut', tooltipText: 'Cut', text: 'Cut' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-copy', tooltipText: 'Copy', text: 'Copy' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', text: 'Paste' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-bold', tooltipText: 'Bold', text: 'Bold' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-underline', tooltipText: 'Underline', text: 'Underline' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-italic', tooltipText: 'Italic', text: 'Italic' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-left', tooltipText: 'Align_Left', text: 'Align_Left' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-right', tooltipText: 'Align_Right', text: 'Align_Right' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-align-center', tooltipText: 'Align_Center', text: 'Align_Center' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-justify', tooltipText: 'Align_Justify', text: 'Align_Justify' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-unordered', tooltipText: 'Bullets', text: 'Bullets' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-list-ordered', tooltipText: 'Numbering', text: 'Numbering' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-undo', tooltipText: 'Undo', text: 'Undo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-redo', tooltipText: 'Redo', text: 'Redo' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-increase-indent', tooltipText: 'Text Indent', text: 'Text Indent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-decrease-indent', tooltipText: 'Text Outdent', text: 'Text Outdent' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { type: 'Separator' }),\n                            React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-erase', tooltipText: 'Clear', text: 'Clear' })))))));\n    };\n    return Default;\n}(sample_base_1.SampleBase));\nexports.Default = Default;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(Default, null));\n\n\n//# sourceURL=webpack:///./samples/toolbar/default/app/index.tsx?");

/***/ }),

/***/ "./samples/toolbar/default/app/sample-base.tsx":
/*!*****************************************************!*\
  !*** ./samples/toolbar/default/app/sample-base.tsx ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/toolbar/default/app/sample-base.tsx?");

/***/ })

/******/ });