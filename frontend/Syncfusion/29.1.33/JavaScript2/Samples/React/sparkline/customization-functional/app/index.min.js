/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/sparkline/customization-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/sparkline/customization-functional/app/index.tsx","dataviz.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/sparkline/customization-functional/app/index.tsx":
/*!******************************************************************!*\
  !*** ./samples/sparkline/customization-functional/app/index.tsx ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/**\n * Customization samples for sparkline\n */\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar property_pane_1 = __webpack_require__(/*! ./property-pane */ \"./samples/sparkline/customization-functional/app/property-pane.tsx\");\nvar ej2_react_inputs_1 = __webpack_require__(/*! @syncfusion/ej2-react-inputs */ \"./node_modules/@syncfusion/ej2-react-inputs/index.js\");\nvar ej2_react_buttons_1 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar ej2_react_charts_1 = __webpack_require__(/*! @syncfusion/ej2-react-charts */ \"./node_modules/@syncfusion/ej2-react-charts/index.js\");\nvar ej2_react_dropdowns_1 = __webpack_require__(/*! @syncfusion/ej2-react-dropdowns */ \"./node_modules/@syncfusion/ej2-react-dropdowns/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/sparkline/customization-functional/app/sample-base.tsx\");\nvar theme_color_1 = __webpack_require__(/*! ../theme-color */ \"./samples/sparkline/customization-functional/theme-color.ts\");\nvar SAMPLE_CSS = \"\\n     .control-fluid {\\n         padding: 0px !important;\\n     }\\n     #axis > * {\\n         padding: 0px !important;\\n     }\";\nvar slidercss = \"  \\n     .content-wrapper {\\n         width: 40%;\\n         margin: 0 auto;\\n         min-width: 170px;\\n     }\";\nfunction Customization() {\n    React.useEffect(function () {\n        (0, sample_base_1.updateSampleSection)();\n    }, []);\n    var percentage;\n    var sales;\n    var sparklineElement;\n    var allElement;\n    var negativeElement;\n    var firstElement;\n    var lastElement;\n    var highElement;\n    var lowElement;\n    var markerElement;\n    var datalabelElement;\n    var tooltipElement;\n    var tracklineElement;\n    var axislineElement;\n    var axisElement;\n    var rtlElement;\n    // Code for Property Panel\n    var droplist = [\n        { value: 'Sales Percentage' },\n        { value: 'Sales Count' },\n    ];\n    function sparklineChange() {\n        var element1 = document.getElementById('spark');\n        if (element1.value === 'Sales Percentage') {\n            axisElement.value = percentage.axisSettings.value;\n            axisElement.min = 0;\n            axisElement.max = 10;\n        }\n        else {\n            axisElement.value = sales.axisSettings.value;\n            axisElement.min = 0;\n            axisElement.max = 5000000;\n        }\n        if ((element1.value === 'Sales Percentage' && percentage.markerSettings.visible.length) ||\n            (element1.value === 'Sales Count' && sales.markerSettings.visible.length)) {\n            markerElement.checked = true;\n        }\n        else {\n            markerElement.checked = false;\n        }\n        markerChange();\n        if ((element1.value === 'Sales Percentage' && percentage.dataLabelSettings.visible.length) ||\n            (element1.value === 'Sales Count' && sales.dataLabelSettings.visible.length)) {\n            datalabelElement.checked = true;\n        }\n        else {\n            datalabelElement.checked = false;\n        }\n        var all = allElement;\n        var negative = negativeElement;\n        var first = firstElement;\n        var last = lastElement;\n        var high = highElement;\n        var low = lowElement;\n        var label = datalabelElement;\n        var marker = markerElement;\n        var rtl = rtlElement;\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        if (!marker.checked && !label.checked) {\n            all.checked = false;\n            negative.checked = false;\n            first.checked = false;\n            last.checked = false;\n            high.checked = false;\n            low.checked = false;\n        }\n        if (marker.checked) {\n            var spark_1 = element1.value === 'Sales Percentage' ? percentage : sales;\n            all.checked = spark_1.markerSettings.visible.indexOf('All') > -1;\n            negative.checked = spark_1.markerSettings.visible.indexOf('Negative') > -1;\n            first.checked = spark_1.markerSettings.visible.indexOf('Start') > -1;\n            last.checked = spark_1.markerSettings.visible.indexOf('End') > -1;\n            high.checked = spark_1.markerSettings.visible.indexOf('High') > -1;\n            low.checked = spark_1.markerSettings.visible.indexOf('Low') > -1;\n        }\n        if (label.checked) {\n            var spark_2 = element1.value === 'Sales Percentage' ? percentage : sales;\n            all.checked = spark_2.dataLabelSettings.visible.indexOf('All') > -1;\n            negative.checked = spark_2.dataLabelSettings.visible.indexOf('Negative') > -1;\n            first.checked = spark_2.dataLabelSettings.visible.indexOf('Start') > -1;\n            last.checked = spark_2.dataLabelSettings.visible.indexOf('End') > -1;\n            high.checked = spark_2.dataLabelSettings.visible.indexOf('High') > -1;\n            low.checked = spark_2.dataLabelSettings.visible.indexOf('Low') > -1;\n        }\n        datalabelChange();\n        if ((element1.value === 'Sales Percentage' && percentage.tooltipSettings.visible === true) ||\n            (element1.value === 'Sales Count' && sales.tooltipSettings.visible === true)) {\n            tooltipElement.checked = true;\n        }\n        else {\n            tooltipElement.checked = false;\n        }\n        tooltipChange();\n        if ((element1.value === 'Sales Percentage' && percentage.tooltipSettings.trackLineSettings.visible === true) ||\n            (element1.value === 'Sales Count' && sales.tooltipSettings.trackLineSettings.visible === true)) {\n            tracklineElement.checked = true;\n        }\n        else {\n            tracklineElement.checked = false;\n        }\n        tracklineChange();\n        if ((element1.value === 'Sales Percentage' && percentage.axisSettings.lineSettings.visible === true) ||\n            (element1.value === 'Sales Count' && sales.axisSettings.lineSettings.visible === true)) {\n            axislineElement.checked = true;\n        }\n        else {\n            axislineElement.checked = false;\n        }\n        axislineChange();\n        rtlChange();\n        if ((element1.value === 'Sales Percentage' && percentage.enableRtl === true) ||\n            (element1.value === 'Sales Count' && sales.enableRtl === true)) {\n            rtlElement.checked = true;\n        }\n        else {\n            rtlElement.checked = false;\n        }\n        if (element1.value === 'Sales Percentage' && percentage.axisSettings.value !== 0) {\n            axisElement.value = percentage.axisSettings.value;\n            axisElement.min = 0;\n            axisElement.max = 10;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + percentage.axisSettings.value;\n        }\n        if (element1.value === 'Sales Count' && sales.axisSettings.value !== 0) {\n            axisElement.value = sales.axisSettings.value;\n            axisElement.min = 0;\n            axisElement.max = 5000000;\n            document.getElementById('axisval').innerHTML = 'Axis value: <span> ' + sales.axisSettings.value;\n        }\n        axisChange();\n        all.checked = !(negative.checked || high.checked || low.checked || first.checked || last.checked);\n        negative.disabled = high.disabled = low.disabled = first.disabled = last.disabled = all.checked;\n    }\n    function allColorChange() {\n        var negative = negativeElement;\n        var first = firstElement;\n        var last = lastElement;\n        var high = highElement;\n        var low = lowElement;\n        if (allElement.checked == true) {\n            negativeElement.disabled = true;\n            firstElement.disabled = true;\n            lastElement.disabled = true;\n            highElement.disabled = true;\n            lowElement.disabled = true;\n        }\n        else {\n            negativeElement.disabled = false;\n            firstElement.disabled = false;\n            lastElement.disabled = false;\n            highElement.disabled = false;\n            lowElement.disabled = false;\n        }\n        var marker = markerElement;\n        var label = datalabelElement;\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.markerSettings.visible = ( true && marker.checked) ? ['All'] : (marker.checked) ? getVisible() : [];\n        spark.dataLabelSettings.visible = ( true && label.checked) ? ['All'] : (label.checked) ? getVisible() : [];\n        spark.refresh();\n    }\n    function colorChange() {\n        processMarkerLabel();\n    }\n    function processMarkerLabel() {\n        var marker = markerElement;\n        var label = datalabelElement;\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        if (marker.checked) {\n            spark.markerSettings.visible = getVisible();\n            spark.refresh();\n        }\n        if (label.checked) {\n            spark.dataLabelSettings.visible = getVisible();\n            spark.refresh();\n        }\n    }\n    function getVisible() {\n        var visible = [];\n        if (allElement.checked)\n            return ['All'];\n        else {\n            if (negativeElement.checked)\n                visible.push(\"Negative\");\n            if (firstElement.checked)\n                visible.push(\"Start\");\n            if (lastElement.checked)\n                visible.push(\"End\");\n            if (firstElement.checked)\n                visible.push(\"High\");\n            if (lowElement.checked)\n                visible.push(\"Low\");\n        }\n        return visible;\n    }\n    function markerChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.markerSettings.visible = markerElement.checked ? getVisible() : [];\n        spark.refresh();\n    }\n    function datalabelChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.dataLabelSettings.visible = datalabelElement.checked ? getVisible() : [];\n        spark.refresh();\n    }\n    function rtlChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.enableRtl = rtlElement.checked ? true : false;\n        spark.refresh();\n    }\n    function tooltipChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.tooltipSettings.visible = tooltipElement.checked;\n        spark.tooltipSettings.format = '${xval}: ${yval}';\n        spark.refresh();\n    }\n    function tracklineChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.tooltipSettings.trackLineSettings.visible = tracklineElement.checked;\n        spark.tooltipSettings.trackLineSettings.color = 'red';\n        spark.tooltipSettings.trackLineSettings.width = 1;\n        spark.refresh();\n    }\n    function axislineChange() {\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.axisSettings.lineSettings.visible = axislineElement.checked;\n        spark.axisSettings.lineSettings.color = 'red';\n        spark.axisSettings.lineSettings.width = 2;\n        spark.refresh();\n    }\n    function axisChange() {\n        var value = parseInt(axisElement.value.toString(), 10);\n        var element1 = document.getElementById('spark');\n        var spark = element1.value === 'Sales Percentage' ? percentage : sales;\n        spark.axisSettings.value = value;\n        document.getElementById('axisval').innerHTML = \"Axis Value <span>\" + value;\n        spark.refresh();\n    }\n    function load(args) {\n        (0, theme_color_1.loadSparkLineTheme)(args);\n    }\n    return (React.createElement(\"div\", { className: 'control-pane' },\n        React.createElement(\"style\", null, SAMPLE_CSS),\n        React.createElement(\"div\", { className: \"col-lg-8 control-section\" },\n            React.createElement(\"div\", { id: \"spark-container\", className: \"row\" },\n                React.createElement(\"div\", { className: \"cols-sample-area\", style: { \"margin\": \"auto\", \"textAlign\": \"center\" } },\n                    React.createElement(\"p\", { style: { \"fontSize\": \"18px\" } }, \" Worldwide car sales by brand - 2017\"),\n                    React.createElement(\"table\", { style: { \"width\": \"100%\", \"margin\": \"auto\" } },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", { style: { \"margin\": \"auto\" } }, \"Sales Percentage\"),\n                                React.createElement(\"td\", null,\n                                    React.createElement(ej2_react_charts_1.SparklineComponent, { load: load.bind(this), ref: function (m) { return percentage = m; }, id: 'spark1-container', height: '200px', width: '200px', lineWidth: 1, type: 'Column', valueType: 'Category', tooltipSettings: {\n                                            format: '${xval} : ${yval}',\n                                            trackLineSettings: {\n                                                color: 'red',\n                                                width: 1\n                                            }\n                                        }, markerSettings: {\n                                            fill: 'red',\n                                            size: 5\n                                        }, axisSettings: {\n                                            lineSettings: {\n                                                color: 'red',\n                                                width: 2\n                                            }\n                                        }, dataSource: [\n                                            { x: 0, xval: 'AUDI', yval: 1 },\n                                            { x: 1, xval: 'BMW', yval: 5 },\n                                            { x: 2, xval: 'BUICK', yval: -1 },\n                                            { x: 3, xval: 'CETROEN', yval: -6 },\n                                            { x: 4, xval: 'CHEVROLET', yval: 0 },\n                                            { x: 5, xval: 'FIAT', yval: 1 },\n                                            { x: 6, xval: 'FORD', yval: -2 },\n                                            { x: 7, xval: 'HONDA', yval: 7 },\n                                            { x: 8, xval: 'HYUNDAI', yval: -9 },\n                                            { x: 9, xval: 'JEEP', yval: 0 },\n                                            { x: 10, xval: 'KIA', yval: -10 },\n                                            { x: 11, xval: 'MAZDA', yval: 3 },\n                                            { x: 12, xval: 'MERCEDES', yval: 13 },\n                                            { x: 13, xval: 'NISSAN', yval: 5 },\n                                            { x: 14, xval: 'OPEL/VHALL', yval: -6 },\n                                            { x: 15, xval: 'PEUGEOT', yval: 0 },\n                                            { x: 16, xval: 'RENAULT', yval: 7 },\n                                            { x: 17, xval: 'SKODA', yval: 5 },\n                                            { x: 18, xval: 'SUBARU', yval: 5 },\n                                            { x: 19, xval: 'SUZUKI', yval: 11 },\n                                            { x: 20, xval: 'TOYOTA', yval: 5 },\n                                            { x: 21, xval: 'VOLKSWAGEN', yval: 3 },\n                                        ], xName: 'xval', yName: 'yval' },\n                                        React.createElement(ej2_react_charts_1.Inject, { services: [ej2_react_charts_1.SparklineTooltip] })))),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", { style: { \"margin\": \"auto\" } }, \"Sales Count\"),\n                                React.createElement(\"td\", null,\n                                    React.createElement(ej2_react_charts_1.SparklineComponent, { load: load.bind(this), ref: function (m) { return sales = m; }, id: 'spark2-container', height: '200px', width: '200px', lineWidth: 1, type: 'Column', valueType: 'Category', tooltipSettings: {\n                                            format: '${xval} : ${yval}',\n                                            trackLineSettings: {\n                                                color: 'red',\n                                                width: 1\n                                            }\n                                        }, markerSettings: {\n                                            fill: 'red',\n                                            size: 5\n                                        }, axisSettings: {\n                                            lineSettings: {\n                                                color: 'red',\n                                                width: 2\n                                            }\n                                        }, dataSource: [\n                                            { x: 0, xval: 'AUDI', yval: 1847613 },\n                                            { x: 1, xval: 'BMW', yval: 2030331 },\n                                            { x: 2, xval: 'BUICK', yval: 1465823 },\n                                            { x: 3, xval: 'CETROEN', yval: 999888 },\n                                            { x: 4, xval: 'CHEVROLET', yval: 3857388 },\n                                            { x: 5, xval: 'FIAT', yval: 1503806 },\n                                            { x: 6, xval: 'FORD', yval: 5953122 },\n                                            { x: 7, xval: 'HONDA', yval: 4967689 },\n                                            { x: 8, xval: 'HYUNDAI', yval: 3951176 },\n                                            { x: 9, xval: 'JEEP', yval: 1390130 },\n                                            { x: 10, xval: 'KIA', yval: 2511293 },\n                                            { x: 11, xval: 'MAZDA', yval: 1495557 },\n                                            { x: 12, xval: 'MERCEDES', yval: 2834181 },\n                                            { x: 13, xval: 'NISSAN', yval: 4834694 },\n                                            { x: 14, xval: 'OPEL/VHALL', yval: 996559 },\n                                            { x: 15, xval: 'PEUGEOT', yval: 1590300 },\n                                            { x: 16, xval: 'RENAULT', yval: 2275227 },\n                                            { x: 17, xval: 'SKODA', yval: 1180672 },\n                                            { x: 18, xval: 'SUBARU', yval: 1050390 },\n                                            { x: 19, xval: 'SUZUKI', yval: 2891415 },\n                                            { x: 20, xval: 'TOYOTA', yval: 7843423 },\n                                            { x: 21, xval: 'VOLKSWAGEN', yval: 6639250 },\n                                        ], xName: 'xval', yName: 'yval' },\n                                        React.createElement(ej2_react_charts_1.Inject, { services: [ej2_react_charts_1.SparklineTooltip] })))))))),\n            React.createElement(\"div\", { style: { \"float\": \"right\", \"marginRight\": \"10px\" } },\n                \"Source: \",\n                React.createElement(\"a\", { href: \" http://carsalesbase.com/global-car-sales-2017\", target: \"_blank\", \"aria-label\": \"Navigate to the documentation for car sales base\" }, \"carsalesbase.com\"))),\n        React.createElement(\"div\", { className: 'col-lg-4 property-section' },\n            React.createElement(property_pane_1.PropertyPane, { title: 'Properties' },\n                React.createElement(\"table\", { id: 'property', title: 'Properties', className: 'property-panel-table', style: { width: '100%' } },\n                    React.createElement(\"tbody\", null,\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", null,\n                                React.createElement(\"div\", null, \" Sparkline \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"spark\", width: \"100%\", index: 0, change: sparklineChange.bind(this), ref: function (d) { return sparklineElement = d; }, dataSource: droplist, fields: { text: 'value', value: 'value' } })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Special Points \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"table\", null,\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null,\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"All\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: allColorChange.bind(this), ref: function (d) { return allElement = d; }, id: 'all', checked: true })),\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"Negative\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: colorChange.bind(this), ref: function (d) { return negativeElement = d; }, id: 'negative', disabled: true }))),\n                                        React.createElement(\"tr\", null,\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"First\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: colorChange.bind(this), ref: function (d) { return firstElement = d; }, id: 'first', disabled: true })),\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"Last\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: colorChange.bind(this), ref: function (d) { return lastElement = d; }, id: 'last', disabled: true }))),\n                                        React.createElement(\"tr\", null,\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"High\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: colorChange.bind(this), ref: function (d) { return highElement = d; }, id: 'high', disabled: true })),\n                                            React.createElement(\"td\", { style: { \"padding\": \"5px\" } }, \"Low\"),\n                                            React.createElement(\"td\", null,\n                                                React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: colorChange.bind(this), ref: function (d) { return lowElement = d; }, id: 'low', disabled: true }))))))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Marker \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: markerChange.bind(this), ref: function (d) { return markerElement = d; }, id: 'marker', disabled: false })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Data Label \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: datalabelChange.bind(this), ref: function (d) { return datalabelElement = d; }, id: 'datalabel', disabled: false })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" EnableRTL \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: rtlChange.bind(this), ref: function (d) { return rtlElement = d; }, id: 'rtl', disabled: false })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Tooltip \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: tooltipChange.bind(this), ref: function (d) { return tooltipElement = d; }, id: 'tooltip', disabled: false })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Track Line \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: tracklineChange.bind(this), ref: function (d) { return tracklineElement = d; }, id: 'trackline', disabled: false })))),\n                        React.createElement(\"tr\", { style: { \"height\": \"30px\" } },\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null, \" Axis Line \")),\n                            React.createElement(\"td\", { style: { \"width\": \"50%\" } },\n                                React.createElement(\"div\", null,\n                                    React.createElement(ej2_react_buttons_1.CheckBoxComponent, { change: axislineChange.bind(this), ref: function (d) { return axislineElement = d; }, id: 'axis1', disabled: false })))),\n                        React.createElement(\"tr\", null,\n                            React.createElement(\"td\", null,\n                                React.createElement(\"div\", { id: 'axisval' },\n                                    \"Axis Value \",\n                                    React.createElement(\"span\", null, \"\\u00A0\\u00A0\\u00A00\"),\n                                    \" \")),\n                            React.createElement(\"td\", null,\n                                React.createElement(\"div\", { className: \"content-wrapper\" },\n                                    React.createElement(\"style\", null,\n                                        \" \",\n                                        slidercss,\n                                        \" \"),\n                                    React.createElement(ej2_react_inputs_1.SliderComponent, { change: axisChange.bind(this), ref: function (slider) { return axisElement = slider; }, type: 'MinRange', step: 1, id: \"axis\", value: 0, min: 0, max: 10, style: { width: '100px' }, disabled: false }))))))))));\n}\nexports.default = Customization;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(Customization, null));\n\n\n//# sourceURL=webpack:///./samples/sparkline/customization-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/sparkline/customization-functional/app/property-pane.tsx":
/*!**************************************************************************!*\
  !*** ./samples/sparkline/customization-functional/app/property-pane.tsx ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyPane = void 0;\nvar ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\nvar PropertyPane = /** @class */ (function (_super) {\n    __extends(PropertyPane, _super);\n    function PropertyPane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PropertyPane.prototype.render = function () {\n        var mobilePropPane = (0, ej2_base_1.select)('.sb-mobile-prop-pane');\n        var isMobile = window.matchMedia('(max-width:550px)').matches;\n        return isMobile && mobilePropPane ?\n            ReactDOM.createPortal(React.createElement(\"div\", { className: 'property-panel-section' },\n                React.createElement(\"div\", { className: \"property-panel-header\" }, this.props.title),\n                React.createElement(\"div\", { className: \"property-panel-content\" }, this.props.children)), mobilePropPane)\n            :\n                (React.createElement(\"div\", { className: 'property-panel-section' },\n                    React.createElement(\"div\", { className: \"property-panel-header\" }, this.props.title),\n                    React.createElement(\"div\", { className: \"property-panel-content\" }, this.props.children)));\n    };\n    return PropertyPane;\n}(React.Component));\nexports.PropertyPane = PropertyPane;\n\n\n//# sourceURL=webpack:///./samples/sparkline/customization-functional/app/property-pane.tsx?");

/***/ }),

/***/ "./samples/sparkline/customization-functional/app/sample-base.tsx":
/*!************************************************************************!*\
  !*** ./samples/sparkline/customization-functional/app/sample-base.tsx ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/sparkline/customization-functional/app/sample-base.tsx?");

/***/ }),

/***/ "./samples/sparkline/customization-functional/theme-color.ts":
/*!*******************************************************************!*\
  !*** ./samples/sparkline/customization-functional/theme-color.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSparkLineTheme = void 0;\nvar loadSparkLineTheme = function (args) {\n    var theme = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.sparkline.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return args.sparkline.theme;\n};\nexports.loadSparkLineTheme = loadSparkLineTheme;\n\n\n//# sourceURL=webpack:///./samples/sparkline/customization-functional/theme-color.ts?");

/***/ })

/******/ });