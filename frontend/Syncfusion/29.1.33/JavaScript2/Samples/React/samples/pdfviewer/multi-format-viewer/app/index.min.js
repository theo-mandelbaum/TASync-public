/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/pdfviewer/multi-format-viewer/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/pdfviewer/multi-format-viewer/app/index.tsx","pdfviewer.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/pdfviewer/multi-format-viewer/app/index.tsx":
/*!*************************************************************!*\
  !*** ./samples/pdfviewer/multi-format-viewer/app/index.tsx ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiFormatViewer = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_pdfviewer_1 = __webpack_require__(/*! @syncfusion/ej2-react-pdfviewer */ \"./node_modules/@syncfusion/ej2-react-pdfviewer/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/pdfviewer/multi-format-viewer/app/sample-base.tsx\");\nvar ej2_react_buttons_1 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\nvar ej2_react_buttons_2 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar ej2_react_inputs_1 = __webpack_require__(/*! @syncfusion/ej2-react-inputs */ \"./node_modules/@syncfusion/ej2-react-inputs/index.js\");\nvar ej2_react_progressbar_1 = __webpack_require__(/*! @syncfusion/ej2-react-progressbar */ \"./node_modules/@syncfusion/ej2-react-progressbar/index.js\");\nvar MultiFormatViewer = /** @class */ (function (_super) {\n    __extends(MultiFormatViewer, _super);\n    function MultiFormatViewer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.dropElement = null;\n        _this.filesName = [];\n        _this.pdfViewerProgressValue = 0;\n        _this.uploadProgressValue = 0;\n        _this.rendereComplete = function () {\n            _this.uploadObj.current.dropArea = _this.dropAreaRef.current;\n            document.getElementById('browse').onclick = function () {\n                document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n                return false;\n            };\n        };\n        _this.onSelect = function (args) {\n            _this.linear.current.value == 0;\n            _this.linear.current.refresh();\n            var extensions = ['doc', 'docx', 'rtf', 'docm', 'dotm', 'dotx', 'dot', 'xls', 'xlsx', 'pptx', 'pptm', 'potx', 'potm', 'jpeg', 'png', 'bmp', 'pdf', 'jpg'];\n            var progressBarContainer = document.getElementById(\"progressBar\");\n            var progressBar = document.getElementById(\"linearProgressBar\");\n            var progressMessage = document.getElementById(\"uploadedMessage\");\n            var fileSizeValidation = document.getElementById(\"fileSizeValidation\");\n            document.getElementById(\"fileDetails\").style.display = \"block\";\n            document.getElementById(\"FailedMessage\").style.display = \"none\";\n            progressBarContainer.style.display = \"block\";\n            progressBar.style.display = \"flex\";\n            progressMessage.style.display = \"none\";\n            fileSizeValidation.style.display = \"none\";\n            if (!_this.uploadObj.current.element.querySelector('li')) {\n                _this.filesData = [];\n            }\n            if ((0, ej2_base_1.isNullOrUndefined)(_this.uploadObj.current.element.querySelector('.e-upload-files'))) {\n                _this.parentElement = (0, ej2_base_1.createElement)('ul', {\n                    className: 'e-upload-files',\n                });\n                document.getElementsByClassName('e-upload')[0].appendChild(_this.parentElement);\n            }\n            var validFiles = args.filesData;\n            if (validFiles.length === 0) {\n                progressBarContainer.style.display = \"block\";\n                progressBar.style.display = \"none\";\n                progressMessage.style.display = \"block\";\n                args.cancel = true;\n                return;\n            }\n            if (!extensions.includes(validFiles[0].type)) {\n                document.getElementById(\"FailedMessage\").style.display = \"block\";\n                document.getElementById(\"fileDetails\").style.display = \"none\";\n                progressBar.style.display = \"none\";\n                progressMessage.style.display = \"none\";\n                document.getElementById('pdfviewer_container').style.display = 'none';\n                args.cancel = true;\n                return;\n            }\n            if (validFiles[0].type != \"pdf\" && validFiles[0].size > 4000000) {\n                fileSizeValidation.style.display = \"block\";\n                progressBar.style.display = \"none\";\n                document.getElementById(\"fileDetails\").style.display = \"none\";\n                document.getElementById('pdfviewer_container').style.display = 'none';\n                args.cancel = true;\n                return;\n            }\n            document.getElementById(\"fileName\").innerHTML = args.filesData[0].name;\n            var viewer = document.getElementById('pdfviewer').ej2_instances[0];\n            viewer.downloadFileName = args.filesData[0].name;\n            viewer.exportAnnotationFileName = args.filesData[0].name;\n            var size = document.getElementById(\"fileSize\");\n            if ((args.filesData[0].size.toString()).length <= 7) {\n                size.innerHTML = ((args.filesData[0].size / 1024).toFixed(1)).toString() + \" KB\";\n            }\n            else {\n                var kbsize = args.filesData[0].size / 1024;\n                size.innerHTML = ((kbsize / 1024).toFixed(1)).toString() + \" MB\";\n            }\n            document.getElementById(\"fileSize\");\n            _this.formSelectedData(validFiles[0], _this.uploadObj.current);\n            _this.filesData = _this.filesData.concat(validFiles);\n            var totalProgress = _this.calculateTotalProgress();\n            _this.updateProgressBar(totalProgress);\n            document.getElementById(\"progress-status\").innerHTML = totalProgress.toString() + \"%\";\n        };\n        _this.formSelectedData = function (file, proxy) {\n            var liEle = (0, ej2_base_1.createElement)('li', {\n                className: 'e-upload-file-list',\n                attrs: {\n                    'data-file-name': file.name\n                },\n            });\n            _this.readURL(liEle, file);\n            proxy.fileList.push(liEle);\n        };\n        _this.readURL = function (li, args) {\n            var file = args.rawFile;\n            var reader = new FileReader();\n            var type = args.type;\n            var context = _this;\n            reader.addEventListener('load', function () {\n                var post = JSON.stringify({\n                    'data': reader.result,\n                    'type': type\n                });\n                var url = \"https://ej2services.syncfusion.com/production/web-services/api/pdfviewer/LoadFile\";\n                var xhr = new XMLHttpRequest();\n                xhr.open('Post', url, true);\n                xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n                xhr.upload.addEventListener('progress', function (event) {\n                    if (event.lengthComputable) {\n                        var progressValue = Math.round((event.loaded / event.total) * 100);\n                        context.uploadProgressValue = progressValue;\n                        var totalProgress = context.calculateTotalProgress();\n                        context.updateProgressBar(totalProgress);\n                        document.getElementById(\"progress-status\").innerHTML = totalProgress.toString() + \"%\";\n                    }\n                });\n                xhr.onreadystatechange = function (event) {\n                    if (xhr.responseText != \"\" && xhr.readyState === 4) {\n                        if (xhr.status === 200) {\n                            var viewer = document.getElementById('pdfviewer').ej2_instances[0];\n                            viewer.documentPath = xhr.responseText;\n                            this.pdfViewerProgressValue = 20;\n                            var totalProgress = context.calculateTotalProgress();\n                            context.updateProgressBar(totalProgress);\n                            document.getElementById(\"progress-status\").innerHTML = totalProgress.toString() + \"%\";\n                            document.getElementById('pdfviewer_container').style.display = 'block';\n                        }\n                        else {\n                            console.error('Error:', xhr.statusText);\n                        }\n                    }\n                }.bind(this);\n                xhr.send(post);\n            }, false);\n            if (file) {\n                reader.readAsDataURL(file);\n            }\n        };\n        _this.documentLoad = function (args) {\n            _this.pdfViewerProgressValue = 100;\n            var totalProgress = _this.calculateTotalProgress();\n            _this.updateProgressBar(totalProgress);\n            document.getElementById(\"progress-status\").innerHTML = totalProgress.toString() + \"%\";\n            setTimeout(function () {\n                document.getElementById(\"linearProgressBar\").style.display = \"none\";\n                document.getElementById(\"uploadedMessage\").style.display = \"block\";\n                _this.uploadProgressValue = 0;\n                _this.pdfViewerProgressValue = 0;\n                _this.linear.current.value = 0;\n            }, 1000);\n        };\n        _this.ajaxRequestSuccess = function (args) {\n            if (args.action === \"Load\") {\n                _this.pdfViewerProgressValue = 50;\n                var totalProgress = _this.calculateTotalProgress();\n                _this.updateProgressBar(totalProgress);\n                document.getElementById(\"progress-status\").innerHTML = totalProgress.toString() + \"%\";\n            }\n        };\n        _this.calculateTotalProgress = function () {\n            var totalProgress = (_this.uploadProgressValue + _this.pdfViewerProgressValue) / 2;\n            return totalProgress;\n        };\n        _this.updateProgressBar = function (progress) {\n            if (_this.linear) {\n                _this.linear.current.value = progress;\n            }\n        };\n        _this.progressLoad = function (args) {\n            var div = document.getElementsByClassName('progressbar-label');\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n            if (args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark'\n                || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'MaterialDark' || args.progressBar.theme === 'FluentDark' || args.progressBar.theme === 'Material3Dark') {\n                for (var i = 0; i < div.length; i++) {\n                    div[i].setAttribute('style', 'color:white');\n                }\n            }\n        };\n        _this.change = function (args) {\n            if (args.checked) {\n                _this.viewer.serviceUrl = '';\n            }\n            else {\n                _this.viewer.serviceUrl = 'https://ej2services.syncfusion.com/production/web-services/api/pdfviewer';\n            }\n            _this.viewer.dataBind();\n            _this.viewer.load(_this.viewer.documentPath, null);\n        };\n        _this.dropAreaRef = React.createRef();\n        _this.uploadObj = React.createRef();\n        _this.linear = React.createRef();\n        _this.allowedExtensions = '.doc, .docx, .rtf, .docm, .dotm, .dotx, .dot, .xls, .xlsx, .pptx, .pptm, .potx, .potm .jpeg, .png, .bmp, .pdf, .jpg';\n        return _this;\n    }\n    MultiFormatViewer.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: 'control-section' },\n                React.createElement(\"div\", { className: 'content-wrapper-pdfviewer', ref: function (scope) { _this.dropAreaRef.current = scope; }, style: { 'textAlign': 'center', 'marginBottom': '15px' } },\n                    React.createElement(\"div\", { style: { 'height': 'auto', 'overflow': 'auto' } },\n                        React.createElement(ej2_react_buttons_2.ButtonComponent, { id: 'browse' }, \"Browse...\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(\"p\", { style: { 'margin': '10px' } }, \"OR\"),\n                            React.createElement(\"span\", { id: \"drop\" }, \"Drop files (Word, Excel, PowerPoint, Image, PDF)\"))),\n                    React.createElement(\"div\", { id: \"progressBar\", style: { display: 'none' } },\n                        React.createElement(\"div\", { id: 'fileDetails' },\n                            React.createElement(\"p\", { id: \"fileName\" }),\n                            React.createElement(\"p\", { id: \"fileSize\" })),\n                        React.createElement(\"div\", { id: 'linearProgressBar', style: { justifyContent: 'center', display: 'none' } },\n                            React.createElement(ej2_react_progressbar_1.ProgressBarComponent, { id: \"linear-pdfviewer\", ref: function (scope) { _this.linear.current = scope; }, type: 'Linear', width: '250', height: '60', animation: { enable: false, duration: 2000, delay: 0 }, value: 0, load: this.progressLoad.bind(this) }),\n                            React.createElement(\"span\", { id: 'progress-status', style: { padding: '18px 5px' } })),\n                        React.createElement(\"div\", { id: \"uploadedMessage\", style: { display: 'none', marginTop: '10px' } },\n                            React.createElement(\"p\", { style: { color: 'rgb(110, 218, 110)' } }, \"File successfully uploaded...\")),\n                        React.createElement(\"div\", { id: \"FailedMessage\", style: { display: 'none', marginTop: '10px' } },\n                            React.createElement(\"p\", { style: { color: 'red' } }, \"File not Supported!\")),\n                        React.createElement(\"div\", { id: \"fileSizeValidation\", style: { display: 'none', marginTop: '10px' } },\n                            React.createElement(\"p\", { style: { color: 'rgb(203, 38, 38)' } }, \"Maximum file size is (4.0 MB) for this operation...\"))),\n                    React.createElement(\"div\", { id: \"uploader-pdfviewer\" },\n                        React.createElement(ej2_react_inputs_1.UploaderComponent, { id: 'fileUpload', type: 'file', ref: function (scope) { _this.uploadObj.current = scope; }, selected: this.onSelect.bind(this), allowedExtensions: this.allowedExtensions }))),\n                React.createElement(\"div\", { id: 'pdfviewer_container', style: { display: 'none' } },\n                    React.createElement(\"div\", { className: \"flex-container\" },\n                        React.createElement(\"label\", { htmlFor: \"checked\", className: \"switchLabel\" }, \" Standalone PDF Viewer \"),\n                        React.createElement(\"div\", { className: \"e-message render-mode-info\" },\n                            React.createElement(\"span\", { className: \"e-msg-icon render-mode-info-icon\", title: \"Turn OFF to render the PDF Viewer as server-backed\" })),\n                        React.createElement(ej2_react_buttons_1.SwitchComponent, { cssClass: \"buttonSwitch\", id: \"checked\", change: this.change, checked: true })),\n                    React.createElement(ej2_react_pdfviewer_1.PdfViewerComponent, { id: \"pdfviewer\", className: \"e-pv-multi-format-pdfviewer\", toolbarSettings: {\n                            showTooltip: true, toolbarItems: [\"DownloadOption\",\n                                \"UndoRedoTool\",\n                                \"PageNavigationTool\",\n                                \"MagnificationTool\",\n                                \"PanTool\",\n                                \"SelectionTool\",\n                                \"CommentTool\",\n                                \"SubmitForm\",\n                                \"SearchOption\",\n                                \"AnnotationEditTool\",\n                                \"FormDesignerEditTool\",\n                                \"PrintOption\"]\n                        }, resourceUrl: \"https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib\", style: { 'height': '640px' }, documentLoad: this.documentLoad, zoomMode: \"FitToPage\", ajaxRequestSuccess: this.ajaxRequestSuccess },\n                        React.createElement(ej2_react_pdfviewer_1.Inject, { services: [ej2_react_pdfviewer_1.Toolbar, ej2_react_pdfviewer_1.Magnification, ej2_react_pdfviewer_1.Navigation, ej2_react_pdfviewer_1.LinkAnnotation, ej2_react_pdfviewer_1.BookmarkView, ej2_react_pdfviewer_1.ThumbnailView, ej2_react_pdfviewer_1.Print, ej2_react_pdfviewer_1.TextSelection, ej2_react_pdfviewer_1.TextSearch, ej2_react_pdfviewer_1.Annotation, ej2_react_pdfviewer_1.FormFields, ej2_react_pdfviewer_1.FormDesigner, ej2_react_pdfviewer_1.PageOrganizer] }))))));\n    };\n    return MultiFormatViewer;\n}(sample_base_1.SampleBase));\nexports.MultiFormatViewer = MultiFormatViewer;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(MultiFormatViewer, null));\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/multi-format-viewer/app/index.tsx?");

/***/ }),

/***/ "./samples/pdfviewer/multi-format-viewer/app/sample-base.tsx":
/*!*******************************************************************!*\
  !*** ./samples/pdfviewer/multi-format-viewer/app/sample-base.tsx ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/multi-format-viewer/app/sample-base.tsx?");

/***/ })

/******/ });