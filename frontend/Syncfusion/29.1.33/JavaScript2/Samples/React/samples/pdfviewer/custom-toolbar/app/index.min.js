/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/pdfviewer/custom-toolbar/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/pdfviewer/custom-toolbar/app/index.tsx","pdfviewer.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/pdfviewer/custom-toolbar/app/index.tsx":
/*!********************************************************!*\
  !*** ./samples/pdfviewer/custom-toolbar/app/index.tsx ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomToolbar = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_pdfviewer_1 = __webpack_require__(/*! @syncfusion/ej2-react-pdfviewer */ \"./node_modules/@syncfusion/ej2-react-pdfviewer/index.js\");\nvar ej2_react_navigations_1 = __webpack_require__(/*! @syncfusion/ej2-react-navigations */ \"./node_modules/@syncfusion/ej2-react-navigations/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/pdfviewer/custom-toolbar/app/sample-base.tsx\");\nvar ej2_react_buttons_1 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar viewer;\nvar CustomToolbar = /** @class */ (function (_super) {\n    __extends(CustomToolbar, _super);\n    function CustomToolbar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.currentPageNumber = '1';\n        _this.fileName = '';\n        _this.searchText = '';\n        _this.prevMatchCase = false;\n        _this.isInkEnabled = false;\n        _this.searchActive = false;\n        return _this;\n    }\n    CustomToolbar.prototype.componentDidMount = function () {\n        viewer = document.getElementById('container').ej2_instances[0];\n    };\n    CustomToolbar.prototype.stampTemplate = function () {\n        var onItemSelect = function (args) {\n            var stampId = args.element.id;\n            var stampText = args.element.innerText;\n            if (stampId === 'Dynamic' && stampText != null) {\n                if (stampText === 'Revised') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.Revised);\n                }\n                else if (stampText == 'Reviewed') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.Reviewed);\n                }\n                else if (stampText == 'Received') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.Received);\n                }\n                else if (stampText == 'Confidential') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.Confidential);\n                }\n                else if (stampText == 'Approved') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.Approved);\n                }\n                else if (stampText == 'NotApproved') {\n                    viewer.annotation.setAnnotationMode('Stamp', ej2_react_pdfviewer_1.DynamicStampItem.NotApproved);\n                }\n            }\n            if (stampId === 'Sign Here' && stampText != null) {\n                if (stampText === 'Witness') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_react_pdfviewer_1.SignStampItem.Witness);\n                }\n                else if (stampText == 'Initial Here') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_react_pdfviewer_1.SignStampItem.InitialHere);\n                }\n                else if (stampText == 'Sign Here') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_react_pdfviewer_1.SignStampItem.SignHere);\n                }\n                else if (stampText == 'Accepted') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_react_pdfviewer_1.SignStampItem.Accepted);\n                }\n                else if (stampText == 'Rejected') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, ej2_react_pdfviewer_1.SignStampItem.Rejected);\n                }\n            }\n            if (stampId === 'Standard Business' && stampText != null) {\n                if (stampText === 'Approved') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Approved);\n                }\n                else if (stampText == 'Not Approved') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.NotApproved);\n                }\n                else if (stampText == 'Draft') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Draft);\n                }\n                else if (stampText == 'Final') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Final);\n                }\n                else if (stampText == 'Completed') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Completed);\n                }\n                else if (stampText == 'Confidential') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Confidential);\n                }\n                else if (stampText == 'For Public Release') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.ForPublicRelease);\n                }\n                else if (stampText == 'Not For Public Release') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.NotForPublicRelease);\n                }\n                else if (stampText == 'For Comment') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.ForComment);\n                }\n                else if (stampText == 'Void') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.Void);\n                }\n                else if (stampText == 'Preliminary Results') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.PreliminaryResults);\n                }\n                else if (stampText == 'Information Only') {\n                    viewer.annotation.setAnnotationMode('Stamp', undefined, undefined, ej2_react_pdfviewer_1.StandardBusinessStampItem.InformationOnly);\n                }\n            }\n        };\n        var data = [\n            {\n                iconCss: 'e-icons e-stamp',\n                items: [\n                    {\n                        text: 'Dynamic',\n                        items: [\n                            { text: 'Revised', id: 'Dynamic' },\n                            { text: 'Reviewed', id: 'Dynamic' },\n                            { text: 'Received', id: 'Dynamic' },\n                            { text: 'Confidential', id: 'Dynamic' },\n                            { text: 'Approved', id: 'Dynamic' },\n                            { text: 'Not Approved', id: 'Dynamic' },\n                        ],\n                    },\n                    {\n                        text: 'Sign Here',\n                        items: [\n                            { text: 'Witness', id: 'Sign Here' },\n                            { text: 'Initial Here', id: 'Sign Here' },\n                            { text: 'Sign Here', id: 'Sign Here' },\n                            { text: 'Accepted', id: 'Sign Here' },\n                            { text: 'Rejected', id: 'Sign Here' },\n                        ],\n                    },\n                    {\n                        text: 'Standard Business',\n                        items: [\n                            { text: 'Approved', id: 'Standard Business' },\n                            { text: 'Not Approved', id: 'Standard Business' },\n                            { text: 'Draft', id: 'Standard Business' },\n                            { text: 'Final', id: 'Standard Business' },\n                            { text: 'Completed', id: 'Standard Business' },\n                            { text: 'Confidential', id: 'Standard Business' },\n                            { text: 'For Public Release', id: 'Standard Business' },\n                            { text: 'Not For Public Release', id: 'Standard Business' },\n                            { text: 'For Comment', id: 'Standard Business' },\n                            { text: 'Void', id: 'Standard Business' },\n                            { text: 'Preliminary Results', id: 'Standard Business' },\n                            { text: 'Information Only', id: 'Standard Business' },\n                        ],\n                    },\n                ],\n            },\n        ];\n        return (React.createElement(ej2_react_navigations_1.MenuComponent, { items: data, showItemOnClick: true, select: onItemSelect }));\n    };\n    CustomToolbar.prototype.signTemplate = function () {\n        var signMenu = [{\n                iconCss: \"e-icons e-signature\",\n                items: [\n                    { text: \"Add Signature\" },\n                    { text: \"Add Initial\" },\n                ]\n            }];\n        var onsignatureCilck = function (event) {\n            var signatureText = event.element.innerText;\n            var editAnnotationToolbar = document.getElementById('editAnnotationToolbar');\n            if (editAnnotationToolbar.style.display === 'block') {\n                if (signatureText === 'Add Signature') {\n                    viewer.annotation.setAnnotationMode('HandWrittenSignature');\n                }\n                else if (signatureText === 'Add Initial') {\n                    viewer.annotation.setAnnotationMode('Initial');\n                }\n            }\n            var formFieldToolbar = document.getElementById('formFieldToolbar');\n            if (formFieldToolbar.style.display === 'block') {\n                if (signatureText === 'Add Signture') {\n                    viewer.formDesignerModule.setFormFieldMode('SignatureField');\n                }\n                else if (signatureText === 'Add Initial') {\n                    viewer.formDesignerModule.setFormFieldMode('InitialField');\n                }\n            }\n        };\n        return (React.createElement(ej2_react_navigations_1.MenuComponent, { items: signMenu, showItemOnClick: true, select: onsignatureCilck }));\n    };\n    CustomToolbar.prototype.formFieldSignTemplate = function () {\n        var signMenu = [{\n                iconCss: \"e-icons e-signature\",\n                items: [\n                    { text: \"Add Signature\" },\n                    { text: \"Add Initial\" },\n                ]\n            }];\n        var onsignatureCilck = function (event) {\n            var signatureText = event.element.innerText;\n            var editAnnotationToolbar = document.getElementById('editAnnotationToolbar');\n            if (editAnnotationToolbar.style.display === 'block') {\n                if (signatureText === 'Add Signature') {\n                    viewer.annotation.setAnnotationMode('HandWrittenSignature');\n                }\n                else if (signatureText === 'Add Initial') {\n                    viewer.annotation.setAnnotationMode('Initial');\n                }\n            }\n            var formFieldToolbar = document.getElementById('formFieldToolbar');\n            if (formFieldToolbar.style.display === 'block') {\n                if (signatureText === 'Add Signature') {\n                    viewer.formDesignerModule.setFormFieldMode('SignatureField');\n                }\n                else if (signatureText === 'Add Initial') {\n                    viewer.formDesignerModule.setFormFieldMode('InitialField');\n                }\n            }\n        };\n        return (React.createElement(ej2_react_navigations_1.MenuComponent, { items: signMenu, showItemOnClick: true, select: onsignatureCilck }));\n    };\n    CustomToolbar.prototype.rendereComplete = function () {\n        this.wireEvent();\n    };\n    CustomToolbar.prototype.render = function () {\n        var _this = this;\n        function template() {\n            return (React.createElement(\"div\", { style: { margin: '0px 6px' } },\n                React.createElement(\"span\", { className: 'e-pv-total-page-number', id: 'totalPage' }, \"of 0\")));\n        }\n        function inputTemplate() {\n            return (React.createElement(\"div\", null,\n                React.createElement(\"input\", { type: 'text', className: 'e-input-group e-pv-current-page-number', id: 'currentPage' })));\n        }\n        this.wireEvent = function () {\n            var inputElement = document.getElementById('currentPage');\n            inputElement.addEventListener('click', currentPageClicked.bind(this));\n            inputElement.addEventListener('keypress', onCurrentPageBoxKeypress.bind(this));\n            inputElement.value = this.currentPageNumber;\n        };\n        var disableInkAnnotation = function (args) {\n            if (this.isInkEnabled) {\n                viewer.annotation.setAnnotationMode(\"None\");\n                this.isInkEnabled = false;\n            }\n        };\n        var clickHandler = function (args) {\n            switch (args.item.id) {\n                case 'file_Open':\n                    {\n                        disableInkAnnotation.bind(this);\n                        var fileUpload = document.getElementById('fileUpload');\n                        fileUpload.click();\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display === 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_1 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_1.style.display === 'block')\n                            textSearchToolbarElement_1.style.display = 'none';\n                        var formFieldToolbarElement_1 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_1.style.display === 'block') {\n                            formFieldToolbarElement_1.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'save':\n                    {\n                        disableInkAnnotation.bind(this);\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display == 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_2 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_2.style.display == 'block')\n                            textSearchToolbarElement_2.style.display = 'none';\n                        var formFieldToolbarElement_2 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_2.style.display == 'block') {\n                            formFieldToolbarElement_2.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                        viewer.download();\n                    }\n                    break;\n                case 'previous_page':\n                    disableInkAnnotation.bind(this);\n                    viewer.navigation.goToPreviousPage();\n                    break;\n                case 'next_page':\n                    disableInkAnnotation.bind(this);\n                    viewer.navigation.goToNextPage();\n                    break;\n                case 'fit_to_page':\n                    viewer.magnification.fitToPage();\n                    break;\n                case 'zoom_in':\n                    {\n                        viewer.magnification.zoomIn();\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display === 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_3 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_3.style.display === 'block')\n                            textSearchToolbarElement_3.style.display = 'none';\n                        var formFieldToolbarElement_3 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_3.style.display === 'block') {\n                            formFieldToolbarElement_3.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'zoom_out':\n                    {\n                        viewer.magnification.zoomOut();\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display === 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_4 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_4.style.display === 'block')\n                            textSearchToolbarElement_4.style.display = 'none';\n                        var formFieldToolbarElement_4 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_4.style.display === 'block') {\n                            formFieldToolbarElement_4.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'text_selection_tool':\n                    {\n                        disableInkAnnotation.bind(this);\n                        viewer.interactionMode = 'TextSelection';\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display === 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_5 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_5.style.display === 'block')\n                            textSearchToolbarElement_5.style.display = 'none';\n                        var formFieldToolbarElement_5 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_5.style.display === 'block') {\n                            formFieldToolbarElement_5.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'pan_tool':\n                    {\n                        disableInkAnnotation.bind(this);\n                        viewer.interactionMode = 'Pan';\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display === 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_6 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_6.style.display === 'block')\n                            textSearchToolbarElement_6.style.display = 'none';\n                        var formFieldToolbarElement_6 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_6.style.display === 'block') {\n                            formFieldToolbarElement_6.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'find_text': {\n                    disableInkAnnotation.bind(this);\n                    var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                    if (editAnnotationToolbarElement.style.display === 'block')\n                        editAnnotationToolbarElement.style.display = 'none';\n                    var textSearchToolbarElement_7 = document.getElementById('textSearchToolbar');\n                    if (textSearchToolbarElement_7.style.display === 'block')\n                        textSearchToolbarElement_7.style.display = 'none';\n                    else\n                        textSearchToolbarElement_7.style.display = 'block';\n                    var formFieldToolbarElement_7 = document.getElementById('formFieldToolbar');\n                    if (formFieldToolbarElement_7.style.display === 'block') {\n                        formFieldToolbarElement_7.style.display = 'none';\n                        viewer.designerMode = false;\n                    }\n                    break;\n                }\n                case 'print':\n                    {\n                        disableInkAnnotation.bind(this);\n                        viewer.print.print();\n                        var editAnnotationToolbarElement = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbarElement.style.display == 'block')\n                            editAnnotationToolbarElement.style.display = 'none';\n                        var textSearchToolbarElement_8 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_8.style.display == 'block')\n                            textSearchToolbarElement_8.style.display = 'none';\n                        var formFieldToolbarElement_8 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_8.style.display == 'block') {\n                            formFieldToolbarElement_8.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                    }\n                    break;\n                case 'highlights':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Highlight');\n                    break;\n                case 'underline':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Underline');\n                    break;\n                case 'strikethrough':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Strikethrough');\n                    break;\n                case 'edit_annotation':\n                    disableInkAnnotation.bind(this);\n                    var formFieldToolbarElement = document.getElementById('formFieldToolbar');\n                    if (formFieldToolbarElement.style.display === 'block') {\n                        formFieldToolbarElement.style.display = 'none';\n                        viewer.designerMode = false;\n                    }\n                    var textSearchToolbarElement = document.getElementById('textSearchToolbar');\n                    if (textSearchToolbarElement.style.display === 'block')\n                        textSearchToolbarElement.style.display = 'none';\n                    var editAnnotationToolbar = document.getElementById('editAnnotationToolbar');\n                    if (editAnnotationToolbar !== null) {\n                        if (editAnnotationToolbar.style.display === 'block') {\n                            editAnnotationToolbar.style.display = 'none';\n                        }\n                        else {\n                            editAnnotationToolbar.style.display = 'block';\n                        }\n                    }\n                    break;\n                case 'line':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Line');\n                    break;\n                case 'arrow':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Arrow');\n                    break;\n                case 'rectangle':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Rectangle');\n                    break;\n                case 'circle':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Circle');\n                    break;\n                case 'polygon':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Polygon');\n                    break;\n                case 'calibrate_distance':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('Distance');\n                    break;\n                case 'calibrate_perimeter':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotation.setAnnotationMode('Perimeter');\n                    break;\n                case 'calibrate_area':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotation.setAnnotationMode('Area');\n                    break;\n                case 'calibrate_radius':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotation.setAnnotationMode('Radius');\n                    break;\n                case 'calibrate_volume':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotation.setAnnotationMode('Volume');\n                    break;\n                case 'freeText':\n                    disableInkAnnotation.bind(this);\n                    viewer.annotationModule.setAnnotationMode('FreeText');\n                    break;\n                case 'signature':\n                case 'formField_signature':\n                    {\n                        var textSearchToolbarElement_9 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_9.style.display === 'block') {\n                            textSearchToolbarElement_9.style.display = 'none';\n                        }\n                    }\n                    break;\n                case 'ink':\n                    if (!this.isInkEnabled) {\n                        viewer.annotation.setAnnotationMode(\"Ink\");\n                        this.isInkEnabled = true;\n                    }\n                    else {\n                        viewer.annotation.setAnnotationMode(\"None\");\n                        this.isInkEnabled = false;\n                    }\n                    viewer.annotationModule.setAnnotationMode('Ink');\n                    break;\n                case 'textbox':\n                    viewer.formDesignerModule.setFormFieldMode('Textbox');\n                    break;\n                case 'password':\n                    viewer.formDesignerModule.setFormFieldMode('Password');\n                    break;\n                case 'checkbok':\n                    viewer.formDesignerModule.setFormFieldMode('CheckBox');\n                    break;\n                case 'radio_button':\n                    viewer.formDesignerModule.setFormFieldMode('RadioButton');\n                    break;\n                case 'drop_down':\n                    viewer.formDesignerModule.setFormFieldMode('DropDown');\n                    break;\n                case 'list_box':\n                    viewer.formDesignerModule.setFormFieldMode('ListBox');\n                    break;\n                case 'add_form_field':\n                    {\n                        var editAnnotationToolbar_1 = document.getElementById('editAnnotationToolbar');\n                        if (editAnnotationToolbar_1.style.display === 'block') {\n                            editAnnotationToolbar_1.style.display = 'none';\n                        }\n                        var textSearchToolbarElement_10 = document.getElementById('textSearchToolbar');\n                        if (textSearchToolbarElement_10.style.display === 'block') {\n                            textSearchToolbarElement_10.style.display = 'none';\n                        }\n                        var formFieldToolbarElement_9 = document.getElementById('formFieldToolbar');\n                        if (formFieldToolbarElement_9.style.display === 'block') {\n                            formFieldToolbarElement_9.style.display = 'none';\n                            viewer.designerMode = false;\n                        }\n                        else {\n                            formFieldToolbarElement_9.style.display = 'block';\n                            viewer.designerMode = true;\n                        }\n                    }\n                    break;\n            }\n        };\n        var updatePageNavigation = function () {\n            if (this.viewer.currentPageNumber === 1) {\n                this.toolbar.enableItems(document.getElementById('previous_page').parentElement, false);\n                this.toolbar.enableItems(document.getElementById('next_page').parentElement, true);\n            }\n            else if (viewer.currentPageNumber === viewer.pageCount) {\n                this.toolbar.enableItems(document.getElementById('previous_page').parentElement, true);\n                this.toolbar.enableItems(document.getElementById('next_page').parentElement, false);\n            }\n            else {\n                this.toolbar.enableItems(document.getElementById('previous_page').parentElement, true);\n                this.toolbar.enableItems(document.getElementById('next_page').parentElement, true);\n            }\n        };\n        var currentPageClicked = function (args) {\n            var currentPage = document.getElementById('currentPage');\n            currentPage.select();\n        };\n        var checkSearchActive = function (args) {\n            if (viewer && viewer.textSearchModule && !this.searchActive) {\n                viewer.textSearchModule.clearAllOccurrences();\n            }\n        };\n        var onPageChange = function (args) {\n            this.currentPageNumber = viewer.currentPageNumber.toString();\n            var inputElement = document.getElementById('currentPage');\n            inputElement.value = this.currentPageNumber;\n            updatePageNavigation.bind(this);\n        };\n        var onCurrentPageBoxKeypress = function (event) {\n            var currentPageBox = document.getElementById('currentPage');\n            if ((event.which < 48 || event.which > 57) && event.which !== 8 && event.which !== 13) {\n                event.preventDefault();\n                return false;\n            }\n            else {\n                var currentPageNumber = parseInt(currentPageBox.value);\n                if (event.which === 13) {\n                    if (currentPageNumber > 0 && currentPageNumber <= viewer.pageCount) {\n                        viewer.navigation.goToPage(currentPageNumber);\n                    }\n                    else {\n                        currentPageBox.value = viewer.currentPageNumber.toString();\n                    }\n                }\n                return true;\n            }\n        };\n        var documentLoaded = function (args) {\n            document.addEventListener('click', checkSearchActive.bind(this));\n            viewer = document.getElementById('container').ej2_instances[0];\n            var pageCount = document.getElementById('totalPage');\n            pageCount.textContent = 'of ' + viewer.pageCount;\n            updatePageNavigation.bind(this);\n            var inputElement = document.getElementById('currentPage');\n            inputElement.addEventListener('click', currentPageClicked.bind(this));\n            inputElement.addEventListener('keypress', onCurrentPageBoxKeypress.bind(this));\n            inputElement.value = this.currentPageNumber;\n        };\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: 'control-section' },\n                React.createElement(\"div\", { className: \"flex-container\" },\n                    React.createElement(\"label\", { htmlFor: \"checked\", className: \"switchLabel\" }, \" Standalone PDF Viewer \"),\n                    React.createElement(\"div\", { className: \"e-message render-mode-info\" },\n                        React.createElement(\"span\", { className: \"e-msg-icon render-mode-info-icon\", title: \"Turn OFF to render the PDF Viewer as server-backed\" })),\n                    React.createElement(ej2_react_buttons_1.SwitchComponent, { cssClass: \"buttonSwitch\", id: \"checked\", change: this.change, checked: true })),\n                React.createElement(\"div\", null,\n                    React.createElement(\"div\", { className: 'e-pdf-toolbar' },\n                        React.createElement(ej2_react_navigations_1.ToolbarComponent, { ref: function (scope) { _this.toolbar = scope; }, clicked: clickHandler.bind(this) },\n                            React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-folder', id: 'file_Open', tooltipText: 'Open' }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: 'e-icons e-save', tooltipText: \"Save\", id: 'save' }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-chevron-left\", id: 'previous_page', tooltipText: \"Previous Page\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-chevron-right\", id: 'next_page', tooltipText: \"Next Page\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { template: inputTemplate, tooltipText: \"Page Number\", type: \"Input\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { template: template, align: \"Center\", tooltipText: \"Page Number\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-mouse-pointer\", id: \"text_selection_tool\", align: \"Center\", tooltipText: \"Text Selection tool\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-pan\", id: \"pan_tool\", align: \"Center\", tooltipText: \"Pan Mode\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-annotation-edit\", tooltipText: \"Edit Annotation\", id: \"edit_annotation\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", align: \"Center\", tooltipText: \"separator\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-split-vertical\", tooltipText: \"Add and Edit Form Fields\", id: \"add_form_field\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-search\", tooltipText: \"Find Text\", id: \"find_text\", align: \"Right\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-print\", tooltipText: \"Print\", id: 'print', align: \"Right\" })))),\n                    React.createElement(\"div\", { id: \"editAnnotationToolbar\", style: { display: 'none' } },\n                        React.createElement(ej2_react_navigations_1.ToolbarComponent, { clicked: clickHandler },\n                            React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-highlight-color\", tooltipText: \"Highlight\", id: \"highlights\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-underline\", tooltipText: \"Underline\", id: \"underline\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-strikethrough\", tooltipText: \"Strikethrough\", id: \"strikethrough\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-line\", tooltipText: \"Add Line\", id: \"line\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-arrow-right-up\", tooltipText: \"Add Arrow\", id: \"arrow\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-rectangle\", tooltipText: \"Add Reactangle\", id: \"rectangle\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-circle\", tooltipText: \"Add Circle\", id: \"circle\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-pentagon\", tooltipText: \"Add Polygon\", id: \"polygon\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-length\", tooltipText: \"Calibrate Distance\", id: \"calibrate_distance\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-perimeter\", tooltipText: \"Calibrate Perimeter\", id: \"calibrate_perimeter\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-area\", tooltipText: \"Calibrate Area\", id: \"calibrate_area\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-radius\", tooltipText: \"Calibrate Radius\", id: \"calibrate_radius\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-volume\", tooltipText: \"Calibrate Volume\", id: \"calibrate_volume\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-text-annotation\", tooltipText: \"Free Text\", id: \"freeText\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { template: this.stampTemplate, tooltipText: \"Add Stamp\", id: \"stamp\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { template: this.signTemplate, tooltipText: \"Add Signature\", id: \"signature\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { type: \"Separator\", tooltipText: \"separator\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-style\", id: \"ink\", align: \"Center\" })))),\n                    React.createElement(\"div\", { id: \"formFieldToolbar\", style: { display: 'none' }, className: \"e-tbar-btn:hover e-tbar-btn:focus\" },\n                        React.createElement(ej2_react_navigations_1.ToolbarComponent, { clicked: clickHandler },\n                            React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-text-form\", tooltipText: \"Textbox\", id: \"textbox\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-password\", tooltipText: \"Password\", id: \"password\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-check-box\", tooltipText: \"Checkbok\", id: \"checkbok\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-radio-button\", tooltipText: \"Radio Button\", id: \"radio_button\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-drop-down\", tooltipText: \"Drop Down\", id: \"drop_down\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-list-unordered\", tooltipText: \"List Box\", id: \"list_box\", align: \"Center\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { template: this.formFieldSignTemplate, tooltipText: \"ADD SIGNATURE\", id: \"formField_signature\", align: \"Center\" })))),\n                    React.createElement(\"div\", { id: \"textSearchToolbar\", style: { display: 'none', marginLeft: '840px' } },\n                        React.createElement(\"div\", { className: \"e-pv-search-bar\", id: \"container_search_box\", style: { right: '0px' } },\n                            React.createElement(\"div\", { className: \"e-pv-search-bar-elements\", id: \"container_search_box_elements\" },\n                                React.createElement(\"div\", { className: \"e-input-group e-pv-search-input\", id: \"container_search_input_container\" },\n                                    React.createElement(\"input\", { className: \"e-input\", id: \"container_search_input\", type: \"text\", placeholder: \"Find in document\", onKeyPress: this.searchInputKeypressed, onChange: this.inputChange }),\n                                    React.createElement(\"span\", { className: \"e-input-group-icon e-input-search-group-icon e-icons e-search\", id: \"container_search_box-icon\", onClick: this.searchClickHandler })),\n                                React.createElement(\"button\", { className: \"e-btn e-icon-btn e-pv-search-btn e-icons e-chevron-left\", id: \"container_prev_occurrence\", type: \"button\", disabled: true, \"aria-label\": \"Previous Search text\" },\n                                    React.createElement(\"span\", { className: \"e-pv-icon-search e-pv-prev-search-icon\", id: \"container_prev_occurrenceIcon\", onClick: this.previousTextSearch })),\n                                React.createElement(\"button\", { className: \"e-btn e-icon-btn e-pv-search-btn e-icons e-chevron-right\", id: \"container_next_occurrence\", type: \"button\", disabled: true, \"aria-label\": \"Next Search text\" },\n                                    React.createElement(\"span\", { className: \"e-pv-icon-search e-pv-next-search-icon\", id: \"container_next_occurrenceIcon\", onClick: this.nextTextSearch }))),\n                            React.createElement(\"div\", { className: \"e-pv-match-case-container\", id: \"container_match_case_container\" },\n                                React.createElement(\"div\", { className: \"e-checkbox-wrapper e-wrapper e-pv-match-case\" },\n                                    React.createElement(\"label\", { htmlFor: \"container_match_case\" },\n                                        React.createElement(\"input\", { id: \"container_match_case\", type: \"checkbox\", className: \"e-control e-checkbox e-lib\", onClick: this.checkBoxChanged }),\n                                        React.createElement(\"span\", { className: \"e-ripple-container\", \"data-ripple\": \"true\" }),\n                                        React.createElement(\"span\", { id: \"checkboxSpan\", className: \"e-icons e-frame\" }),\n                                        React.createElement(\"span\", { className: \"e-label\" }, \"Match case\")))))),\n                    React.createElement(ej2_react_pdfviewer_1.PdfViewerComponent, { id: \"container\", ref: function (scope) { viewer = scope; }, enableToolbar: false, enableNavigationToolbar: false, enableAnnotationToolbar: false, enableCommentPanel: false, documentLoad: documentLoaded, pageChange: onPageChange, resourceUrl: \"https://cdn.syncfusion.com/ej2/23.1.43/dist/ej2-pdfviewer-lib\", documentPath: \"https://cdn.syncfusion.com/content/pdf/hive-succinctly.pdf\", style: { 'display': 'block', 'height': '640px' } },\n                        React.createElement(ej2_react_pdfviewer_1.Inject, { services: [ej2_react_pdfviewer_1.Magnification, ej2_react_pdfviewer_1.Navigation, ej2_react_pdfviewer_1.LinkAnnotation, ej2_react_pdfviewer_1.BookmarkView, ej2_react_pdfviewer_1.FormFields, ej2_react_pdfviewer_1.FormDesigner, ej2_react_pdfviewer_1.PageOrganizer,\n                                ej2_react_pdfviewer_1.ThumbnailView, ej2_react_pdfviewer_1.Print, ej2_react_pdfviewer_1.TextSelection, ej2_react_pdfviewer_1.TextSearch, ej2_react_pdfviewer_1.Annotation] })),\n                    React.createElement(\"input\", { type: \"file\", id: \"fileUpload\", accept: \".pdf\", onChange: this.readFile.bind(this), style: { 'display': 'block', 'visibility': 'hidden', 'width': '0', 'height': '0' } }),\n                    React.createElement(\"div\", { className: 'e-pdf-toolbar', id: \"magnificationToolbarItems\" },\n                        React.createElement(ej2_react_navigations_1.ToolbarComponent, { id: \"magnificationToolbar\", clicked: clickHandler.bind(this) },\n                            React.createElement(ej2_react_navigations_1.ItemsDirective, null,\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-pv-fit-page\", id: 'fit_to_page', tooltipText: \"Fit to page\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-circle-add\", id: 'zoom_in', tooltipText: \"Zoom in\" }),\n                                React.createElement(ej2_react_navigations_1.ItemDirective, { prefixIcon: \"e-icons e-circle-remove\", id: 'zoom_out', tooltipText: \"Zoom out\" }))))))));\n    };\n    CustomToolbar.prototype.readFile = function (evt) {\n        var uploadedFiles = evt.target.files;\n        var uploadedFile = uploadedFiles[0];\n        this.fileName = uploadedFile.name;\n        var reader = new FileReader();\n        reader.readAsDataURL(uploadedFile);\n        var uploadedFileName = this.fileName;\n        reader.onload = function (e) {\n            var uploadedFileUrl = e.currentTarget.result;\n            viewer.documentPath = uploadedFileUrl;\n            viewer.downloadFileName = viewer.fileName = uploadedFileName;\n            var pageCount = document.getElementById('totalPage');\n            pageCount.textContent = 'of ' + viewer.pageCount;\n        };\n    };\n    CustomToolbar.prototype.change = function (args) {\n        if (args.checked) {\n            viewer.serviceUrl = '';\n        }\n        else {\n            viewer.serviceUrl = 'https://ej2services.syncfusion.com/production/web-services/api/pdfviewer';\n        }\n        viewer.dataBind();\n        viewer.load(viewer.documentPath, null);\n    };\n    CustomToolbar.prototype.searchInputKeypressed = function (event) {\n        if (event.key === 'Enter') {\n            this.initiateTextSearch();\n        }\n    };\n    CustomToolbar.prototype.initiateTextSearch = function () {\n        var textsearchPrevElement = document.getElementById('container_prev_occurrence');\n        var textsearchNextElement = document.getElementById('container_next_occurrence');\n        var textsearchElement = document.getElementById('container_search_box-icon');\n        if (textsearchPrevElement && textsearchNextElement && textsearchElement) {\n            textsearchPrevElement.disabled = false;\n            textsearchNextElement.disabled = false;\n            textsearchElement.classList.add('e-close');\n            textsearchElement.classList.remove('e-search');\n            textsearchPrevElement.addEventListener(\"click\", this.previousTextSearch);\n            textsearchNextElement.addEventListener(\"click\", this.nextTextSearch);\n            if (this.searchText !== document.getElementById('container_search_input').value || this.prevMatchCase !== this.matchCase) {\n                viewer.textSearch.cancelTextSearch();\n                this.searchText = document.getElementById('container_search_input').value;\n                this.searchActive = true;\n                viewer.textSearch.searchText(this.searchText, this.matchCase);\n                this.prevMatchCase = this.matchCase;\n            }\n            else {\n                this.nextTextSearch();\n            }\n        }\n    };\n    CustomToolbar.prototype.inputChange = function () {\n        viewer.textSearchModule.clearAllOccurrences();\n        this.searchActive = false;\n        if (document.getElementById('container_search_input').value == '') {\n            this.updateSearchInputIcon(true);\n            viewer.textSearch.cancelTextSearch();\n            this.searchText = '';\n        }\n    };\n    CustomToolbar.prototype.searchClickHandler = function () {\n        var searchBtn = document.getElementById('container_search_box-icon');\n        if (searchBtn.classList.contains('e-search')) {\n            viewer.textSearch.cancelTextSearch();\n            this.initiateTextSearch();\n            this.updateSearchInputIcon(false);\n            this.searchText = '';\n        }\n        else if (searchBtn.classList.contains('e-close')) {\n            var searchInput = document.getElementById('container_search_input');\n            this.updateSearchInputIcon(true);\n            searchInput.value = '';\n            searchInput.focus();\n            viewer.textSearch.cancelTextSearch();\n            this.searchText = '';\n        }\n    };\n    CustomToolbar.prototype.updateSearchInputIcon = function (isEnable) {\n        var searchBtn = document.getElementById('container_search_box-icon');\n        if (isEnable) {\n            searchBtn.classList.add('e-search');\n            searchBtn.classList.remove('e-close');\n        }\n        else {\n            searchBtn.classList.add('e-close');\n            searchBtn.classList.remove('e-search');\n        }\n    };\n    CustomToolbar.prototype.nextTextSearch = function () {\n        viewer.textSearchModule.searchNext();\n        this.searchActive = true;\n    };\n    CustomToolbar.prototype.previousTextSearch = function () {\n        viewer.textSearchModule.searchPrevious();\n        this.searchActive = true;\n    };\n    CustomToolbar.prototype.checkBoxChanged = function (event) {\n        var target = event.target;\n        if (target.checked) {\n            var matchcaseElement = document.getElementById('container_match_case');\n            if (matchcaseElement) {\n                matchcaseElement.checked = true;\n            }\n            this.matchCase = true;\n            var checkboxSpanElement = document.getElementById('checkboxSpan');\n            if (checkboxSpanElement) {\n                checkboxSpanElement.classList.add('e-check');\n            }\n        }\n        else {\n            this.matchCase = false;\n            var checkboxSpanElement = document.getElementById('checkboxSpan');\n            if (checkboxSpanElement) {\n                checkboxSpanElement.classList.remove('e-check');\n            }\n        }\n    };\n    CustomToolbar.prototype.onPageChanged = function () {\n        var currentPageNumber = viewer.currentPageNumber;\n        var inputElement = document.getElementById('currentPage');\n        inputElement.value = currentPageNumber.toString();\n    };\n    return CustomToolbar;\n}(sample_base_1.SampleBase));\nexports.CustomToolbar = CustomToolbar;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(CustomToolbar, null));\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/custom-toolbar/app/index.tsx?");

/***/ }),

/***/ "./samples/pdfviewer/custom-toolbar/app/sample-base.tsx":
/*!**************************************************************!*\
  !*** ./samples/pdfviewer/custom-toolbar/app/sample-base.tsx ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/pdfviewer/custom-toolbar/app/sample-base.tsx?");

/***/ })

/******/ });