/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/circular-gauge/data-sample/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/circular-gauge/data-sample/app/index.tsx","circulargauge.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/circular-gauge/data-sample/app/index.tsx":
/*!**********************************************************!*\
  !*** ./samples/circular-gauge/data-sample/app/index.tsx ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SampleData = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_circulargauge_1 = __webpack_require__(/*! @syncfusion/ej2-react-circulargauge */ \"./node_modules/@syncfusion/ej2-react-circulargauge/index.js\");\nvar ej2_react_grids_1 = __webpack_require__(/*! @syncfusion/ej2-react-grids */ \"./node_modules/@syncfusion/ej2-react-grids/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/circular-gauge/data-sample/app/sample-base.tsx\");\nvar SAMPLE_CSS = \"\\n    .imageStyle {\\n        width: 16px;\\n        height: 16px;\\n        margin-top: 4px;\\n    }\\n        \\n    .fontDes {\\n        float: right;\\n        padding-left: 5px;\\n        font-size:20px;\\n        font-family:inherit\\\";\\n    }\\n    .fontDes1 {\\n        color:#9E9E9E;\\n        font-size:16px;\\n        font-family: inherit\\\";\\n    }\\n    \";\nvar SampleData = /** @class */ (function (_super) {\n    __extends(SampleData, _super);\n    function SampleData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.orderData = [\n            {\n                'Country': 'Germany',\n                'Sales': 500,\n                'Target': 400,\n                'vsTarget': 300\n            }, {\n                'Country': 'USA',\n                'Sales': 1000,\n                'Target': 600,\n                'vsTarget': 360\n            }, {\n                'Country': 'UK',\n                'Sales': 600,\n                'Target': 700,\n                'vsTarget': -100\n            }\n        ];\n        return _this;\n    }\n    SampleData.prototype.load = function (args) {\n        // custom code start\n        var selectedTheme = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = ((selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5'));\n        // custom code end\n    };\n    SampleData.prototype.onChartLoad = function (args) {\n        var _this = this;\n        this.dataIntervalOne = setInterval(function () {\n            var randomValue = Math.random();\n            var value1 = Math.round((randomValue * 35) + 55);\n            var value2 = Math.round((randomValue * 15) + 60);\n            var value3 = Math.round((randomValue * 30) + 10);\n            var gridData1 = 4 * value1;\n            var gridData2 = 6 * value2;\n            var gridData3 = -7 * value3;\n            var newVal = Math.random() * (90 - 20) + 20;\n            if (document.getElementById('sample1-container')) {\n                _this.sampleGaugeOne.axes[0].pointers[0].animation.enable = true;\n                _this.sampleGaugeTwo.axes[0].pointers[0].animation.enable = true;\n                _this.sampleGaugeThree.axes[0].pointers[0].animation.enable = true;\n                _this.sampleGaugeOne.setPointerValue(0, 0, value1);\n                _this.sampleGaugeTwo.setPointerValue(0, 0, value2);\n                _this.sampleGaugeThree.setPointerValue(0, 0, -value3);\n                _this.sampleGaugeOne.setAnnotationValue(0, 0, _this.sampleGaugeOne.axes[0].annotations[0].content);\n                _this.sampleGaugeTwo.setAnnotationValue(0, 0, _this.sampleGaugeTwo.axes[0].annotations[0].content);\n                _this.sampleGaugeThree.setAnnotationValue(0, 0, _this.sampleGaugeThree.axes[0].annotations[0].content);\n                _this.orderData = [\n                    {\n                        'Country': 'Germany',\n                        'Sales': 500,\n                        'Target': 400,\n                        'vsTarget': gridData1\n                    }, {\n                        'Country': 'USA',\n                        'Sales': 1000,\n                        'Target': 600,\n                        'vsTarget': gridData2\n                    }, {\n                        'Country': 'UK',\n                        'Sales': 600,\n                        'Target': 700,\n                        'vsTarget': gridData3\n                    }\n                ];\n            }\n            else {\n                clearInterval(+_this.dataIntervalOne);\n            }\n        }, 2000);\n    };\n    ;\n    SampleData.prototype.onGridLoad = function (args) {\n        var _this = this;\n        this.dataIntervalTwo = setInterval(function () {\n            if (document.getElementById('sample1-container')) {\n                _this.dataGrid.dataSource = _this.orderData;\n                _this.dataGrid.refresh();\n            }\n            else {\n                clearInterval(+_this.dataIntervalTwo);\n            }\n        }, 2000);\n    };\n    SampleData.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"main\", null,\n            React.createElement(\"div\", { className: 'control-pane' },\n                React.createElement(\"style\", null, SAMPLE_CSS),\n                React.createElement(\"div\", { className: 'control-section' },\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-12\" },\n                            React.createElement(\"div\", { className: \"row\" },\n                                React.createElement(\"div\", { className: \"col-sm-4\" },\n                                    React.createElement(ej2_react_circulargauge_1.CircularGaugeComponent, { load: this.load.bind(this), style: { height: \"250px\" }, background: 'transparent', ref: function (gauge) { return _this.sampleGaugeOne = gauge; }, id: 'sample1-container' },\n                                        React.createElement(ej2_react_circulargauge_1.Inject, { services: [ej2_react_circulargauge_1.Annotations] }),\n                                        React.createElement(ej2_react_circulargauge_1.AxesDirective, null,\n                                            React.createElement(ej2_react_circulargauge_1.AxisDirective, { startAngle: 230, endAngle: 130, minimum: -100, maximum: 100, lineStyle: {\n                                                    width: 0,\n                                                    color: 'transparent'\n                                                }, majorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, minorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, labelStyle: {\n                                                    format: 'positive {value}',\n                                                    position: 'Outside',\n                                                    font: { size: '0', color: 'transparent' }\n                                                } },\n                                                React.createElement(ej2_react_circulargauge_1.AnnotationsDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: 'Positive arrow', content: '<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"https://ej2.syncfusion.com/react/demos/src/circular-gauge/images/positive.png\" alt=\"Positive value for Germany\"/><div class=\"fontDes\">${pointers[0].value}%</div></div></div>', angle: 180, zIndex: '1', radius: '30%' }),\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: 'Germany', content: '<div class=\"fontDes1\">Germany</div>', angle: 180, zIndex: '1', radius: '65%' })),\n                                                React.createElement(ej2_react_circulargauge_1.RangesDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: -100, end: 0, startWidth: 15, endWidth: 15, color: '#EC121C' }),\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: 0, end: 100, startWidth: 15, endWidth: 15, color: '#45EA0C' })),\n                                                React.createElement(ej2_react_circulargauge_1.PointersDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.PointerDirective, { value: 75, radius: '60%', color: '#777777', animation: { enable: false, duration: 900 }, pointerWidth: 5, cap: {\n                                                            radius: 6, color: '#777777',\n                                                            border: { width: 0 }\n                                                        }, needleTail: {\n                                                            length: '25%', color: '#777777'\n                                                        } })))))),\n                                React.createElement(\"div\", { className: \"col-sm-4\" },\n                                    React.createElement(ej2_react_circulargauge_1.CircularGaugeComponent, { load: this.load.bind(this), style: { height: \"250px\" }, background: 'transparent', ref: function (gauge) { return _this.sampleGaugeTwo = gauge; }, id: 'sample2-container' },\n                                        React.createElement(ej2_react_circulargauge_1.Inject, { services: [ej2_react_circulargauge_1.Annotations] }),\n                                        React.createElement(ej2_react_circulargauge_1.AxesDirective, null,\n                                            React.createElement(ej2_react_circulargauge_1.AxisDirective, { startAngle: 230, endAngle: 130, minimum: -100, maximum: 100, lineStyle: {\n                                                    width: 0,\n                                                    color: 'transparent'\n                                                }, majorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, minorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, labelStyle: {\n                                                    format: 'positive {value} ',\n                                                    position: 'Outside',\n                                                    font: { size: '0', color: 'transprent' }\n                                                } },\n                                                React.createElement(ej2_react_circulargauge_1.AnnotationsDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: ' Positive arrow ', content: '<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"https://ej2.syncfusion.com/react/demos/src/circular-gauge/images/positive.png\" alt=\"Positive value for USA\" /><div class=\"fontDes\">${pointers[0].value}%</div></div></div>', angle: 180, zIndex: '1', radius: '30%' }),\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: 'USA', content: '<div class=\"fontDes1\">USA</div>', angle: 180, zIndex: '1', radius: '65%' })),\n                                                React.createElement(ej2_react_circulargauge_1.RangesDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: -100, end: 0, startWidth: 15, endWidth: 15, color: '#EC121C' }),\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: 0, end: 100, startWidth: 15, endWidth: 15, color: '#45EA0C' })),\n                                                React.createElement(ej2_react_circulargauge_1.PointersDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.PointerDirective, { value: 60, radius: '60%', color: '#777777', animation: { enable: false, duration: 900 }, pointerWidth: 5, cap: {\n                                                            radius: 6, color: '#777777',\n                                                            border: { width: 0 }\n                                                        }, needleTail: {\n                                                            length: '25%', color: '#777777'\n                                                        } })))))),\n                                React.createElement(\"div\", { className: \"col-sm-4\" },\n                                    React.createElement(ej2_react_circulargauge_1.CircularGaugeComponent, { load: this.load.bind(this), style: { height: \"250px\" }, background: 'transparent', ref: function (gauge) { return _this.sampleGaugeThree = gauge; }, loaded: this.onChartLoad.bind(this), id: 'sample3-container' },\n                                        React.createElement(ej2_react_circulargauge_1.Inject, { services: [ej2_react_circulargauge_1.Annotations] }),\n                                        React.createElement(ej2_react_circulargauge_1.AxesDirective, null,\n                                            React.createElement(ej2_react_circulargauge_1.AxisDirective, { startAngle: 230, endAngle: 130, minimum: -100, maximum: 100, lineStyle: {\n                                                    width: 0,\n                                                    color: 'transparent'\n                                                }, majorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, minorTicks: {\n                                                    width: 0,\n                                                    height: 0\n                                                }, labelStyle: {\n                                                    format: 'negative {value}',\n                                                    position: 'Outside',\n                                                    font: { size: '0', color: 'transparent' }\n                                                } },\n                                                React.createElement(ej2_react_circulargauge_1.AnnotationsDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: 'Negative arrow', content: '<div id=\"templateWrap\"><img class=\"imageStyle\" src=\"https://ej2.syncfusion.com/react/demos/src/circular-gauge/images/negative.png\" alt=\"Negative value for UK\" /><div class=\"fontDes\">${pointers[0].value}%</div></div></div>', angle: 180, zIndex: '1', radius: '30%' }),\n                                                    React.createElement(ej2_react_circulargauge_1.AnnotationDirective, { description: 'UK', content: '<div class=\"fontDes1\">UK</div>', angle: 180, zIndex: '1', radius: '65%' })),\n                                                React.createElement(ej2_react_circulargauge_1.RangesDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: -100, end: 0, startWidth: 15, endWidth: 15, color: '#EC121C' }),\n                                                    React.createElement(ej2_react_circulargauge_1.RangeDirective, { start: 0, end: 100, startWidth: 15, endWidth: 15, color: '#45EA0C' })),\n                                                React.createElement(ej2_react_circulargauge_1.PointersDirective, null,\n                                                    React.createElement(ej2_react_circulargauge_1.PointerDirective, { value: 25, radius: '60%', color: '#777777', animation: { enable: false, duration: 900 }, pointerWidth: 5, cap: {\n                                                            radius: 6, color: '#777777',\n                                                            border: { width: 0 }\n                                                        }, needleTail: {\n                                                            length: '25%', color: '#777777'\n                                                        } }))))))))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-12\" },\n                            React.createElement(\"div\", { className: \"row\" },\n                                React.createElement(ej2_react_grids_1.GridComponent, { dataBound: this.onGridLoad.bind(this), ref: function (grid) { return _this.dataGrid = grid; }, dataSource: this.orderData.slice(0, 30) },\n                                    React.createElement(ej2_react_grids_1.ColumnsDirective, null,\n                                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'Country', headerText: 'Country', width: '80' }),\n                                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'Sales', headerText: 'Sales $', width: '80' }),\n                                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'Target', headerText: 'Target $', width: '80' }),\n                                        React.createElement(ej2_react_grids_1.ColumnDirective, { field: 'vsTarget', headerText: 'vs Target', width: '80' })))))))),\n            React.createElement(\"section\", { id: \"action-description\", \"aria-label\": \"Description of Circular Gauge sample\" },\n                React.createElement(\"p\", null, \"This sample shows live stock price data displayed in multiple circular gauges.\")),\n            React.createElement(\"section\", { id: \"description\", \"aria-label\": \"Description of the Circular Gauge features demonstrated in this sample\" },\n                React.createElement(\"p\", null,\n                    \"The pointer value in the circular gauge can be dynamically updated using the \",\n                    React.createElement(\"a\", { target: \"_blank\", href: \"https://ej2.syncfusion.com/react/documentation/api/circular-gauge/#setpointervalue\" }, \"setPointerValue\"),\n                    \" method. In this example, the stock price changes across countries are displayed in multiple circular gauges.\"),\n                React.createElement(\"p\", null,\n                    \"More information on the circular gauge can be found in this \",\n                    React.createElement(\"a\", { target: \"_blank\", href: \"https://ej2.syncfusion.com/react/documentation/circular-gauge/getting-started/\" }, \"documentation section\"),\n                    \".\"))));\n    };\n    return SampleData;\n}(sample_base_1.SampleBase));\nexports.SampleData = SampleData;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(SampleData, null));\n\n\n//# sourceURL=webpack:///./samples/circular-gauge/data-sample/app/index.tsx?");

/***/ }),

/***/ "./samples/circular-gauge/data-sample/app/sample-base.tsx":
/*!****************************************************************!*\
  !*** ./samples/circular-gauge/data-sample/app/sample-base.tsx ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/circular-gauge/data-sample/app/sample-base.tsx?");

/***/ })

/******/ });