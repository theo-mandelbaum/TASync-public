/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/flow-execution-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/flow-execution-functional/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/flow-execution-functional/app/index.tsx":
/*!*****************************************************************!*\
  !*** ./samples/diagram/flow-execution-functional/app/index.tsx ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/flow-execution-functional/app/sample-base.tsx\");\nvar ej2_react_buttons_1 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar port1 = { id: 'port1', offset: { x: 0.5, y: 1 } };\nvar port = { id: 'port', offset: { x: 1, y: 0.5 } };\n// Initialize Diagram Nodes\nvar nodes = [];\nnodes.push(createNodes('node1', 100, 125, 'Terminator', 'Begin'));\nnodes.push(createNodes('node2', 300, 125, 'Process', 'Specify collection', [port]));\nnodes.push(createNodes('node3', 500, 125, 'Decision', 'Particulars \\n required?', [port1]));\nnodes.push(createNodes('node4', 730, 125, 'Process', 'Specify particulars'));\nnodes.push(createNodes('node5', 500, 225, 'Process', 'Design collection', [port]));\nnodes.push(createNodes('node6', 500, 320, 'Process', 'Cluster of events'));\nnodes.push(createNodes('node7', 500, 420, 'Process', 'Start the process'));\nnodes.push(createNodes('node8', 730, 320, 'Process', 'Record and analyze \\n results', [port]));\nnodes.push(createNodes('node9', 730, 420, 'Terminator', 'End '));\n// Initialize diagram connectors\nvar connectors = [];\nconnectors.push(createConnector('connector1', 'node1', 'node2', ''));\nconnectors.push(createConnector('connector2', 'node2', 'node3', ''));\nconnectors.push(createConnector('connector3', 'node3', 'node4', 'Yes'));\nconnectors.push(createConnector('connector4', 'node3', 'node5', 'No'));\nconnectors.push(createConnector('connector5', 'node5', 'node6', ''));\nconnectors.push(createConnector('connector6', 'node6', 'node7', ''));\nconnectors.push(createConnector('connector7', 'node8', 'node6', ''));\nconnectors.push(createConnector('connector8', 'node7', 'node9', ''));\nconnectors.push(createConnector('connector10', 'node4', 'node5', '', 'Orthogonal', 'Bottom', 'port', 220));\nvar SAMPLE_CSS = \"\\n#flowExecitionPropertySection .row {\\n            margin-left: 0px;\\n            margin-right: 0px;\\n        }\\n\\n        #flowExecitionPropertySection .col-xs-7 {\\n            width: 300px;\\n        }\\n\\n        #flowExecitionPropertySection .col-xs-7 {\\n            padding-left: 0px;\\n            padding-right: 0px;\\n        }\\n\\n        #flowExecitionControlSection.content-wrapper {\\n            border: 1px solid #D7D7D7;\\n        }\\n\";\nvar diagramInstance;\n// Initialize the connector object with basic properties.\nfunction createConnector(name, source, target, content, type, direction, targePort, length) {\n    var connector = {};\n    connector.id = name;\n    connector.sourceID = source;\n    connector.targetID = target;\n    if (targePort) {\n        connector.targetPortID = targePort;\n    }\n    connector.style = { strokeWidth: 2, strokeColor: '#8D8D8D' };\n    var annotation = { content: content, style: { fill: 'white' } };\n    connector.annotations = [annotation];\n    connector.targetDecorator = { style: { strokeColor: '#8D8D8D', fill: '#8D8D8D' } };\n    if (type) {\n        connector.type = type;\n        var segment = { type: type, direction: direction, length: length };\n        connector.segments = [segment];\n    }\n    return connector;\n}\n// Initialize the node object with basic properties.\nfunction createNodes(id, offsetX, offsetY, shapeType, content, ports) {\n    var node = {\n        id: id,\n        offsetX: offsetX,\n        offsetY: offsetY,\n        width: 150,\n        height: 50,\n        style: { fill: '#FBF6E1', strokeColor: '#E8DFB6', strokeWidth: 2 },\n        shape: { type: 'Flow', shape: shapeType }\n    };\n    var annotations = { content: content };\n    node.annotations = [annotations];\n    if (ports) {\n        node.ports = ports;\n    }\n    return node;\n}\nvar highlightedObjects = [];\nvar selectedButton = 'LinksConnected';\nfunction buttonChange(args) {\n    applyChanges(args.event.srcElement.id);\n    selectedButton = args.event.srcElement.id;\n}\n// Function To call respective methods based on user selection.\nfunction applyChanges(id) {\n    Unhighlight();\n    switch (id) {\n        case 'LinksInto':\n            highlightIncomingConnections();\n            break;\n        case 'LinksOutOf':\n            highlightOutgoingConnections();\n            break;\n        case 'LinksConnected':\n            highlightIncomingConnections();\n            highlightOutgoingConnections();\n            break;\n        case 'NodesInto':\n            highlightIncomingNodes();\n            break;\n        case 'NodesOutOf':\n            highlightOutgoingNodes();\n            break;\n        case 'NodesConnected':\n            highlightIncomingNodes();\n            highlightOutgoingNodes();\n            break;\n        case 'NodesReachable':\n            highlightReachableNodes();\n            break;\n    }\n}\n// Highlight connectors\nfunction highlightConnectors(edges) {\n    edges.forEach(function (edge) {\n        var index = diagramInstance.connectors.indexOf(diagramInstance.nameTable[edge]);\n        highlightedObjects.push(edge);\n        var connector = diagramInstance.connectors[index];\n        connector.style.strokeColor = '#1413F8';\n        connector.targetDecorator.style.strokeColor = '#1413F8';\n        connector.targetDecorator.style.fill = '#1413F8';\n        diagramInstance.dataBind();\n    });\n}\n;\n// Function to display the incoming connectors.\nfunction highlightIncomingConnections() {\n    if (diagramInstance.selectedItems.nodes.length) {\n        var edges = diagramInstance.selectedItems.nodes[0].inEdges;\n        highlightConnectors(edges);\n    }\n}\n// Function to display the outgoing connectors.\nfunction highlightOutgoingConnections() {\n    if (diagramInstance.selectedItems.nodes.length) {\n        var edges = diagramInstance.selectedItems.nodes[0].outEdges;\n        highlightConnectors(edges);\n    }\n}\n// Highlight Nodes\nfunction highlightNodes(edges, edgeType) {\n    edges.forEach(function (edge) {\n        var nodeId = diagramInstance.nameTable[edge][edgeType];\n        highlightedObjects.push(nodeId);\n        var index = diagramInstance.nodes.indexOf(diagramInstance.nameTable[nodeId]);\n        diagramInstance.nodes[index].style.strokeColor = '#1413F8';\n        diagramInstance.dataBind();\n    });\n}\n;\n// Function to display the incoming Nodes.\nfunction highlightIncomingNodes() {\n    if (diagramInstance.selectedItems.nodes.length) {\n        var edges = diagramInstance.selectedItems.nodes[0].inEdges;\n        highlightNodes(edges, 'sourceID');\n    }\n}\n// Function to display the outgoing Nodes.\nfunction highlightOutgoingNodes() {\n    if (diagramInstance.selectedItems.nodes.length) {\n        var edges = diagramInstance.selectedItems.nodes[0].outEdges;\n        highlightNodes(edges, 'targetID');\n    }\n}\n// Function to display the flow of execution.\nfunction highlightReachableNodes() {\n    if (diagramInstance.selectedItems.nodes.length) {\n        var connectors_1 = diagramInstance.selectedItems.nodes[0].outEdges;\n        var nodeList = findConnectedNodes(connectors_1, []);\n        highlightConnectors(nodeList);\n    }\n}\n// Function to find the connected nodes.\nfunction findConnectedNodes(edges, nodeList) {\n    for (var i = 0; i < edges.length; i++) {\n        var connector = diagramInstance.nameTable[edges[i]];\n        if (nodeList.indexOf(connector.id) > -1) {\n            break;\n        }\n        if (!connector.annotations[0] || connector.annotations[0].content !== 'No') {\n            nodeList.push(connector.id);\n        }\n        if (diagramInstance.nameTable[connector.targetID].outEdges.length) {\n            if (edges.indexOf(connector.targetID) === -1) {\n                findConnectedNodes(diagramInstance.nameTable[connector.targetID].outEdges, nodeList);\n            }\n        }\n    }\n    return nodeList;\n}\n// Function To unhighlight highlighted objects.\nfunction Unhighlight() {\n    for (var i = highlightedObjects.length - 1; i >= 0; i--) {\n        if (diagramInstance.nameTable[highlightedObjects[i]] instanceof ej2_react_diagrams_1.Node) {\n            var index = diagramInstance.nodes.indexOf(diagramInstance.nameTable[highlightedObjects[i]]);\n            diagramInstance.nodes[index].style.strokeColor = '#E8DFB6';\n            diagramInstance.dataBind();\n        }\n        else {\n            var index = diagramInstance.connectors.indexOf(diagramInstance.nameTable[highlightedObjects[i]]);\n            var connector = diagramInstance.connectors[index];\n            connector.style.strokeColor = '#8D8D8D';\n            connector.targetDecorator.style.strokeColor = '#8D8D8D';\n            connector.targetDecorator.style.fill = '#8D8D8D';\n            diagramInstance.dataBind();\n        }\n    }\n    highlightedObjects = [];\n}\nfunction FlowExecution() {\n    React.useEffect(function () {\n        (0, sample_base_1.updateSampleSection)();\n        renderComplete();\n    }, []);\n    function renderComplete() {\n        diagramInstance.select([diagramInstance.nodes[2]]);\n        diagramInstance.selectionChange = function (arg) {\n            applyChanges(selectedButton);\n        };\n    }\n    return (React.createElement(\"div\", { className: \"control-pane1\" },\n        React.createElement(\"div\", { className: \"col-lg-8 control-section\" },\n            React.createElement(\"style\", null, SAMPLE_CSS),\n            React.createElement(\"div\", { id: \"flowExecitionControlSection\", className: \"content-wrapper\", style: { width: \"100%\" } },\n                React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: \"600px\", nodes: nodes, snapSettings: { constraints: ej2_react_diagrams_1.SnapConstraints.None }, connectors: connectors, created: function (args) {\n                        diagramInstance.select([diagramInstance.nodes[2]]);\n                    }, selectionChange: function (args) {\n                        applyChanges(selectedButton);\n                    } },\n                    React.createElement(ej2_react_diagrams_1.Inject, { services: [ej2_react_diagrams_1.DataBinding] })))),\n        React.createElement(\"div\", { id: \"flowExecitionPropertySection\", className: \"col-lg-4 property-section\" },\n            React.createElement(\"div\", { className: \"property-panel-header\" }, \" Choose a flow\"),\n            React.createElement(\"div\", { className: \"row property-panel-content\", id: \"appearance\" },\n                React.createElement(\"div\", { className: \"row property-panel-content\", style: { overflow: \"hidden\" } }, [\n                    { id: \"UnhighlightAll\", label: \"None\" },\n                    { id: \"LinksInto\", label: \"Incoming connections\" },\n                    { id: \"LinksOutOf\", label: \"Outgoing connections\" },\n                    { id: \"LinksConnected\", label: \"Incoming and outgoing connections\", checked: true },\n                    { id: \"NodesInto\", label: \"Incoming nodes\" },\n                    { id: \"NodesOutOf\", label: \"Outgoing nodes\" },\n                    { id: \"NodesConnected\", label: \"Incoming and outgoing nodes\" },\n                    { id: \"NodesReachable\", label: \"Flow of Execution\" },\n                ].map(function (_a, index) {\n                    var id = _a.id, label = _a.label, checked = _a.checked;\n                    return (React.createElement(\"div\", { className: \"row\", style: { paddingTop: index === 0 ? \"0px\" : \"8px\" } },\n                        React.createElement(\"div\", { className: \"col-xs-7\" },\n                            React.createElement(ej2_react_buttons_1.RadioButtonComponent, { id: id, name: 'radio', value: id, label: label, checked: checked, change: function (args) {\n                                    buttonChange(args);\n                                } }))));\n                }))))));\n}\nexports.default = FlowExecution;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(FlowExecution, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/flow-execution-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/flow-execution-functional/app/sample-base.tsx":
/*!***********************************************************************!*\
  !*** ./samples/diagram/flow-execution-functional/app/sample-base.tsx ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/flow-execution-functional/app/sample-base.tsx?");

/***/ })

/******/ });