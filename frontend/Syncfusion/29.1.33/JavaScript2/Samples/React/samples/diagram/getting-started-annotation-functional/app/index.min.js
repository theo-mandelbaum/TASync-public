/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/getting-started-annotation-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/getting-started-annotation-functional/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/getting-started-annotation-functional/app/index.tsx":
/*!*****************************************************************************!*\
  !*** ./samples/diagram/getting-started-annotation-functional/app/index.tsx ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar ej2_react_dropdowns_1 = __webpack_require__(/*! @syncfusion/ej2-react-dropdowns */ \"./node_modules/@syncfusion/ej2-react-dropdowns/index.js\");\nvar ej2_react_buttons_1 = __webpack_require__(/*! @syncfusion/ej2-react-buttons */ \"./node_modules/@syncfusion/ej2-react-buttons/index.js\");\nvar ej2_react_inputs_1 = __webpack_require__(/*! @syncfusion/ej2-react-inputs */ \"./node_modules/@syncfusion/ej2-react-inputs/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/getting-started-annotation-functional/app/sample-base.tsx\");\n//Initializes the nodes for the diagram\nvar nodes = [\n    {\n        id: \"industry\",\n        offsetX: 280,\n        offsetY: 250,\n        annotations: [{ content: \"Industry Competitors\" }]\n    },\n    {\n        id: \"potential\",\n        offsetX: 280,\n        offsetY: 110,\n        annotations: [{ content: \"Potential Entrants\" }]\n    },\n    {\n        id: \"suplier\",\n        offsetX: 90,\n        offsetY: 250,\n        annotations: [{ content: \"Suppliers\" }]\n    },\n    {\n        id: \"substitutes\",\n        offsetX: 280,\n        offsetY: 390,\n        annotations: [{ content: \"Substitutes\" }]\n    },\n    {\n        id: \"buyers\",\n        offsetX: 470,\n        offsetY: 250,\n        annotations: [{ content: \"Buyers\" }]\n    }\n];\n//Initializes the connector for the diagram\nvar connectors = [\n    {\n        id: \"connector1\",\n        sourceID: \"potential\",\n        targetID: \"industry\"\n    },\n    {\n        id: \"connector2\",\n        sourceID: \"suplier\",\n        targetID: \"industry\"\n    },\n    {\n        id: \"connector3\",\n        sourceID: \"substitutes\",\n        targetID: \"industry\"\n    },\n    {\n        id: \"connector4\",\n        sourceID: \"buyers\",\n        targetID: \"industry\"\n    },\n    {\n        id: \"connector5\",\n        sourceID: \"potential\",\n        targetID: \"buyers\",\n        segments: [{ direction: \"Right\", type: 'Orthogonal', length: 60 }],\n        targetDecorator: { shape: \"None\" }\n    },\n    {\n        id: \"connector6\",\n        sourceID: \"buyers\",\n        targetID: \"substitutes\",\n        segments: [{ direction: \"Bottom\", type: 'Orthogonal', length: 120 }],\n        targetDecorator: { shape: \"None\" }\n    },\n    {\n        id: \"connector7\",\n        targetID: \"suplier\",\n        sourceID: \"substitutes\",\n        segments: [{ direction: \"Left\", type: 'Orthogonal', length: 60 }],\n        targetDecorator: { shape: \"None\" }\n    },\n    {\n        id: \"connector9\",\n        sourceID: \"suplier\",\n        targetID: \"potential\",\n        segments: [{ direction: \"Top\", type: 'Orthogonal', length: 120 }],\n        targetDecorator: { shape: \"None\" }\n    }\n];\n//Font dropdown options\nvar fontType = [\n    { type: \"Arial\", text: \"Arial\" },\n    { type: \"Aharoni\", text: \"Aharoni\" },\n    { type: \"Bell MT\", text: \"Bell MT\" },\n    { type: \"Fantasy\", text: \"Fantasy\" },\n    { type: \"Times New Roman\", text: \"Times New Roman\" },\n    { type: \"Segoe UI\", text: \"Segoe UI\" },\n    { type: \"Verdana\", text: \"Verdana\" }\n];\n//Teamplate dropdown options\nvar templateList = [\n    { value: \"none\", text: \"None\" },\n    { value: \"industry\", text: \"Industry Competitors\" },\n    { value: \"suppliers\", text: \"Suppliers\" },\n    { value: \"potential\", text: \"Potential Entrants\" },\n    { value: \"buyers\", text: \"Buyers\" },\n    { value: \"substitutes\", text: \"Substitutes\" }\n];\nvar diagramInstance;\nvar node;\nvar fontFamily;\nvar fontSize;\nvar fontColor;\nvar bold;\nvar italic;\nvar underLine;\nvar templateData;\nvar propertyPanelInstance;\nvar appearanceInstance;\nvar sample_css = \".diagram-property-tab .image-pattern-style {\\n  background-color: white;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n  height: 50px;\\n  width: calc((100% - 18px) / 3);\\n  cursor: pointer;\\n  border: 1px solid #D5D5D5;\\n  background-position: center;\\n  float: left;\\n}\\n\\n.diagram-property-tab .image-pattern-style:hover {\\n  border-color: gray;\\n  border-width: 2px;\\n}\\n\\n.e-remove-selection .property-section-content {\\n  pointer-events: none;\\n}\\n\\n.diagram-property-tab .column-style {\\n  display: table;\\n  height: 35px;\\n  padding-right: 4px;\\n  padding-left: 0px;\\n  width: calc((100% - 12px) / 3);\\n}\\n\\n.diagram-property-tab .row {\\n  margin-left: 0px;\\n  margin-right: 0px;\\n  cursor: pointer;\\n}\\n\\n.diagram-property-tab .row-header {\\n  font-size: 15px;\\n  font-weight: 500;\\n}\\n.property-section .e-remove-selection {\\n  cursor: not-allowed;\\n}\\n.diagram-property-tab .property-panel-header {\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n}\\n\\n.diagram-property-tab .e-checkbox-wrapper .e-label {\\n  font-size: 12px;\\n}\\n\\n.diagram-property-tab .e-selected-style {\\n  border-color: #006CE6;\\n  border-width: 2px;\\n}\\n\\n.diagram-control-pane .col-xs-6 {\\n  padding-left: 0px;\\n  padding-right: 0px;\\n  padding-top: 5px;\\n}\";\n//Apply the appearence of the Annotation\nfunction changed(value) {\n    for (var i = 0; i < diagramInstance.selectedItems.nodes.length; i++) {\n        var node = diagramInstance.selectedItems.nodes[i];\n        var annotationStyle = node.annotations[0].style;\n        if (value === \"fontsize\") {\n            annotationStyle.fontSize = fontSize.value;\n        }\n        else if (value === \"underline\") {\n            annotationStyle.textDecoration = annotationStyle.textDecoration === 'Underline' ? 'None' : 'Underline';\n        }\n        else if (value === \"fontfamily\") {\n            annotationStyle.fontFamily = fontFamily.value.toString();\n        }\n        else if (value === \"bold\") {\n            annotationStyle.bold = !annotationStyle.bold;\n        }\n        else if (value === \"italic\") {\n            annotationStyle.italic = !annotationStyle.italic;\n        }\n        else if (value === 'template') {\n            if (templateData.value.toString() === 'none') {\n                node.annotations[0].template = '';\n                node.annotations[0].width = undefined;\n                node.annotations[0].height = undefined;\n            }\n            else {\n                node.annotations[0].width = 25;\n                node.annotations[0].height = 25;\n                node.annotations[0].template =\n                    '<img src=\"https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/' + templateData.value.toString() + '.svg\" style=\"width:100%;height:100%\" />';\n            }\n        }\n        else if (value === 'interaction') {\n            var annotation = node.annotations[0];\n            if (annotation && annotation.constraints) {\n                annotation.constraints = annotation.constraints ^ ej2_react_diagrams_1.AnnotationConstraints.Interaction;\n            }\n        }\n        diagramInstance.dataBind();\n    }\n}\n//Update the Annotation Position based on the selection\nfunction updateAnnotationPosition(id) {\n    var target = document.getElementById(id);\n    for (var i = 0; i < diagramInstance.selectedItems.nodes.length; i++) {\n        node = diagramInstance.selectedItems.nodes[i];\n        //we can refactor this code using a method\n        var annotation = node.annotations[0];\n        switch (target.id) {\n            case \"left\":\n                setAnnotationPosition(annotation, 0, 0, \"Top\", \"Left\", target);\n                break;\n            case \"right\":\n                setAnnotationPosition(annotation, 1, 0, \"Top\", \"Right\", target);\n                break;\n            case \"bottomLeft\":\n                setAnnotationPosition(annotation, 0, 1, \"Bottom\", \"Left\", target);\n                break;\n            case \"bottomRight\":\n                setAnnotationPosition(annotation, 1, 1, \"Bottom\", \"Right\", target);\n                break;\n            case \"center\":\n                setAnnotationPosition(annotation, 0.5, 0.5, \"Center\", \"Center\", target);\n                break;\n            case \"bottomCenter\":\n                setAnnotationPosition(annotation, 0.5, 1, \"Top\", \"Center\", target);\n                break;\n        }\n    }\n}\n//set the Annotation Position\nfunction setAnnotationPosition(//it is in dedicated line here.\nannotation, offsetX, offsetY, verticalAlignment, horizontalAlignment, target) {\n    annotation.offset.x = offsetX;\n    annotation.offset.y = offsetY;\n    annotation.verticalAlignment = verticalAlignment;\n    annotation.horizontalAlignment = horizontalAlignment;\n    if (verticalAlignment === \"Top\" && horizontalAlignment === \"Left\") {\n        annotation.margin = { left: 3, top: 3 };\n    }\n    else if (verticalAlignment === \"Top\" && horizontalAlignment === \"Right\") {\n        annotation.margin = { right: 3, top: 3 };\n    }\n    else if (verticalAlignment === \"Bottom\" && horizontalAlignment === \"Left\") {\n        annotation.margin = { left: 3, bottom: 3 };\n    }\n    else if (verticalAlignment === \"Bottom\" && horizontalAlignment === \"Right\") {\n        annotation.margin = { right: 3, bottom: 3 };\n    }\n    target.classList.add(\"e-selected-style\");\n}\n//Enable or disable the property panel\nfunction enablePropertyPanel(arg) {\n    var appearance = propertyPanelInstance;\n    var selectedElement = document.getElementsByClassName(\"e-remove-selection\");\n    //Checks for selection of new node\n    if (arg.newValue) {\n        if (arg.newValue[0] instanceof ej2_react_diagrams_1.Node) {\n            if (selectedElement.length > 0) {\n                selectedElement[0].classList.remove(\"e-remove-selection\");\n            }\n        }\n        else {\n            if (!appearance.classList.contains(\"e-remove-selection\")) {\n                appearance.classList.add(\"e-remove-selection\");\n            }\n        }\n    }\n}\n// Sample initialize\nfunction GettingStartedAnnotation() {\n    // React useEffect hook to run once on component mount\n    React.useEffect(function () {\n        (0, sample_base_1.updateSampleSection)();\n        rendereComplete(); // Call rendereComplete function\n    }, []);\n    var fields = { text: 'text', value: 'value' };\n    // Function to complete rendering actions\n    function rendereComplete() {\n        // Fit the diagram instance to the page\n        diagramInstance.fitToPage();\n        // Select the first node in the diagramInstance\n        diagramInstance.select([diagramInstance.nodes[0]]);\n        // Set onclick event handler for bold.element\n        bold.element.onclick = function () {\n            changed(\"bold\");\n        };\n        // Set onclick event handler for italic.element\n        italic.element.onclick = function () {\n            changed(\"italic\");\n        };\n        // Set onclick event handler for underLine.element\n        underLine.element.onclick = function () {\n            changed(\"underline\");\n        };\n        //Click event for Appearance of the Property Panel\n        appearanceInstance.onclick = function (args) {\n            var target = args.target;\n            var selectedElement = document.getElementsByClassName(\"e-selected-style\");\n            // Remove 'e-selected-style' class from any element that has it\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove(\"e-selected-style\");\n            }\n            // Handle click action based on target's className\n            if (target.className === \"image-pattern-style\") {\n                updateAnnotationPosition(target.id);\n            }\n        };\n    }\n    return (React.createElement(\"div\", { className: \"control-pane diagram-control-pane\" },\n        React.createElement(\"style\", null, sample_css),\n        React.createElement(\"div\", { className: \"col-lg-8 control-section\" },\n            React.createElement(\"div\", { className: \"content-wrapper\", style: { width: \"100%\" } },\n                React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: \"565px\", nodes: nodes, connectors: connectors, selectionChange: function (arg) {\n                        if (arg.state === \"Changed\") {\n                            var selectedElement = document.getElementsByClassName(\"e-selected-style\");\n                            if (selectedElement.length) {\n                                selectedElement[0].classList.remove(\"e-selected-style\");\n                            }\n                            //Checks for selection of new node\n                            if (arg.newValue[0]) {\n                                var node_1 = arg.newValue[0];\n                                if (node_1.annotations[0].offset.x === 0 &&\n                                    node_1.annotations[0].offset.y === 0) {\n                                    updateAnnotationPosition(\"left\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 1 &&\n                                    node_1.annotations[0].offset.y === 0) {\n                                    updateAnnotationPosition(\"right\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 1 &&\n                                    node_1.annotations[0].offset.y === 0) {\n                                    updateAnnotationPosition(\"right\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 0 &&\n                                    node_1.annotations[0].offset.y === 1) {\n                                    updateAnnotationPosition(\"bottomLeft\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 1 &&\n                                    node_1.annotations[0].offset.y === 1) {\n                                    updateAnnotationPosition(\"bottomRight\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 0.5 &&\n                                    node_1.annotations[0].offset.y === 0.5) {\n                                    updateAnnotationPosition(\"center\");\n                                }\n                                else if (node_1.annotations[0].offset.x === 0.5 &&\n                                    node_1.annotations[0].offset.y === 1) {\n                                    updateAnnotationPosition(\"bottomCenter\");\n                                }\n                            }\n                            enablePropertyPanel(arg);\n                        }\n                    }, \n                    //Sets the default values of a node\n                    getNodeDefaults: function (node) {\n                        var obj = {\n                            width: 130,\n                            height: 50,\n                            style: {\n                                fill: \"#D5EDED\",\n                                strokeColor: \"#7DCFC9\",\n                                strokeWidth: 1\n                            },\n                            shape: { cornerRadius: 5 }\n                        };\n                        return obj;\n                    }, \n                    //Sets the default values of a connector\n                    getConnectorDefaults: function (obj) {\n                        obj.type = \"Orthogonal\";\n                        obj.constraints = ej2_react_diagrams_1.ConnectorConstraints.None;\n                    }, snapSettings: { constraints: ej2_react_diagrams_1.SnapConstraints.None } }))),\n        React.createElement(\"div\", { className: \"col-lg-4 property-section diagram-property-tab\" },\n            React.createElement(\"div\", { className: \"property-panel-header\" }, \"Properties\"),\n            React.createElement(\"div\", { style: { cursor: 'not-allowed' } },\n                React.createElement(\"div\", { id: \"propertypanel\", className: \"e-remove-selection\", ref: function (propertyPanelRef) { return (propertyPanelInstance = propertyPanelRef); } },\n                    React.createElement(\"div\", { className: \"property-section-content\" },\n                        React.createElement(\"div\", { className: \"row property-panel-content\", id: \"appearance\", ref: function (appearance) { return (appearanceInstance = appearance); } },\n                            React.createElement(\"div\", { className: \"row row-header\" }, \"Alignment\"),\n                            React.createElement(\"div\", { className: \"row\" },\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"left\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_1.png')\",\n                                            marginRight: \"4px\"\n                                        } }),\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"right\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_2.png')\",\n                                            margin: \"0px 4px\"\n                                        } }),\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bottomLeft\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_3.png')\"\n                                        } })),\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bottomRight\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_4.png')\",\n                                            margin: \"0px 4px\"\n                                        } }),\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"center\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_5.png')\",\n                                            marginRight: \"4px\"\n                                        } }),\n                                    React.createElement(\"div\", { className: \"image-pattern-style\", id: \"bottomCenter\", style: {\n                                            backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/annotation/Annotation_6.png')\"\n                                        } }))),\n                            React.createElement(\"div\", { className: \"row property-panel-content\", style: { paddingTop: \"10px\", overflow: \"hidden\" } },\n                                React.createElement(\"div\", { className: \"row row-header\" }, \"Appearance\"),\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_buttons_1.ButtonComponent, { style: { width: \"100%\" }, id: \"bold\", iconCss: \"e-diagram-icons e-diagram-bold\", ref: function (boldref) { return (bold = boldref); }, \"aria-label\": \"bold\" }, \" \")),\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_buttons_1.ButtonComponent, { style: { width: \"100%\" }, id: \"italic\", iconCss: \"e-diagram-icons e-diagram-italic\", ref: function (italicref) { return (italic = italicref); }, \"aria-label\": \"italic\" }, \" \")),\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_buttons_1.ButtonComponent, { style: { width: \"100%\" }, id: \"underline\", iconCss: \"e-diagram-icons e-diagram-underline\", ref: function (underLineref) { return (underLine = underLineref); }, \"aria-label\": \"underline\" }, \" \"))),\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_inputs_1.ColorPickerComponent, { id: \"fontcolor\", value: \"#000\", change: function (arg) {\n                                                for (var i = 0; i < diagramInstance.selectedItems.nodes.length; i++) {\n                                                    node = diagramInstance.selectedItems.nodes[i];\n                                                    node.annotations[0]\n                                                        .style.color =\n                                                        arg.currentValue.rgba;\n                                                }\n                                            }, ref: function (fontcolor) { return (fontColor = fontcolor); } })),\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_inputs_1.NumericTextBoxComponent, { id: \"fontSize\", value: 12, min: 0, max: 50, step: 1, format: \"##.##\", change: function () {\n                                                changed(\"fontsize\");\n                                            }, ref: function (fontsize) { return (fontSize = fontsize); }, \"aria-label\": \"font-size-textBox\" })),\n                                    React.createElement(\"div\", { className: \"col-xs-4 column-style\" },\n                                        React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"fontfamily\", popupWidth: 150, width: \"100%\", placeholder: \"Select a font type\", index: 0, dataSource: fontType, change: function () {\n                                                changed(\"fontfamily\");\n                                            }, ref: function (fontfamily) { return (fontFamily = fontfamily); } }))),\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"10px\" } },\n                                    React.createElement(\"div\", { className: \"row row-header\" }, \"Templates\"),\n                                    React.createElement(\"div\", { className: \"row col-xs-8\", style: { paddingLeft: \"0px\", paddingTop: \"8px\" } },\n                                        React.createElement(ej2_react_dropdowns_1.DropDownListComponent, { id: \"template\", fields: fields, popupWidth: 200, width: \"100%\", placeholder: \"Select a template\", dataSource: templateList, change: function () {\n                                                changed(\"template\");\n                                            }, ref: function (template) { return (templateData = template); } }))),\n                                React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"10px\" } },\n                                    React.createElement(\"div\", { className: \"row row-header\" }, \"Behaviour\"),\n                                    React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                        React.createElement(ej2_react_buttons_1.CheckBoxComponent, { id: \"labelConstraints\", label: \"Label constraints\", checked: false, change: function () {\n                                                changed(\"interaction\");\n                                            } })))))))))));\n}\nexports.default = GettingStartedAnnotation;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(GettingStartedAnnotation, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/getting-started-annotation-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/getting-started-annotation-functional/app/sample-base.tsx":
/*!***********************************************************************************!*\
  !*** ./samples/diagram/getting-started-annotation-functional/app/sample-base.tsx ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/getting-started-annotation-functional/app/sample-base.tsx?");

/***/ })

/******/ });