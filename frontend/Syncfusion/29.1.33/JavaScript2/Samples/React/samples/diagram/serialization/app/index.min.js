/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/serialization/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/serialization/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/serialization/app/index.tsx":
/*!*****************************************************!*\
  !*** ./samples/diagram/serialization/app/index.tsx ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Serialization = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/serialization/app/sample-base.tsx\");\nvar ej2_react_navigations_1 = __webpack_require__(/*! @syncfusion/ej2-react-navigations */ \"./node_modules/@syncfusion/ej2-react-navigations/index.js\");\nvar ej2_react_inputs_1 = __webpack_require__(/*! @syncfusion/ej2-react-inputs */ \"./node_modules/@syncfusion/ej2-react-inputs/index.js\");\n// Global variables to hold instances of Diagram and Palette components.\nvar diagramInstance;\nvar paletteSpaceInstance;\n// Predefined styles for different types of nodes in the diagram.\nvar nodeStyles = {\n    terminator: { fill: \"#d0f0f1\", strokeColor: \"#797979\", height: 50, width: 100 },\n    process: { fill: \"#fbfdc5\", strokeColor: \"#797979\", height: 50, width: 120 },\n    decision: { fill: \"#c5efaf\", strokeColor: \"#797979\", height: 90, width: 120 },\n    delay: { fill: \"#f8eee5\", strokeColor: \"#797979\", height: 50, width: 100 }\n};\n// Function to create a node with given parameters.\nfunction createNode(id, offsetX, offsetY, shapeType, content, style) {\n    return {\n        id: id,\n        height: style.height,\n        width: style.width,\n        offsetX: offsetX,\n        offsetY: offsetY,\n        shape: { type: \"Flow\", shape: shapeType },\n        annotations: [{ content: content }],\n        style: { fill: style.fill, strokeColor: style.strokeColor }\n    };\n}\n;\n// Initializing nodes for the diagram.\nvar nodes = [\n    createNode(\"Start\", 250, 60, \"Terminator\", \"Start\", nodeStyles.terminator),\n    createNode(\"Alarm\", 250, 160, \"Process\", \"Alarm Rings\", nodeStyles.process),\n    createNode(\"Ready\", 250, 260, \"Decision\", \"Ready to Get Up?\", nodeStyles.decision),\n    createNode(\"Climb\", 250, 370, \"Process\", \"Climb Out of Bed\", nodeStyles.process),\n    createNode(\"End\", 250, 460, \"Terminator\", \"End\", nodeStyles.terminator),\n    createNode(\"Relay\", 450, 160, \"Delay\", \"Relay\", nodeStyles.delay),\n    createNode(\"Hit\", 450, 260, \"Process\", \"Hit Snooze Button\", nodeStyles.process)\n];\n// Function to create a connector with given parameters.\nfunction createConnector(id, sourceID, targetID, annotations) {\n    return {\n        id: id,\n        sourceID: sourceID,\n        targetID: targetID,\n        annotations: annotations\n    };\n}\n;\n// Initializing connectors for the diagram.\nvar connectors = [\n    createConnector(\"connector1\", \"Start\", \"Alarm\"),\n    createConnector(\"connector2\", \"Alarm\", \"Ready\"),\n    createConnector(\"connector3\", \"Ready\", \"Climb\", [{ content: \"Yes\", style: { fill: \"white\" } }]),\n    createConnector(\"connector4\", \"Climb\", \"End\"),\n    createConnector(\"connector5\", \"Ready\", \"Hit\", [{ content: \"No\", style: { fill: \"white\" } }]),\n    createConnector(\"connector6\", \"Hit\", \"Relay\"),\n    createConnector(\"connector7\", \"Relay\", \"Alarm\")\n];\n// Gridline configuration for the diagram.\nvar interval = [\n    1,\n    9,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75,\n    0.25,\n    9.75\n];\nvar gridlines = {\n    lineColor: \"#e0e0e0\",\n    lineIntervals: interval\n};\n// Preparing flow shapes for the symbol palette.\nvar flowShapeTypes = [\n    \"Terminator\", \"Process\", \"Decision\", \"Document\",\n    \"PreDefinedProcess\", \"PaperTap\", \"DirectData\",\n    \"SequentialData\", \"Sort\", \"MultiDocument\",\n    \"Collate\", \"SummingJunction\", \"Or\", \"InternalStorage\",\n    \"Extract\", \"ManualOperation\", \"Merge\", \"OffPageReference\",\n    \"SequentialAccessStorage\", \"Annotation\", \"Annotation2\",\n    \"Data\", \"Card\", \"Delay\"\n];\nvar flowshapes = flowShapeTypes.map(function (type) { return ({ id: type, shape: { type: \"Flow\", shape: type } }); });\n// Function to create a connector symbol for the symbol palette.\nfunction createConnectorSymbol(id, type, targetDecoratorShape) {\n    if (targetDecoratorShape === void 0) { targetDecoratorShape = \"None\"; }\n    var connector = {\n        id: id,\n        type: type,\n        sourcePoint: { x: 0, y: 0 },\n        targetPoint: { x: 40, y: 40 },\n        style: { strokeWidth: 2, strokeColor: '#757575' }\n    };\n    if (targetDecoratorShape !== \"None\") {\n        connector.targetDecorator = { shape: targetDecoratorShape, style: { strokeColor: '#757575', fill: '#757575' } };\n    }\n    else {\n        connector.targetDecorator = { shape: \"None\" };\n    }\n    return connector;\n}\n// Initializing connector symbols for the symbol palette.\nvar connectorSymbols = [\n    createConnectorSymbol(\"Link1\", \"Orthogonal\", \"Arrow\"),\n    createConnectorSymbol(\"link2\", \"Orthogonal\"),\n    createConnectorSymbol(\"Link3\", \"Straight\", \"Arrow\"),\n    createConnectorSymbol(\"link4\", \"Straight\"),\n    createConnectorSymbol(\"link5\", \"Bezier\")\n];\n// CSS styles specific to this sample.\nvar SAMPLE_CSS = \"\\n  .e-upload {\\n    display: none;\\n  }\\n\\n  #palette-icon {\\n    display: none;\\n  }\\n\\n  @media (max-width: 550px) {\\n      #palette-icon {\\n          display: inline-flex;\\n      }\\n  }\\n\";\nvar Serialization = /** @class */ (function (_super) {\n    __extends(Serialization, _super);\n    function Serialization() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Serialization.prototype.render = function () {\n        return (React.createElement(\"div\", { className: \"control-pane\" },\n            React.createElement(\"style\", null, SAMPLE_CSS),\n            React.createElement(\"div\", { className: \"control-section\" },\n                React.createElement(ej2_react_navigations_1.ToolbarComponent, { id: \"toolbar_diagram\", style: { width: \"100%\", height: \"10%\", marginTop: \"10px\" }, clicked: function (args) {\n                        switch (args.item.text) {\n                            case \"New\":\n                                diagramInstance.clear();\n                                break;\n                            case \"Load\":\n                                document.getElementsByClassName(\"e-file-select-wrap\")[0].querySelector(\"button\").click();\n                                break;\n                            case null:\n                                if (args.item.id === 'palette-icon')\n                                    openPalette();\n                                break;\n                            default:\n                                download(diagramInstance.saveDiagram());\n                        }\n                    }, items: [\n                        {\n                            id: 'palette-icon',\n                            prefixIcon: 'e-ddb-icons2 e-toggle-palette',\n                            align: 'Right',\n                        },\n                        {\n                            text: \"New\",\n                            tooltipText: \"New\",\n                            prefixIcon: \"e-diagram-icons e-diagram-new\"\n                        },\n                        { type: \"Separator\" },\n                        {\n                            text: \"Save\",\n                            tooltipText: \"Save\",\n                            prefixIcon: \"e-diagram-icons e-diagram-save\"\n                        },\n                        { type: \"Separator\" },\n                        {\n                            text: \"Load\",\n                            tooltipText: \"Load\",\n                            prefixIcon: \"e-diagram-icons e-diagram-open\"\n                        }\n                    ] }),\n                React.createElement(\"div\", { style: { width: \"100%\", height: \"80%\" } },\n                    React.createElement(\"div\", { id: \"palettespace\", ref: function (palettespace) { return (paletteSpaceInstance = palettespace); }, className: \"sb-mobile-palette\" },\n                        React.createElement(ej2_react_diagrams_1.SymbolPaletteComponent, { id: \"symbolpalette\", expandMode: \"Multiple\", palettes: [\n                                {\n                                    id: \"flow\",\n                                    expanded: true,\n                                    symbols: flowshapes,\n                                    iconCss: \"e-diagram-icons1 e-diagram-flow\",\n                                    title: \"Flow Shapes\"\n                                },\n                                {\n                                    id: \"connectors\",\n                                    expanded: true,\n                                    symbols: connectorSymbols,\n                                    iconCss: \"e-diagram-icons1 e-diagram-connector\",\n                                    title: \"Connectors\"\n                                }\n                            ], getNodeDefaults: function (symbol) {\n                                var strokeColor = '#757575';\n                                var dimensions = {\n                                    'Terminator': { width: 80, height: 40 },\n                                    'Process': { width: 80, height: 40 },\n                                    'Delay': { width: 80, height: 40 },\n                                    'Decision': { width: 50, height: 40 },\n                                    'Document': { width: 50, height: 40 },\n                                    'PreDefinedProcess': { width: 50, height: 40 },\n                                    'PaperTap': { width: 50, height: 40 },\n                                    'DirectData': { width: 50, height: 40 },\n                                    'MultiDocument': { width: 50, height: 40 },\n                                    'Data': { width: 50, height: 40 },\n                                };\n                                symbol.style.strokeColor = strokeColor;\n                                symbol.width = dimensions[symbol.id] ? dimensions[symbol.id].width : 50;\n                                symbol.height = dimensions[symbol.id] ? dimensions[symbol.id].height : 50;\n                            }, symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 }, getSymbolInfo: function (symbol) {\n                                return { fit: true };\n                            }, width: \"100%\", height: \"700px\", symbolHeight: 60, symbolWidth: 60 })),\n                    React.createElement(\"div\", { id: \"diagram-space\", className: \"sb-mobile-diagram\" },\n                        React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: \"645px\", nodes: nodes, snapSettings: {\n                                horizontalGridlines: gridlines,\n                                verticalGridlines: gridlines\n                            }, connectors: connectors, getConnectorDefaults: function (args, diagram) {\n                                args.targetDecorator.height = 5;\n                                args.targetDecorator.width = 5;\n                                args.style.strokeColor = \"#797979\";\n                                args.targetDecorator.style = {\n                                    fill: \"#797979\",\n                                    strokeColor: \"#797979\"\n                                };\n                                return args;\n                            }, \n                            //Sets the Node style for DragEnter element.\n                            dragEnter: function (args) {\n                                var obj = args.element;\n                                if (obj instanceof ej2_react_diagrams_1.Node) {\n                                    var ratio = 100 / obj.width;\n                                    obj.width = 100;\n                                    obj.height *= ratio;\n                                }\n                            }, \n                            // event triggers after the diagram elements finished loading using loadDiagram method\n                            loaded: function () {\n                                diagramInstance.select([diagramInstance.nodes[0]]);\n                            } })),\n                    React.createElement(ej2_react_inputs_1.UploaderComponent, { type: \"file\", id: \"fileupload\", asyncSettings: {\n                            saveUrl: 'https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Save',\n                            removeUrl: 'https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Remove'\n                        }, success: onUploadSuccess })))));\n    };\n    return Serialization;\n}(sample_base_1.SampleBase));\nexports.Serialization = Serialization;\nfunction onUploadSuccess(args) {\n    // Extracts the file from the upload success event arguments.\n    var file = args.file.rawFile;\n    // Creates a FileReader to read the content of the file.\n    var reader = new FileReader();\n    // Reads the content of the file as a text string.\n    reader.readAsText(file);\n    // Assigns the loadDiagram function to execute when the file read operation completes.\n    reader.onloadend = loadDiagram;\n}\n// Load the diagram object from a JSON string.\nfunction loadDiagram(event) {\n    // Extracts the text content from the FileReader event.\n    var result = event.target.result;\n    // Loads the diagram from the JSON string.\n    diagramInstance.loadDiagram(result);\n}\n// Save the diagram object as a JSON file.\nfunction download(data) {\n    // MIME type for JSON data.\n    var mimeType = \"data:text/json;charset=utf-8,\";\n    // Checks for MS browser to use the msSaveBlob method.\n    if (window.navigator.msSaveBlob) {\n        // Creates a new Blob object containing the JSON data.\n        var blob = new Blob([data], { type: mimeType });\n        // Saves or opens the blob depending on the browser capability.\n        window.navigator.msSaveOrOpenBlob(blob, \"Diagram.json\");\n    }\n    else {\n        // Encodes the JSON data as a data URL.\n        var dataStr = mimeType + encodeURIComponent(data);\n        // Creates an anchor element to facilitate downloading.\n        var downloadAnchor = document.createElement(\"a\");\n        downloadAnchor.href = dataStr;\n        downloadAnchor.download = \"Diagram.json\";\n        document.body.appendChild(downloadAnchor);\n        // Triggers the download process.\n        downloadAnchor.click();\n        // Removes the anchor element from the document.\n        downloadAnchor.remove();\n    }\n}\n// Toggle the visibility of the palette on mobile devices.\nfunction openPalette() {\n    // Checks if the current viewport width is less than or equal to 550 pixels.\n    var isMobile = window.matchMedia('(max-width:550px)').matches;\n    if (isMobile) {\n        // Toggles the class to show or hide the palette.\n        paletteSpaceInstance.classList.toggle('sb-mobile-palette-open');\n    }\n}\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(Serialization, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/serialization/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/serialization/app/sample-base.tsx":
/*!***********************************************************!*\
  !*** ./samples/diagram/serialization/app/sample-base.tsx ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/serialization/app/sample-base.tsx?");

/***/ })

/******/ });