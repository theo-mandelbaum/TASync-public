/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/diagram/quick-commands/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/diagram/quick-commands/app/index.tsx","diagrams.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/diagram/quick-commands/app/index.tsx":
/*!******************************************************!*\
  !*** ./samples/diagram/quick-commands/app/index.tsx ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserHandle = void 0;\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_diagrams_1 = __webpack_require__(/*! @syncfusion/ej2-react-diagrams */ \"./node_modules/@syncfusion/ej2-react-diagrams/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/diagram/quick-commands/app/sample-base.tsx\");\nvar SAMPLE_CSS = \".diagram-userhandle .image-pattern-style {\\n        background-color: white;\\n        background-size: contain;\\n        background-repeat: no-repeat;\\n        height: 50px;\\n        width: calc((100% - 18px) / 3);\\n        cursor: pointer;\\n        border: 1px solid #D5D5D5;\\n        background-position: center;\\n        float: left;\\n    }\\n    .e-remove-selection .property-section-content {\\n      pointer-events: none;\\n    }\\n      .property-section .e-remove-selection {\\n      cursor: not-allowed;\\n    }\\n    .diagram-userhandle .image-pattern-style:hover {\\n        border-color: gray;\\n        border-width: 2px;\\n    }\\n\\n    .diagram-userhandle .row {\\n        margin: 10px 0px 0px 0px;\\n    }\\n\\n    .diagram-userhandle .e-selected-style {\\n        border-color: #006CE6;\\n        border-width: 2px;\\n    }\\n\\n    .diagram-userhandle .row-header {\\n        font-size: 15px;\\n        font-weight: 500;\\n        margin-top: 10px\\n    }\\n\\n    .diagram-userhandle .property-panel-header {\\n        padding-top: 2px;\\n        padding-bottom: 5px;\\n    }\\n\\n   .e-checkbox-wrapper .e-label {\\n        font-size: 12px;\\n    }\\n\\n   .container-fluid {\\n        padding-left: 0px;\\n    }\\n\\n   .diagram-control-pane .col-xs-6 {\\n        padding-left: 0px;\\n        padding-right: 0px;\\n        padding-top: 5px;\\n    }\";\nvar diagramInstance;\nvar appearanceInstance;\nvar patternInstance;\n// Define the collection of nodes in the diagram.\nvar nodes = [\n    {\n        id: \"NewIdea\",\n        width: 150,\n        height: 60,\n        offsetX: 300,\n        offsetY: 60,\n        shape: { type: \"Flow\", shape: \"Terminator\" },\n        annotations: [{ content: \"New idea identified\" }]\n    },\n    {\n        id: \"Meeting\",\n        width: 150,\n        height: 60,\n        offsetX: 300,\n        offsetY: 155,\n        shape: { type: \"Flow\", shape: \"Process\" },\n        annotations: [{ content: \"Meeting with board\" }]\n    },\n    {\n        id: \"BoardDecision\",\n        width: 150,\n        height: 110,\n        offsetX: 300,\n        offsetY: 280,\n        shape: { type: \"Flow\", shape: \"Decision\" },\n        annotations: [{ content: \"Board decides \\n whether to proceed\" }]\n    },\n    {\n        id: \"Project\",\n        width: 150,\n        height: 100,\n        offsetX: 300,\n        offsetY: 430,\n        shape: { type: \"Flow\", shape: \"Decision\" },\n        annotations: [{ content: \"Find Project manager\" }]\n    },\n    {\n        id: \"End\",\n        width: 150,\n        height: 60,\n        offsetX: 300,\n        offsetY: 555,\n        shape: { type: \"Flow\", shape: \"Process\" },\n        annotations: [{ content: \"Implement and Deliver\" }]\n    },\n    {\n        id: \"Decision\",\n        width: 250,\n        height: 60,\n        offsetX: 550,\n        offsetY: 60,\n        shape: { type: \"Flow\", shape: \"Card\" },\n        annotations: [{ content: \"Decision process for new software ideas\" }],\n        fixedUserHandles: [{ padding: { left: 2, right: 2, top: 2, bottom: 2 }, offset: { x: 1.1, y: 0.5 }, width: 20, height: 20, }]\n    },\n    {\n        id: \"Reject\",\n        width: 150,\n        height: 60,\n        offsetX: 550,\n        offsetY: 280,\n        shape: { type: \"Flow\", shape: \"Process\" },\n        annotations: [{ content: \"Reject\" }]\n    },\n    {\n        id: \"Resources\",\n        width: 150,\n        height: 60,\n        offsetX: 550,\n        offsetY: 430,\n        shape: { type: \"Flow\", shape: \"Process\" },\n        annotations: [{ content: \"Hire new resources\" }]\n    }\n];\n// Define the collection of connectors in the diagram.\nvar connectors = [\n    {\n        id: \"connector1\",\n        type: \"Straight\",\n        sourceID: \"NewIdea\",\n        targetID: \"Meeting\"\n    },\n    {\n        id: \"connector2\",\n        type: \"Straight\",\n        sourceID: \"Meeting\",\n        targetID: \"BoardDecision\"\n    },\n    {\n        id: \"connector3\",\n        type: \"Straight\",\n        sourceID: \"BoardDecision\",\n        targetID: \"Project\"\n    },\n    { id: \"connector4\", type: \"Straight\", sourceID: \"Project\", targetID: \"End\" },\n    {\n        id: \"connector5\",\n        type: \"Straight\",\n        sourceID: \"BoardDecision\",\n        targetID: \"Reject\"\n    },\n    {\n        id: \"connector6\",\n        type: \"Straight\",\n        sourceID: \"Project\",\n        targetID: \"Resources\"\n    }\n];\n// Define the collection of user handles for nodes in the diagram.\nvar handles = [\n    {\n        name: \"clone\",\n        pathData: \"M60.3,18H27.5c-3,0-5.5,2.4-5.5,5.5v38.2h5.5V23.5h32.7V18z M68.5,28.9h-30c-3,\" +\n            \"0-5.5,2.4-5.5,5.5v38.2c0,3,2.4,5.5,5.5,5.5h30c3,0,5.5-2.4,5.5-5.5V34.4C73.9,31.4,71.5,28.9,68.5,28.9z \" +\n            \"M68.5,72.5h-30V34.4h30V72.5z\",\n        visible: true,\n        offset: 0,\n        side: \"Bottom\",\n        margin: { top: 0, bottom: 0, left: 0, right: 0 },\n        pathColor: \"white\"\n    }\n];\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserHandle.prototype.rendereComplete = function () {\n        diagramInstance.fitToPage();\n        diagramInstance.select([diagramInstance.nodes[0]]);\n        appearanceInstance.onclick = function (args) {\n            var target = args.target;\n            var selectedElement = document.getElementsByClassName(\"e-selected-style\");\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove(\"e-selected-style\");\n            }\n            if (target.className === \"image-pattern-style\") {\n                switch (target.id) {\n                    case \"left\":\n                        setUserHandlePosition(0, \"Bottom\", target);\n                        break;\n                    case \"right\":\n                        setUserHandlePosition(1, \"Bottom\", target);\n                        break;\n                    case \"topr\":\n                        setUserHandlePosition(0, \"Right\", target);\n                        break;\n                }\n            }\n            diagramInstance.dataBind();\n        };\n        patternInstance.onclick = function (args) {\n            var target = args.target;\n            var selectedElement = document.getElementsByClassName(\"e-selected-style\");\n            if (selectedElement.length) {\n                selectedElement[0].classList.remove(\"e-selected-style\");\n            }\n            if (target.className === \"image-pattern-style\") {\n                switch (target.id) {\n                    case \"pattern1\":\n                        applyUserHandleStyle(\"#1E90FF\", target);\n                        break;\n                    case \"pattern2\":\n                        applyUserHandleStyle(\"#3CB371\", target);\n                        break;\n                    case \"pattern3\":\n                        applyUserHandleStyle(\"#FF6347\", target);\n                        break;\n                }\n            }\n            diagramInstance.dataBind();\n        };\n    };\n    UserHandle.prototype.render = function () {\n        return (React.createElement(\"div\", { className: \"control-pane \" },\n            React.createElement(\"style\", null, SAMPLE_CSS),\n            React.createElement(\"div\", { className: \"col-lg-8 control-section\" },\n                React.createElement(\"div\", { className: \"content-wrapper\", style: { width: \"100%\" } },\n                    React.createElement(ej2_react_diagrams_1.DiagramComponent, { id: \"diagram\", ref: function (diagram) { return (diagramInstance = diagram); }, width: \"100%\", height: \"600px\", nodes: nodes, connectors: connectors, selectedItems: {\n                            constraints: ej2_react_diagrams_1.SelectorConstraints.UserHandle,\n                            userHandles: handles\n                        }, snapSettings: { constraints: ej2_react_diagrams_1.SnapConstraints.None }, \n                        //set Node default value\n                        getNodeDefaults: function (node) {\n                            return {\n                                style: { fill: \"#578CA9\", strokeColor: \"none\" },\n                                annotations: [{ style: { color: \"white\" } }]\n                            };\n                        }, fixedUserHandleTemplate: fixedUserHandleTemplate.bind(this), fixedUserHandleClick: function () {\n                            diagramInstance.select([diagramInstance.nameTable['Decision']]);\n                            diagramInstance.remove();\n                        }, \n                        //set CustomTool\n                        getCustomTool: getTool, \n                        // Enable or disable the property panel based on the selection.\n                        selectionChange: function (arg) {\n                            var propertyAppearance = document.getElementById(\"propertypanel\");\n                            var getSelectedElement = document.getElementsByClassName(\"e-remove-selection\");\n                            if (arg.newValue) {\n                                // Check if the item in newValue is either a Node or Connector\n                                if ((arg.newValue[0] instanceof ej2_react_diagrams_1.Node) || (arg.newValue[0] instanceof ej2_react_diagrams_1.Connector)) {\n                                    if (getSelectedElement.length > 0) {\n                                        getSelectedElement[0].classList.remove(\"e-remove-selection\");\n                                    }\n                                }\n                                else {\n                                    if (!propertyAppearance.classList.contains(\"e-remove-selection\")) {\n                                        propertyAppearance.classList.add(\"e-remove-selection\");\n                                    }\n                                }\n                            }\n                        } }))),\n            React.createElement(\"div\", { className: \"col-lg-4 property-section diagram-userhandle\" },\n                React.createElement(\"div\", { id: \"propertypanel\", className: \"e-remove-selection\" },\n                    React.createElement(\"div\", { className: \"property-section-content\" },\n                        React.createElement(\"div\", { className: \"property-panel-header\" }, \"Properties\"),\n                        React.createElement(\"div\", { className: \"row property-panel-content\", id: \"appearance\", ref: function (appearance) { return (appearanceInstance = appearance); } },\n                            React.createElement(\"div\", { className: \"row row-header\" }, \"Alignment\"),\n                            React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                React.createElement(\"div\", { className: \"image-pattern-style e-selected-style\", id: \"left\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/bottoml.png')\",\n                                        marginRight: \"4px\"\n                                    } }),\n                                React.createElement(\"div\", { className: \"image-pattern-style\", id: \"right\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/bottomr.png')\",\n                                        margin: \"0px 4px\"\n                                    } }),\n                                React.createElement(\"div\", { className: \"image-pattern-style\", id: \"topr\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/topr.png')\"\n                                    } }))),\n                        React.createElement(\"div\", { className: \"row property-panel-content\", id: \"pattern\", ref: function (pattern) { return (patternInstance = pattern); } },\n                            React.createElement(\"div\", { className: \"row row-header\" }, \"Appearance\"),\n                            React.createElement(\"div\", { className: \"row\", style: { paddingTop: \"8px\" } },\n                                React.createElement(\"div\", { className: \"image-pattern-style\", id: \"pattern1\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern1.png')\",\n                                        marginRight: \"4px\"\n                                    } }),\n                                React.createElement(\"div\", { className: \"image-pattern-style\", id: \"pattern2\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern2.png')\",\n                                        margin: \"0px 4px\"\n                                    } }),\n                                React.createElement(\"div\", { className: \"image-pattern-style\", id: \"pattern3\", style: {\n                                        backgroundImage: \"url('https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/pattern3.png')\"\n                                    } }))))))));\n    };\n    return UserHandle;\n}(sample_base_1.SampleBase));\nexports.UserHandle = UserHandle;\n// Define the clone tool for copying Nodes/Connectors.\nvar CloneTool = /** @class */ (function (_super) {\n    __extends(CloneTool, _super);\n    function CloneTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CloneTool.prototype.mouseDown = function (args) {\n        var newObject;\n        if (diagramInstance.selectedItems.nodes.length > 0) {\n            newObject = (0, ej2_react_diagrams_1.cloneObject)(diagramInstance.selectedItems.nodes[0]);\n        }\n        else {\n            newObject = (0, ej2_react_diagrams_1.cloneObject)(diagramInstance.selectedItems.connectors[0]);\n        }\n        newObject.id += (0, ej2_react_diagrams_1.randomId)();\n        diagramInstance.paste([newObject]);\n        if (diagramInstance.selectedItems.connectors.length > 0) {\n            args.source = diagramInstance.connectors[diagramInstance.connectors.length - 1];\n        }\n        else {\n            args.source = diagramInstance.nodes[diagramInstance.nodes.length - 1];\n        }\n        args.sourceWrapper = args.source.wrapper;\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    return CloneTool;\n}(ej2_react_diagrams_1.MoveTool));\n// Enable the clone tool for UserHandle.\nfunction getTool(action) {\n    var tool;\n    if (action === \"clone\") {\n        tool = new CloneTool(diagramInstance.commandHandler);\n    }\n    return tool;\n}\n//set the position of the userhandle.\nfunction setUserHandlePosition(offset, side, target) {\n    diagramInstance.selectedItems.userHandles[0].offset = offset;\n    diagramInstance.selectedItems.userHandles[0].side = side;\n    target.classList.add(\"e-selected-style\");\n}\n//set the style of the userhandle.\nfunction applyUserHandleStyle(bgcolor, target) {\n    diagramInstance.selectedItems.userHandles[0].backgroundColor = bgcolor;\n    diagramInstance.selectedItems.userHandles[0].pathColor = \"White\";\n    target.classList.add(\"e-selected-style\");\n}\nfunction fixedUserHandleTemplate(props) {\n    return (React.createElement(\"div\", { style: { width: '100%', height: '100%' } },\n        React.createElement(\"button\", { style: { backgroundColor: 'black', borderRadius: '50%', width: '25px', height: '25px', border: 'none', cursor: 'context-menu', padding: 0, display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundImage: \"url(https://ej2.syncfusion.com/react/demos/src/diagram/Images/user-handle/delete.png)\", backgroundSize: 'cover', backgroundPosition: 'center' } })));\n}\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(UserHandle, null));\n\n\n//# sourceURL=webpack:///./samples/diagram/quick-commands/app/index.tsx?");

/***/ }),

/***/ "./samples/diagram/quick-commands/app/sample-base.tsx":
/*!************************************************************!*\
  !*** ./samples/diagram/quick-commands/app/sample-base.tsx ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/diagram/quick-commands/app/sample-base.tsx?");

/***/ })

/******/ });