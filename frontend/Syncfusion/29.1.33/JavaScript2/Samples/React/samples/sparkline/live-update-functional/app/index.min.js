/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"./samples/sparkline/live-update-functional/app/index.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./samples/sparkline/live-update-functional/app/index.tsx","dataviz.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./samples/sparkline/live-update-functional/app/index.tsx":
/*!****************************************************************!*\
  !*** ./samples/sparkline/live-update-functional/app/index.tsx ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/**\n * Liveupdate sample for sparkline\n */\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_react_charts_1 = __webpack_require__(/*! @syncfusion/ej2-react-charts */ \"./node_modules/@syncfusion/ej2-react-charts/index.js\");\nvar sample_base_1 = __webpack_require__(/*! ./sample-base */ \"./samples/sparkline/live-update-functional/app/sample-base.tsx\");\nvar theme_color_1 = __webpack_require__(/*! ../theme-color */ \"./samples/sparkline/live-update-functional/theme-color.ts\");\nvar SAMPLE_CSS = \"\\n     .control-fluid {\\n         padding: 0px !important;\\n     }\\n     .spark {\\n         float: left;\\n         width: 95%;\\n         margin-left: 3%;\\n     }\\n     .index {\\n         z-index: 1000;\\n     }\";\nfunction LiveUpdate() {\n    React.useEffect(function () {\n        (0, sample_base_1.updateSampleSection)();\n    }, []);\n    var sparkInstance;\n    var sparkInstance1;\n    var sparkInstance2;\n    var sparkInstance3;\n    var temp1;\n    var temp3;\n    var temp2;\n    var temp4;\n    var timer1;\n    var timer2;\n    var timer3;\n    var timer4;\n    function load(args) {\n        (0, theme_color_1.loadSparkLineTheme)(args);\n    }\n    function updateSparkline1(args) {\n        setTimeout(function () {\n            if (sparkInstance == null)\n                sparkInstance = args.sparkline;\n            if (temp1 == null)\n                temp1 = sparkInstance.dataSource.length - 1;\n            if (timer1 != null)\n                clearInterval(timer1);\n            timer1 = setInterval(function () { return update(); }, 500);\n        }, 500);\n    }\n    function updateSparkline2(args) {\n        setTimeout(function () {\n            if (sparkInstance1 == null)\n                sparkInstance1 = args.sparkline;\n            if (temp3 == null)\n                temp3 = sparkInstance1.dataSource.length - 1;\n            if (timer2 != null)\n                clearInterval(timer2);\n            timer2 = setInterval(function () { return update2(); }, 500);\n        }, 500);\n    }\n    function updateSparkline3(args) {\n        setTimeout(function () {\n            if (sparkInstance2 == null)\n                sparkInstance2 = args.sparkline;\n            if (temp2 == null)\n                temp2 = sparkInstance2.dataSource.length - 1;\n            if (timer3 != null)\n                clearInterval(timer3);\n            timer3 = setInterval(function () { return update1(); }, 500);\n        }, 500);\n    }\n    function updateSparkline4(args) {\n        setTimeout(function () {\n            if (sparkInstance3 == null)\n                sparkInstance3 = args.sparkline;\n            if (temp4 == null)\n                temp4 = sparkInstance3.dataSource.length - 1;\n            if (timer4 != null)\n                clearInterval(timer4);\n            timer4 = setInterval(function () { return update4(); }, 500);\n        }, 500);\n    }\n    function update() {\n        if (sparkInstance && sparkInstance.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 50;\n            sparkInstance.dataSource.push({ x: ++temp1, yval: value });\n            sparkInstance.dataSource.shift();\n            sparkInstance.refresh();\n            var cpu = document.getElementById('cpu');\n            cpu.innerHTML = ((value / 150) * 100).toFixed(0) + '% ' + ((value * 3) / 100).toFixed(2) + 'GHz';\n        }\n    }\n    function update2() {\n        if (sparkInstance1 && sparkInstance1.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 80;\n            sparkInstance1.dataSource.push({ x: ++temp3, yval: value });\n            sparkInstance1.dataSource.shift();\n            sparkInstance1.refresh();\n            var disk = document.getElementById('disk');\n            disk.innerHTML = value.toFixed(0) + '%';\n        }\n    }\n    function update1() {\n        if (sparkInstance2 && sparkInstance2.element.className.indexOf('e-sparkline') > -1) {\n            var value = Math.random();\n            if (value > 0.6) {\n                value = 6 + (value / 10);\n            }\n            else {\n                value = 6 - (value / 10);\n            }\n            sparkInstance2.dataSource.push({ x: ++temp2, yval: value });\n            sparkInstance2.dataSource.shift();\n            sparkInstance2.refresh();\n            var memory = document.getElementById('memory');\n            var gb = parseFloat(value.toString().replace('0', '')).toFixed(1);\n            memory.innerHTML = gb + '/15.8 GB (' + ((value / 15.8) * 100).toFixed(0) + '%)';\n        }\n    }\n    function update4() {\n        if (sparkInstance3 && sparkInstance3.element.className.indexOf('e-sparkline') > -1) {\n            var value = ((Math.random() * 100) + 5) % 80;\n            sparkInstance3.dataSource.push({ x: ++temp3, yval: value });\n            sparkInstance3.dataSource.shift();\n            sparkInstance3.refresh();\n            var net = document.getElementById('net');\n            net.innerHTML = 'R: ' + value.toFixed(0) + 'Kbps';\n        }\n    }\n    return (React.createElement(\"div\", { className: 'control-pane' },\n        React.createElement(\"style\", null, SAMPLE_CSS),\n        React.createElement(\"div\", { className: 'control-section' },\n            React.createElement(\"div\", { id: 'spark-container', className: \"row\" },\n                React.createElement(\"div\", { className: \"cols-sample-area\", style: { \"marginTop\": \"8%\" } },\n                    React.createElement(\"div\", { className: \"col-lg-3 col-m-3 col-sm-6\" },\n                        React.createElement(\"div\", { className: \"spark\", id: \"spark-container1\" },\n                            React.createElement(\"div\", { className: \"index\", style: { \"fontSize\": \"12px\", \"position\": \"absolute\", \"marginTop\": \"10px\", \"marginLeft\": \"8%\" } },\n                                React.createElement(\"b\", null, \"CPU\")),\n                            React.createElement(\"div\", { id: \"cpu\", className: \"index\", style: { \"color\": \"#0877d6\", \"position\": \"absolute\", \"marginTop\": \"25px\", \"marginLeft\": \"8%\" } }, \"26% 1.2GHz\"),\n                            React.createElement(ej2_react_charts_1.SparklineComponent, { loaded: updateSparkline1.bind(this), load: load.bind(this), ref: function (m) { return sparkInstance = m; }, id: 'spark1-container', height: '130px', width: '90%', lineWidth: 1, type: 'Area', valueType: 'Numeric', fill: '#e8f2fc', axisSettings: {\n                                    minY: 0,\n                                    maxY: 150\n                                }, containerArea: {\n                                    background: 'white',\n                                    border: {\n                                        color: '#dcdfe0',\n                                        width: 2\n                                    }\n                                }, border: {\n                                    color: '#0358a0',\n                                    width: 1\n                                }, dataSource: [\n                                    { x: 0, yval: 50 },\n                                    { x: 1, yval: 30 },\n                                    { x: 2, yval: 20 },\n                                    { x: 3, yval: 30 },\n                                    { x: 4, yval: 50 },\n                                    { x: 5, yval: 40 },\n                                    { x: 6, yval: 20 },\n                                    { x: 7, yval: 10 },\n                                    { x: 8, yval: 30 },\n                                    { x: 9, yval: 10 },\n                                    { x: 10, yval: 40 },\n                                    { x: 11, yval: 50 },\n                                    { x: 12, yval: 10 },\n                                    { x: 13, yval: 30 },\n                                    { x: 14, yval: 50 },\n                                    { x: 15, yval: 20 },\n                                    { x: 16, yval: 10 },\n                                    { x: 17, yval: 40 },\n                                    { x: 18, yval: 30 },\n                                    { x: 19, yval: 40 }\n                                ], xName: 'x', yName: 'yval' }))),\n                    React.createElement(\"div\", { className: \"col-lg-3 col-m-3 col-sm-6\" },\n                        React.createElement(\"div\", { className: \"spark\", id: \"spark-container2\" },\n                            React.createElement(\"div\", { className: 'index', style: { \"fontSize\": \"12px\", \"position\": \"absolute\", \"marginTop\": \"10px\", \"marginLeft\": \"8%\" } },\n                                React.createElement(\"b\", null, \"Disk\")),\n                            React.createElement(\"div\", { id: \"disk\", className: \"index\", style: { \"color\": \"#b247c6\", \"position\": \"absolute\", \"marginTop\": \"25px\", \"marginLeft\": \"8%\" } }, \"50%\"),\n                            React.createElement(ej2_react_charts_1.SparklineComponent, { loaded: updateSparkline2.bind(this), load: load.bind(this), ref: function (m) { return sparkInstance2 = m; }, id: 'spark2-container', height: '130px', width: '90%', lineWidth: 1, type: 'Area', valueType: 'Numeric', fill: '#f5e8fc', axisSettings: {\n                                    minY: 4,\n                                    maxY: 8\n                                }, containerArea: {\n                                    background: 'white',\n                                    border: {\n                                        color: '#dcdfe0',\n                                        width: 2\n                                    }\n                                }, border: {\n                                    color: '#b247c6',\n                                    width: 1\n                                }, dataSource: [\n                                    { x: 0, yval: 6.05 },\n                                    { x: 1, yval: 6.03 },\n                                    { x: 2, yval: 6.02 },\n                                    { x: 3, yval: 6.07 },\n                                    { x: 4, yval: 6.05 },\n                                    { x: 5, yval: 6.09 },\n                                    { x: 6, yval: 6.08 },\n                                    { x: 7, yval: 6.01 },\n                                    { x: 8, yval: 6.03 },\n                                    { x: 9, yval: 6.01 },\n                                    { x: 10, yval: 6.07 },\n                                    { x: 11, yval: 6.05 },\n                                    { x: 12, yval: 6.01 },\n                                    { x: 13, yval: 6.06 },\n                                    { x: 14, yval: 6.05 },\n                                    { x: 15, yval: 6.03 },\n                                    { x: 16, yval: 6.01 },\n                                    { x: 17, yval: 6.09 },\n                                    { x: 18, yval: 6.06 },\n                                    { x: 19, yval: 6.05 }\n                                ], xName: 'x', yName: 'yval' }))),\n                    React.createElement(\"div\", { className: \"col-lg-3 col-m-3 col-sm-6\" },\n                        React.createElement(\"div\", { className: \"spark\", id: \"spark-container3\" },\n                            React.createElement(\"div\", { className: \"index\", style: { \"fontSize\": \"12px\", \"position\": \"absolute\", \"marginTop\": \"10px\", \"marginLeft\": \"8%\" } },\n                                React.createElement(\"b\", null, \"Memory\")),\n                            React.createElement(\"div\", { id: \"memory\", className: \"index\", style: { \"color\": \"#5bcc8f\", \"position\": \"absolute\", \"marginTop\": \"25px\", \"marginLeft\": \"8%\" } }, \"6.5/15.8 GB (41%)\"),\n                            React.createElement(ej2_react_charts_1.SparklineComponent, { loaded: updateSparkline3.bind(this), load: load.bind(this), ref: function (m) { return sparkInstance1 = m; }, id: 'spark3-container', height: '130px', width: '90%', lineWidth: 1, type: 'Area', valueType: 'Numeric', fill: '#e0f9d1', axisSettings: {\n                                    minY: 0,\n                                    maxY: 130\n                                }, containerArea: {\n                                    background: 'white',\n                                    border: {\n                                        color: '#dcdfe0',\n                                        width: 2\n                                    }\n                                }, border: {\n                                    color: '#27ad66',\n                                    width: 1\n                                }, dataSource: [\n                                    { x: 0, yval: 50 },\n                                    { x: 1, yval: 30 },\n                                    { x: 2, yval: 20 },\n                                    { x: 3, yval: 70 },\n                                    { x: 4, yval: 50 },\n                                    { x: 5, yval: 20 },\n                                    { x: 6, yval: 80 },\n                                    { x: 7, yval: 10 },\n                                    { x: 8, yval: 30 },\n                                    { x: 9, yval: 10 },\n                                    { x: 10, yval: 70 },\n                                    { x: 11, yval: 50 },\n                                    { x: 12, yval: 10 },\n                                    { x: 13, yval: 60 },\n                                    { x: 14, yval: 50 },\n                                    { x: 15, yval: 30 },\n                                    { x: 16, yval: 10 },\n                                    { x: 17, yval: 20 },\n                                    { x: 18, yval: 60 },\n                                    { x: 19, yval: 50 }\n                                ], xName: 'x', yName: 'yval' }))),\n                    React.createElement(\"div\", { className: \"col-lg-3 col-m-3 col-sm-6\" },\n                        React.createElement(\"div\", { className: \"spark\", id: \"spark-container4\" },\n                            React.createElement(\"div\", { className: \"index\", style: { \"fontSize\": \"12px\", \"position\": \"absolute\", \"marginTop\": \"10px\", \"marginLeft\": \"8%\" } },\n                                React.createElement(\"b\", null, \"Ethernet\")),\n                            React.createElement(\"div\", { id: \"net\", className: \"index\", style: { \"color\": \"#d1a990\", \"position\": \"absolute\", \"marginTop\": \"25px\", \"marginLeft\": \"8%\" } }, \"6.5/15.8 GB (41%)\"),\n                            React.createElement(ej2_react_charts_1.SparklineComponent, { loaded: updateSparkline4.bind(this), load: load.bind(this), ref: function (m) { return sparkInstance3 = m; }, id: 'spark4-container', height: '130px', width: '90%', lineWidth: 1, type: 'Area', valueType: 'Numeric', fill: '#F2D8C7', axisSettings: {\n                                    minY: 0,\n                                    maxY: 120\n                                }, containerArea: {\n                                    background: 'white',\n                                    border: {\n                                        color: '#dcdfe0',\n                                        width: 2\n                                    }\n                                }, border: {\n                                    color: '#AA907A',\n                                    width: 1\n                                }, dataSource: [\n                                    { x: 0, yval: 50 },\n                                    { x: 1, yval: 30 },\n                                    { x: 2, yval: 20 },\n                                    { x: 3, yval: 70 },\n                                    { x: 4, yval: 50 },\n                                    { x: 5, yval: 20 },\n                                    { x: 6, yval: 80 },\n                                    { x: 7, yval: 10 },\n                                    { x: 8, yval: 30 },\n                                    { x: 9, yval: 10 },\n                                    { x: 10, yval: 70 },\n                                    { x: 11, yval: 50 },\n                                    { x: 12, yval: 10 },\n                                    { x: 13, yval: 60 },\n                                    { x: 14, yval: 50 },\n                                    { x: 15, yval: 30 },\n                                    { x: 16, yval: 10 },\n                                    { x: 17, yval: 20 },\n                                    { x: 18, yval: 60 },\n                                    { x: 19, yval: 50 }\n                                ], xName: 'x', yName: 'yval' }))))))));\n}\nexports.default = LiveUpdate;\nvar root = (0, client_1.createRoot)(document.getElementById('sample'));\nroot.render(React.createElement(LiveUpdate, null));\n\n\n//# sourceURL=webpack:///./samples/sparkline/live-update-functional/app/index.tsx?");

/***/ }),

/***/ "./samples/sparkline/live-update-functional/app/sample-base.tsx":
/*!**********************************************************************!*\
  !*** ./samples/sparkline/live-update-functional/app/sample-base.tsx ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSampleSection = exports.SampleBase = void 0;\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ej2_base_1 = __webpack_require__(/*! @syncfusion/ej2-base */ \"./node_modules/@syncfusion/ej2-base/index.js\");\n(0, ej2_base_1.enableRipple)(window.ripple);\nvar SampleBase = /** @class */ (function (_super) {\n    __extends(SampleBase, _super);\n    function SampleBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SampleBase.prototype.rendereComplete = function () {\n        /**custom render complete function */\n    };\n    SampleBase.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.rendereComplete();\n        });\n    };\n    return SampleBase;\n}(React.PureComponent));\nexports.SampleBase = SampleBase;\nfunction updateSampleSection() { }\nexports.updateSampleSection = updateSampleSection;\n\n\n//# sourceURL=webpack:///./samples/sparkline/live-update-functional/app/sample-base.tsx?");

/***/ }),

/***/ "./samples/sparkline/live-update-functional/theme-color.ts":
/*!*****************************************************************!*\
  !*** ./samples/sparkline/live-update-functional/theme-color.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSparkLineTheme = void 0;\nvar loadSparkLineTheme = function (args) {\n    var theme = location.hash.split('/')[1];\n    theme = theme ? theme : 'Tailwind3';\n    args.sparkline.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    return args.sparkline.theme;\n};\nexports.loadSparkLineTheme = loadSparkLineTheme;\n\n\n//# sourceURL=webpack:///./samples/sparkline/live-update-functional/theme-color.ts?");

/***/ })

/******/ });