{"version":3,"file":"syncfusion-ej2-angular-circulargauge.mjs","sources":["../../src/circular-gauge/annotations.directive.ts","../../src/circular-gauge/ranges.directive.ts","../../src/circular-gauge/pointers.directive.ts","../../src/circular-gauge/axes.directive.ts","../../src/circular-gauge/circulargauge.component.ts","../../src/circular-gauge/circulargauge.module.ts","../../src/circular-gauge/circulargauge-all.module.ts","../../syncfusion-ej2-angular-circulargauge.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['angle', 'autoAngle', 'content', 'description', 'radius', 'textStyle', 'zIndex'];\nlet outputs: string[] = [];\n/**\n * Represents the directive to render and customize the annotations in an axis of circular gauge.\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\n@Directive({\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Sets and gets the angle for annotation with respect to axis in circular gauge.\n     * @default 90\n     */\n    public angle: any;\n    /** \n     * Enables and disables the rotation of the annotation along the axis.\n     * @default false\n     */\n    public autoAngle: any;\n    /** \n     * Sets and gets the information about annotation for assistive technology.\n     * @default null\n     */\n    public description: any;\n    /** \n     * Sets and gets the radius for annotation with respect to axis in circular gauge.\n     * @default '50%'\n     */\n    public radius: any;\n    /** \n     * Sets and gets the style of the text in annotation.\n     */\n    public textStyle: any;\n    /** \n     * Sets and gets the z-index of an annotation in an axis in the circular gauge.\n     * @default '-1'\n     */\n    public zIndex: any;\n    /** \n     * Sets and gets the content of the annotation. This property accepts the HTML string or id of the custom element.\n     * @default null\n     * @asptype string\n     */\n    @ContentChild('content')\n    @Template()\n    public content: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Annotation Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-circulargauge>e-axes>e-axis>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n})\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\n    constructor() {\n        super('annotations');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['color', 'end', 'endWidth', 'legendText', 'linearGradient', 'offset', 'opacity', 'position', 'radialGradient', 'radius', 'roundedCornerRadius', 'start', 'startWidth'];\nlet outputs: string[] = [];\n/**\n * Represents the directive to render and customize the ranges in an axis of circular gauge.\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\n@Directive({\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class RangeDirective extends ComplexBase<RangeDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Sets and gets the color of the ranges in circular gauge.\n     * @aspdefaultvalueignore \n     * @default null\n     */\n    public color: any;\n    /** \n     * Sets and gets the end value of the range in circular gauge.\n     * @aspdefaultvalueignore \n     * @default 0\n     */\n    public end: any;\n    /** \n     * Sets and gets the width for the end of the range in the circular gauge.\n     * @default '10'\n     */\n    public endWidth: any;\n    /** \n     * Sets and gets the text to be displayed for the corresponding legend item in the legend of the circular gauge.\n     * @default ''\n     */\n    public legendText: any;\n    /** \n     * Sets and gets the properties to render a linear gradient for the range. \n     * If both linear and radial gradient is set, then the linear gradient will be rendered in the range.\n     * @default null\n     */\n    public linearGradient: any;\n    /** \n     * Sets and gets the offset value for the range from which it is to be placed from the axis in circular gauge.\n     * @default '0'\n     */\n    public offset: any;\n    /** \n     * Sets and gets the opacity for the ranges in circular gauge.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * Sets and gets the position of the range in the axis in circular gauge.\n     * @default Auto\n     */\n    public position: any;\n    /** \n     * Sets and gets the properties to render a radial gradient for the range.\n     * @default null\n     */\n    public radialGradient: any;\n    /** \n     * Sets and gets the radius of the range for circular gauge.\n     * @default null\n     */\n    public radius: any;\n    /** \n     * Sets and gets the corner radius for ranges in circular gauge.\n     * @default 0\n     */\n    public roundedCornerRadius: any;\n    /** \n     * Sets and gets the start value of the range in circular gauge.\n     * @aspdefaultvalueignore \n     * @default 0\n     */\n    public start: any;\n    /** \n     * Sets and gets the width for the start of the range in the circular gauge.\n     * @default '10'\n     */\n    public startWidth: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Range Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-circulargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n})\nexport class RangesDirective extends ArrayBase<RangesDirective> {\n    constructor() {\n        super('ranges');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['animation', 'border', 'cap', 'color', 'description', 'enableDrag', 'imageUrl', 'linearGradient', 'markerHeight', 'markerShape', 'markerWidth', 'needleEndWidth', 'needleStartWidth', 'needleTail', 'offset', 'pointerWidth', 'position', 'radialGradient', 'radius', 'roundedCornerRadius', 'text', 'textStyle', 'type', 'value'];\nlet outputs: string[] = [];\n/**\n * Represents the directive to render and customize the pointers in an axis of circular gauge.\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\n@Directive({\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class PointerDirective extends ComplexBase<PointerDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Sets and gets the type of pointer for an axis in Circular gauge.\n     * @default Needle\n     */\n    public type: any;\n    /** \n     * Sets and gets the options for the animation of the pointers that propagate while rendering the axis and updating the pointer value in the circular gauge.\n     */\n    public animation: any;\n    /** \n     * Sets and gets the options to customize the style properties of the border for the needle pointer in an axis.\n     */\n    public border: any;\n    /** \n     * Sets and gets the options to customize the cap element of the needle pointer in an axis.\n     */\n    public cap: any;\n    /** \n     * Sets and gets the color of the pointer in an axis.\n     * @default null\n     */\n    public color: any;\n    /** \n     * Sets and gets the information about pointer for assistive technology.\n     * @default null\n     */\n    public description: any;\n    /** \n     * Enables and disables drag movement of the pointer in the circular gauge.\n     * @default false\n     */\n    public enableDrag: any;\n    /** \n     * Sets and gets the URL for the image that is to be displayed as pointer. \n     * It requires marker shape value to be `Image`.\n     * @default null\n     */\n    public imageUrl: any;\n    /** \n     * Sets and gets the properties to render a linear gradient for the pointer. \n     * If both linear and radial gradient is set, then the linear gradient will be rendered in the pointer.\n     * @default null\n     */\n    public linearGradient: any;\n    /** \n     * Sets and gets the height of the marker pointer in an axis.\n     * @default 5\n     */\n    public markerHeight: any;\n    /** \n     * Sets and gets the shape of the marker pointer in an axis.\n     * @default Circle\n     */\n    public markerShape: any;\n    /** \n     * Sets and gets the width of the marker pointer in an axis.\n     * @default 5\n     */\n    public markerWidth: any;\n    /** \n     * Sets or gets the width at the ending edge of the needle pointer in an axis.\n     * @default null\n     */\n    public needleEndWidth: any;\n    /** \n     * Sets or gets the width at the starting edge of the needle pointer in an axis.\n     * @default null\n     */\n    public needleStartWidth: any;\n    /** \n     * Sets and gets the options to customize the tail element of the needle pointer in an axis.\n     */\n    public needleTail: any;\n    /** \n     * Sets and gets the offset value of pointer from scale.\n     * @default '0'\n     */\n    public offset: any;\n    /** \n     * Sets and gets the width of the pointer in axis.\n     * @default 20\n     */\n    public pointerWidth: any;\n    /** \n     * Sets and gets the position of pointer for an axis.\n     * @default Auto\n     */\n    public position: any;\n    /** \n     * Sets and gets the properties to render a radial gradient for pointer.\n     * @default null\n     */\n    public radialGradient: any;\n    /** \n     * Sets and gets the radius of pointer for marker and range type pointer and fix length of pointer for needle pointer.\n     * @default null\n     */\n    public radius: any;\n    /** \n     * Sets and gets the corner radius for pointer in axis.\n     * @default 0\n     */\n    public roundedCornerRadius: any;\n    /** \n     * Sets and gets the text for the marker pointer. To render the text in the marker pointer, the marker shape must be set as `Text`.\n     * @default ''\n     */\n    public text: any;\n    /** \n     * Sets and gets the style of text in marker pointer of an axis.\n     */\n    public textStyle: any;\n    /** \n     * Sets and gets the value of the pointer in circular gauge.\n     * @aspdefaultvalueignore \n     * @default null\n     */\n    public value: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Pointer Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-circulargauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n})\nexport class PointersDirective extends ArrayBase<PointersDirective> {\n    constructor() {\n        super('pointers');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { AnnotationsDirective } from './annotations.directive';\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet input: string[] = ['annotations', 'background', 'direction', 'endAngle', 'hideIntersectingLabel', 'labelStyle', 'lineStyle', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'pointers', 'radius', 'rangeGap', 'ranges', 'roundingPlaces', 'showLastLabel', 'startAndEndRangeGap', 'startAngle'];\nlet outputs: string[] = [];\n/**\n * Represents the directive to render the axes in the Circular Gauge.\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\n@Directive({\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childAnnotations: new ContentChild(AnnotationsDirective), \n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n})\nexport class AxisDirective extends ComplexBase<AxisDirective> {\n    public directivePropList: any;\n\t\n    public childAnnotations: any;\n    public childRanges: any;\n    public childPointers: any;\n    public tags: string[] = ['annotations', 'ranges', 'pointers'];\n    /** \n     * Sets and gets the annotation elements for an axis in circular gauge.\n     */\n    public annotations: any;\n    /** \n     * Sets and gets the background color of an axis. This property accepts value in hex code, rgba string as a valid CSS color string.\n     * @default null\n     */\n    public background: any;\n    /** \n     * Sets and gets the direction of an axis.\n     * @default ClockWise\n     */\n    public direction: any;\n    /** \n     * Sets and gets the end angle of an axis in circular gauge.\n     * @default 160\n     */\n    public endAngle: any;\n    /** \n     * Enables and disables the intersecting labels to be hidden in axis.\n     * @default false\n     */\n    public hideIntersectingLabel: any;\n    /** \n     * Sets and gets the style of the axis label in circular gauge.\n     */\n    public labelStyle: any;\n    /** \n     * Sets and gets the style of the line in axis of circular gauge.\n     */\n    public lineStyle: any;\n    /** \n     * Sets and gets the major tick lines of an axis in circular gauge.\n     * @default { width: 2, height: 10 }\n     */\n    public majorTicks: any;\n    /** \n     * Sets and gets the maximum value of an axis in the circular gauge.\n     * @aspdefaultvalueignore \n     * @default null\n     */\n    public maximum: any;\n    /** \n     * Sets and gets the minimum value of an axis in the circular gauge.\n     * @aspdefaultvalueignore \n     * @default null\n     */\n    public minimum: any;\n    /** \n     * Sets and gets the minor tick lines of an axis in circular gauge.\n     * @default { width: 2, height: 5 }\n     */\n    public minorTicks: any;\n    /** \n     * Sets and gets the pointers of an axis in circular gauge.\n     */\n    public pointers: any;\n    /** \n     * Sets and gets the radius of an axis in circular gauge.\n     * @default null\n     */\n    public radius: any;\n    /** \n     * Sets and gets the gap between the ranges by specified value in circular gauge.\n     * @default null\n     */\n    public rangeGap: any;\n    /** \n     * Sets and gets the ranges of an axis in circular gauge.\n     */\n    public ranges: any;\n    /** \n     * Sets and gets the rounding off value in the an axis label.\n     * @default null\n     */\n    public roundingPlaces: any;\n    /** \n     * Enables and disables the last label of axis when it is hidden in circular gauge.\n     * @default false\n     */\n    public showLastLabel: any;\n    /** \n     * Enables and disables the start and end gap between the ranges and axis in circular gauge.\n     * @default false\n     */\n    public startAndEndRangeGap: any;\n    /** \n     * Sets and gets the start angle of an axis in circular gauge.\n     * @default 200\n     */\n    public startAngle: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Axis Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-circulargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n})\nexport class AxesDirective extends ArrayBase<AxesDirective> {\n    constructor() {\n        super('axes');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { CircularGauge } from '@syncfusion/ej2-circulargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\n\nexport const inputs: string[] = ['allowImageExport','allowMargin','allowPdfExport','allowPrint','allowRangePreRender','animationDuration','axes','background','border','centerX','centerY','description','enablePersistence','enablePointerDrag','enableRangeDrag','enableRtl','height','legendSettings','locale','margin','moveToCenter','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','beforePrint','dragEnd','dragMove','dragStart','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','legendRender','load','loaded','radiusCalculate','resized','tooltipRender'];\nexport const twoWays: string[] = [''];\n\n/**\n * Represents the Angular Circular Gauge component. This tag is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <ej-circulargauge></ej-circulargauge>\n * ```\n */\n@Component({\n    selector: 'ejs-circulargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class CircularGaugeComponent extends CircularGauge implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tanimationComplete: any;\n\tannotationRender: any;\n\taxisLabelRender: any;\n\tbeforePrint: any;\n\tdragEnd: any;\n\tdragMove: any;\n\tdragStart: any;\n\tgaugeMouseDown: any;\n\tgaugeMouseLeave: any;\n\tgaugeMouseMove: any;\n\tgaugeMouseUp: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tradiusCalculate: any;\n\tresized: any;\n\tpublic tooltipRender: any;\n    public childAxes: QueryList<AxesDirective>;\n    public tags: string[] = ['axes'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('CircularGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugeLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugePrint');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugePdfExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugeImageExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('CircularGaugeGradient');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childAxes;\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { CircularGaugeComponent } from './circulargauge.component';\n\n/**\n * NgModule definition for the CircularGauge component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        CircularGaugeComponent,\n        AnnotationDirective,\n        AnnotationsDirective,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective\n    ],\n    exports: [\n        CircularGaugeComponent,\n        AnnotationDirective,\n        AnnotationsDirective,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective\n    ]\n})\nexport class CircularGaugeModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { CircularGaugeComponent } from './circulargauge.component';\nimport { CircularGaugeModule } from './circulargauge.module';\nimport {GaugeTooltip, Annotations, Legend, Print, PdfExport, ImageExport, Gradient} from '@syncfusion/ej2-circulargauge'\n\n\nexport const GaugeTooltipService: ValueProvider = { provide: 'CircularGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const AnnotationsService: ValueProvider = { provide: 'CircularGaugeAnnotations', useValue: Annotations};\nexport const LegendService: ValueProvider = { provide: 'CircularGaugeLegend', useValue: Legend};\nexport const PrintService: ValueProvider = { provide: 'CircularGaugePrint', useValue: Print};\nexport const PdfExportService: ValueProvider = { provide: 'CircularGaugePdfExport', useValue: PdfExport};\nexport const ImageExportService: ValueProvider = { provide: 'CircularGaugeImageExport', useValue: ImageExport};\nexport const GradientService: ValueProvider = { provide: 'CircularGaugeGradient', useValue: Gradient};\n\n/**\n * NgModule definition for the CircularGauge component with providers.\n */\n@NgModule({\n    imports: [CommonModule, CircularGaugeModule],\n    exports: [\n        CircularGaugeModule\n    ],\n    providers:[\n        GaugeTooltipService,\n        AnnotationsService,\n        LegendService,\n        PrintService,\n        PdfExportService,\n        ImageExportService,\n        GradientService\n    ]\n})\nexport class CircularGaugeAllModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["input","outputs"],"mappings":"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"}