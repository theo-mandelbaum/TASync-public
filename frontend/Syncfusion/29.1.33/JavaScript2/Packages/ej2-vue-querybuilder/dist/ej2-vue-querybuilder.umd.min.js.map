{"version":3,"file":"ej2-vue-querybuilder.umd.min.js","sources":["../src/query-builder/columns.directive.js","../src/query-builder/querybuilder.component.js"],"sourcesContent":["import { gh, isExecute, vueDefineComponent } from '@syncfusion/ej2-vue-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport var ColumnsDirective = vueDefineComponent({\n    inject: { custom: { default: null } },\n    render: function (createElement) {\n        if (!isExecute) {\n            var h = !isExecute ? gh : createElement;\n            var slots = null;\n            if (!isNullOrUndefined(this.$slots.default)) {\n                slots = !isExecute ? this.$slots.default() : this.$slots.default;\n            }\n            return h('div', { class: 'e-directive' }, slots);\n        }\n        return;\n    },\n    updated: function () {\n        if (!isExecute && this.custom) {\n            this.custom();\n        }\n    },\n    methods: {\n        getTag: function () {\n            return 'e-columns';\n        }\n    }\n});\nexport var ColumnsPlugin = {\n    name: 'e-columns',\n    install: function (Vue) {\n        Vue.component(ColumnsPlugin.name, ColumnsDirective);\n    }\n};\n/**\n * `e-column` directive represent a column of the VueJS QueryBuilder.\n * It must be contained in a QueryBuilder component(`ejs-querybuilder`).\n * ```vue\n * <ejs-querybuilder :dataSource='data'>\n *   <e-columns>\n *    <e-column field='ID' label='ID' type='number'/>\n *    <e-column field='Date' label='Date' type='date' format='dd/MM/yyyy'/>\n *   </e-columns>\n * </ejs-querybuilder>\n * ```\n */\nexport var ColumnDirective = vueDefineComponent({\n    render: function () {\n        return;\n    },\n    methods: {\n        getTag: function () {\n            return 'e-column';\n        }\n    }\n});\nexport var ColumnPlugin = {\n    name: 'e-column',\n    install: function (Vue) {\n        Vue.component(ColumnPlugin.name, ColumnDirective);\n    }\n};\n","import { ComponentBase, gh, getProps, isExecute, vueDefineComponent } from '@syncfusion/ej2-vue-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { QueryBuilder } from '@syncfusion/ej2-querybuilder';\nimport { ColumnsDirective, ColumnDirective, ColumnsPlugin, ColumnPlugin } from './columns.directive';\nexport var properties = ['isLazyUpdate', 'plugins', 'addRuleToNewGroups', 'allowDragAndDrop', 'allowValidation', 'autoSelectField', 'autoSelectOperator', 'columns', 'cssClass', 'dataSource', 'displayMode', 'enableNotCondition', 'enablePersistence', 'enableRtl', 'enableSeparateConnector', 'fieldMode', 'fieldModel', 'headerTemplate', 'height', 'immediateModeDelay', 'locale', 'matchCase', 'maxGroupCount', 'operatorModel', 'readonly', 'rule', 'separator', 'showButtons', 'sortDirection', 'summaryView', 'valueModel', 'width', 'actionBegin', 'beforeChange', 'change', 'created', 'dataBound', 'ruleChange', 'drag', 'dragStart', 'drop'];\nexport var modelProps = [];\nexport var testProp = getProps({ props: properties });\nexport var props = testProp[0], watch = testProp[1], emitProbs = Object.keys(watch);\nemitProbs.push('modelchanged', 'update:modelValue');\nfor (var _i = 0, modelProps_1 = modelProps; _i < modelProps_1.length; _i++) {\n    var props_1 = modelProps_1[_i];\n    emitProbs.push('update:' + props_1);\n}\n/**\n * Represents the VueJS QueryBuilder Component.\n * ```html\n * <ejs-querybuilder></ejs-querybuilder>\n * ```\n */\nexport var QueryBuilderComponent = vueDefineComponent({\n    name: 'QueryBuilderComponent',\n    mixins: [ComponentBase],\n    props: props,\n    watch: watch,\n    emits: emitProbs,\n    provide: function () { return { custom: this.custom }; },\n    data: function () {\n        return {\n            ej2Instances: new QueryBuilder({}),\n            propKeys: properties,\n            models: modelProps,\n            hasChildDirective: true,\n            hasInjectedModules: true,\n            tagMapper: { \"e-columns\": \"e-column\" },\n            tagNameMapper: {},\n            isVue3: !isExecute,\n            templateCollection: {},\n        };\n    },\n    created: function () {\n        this.bindProperties();\n        this.ej2Instances._setProperties = this.ej2Instances.setProperties;\n        this.ej2Instances.setProperties = this.setProperties;\n        this.ej2Instances.clearTemplate = this.clearTemplate;\n        this.updated = this.updated;\n    },\n    render: function (createElement) {\n        var h = !isExecute ? gh : createElement;\n        var slots = null;\n        if (!isNullOrUndefined(this.$slots.default)) {\n            slots = !isExecute ? this.$slots.default() : this.$slots.default;\n        }\n        return h('div', slots);\n    },\n    methods: {\n        clearTemplate: function (templateNames) {\n            if (!templateNames) {\n                templateNames = Object.keys(this.templateCollection || {});\n            }\n            if (templateNames.length && this.templateCollection) {\n                for (var _i = 0, templateNames_1 = templateNames; _i < templateNames_1.length; _i++) {\n                    var tempName = templateNames_1[_i];\n                    var elementCollection = this.templateCollection[tempName];\n                    if (elementCollection && elementCollection.length) {\n                        for (var _a = 0, elementCollection_1 = elementCollection; _a < elementCollection_1.length; _a++) {\n                            var ele = elementCollection_1[_a];\n                            this.destroyPortals(ele);\n                        }\n                        delete this.templateCollection[tempName];\n                    }\n                }\n            }\n        },\n        setProperties: function (prop, muteOnChange) {\n            var _this = this;\n            if (this.isVue3) {\n                this.models = !this.models ? this.ej2Instances.referModels : this.models;\n            }\n            if (this.ej2Instances && this.ej2Instances._setProperties) {\n                this.ej2Instances._setProperties(prop, muteOnChange);\n            }\n            if (prop && this.models && this.models.length) {\n                Object.keys(prop).map(function (key) {\n                    _this.models.map(function (model) {\n                        if ((key === model) && !(/datasource/i.test(key))) {\n                            if (_this.isVue3) {\n                                _this.ej2Instances.vueInstance.$emit('update:' + key, prop[key]);\n                            }\n                            else {\n                                _this.$emit('update:' + key, prop[key]);\n                                _this.$emit('modelchanged', prop[key]);\n                            }\n                        }\n                    });\n                });\n            }\n        },\n        custom: function () {\n            this.updated();\n        },\n        addGroups: function (groups, groupID) {\n            return this.ej2Instances.addGroups(groups, groupID);\n        },\n        addRules: function (rule, groupID) {\n            return this.ej2Instances.addRules(rule, groupID);\n        },\n        cloneGroup: function (groupID, parentGroupID, index) {\n            return this.ej2Instances.cloneGroup(groupID, parentGroupID, index);\n        },\n        cloneRule: function (ruleID, groupID, index) {\n            return this.ej2Instances.cloneRule(ruleID, groupID, index);\n        },\n        deleteGroup: function (target) {\n            return this.ej2Instances.deleteGroup(target);\n        },\n        deleteGroups: function (groupIdColl) {\n            return this.ej2Instances.deleteGroups(groupIdColl);\n        },\n        deleteRules: function (ruleIdColl) {\n            return this.ej2Instances.deleteRules(ruleIdColl);\n        },\n        destroy: function () {\n            return this.ej2Instances.destroy();\n        },\n        getDataManagerQuery: function (rule) {\n            return this.ej2Instances.getDataManagerQuery(rule);\n        },\n        getFilteredRecords: function () {\n            return this.ej2Instances.getFilteredRecords();\n        },\n        getGroup: function (target) {\n            return this.ej2Instances.getGroup(target);\n        },\n        getMongoQuery: function (rule) {\n            return this.ej2Instances.getMongoQuery(rule);\n        },\n        getOperators: function (field) {\n            return this.ej2Instances.getOperators(field);\n        },\n        getParameterizedNamedSql: function (rule) {\n            return this.ej2Instances.getParameterizedNamedSql(rule);\n        },\n        getParameterizedSql: function (rule) {\n            return this.ej2Instances.getParameterizedSql(rule);\n        },\n        getPredicate: function (rule) {\n            return this.ej2Instances.getPredicate(rule);\n        },\n        getRule: function (elem) {\n            return this.ej2Instances.getRule(elem);\n        },\n        getRules: function () {\n            return this.ej2Instances.getRules();\n        },\n        getRulesFromSql: function (sqlString, sqlLocale) {\n            return this.ej2Instances.getRulesFromSql(sqlString, sqlLocale);\n        },\n        getSqlFromRules: function (rule, allowEscape, sqlLocale) {\n            return this.ej2Instances.getSqlFromRules(rule, allowEscape, sqlLocale);\n        },\n        getValidRules: function (currentRule) {\n            return this.ej2Instances.getValidRules(currentRule);\n        },\n        getValues: function (field) {\n            return this.ej2Instances.getValues(field);\n        },\n        lockGroup: function (groupID) {\n            return this.ej2Instances.lockGroup(groupID);\n        },\n        lockRule: function (ruleID) {\n            return this.ej2Instances.lockRule(ruleID);\n        },\n        notifyChange: function (value, element, type) {\n            return this.ej2Instances.notifyChange(value, element, type);\n        },\n        requiredModules: function () {\n            return this.ej2Instances.requiredModules();\n        },\n        reset: function () {\n            return this.ej2Instances.reset();\n        },\n        setMongoQuery: function (mongoQuery, mongoLocale) {\n            return this.ej2Instances.setMongoQuery(mongoQuery, mongoLocale);\n        },\n        setParameterizedNamedSql: function (sqlQuery) {\n            return this.ej2Instances.setParameterizedNamedSql(sqlQuery);\n        },\n        setParameterizedSql: function (sqlQuery) {\n            return this.ej2Instances.setParameterizedSql(sqlQuery);\n        },\n        setRules: function (rule) {\n            return this.ej2Instances.setRules(rule);\n        },\n        setRulesFromSql: function (sqlString, sqlLocale) {\n            return this.ej2Instances.setRulesFromSql(sqlString, sqlLocale);\n        },\n        validateFields: function () {\n            return this.ej2Instances.validateFields();\n        },\n    }\n});\nexport var QueryBuilderPlugin = {\n    name: 'ejs-querybuilder',\n    install: function (Vue) {\n        Vue.component(QueryBuilderPlugin.name, QueryBuilderComponent);\n        Vue.component(ColumnPlugin.name, ColumnDirective);\n        Vue.component(ColumnsPlugin.name, ColumnsDirective);\n    }\n};\n"],"names":["ColumnsDirective","vueDefineComponent","inject","custom","default","render","createElement","slots","isExecute","gh","class","isNullOrUndefined","this","$slots","updated","methods","getTag","ColumnsPlugin","name","install","Vue","component","ColumnDirective","ColumnPlugin","properties","modelProps","testProp","getProps","props","watch","emitProbs","Object","keys","push","_i","modelProps_1","length","QueryBuilderComponent","mixins","ComponentBase","emits","provide","data","ej2Instances","QueryBuilder","propKeys","models","hasChildDirective","hasInjectedModules","tagMapper","e-columns","tagNameMapper","isVue3","templateCollection","created","bindProperties","_setProperties","setProperties","clearTemplate","templateNames","templateNames_1","tempName","elementCollection","_a","elementCollection_1","ele","destroyPortals","prop","muteOnChange","_this","referModels","map","key","model","test","vueInstance","$emit","addGroups","groups","groupID","addRules","rule","cloneGroup","parentGroupID","index","cloneRule","ruleID","deleteGroup","target","deleteGroups","groupIdColl","deleteRules","ruleIdColl","destroy","getDataManagerQuery","getFilteredRecords","getGroup","getMongoQuery","getOperators","field","getParameterizedNamedSql","getParameterizedSql","getPredicate","getRule","elem","getRules","getRulesFromSql","sqlString","sqlLocale","getSqlFromRules","allowEscape","getValidRules","currentRule","getValues","lockGroup","lockRule","notifyChange","value","element","type","requiredModules","reset","setMongoQuery","mongoQuery","mongoLocale","setParameterizedNamedSql","sqlQuery","setParameterizedSql","setRules","setRulesFromSql","validateFields","QueryBuilderPlugin"],"mappings":"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"}