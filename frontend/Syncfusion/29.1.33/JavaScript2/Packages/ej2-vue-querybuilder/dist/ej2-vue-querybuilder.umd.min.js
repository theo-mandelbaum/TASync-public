!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@syncfusion/ej2-querybuilder"),require("@syncfusion/ej2-vue-base"),require("@syncfusion/ej2-base")):"function"==typeof define&&define.amd?define(["exports","@syncfusion/ej2-querybuilder","@syncfusion/ej2-vue-base","@syncfusion/ej2-base"],t):t((e=e||self).ej={},e.ej2Querybuilder,e.ej2VueBase,e.ej2Base)}(this,function(t,n,s,r){"use strict";var i=s.vueDefineComponent({inject:{custom:{default:null}},render:function(e){var t;if(!s.isExecute)return t=null,(s.isExecute?e:s.gh)("div",{class:"e-directive"},t=r.isNullOrUndefined(this.$slots.default)?t:s.isExecute?this.$slots.default:this.$slots.default())},updated:function(){!s.isExecute&&this.custom&&this.custom()},methods:{getTag:function(){return"e-columns"}}}),u={name:"e-columns",install:function(e){e.component(u.name,i)}},o=s.vueDefineComponent({render:function(){},methods:{getTag:function(){return"e-column"}}}),a={name:"e-column",install:function(e){e.component(a.name,o)}},e=["isLazyUpdate","plugins","addRuleToNewGroups","allowDragAndDrop","allowValidation","autoSelectField","autoSelectOperator","columns","cssClass","dataSource","displayMode","enableNotCondition","enablePersistence","enableRtl","enableSeparateConnector","fieldMode","fieldModel","headerTemplate","height","immediateModeDelay","locale","matchCase","maxGroupCount","operatorModel","readonly","rule","separator","showButtons","sortDirection","summaryView","valueModel","width","actionBegin","beforeChange","change","created","dataBound","ruleChange","drag","dragStart","drop"],l=[],c=s.getProps({props:e}),d=c[0],c=c[1],h=Object.keys(c);h.push("modelchanged","update:modelValue");for(var f=0,m=l;f<m.length;f++)h.push("update:"+m[f]);var p=s.vueDefineComponent({name:"QueryBuilderComponent",mixins:[s.ComponentBase],props:d,watch:c,emits:h,provide:function(){return{custom:this.custom}},data:function(){return{ej2Instances:new n.QueryBuilder({}),propKeys:e,models:l,hasChildDirective:!0,hasInjectedModules:!0,tagMapper:{"e-columns":"e-column"},tagNameMapper:{},isVue3:!s.isExecute,templateCollection:{}}},created:function(){this.bindProperties(),this.ej2Instances._setProperties=this.ej2Instances.setProperties,this.ej2Instances.setProperties=this.setProperties,this.ej2Instances.clearTemplate=this.clearTemplate,this.updated=this.updated},render:function(e){var t=null;return(s.isExecute?e:s.gh)("div",t=r.isNullOrUndefined(this.$slots.default)?t:s.isExecute?this.$slots.default:this.$slots.default())},methods:{clearTemplate:function(e){if((e=e||Object.keys(this.templateCollection||{})).length&&this.templateCollection)for(var t=0,n=e;t<n.length;t++){var s=n[t],r=this.templateCollection[s];if(r&&r.length){for(var i=0,u=r;i<u.length;i++){var o=u[i];this.destroyPortals(o)}delete this.templateCollection[s]}}},setProperties:function(n,e){var s=this;this.isVue3&&(this.models=this.models||this.ej2Instances.referModels),this.ej2Instances&&this.ej2Instances._setProperties&&this.ej2Instances._setProperties(n,e),n&&this.models&&this.models.length&&Object.keys(n).map(function(t){s.models.map(function(e){t!==e||/datasource/i.test(t)||(s.isVue3?s.ej2Instances.vueInstance.$emit("update:"+t,n[t]):(s.$emit("update:"+t,n[t]),s.$emit("modelchanged",n[t])))})})},custom:function(){this.updated()},addGroups:function(e,t){return this.ej2Instances.addGroups(e,t)},addRules:function(e,t){return this.ej2Instances.addRules(e,t)},cloneGroup:function(e,t,n){return this.ej2Instances.cloneGroup(e,t,n)},cloneRule:function(e,t,n){return this.ej2Instances.cloneRule(e,t,n)},deleteGroup:function(e){return this.ej2Instances.deleteGroup(e)},deleteGroups:function(e){return this.ej2Instances.deleteGroups(e)},deleteRules:function(e){return this.ej2Instances.deleteRules(e)},destroy:function(){return this.ej2Instances.destroy()},getDataManagerQuery:function(e){return this.ej2Instances.getDataManagerQuery(e)},getFilteredRecords:function(){return this.ej2Instances.getFilteredRecords()},getGroup:function(e){return this.ej2Instances.getGroup(e)},getMongoQuery:function(e){return this.ej2Instances.getMongoQuery(e)},getOperators:function(e){return this.ej2Instances.getOperators(e)},getParameterizedNamedSql:function(e){return this.ej2Instances.getParameterizedNamedSql(e)},getParameterizedSql:function(e){return this.ej2Instances.getParameterizedSql(e)},getPredicate:function(e){return this.ej2Instances.getPredicate(e)},getRule:function(e){return this.ej2Instances.getRule(e)},getRules:function(){return this.ej2Instances.getRules()},getRulesFromSql:function(e,t){return this.ej2Instances.getRulesFromSql(e,t)},getSqlFromRules:function(e,t,n){return this.ej2Instances.getSqlFromRules(e,t,n)},getValidRules:function(e){return this.ej2Instances.getValidRules(e)},getValues:function(e){return this.ej2Instances.getValues(e)},lockGroup:function(e){return this.ej2Instances.lockGroup(e)},lockRule:function(e){return this.ej2Instances.lockRule(e)},notifyChange:function(e,t,n){return this.ej2Instances.notifyChange(e,t,n)},requiredModules:function(){return this.ej2Instances.requiredModules()},reset:function(){return this.ej2Instances.reset()},setMongoQuery:function(e,t){return this.ej2Instances.setMongoQuery(e,t)},setParameterizedNamedSql:function(e){return this.ej2Instances.setParameterizedNamedSql(e)},setParameterizedSql:function(e){return this.ej2Instances.setParameterizedSql(e)},setRules:function(e){return this.ej2Instances.setRules(e)},setRulesFromSql:function(e,t){return this.ej2Instances.setRulesFromSql(e,t)},validateFields:function(){return this.ej2Instances.validateFields()}}}),g={name:"ejs-querybuilder",install:function(e){e.component(g.name,p),e.component(a.name,o),e.component(u.name,i)}};Object.keys(n).forEach(function(e){"default"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}})}),t.ColumnDirective=o,t.ColumnPlugin=a,t.ColumnsDirective=i,t.ColumnsPlugin=u,t.QueryBuilderComponent=p,t.QueryBuilderPlugin=g,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ej2-vue-querybuilder.umd.min.js.map
