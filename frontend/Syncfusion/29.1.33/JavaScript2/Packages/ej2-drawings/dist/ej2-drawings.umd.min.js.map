{"version":3,"file":"ej2-drawings.umd.min.js","sources":["../src/drawing/core/appearance.js","../src/drawing/enum/enum.js","../src/drawing/primitives/size.js","../src/drawing/primitives/rect.js","../src/drawing/primitives/matrix.js","../src/drawing/utility/dom-util.js","../src/drawing/utility/base-util.js","../src/drawing/core/elements/drawing-element.js","../src/drawing/core/containers/container.js","../src/drawing/core/elements/text-element.js","../src/drawing/core/containers/canvas.js","../src/drawing/core/elements/image-element.js","../src/drawing/utility/path-util.js","../src/drawing/core/elements/path-element.js","../src/drawing/primitives/point.js","../src/drawing/rendering/canvas-renderer.js","../src/drawing/rendering/renderer.js","../src/drawing/rendering/svg-renderer.js","../src/drawing/utility/diagram-util.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var RotateTransform;\n(function (RotateTransform) {\n    /** Self - Sets the transform type as Self */\n    RotateTransform[RotateTransform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    RotateTransform[RotateTransform[\"Parent\"] = 2] = \"Parent\";\n})(RotateTransform || (RotateTransform = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    // /**   @private  */\n    // public isEmpty(): boolean {\n    //     return this.height === 0 && this.width === 0;\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    Rect.prototype.intersection = function (rect) {\n        if (this.intersects(rect)) {\n            var left = Math.max(this.left, rect.left);\n            var top_1 = Math.max(this.top, rect.top);\n            var right = Math.min(this.right, rect.right);\n            var bottom = Math.min(this.bottom, rect.bottom);\n            return new Rect(left, top_1, right - left, bottom - top_1);\n        }\n        return Rect.empty;\n    };\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    // public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    // }\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    Rect.prototype.toPoints = function () {\n        var points = [];\n        points.push(this.topLeft);\n        points.push(this.topRight);\n        points.push(this.bottomLeft);\n        points.push(this.bottomRight);\n        return points;\n    };\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.prototype.scale = function (scaleX, scaleY) {\n        this.width *= scaleX;\n        this.height *= scaleY;\n    };\n    Rect.prototype.offset = function (offsetX, offsetY) {\n        this.x += offsetX;\n        this.y += offsetY;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, bBoxTextHeight } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[parseInt(i.toString(), 10)];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    var path = 'pathTable';\n    // eslint-disable-next-line\n    if (!window[path]) {\n        // eslint-disable-next-line\n        window[path] = {};\n    }\n    if (data) {\n        var measureElement = 'measureElement';\n        // eslint-disable-next-line\n        window[measureElement].style.visibility = 'visible';\n        // eslint-disable-next-line\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        //let bounds: SVGRect = element.getBBox();\n        var bounds = void 0;\n        // eslint-disable-next-line\n        if (window[path][data]) {\n            // eslint-disable-next-line\n            bounds = window[path][data];\n        }\n        else {\n            // eslint-disable-next-line\n            window[path][data] = bounds = element.getBBox();\n            if ((bounds.x === 0 || bounds.y === 0) && (bounds.width === 0 || bounds.height === 0)) {\n                // eslint-disable-next-line\n                window[path][data] = bounds = getBBox(data);\n            }\n        }\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        // eslint-disable-next-line\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\n// tslint:disable-next-line\nfunction getBBox(path) {\n    var xmin = 0;\n    var xmax = 0;\n    var ymin = 0;\n    var ymax = 0;\n    // tslint:disable-next-line\n    var currentValue;\n    // tslint:disable-next-line\n    var currentpath = path;\n    currentpath = currentpath.replace(/[a-z].*/g, ' ').replace(/[\\sA-Z]+/gi, ' ').trim().split(' ');\n    for (var i = 0; i < currentpath.length; i++) {\n        if (currentpath[parseInt(i.toString(), 10)].length > 1) {\n            currentValue = currentpath[parseInt(i.toString(), 10)].split(',');\n            xmin = xmax = currentValue[0];\n            ymin = ymax = currentValue[1];\n        }\n    }\n    for (var i = 0; i < currentpath.length; i++) {\n        currentValue = currentpath[parseInt(i.toString(), 10)].split(',');\n        if (!currentValue[1]) {\n            currentValue[0] = xmin;\n            currentValue[1] = ymin;\n        }\n        xmin = Math.min(xmin, currentValue[0]);\n        xmax = Math.max(xmax, currentValue[0]);\n        ymin = Math.min(ymin, currentValue[1]);\n        ymax = Math.max(ymax, currentValue[1]);\n    }\n    return { x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin };\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity,\n        visible: element.visible, id: element.id,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\n/** @private */\nfunction wrapSvgText(text, textValue, maxHeight, pageHeight) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    // if (txtValue.indexOf('\\n') > -1) {\n                    //     txtValue = txtValue.replace('\\n', '');\n                    // }\n                    var width = bBoxText(txtValue, text);\n                    if ((Math.ceil(width) + 2 >= text.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, maxHeight, pageHeight);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\n/** @private */\nfunction wordWrapping(text, textValue, maxHeight, pageHeight) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var bounds1;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[parseInt(j.toString(), 10)].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            bounds1 = bBoxText(words[parseInt(i.toString(), 10)], text);\n            if (bounds1 > text.width && words[parseInt(i.toString(), 10)].length > 0 && text.textWrapping !== 'NoWrap') {\n                if (eachLine.length > 1) {\n                    words[parseInt(i.toString(), 10)] = words[parseInt(i.toString(), 10)] + '\\n';\n                }\n                text.content = words[parseInt(i.toString(), 10)];\n                childNodes = wrapText(text, txtValue, childNodes, maxHeight, pageHeight);\n            }\n            else {\n                txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[parseInt(i.toString(), 10)];\n                newText = txtValue + (words[i + 1] || '');\n                var width = bBoxText(newText, text);\n                if (eachLine.length > 1 && i === words.length - 1) {\n                    txtValue = txtValue + '\\n';\n                }\n                if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                    textValue = txtValue;\n                    childNodes[childNodes.length] = {\n                        text: (txtValue.indexOf('\\n') === -1 && i !== words.length - 1) ? txtValue + ' ' : textValue, x: 0, dy: 0,\n                        width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                    };\n                    txtValue = '';\n                }\n                else {\n                    if (i === words.length - 1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n                existingText = newText;\n                existingWidth = width;\n            }\n        }\n    }\n    return childNodes;\n}\n/** @private */\nfunction wrapText(txt, textValue, childNode, maxHeight, pageHeight) {\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || txt.content;\n    txtValue = '';\n    var freeTextHeight = txt.y;\n    var height = 0;\n    txtValue += content[0];\n    var isFreeTextHeightAllowed;\n    for (k = 0; k < content.length; k++) {\n        bounds1 = bBoxText(txtValue, txt);\n        if (bounds1 >= txt.width && txtValue.length > 0) {\n            childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n            txtValue = '';\n        }\n        else {\n            txtValue = txtValue + (content[k + 1] || '');\n            var width = bBoxText(txtValue, txt);\n            if ((Math.ceil(width) + 2 >= txt.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                txtValue = txtValue.slice(0, -1);\n                height = height + bBoxTextHeight(txtValue, txt);\n                freeTextHeight += height;\n                width = bBoxText(txtValue, txt);\n                isFreeTextHeightAllowed = ((maxHeight === undefined || maxHeight === null || height <= maxHeight) &&\n                    (pageHeight === undefined || pageHeight === null || freeTextHeight <= pageHeight));\n                if (isFreeTextHeightAllowed) {\n                    childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                }\n                txtValue = content[k + 1] || '';\n                freeTextHeight += height;\n            }\n            isFreeTextHeightAllowed = ((maxHeight === undefined || maxHeight === null || height <= maxHeight) &&\n                (pageHeight === undefined || pageHeight === null || freeTextHeight <= pageHeight));\n            if (k === content.length - 1 && txtValue.length > 0 && isFreeTextHeightAllowed) {\n                childNode[childNode.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                txtValue = '';\n            }\n        }\n    }\n    return childNode;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[parseInt(k.toString(), 10)].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[parseInt(k.toString(), 10)].dy = text.fontSize * 1.2;\n        childNodes[parseInt(k.toString(), 10)].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, maxHeight, pageHeight, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, maxHeight, pageHeight);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId && (typeof document !== 'undefined')) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : (typeof document !== 'undefined') ? document.getElementById(elementId) : null;\n    return diagramElement;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[parseInt(i.toString(), 10)] === 'style') {\n            element.style.cssText = attributes[keys[parseInt(i.toString(), 10)]];\n        }\n        else {\n            element.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n        }\n    }\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    var elementcoll;\n    if (diagramElement) {\n        elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n        adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n        adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n    return adornerLayer;\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        if (typeof document !== 'undefined') {\n            var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n            divElement.appendChild(svg);\n            var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(element);\n            var data = document.createTextNode('');\n            var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n            svg.appendChild(tSpan);\n            // eslint-disable-next-line\n            window[measureElement] = divElement;\n            // eslint-disable-next-line\n            window[measureElement].usageCount = 1;\n            document.body.appendChild(divElement);\n        }\n    }\n    else {\n        // eslint-disable-next-line\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'visible';\n    // eslint-disable-next-line\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getChildNode } from './dom-util';\nimport { Size } from '../primitives/size';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'visible';\n    // eslint-disable-next-line\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function bBoxTextHeight(textContent, options) {\n    var measureElement = 'measureElement';\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'visible';\n    // eslint-disable-next-line\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().height;\n    // eslint-disable-next-line\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n","import { RotateTransform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DrawingElement = /** @class */ (function () {\n    function DrawingElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        this.rotateValue = { x: 0, y: 0, angle: 0 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        /** @private */\n        this.transform = RotateTransform.Self | RotateTransform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        /** @private */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DrawingElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DrawingElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DrawingElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DrawingElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DrawingElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DrawingElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DrawingElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DrawingElement;\n}());\nexport { DrawingElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[parseInt(i.toString(), 10)];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     * @param pageHeight\n     * @private\n     */\n    Container.prototype.measureFreeText = function (availableSize, pageHeight) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[parseInt(i.toString(), 10)];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[parseInt(i.toString(), 10)];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 1,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     * @private\n     */\n    TextElement.prototype.measureFreeText = function (availableSize, pageHeight) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width, availableSize.height, pageHeight);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DrawingElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     * @param pageHeight\n     * @private\n     */\n    Canvas.prototype.measureFreeText = function (availableSize, pageHeight) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measureFreeText(availableSize, pageHeight);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets or gets the print id\n         * @private\n         */\n        _this.printID = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DrawingElement));\nexport { ImageElement };\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[parseInt(i.toString(), 10)];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[parseInt(j.toString(), 10)] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[parseInt(j.toString(), 10)] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[parseInt(j.toString(), 10)], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[parseInt(j.toString(), 10)], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[parseInt(j.toString(), 10)], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[parseInt(j.toString(), 10)], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    if (cornerRadius > height / 2) {\n        cornerRadius = height / 2;\n    }\n    if (cornerRadius > width / 2) {\n        cornerRadius = width / 2;\n    }\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        // eslint-disable-next-line\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[parseInt(i.toString(), 10)];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[parseInt(i.toString(), 10)];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[parseInt(i.toString(), 10)] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[parseInt(i.toString(), 10)];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[parseInt(i.toString(), 10)];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[parseInt(i.toString(), 10)] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[parseInt(i.toString(), 10)]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[parseInt(i.toString(), 10)]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[parseInt(j.toString(), 10)], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n        /** @private */\n        this.imageList = {};\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[parseInt(i.toString(), 10)];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[parseInt(i.toString(), 10)];\n                    if (child.text !== '\\n') {\n                        var offsetX = position.x + child.x - wrapBounds.x;\n                        var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                        // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        //     child.text = overFlow(child.text, options);\n                        // }\n                        ctx.fillText(child.text, offsetX, offsetY);\n                        if (options.textDecoration === 'Underline'\n                            || options.textDecoration === 'Overline'\n                            || options.textDecoration === 'LineThrough') {\n                            var startPointX = offsetX;\n                            var startPointY = void 0;\n                            var textlength = ctx.measureText(child.text).width;\n                            var endPointX = offsetX + textlength;\n                            var endPointY = void 0;\n                            switch (options.textDecoration) {\n                                case 'Underline':\n                                    startPointY = offsetY + 2;\n                                    endPointY = offsetY + 2;\n                                    break;\n                                case 'Overline':\n                                    startPointY = (position.y + child.dy * i);\n                                    endPointY = (position.y + child.dy * i);\n                                    break;\n                                case 'LineThrough':\n                                    startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                    endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                            }\n                            ctx.beginPath();\n                            ctx.moveTo(startPointX, startPointY);\n                            ctx.lineTo(endPointX, endPointY);\n                            ctx.strokeStyle = options.color;\n                            ctx.lineWidth = options.fontSize * .08;\n                            ctx.globalAlpha = options.opacity;\n                            ctx.stroke();\n                        }\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions, annotationCallback) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx.clearRect(x, y, dWidth, dHeight);\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.clearRect(x, y, width, height);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.clearRect(x, y, resultWidth, resultHeight);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.clearRect(x, y, width, height);\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            if (image.complete) {\n                var canvasId = ctx.canvas.id;\n                if (this.imageList[canvasId]) {\n                    var existingImageIndex = this.isExistingImage(canvasId, this.imageList, alignOptions);\n                    if (existingImageIndex !== -1) {\n                        this.updateImageList(existingImageIndex, this.imageList, canvasId);\n                    }\n                    this.updateCanvasList(this.imageList, canvasId);\n                }\n                //ctx.clearRect(x, y, width, height);\n                ctx.drawImage(image, x, y, width, height);\n            }\n            else {\n                var proxy_1 = this;\n                var transform_1 = ctx.getTransform();\n                image.onload = null;\n                var canvasId = ctx.canvas.id;\n                if (!this.imageList[canvasId]) {\n                    this.imageList[canvasId] = [];\n                }\n                var existingImageIndex = this.isExistingImage(canvasId, this.imageList, alignOptions);\n                var newImageEntry = { id: alignOptions.id, image: image, canvasId: canvasId };\n                if (existingImageIndex !== -1) {\n                    this.updateImageList(existingImageIndex, this.imageList, canvasId);\n                }\n                this.imageList[canvasId].push(newImageEntry);\n                image.onload = function () {\n                    var lastIndex = alignOptions.id.lastIndexOf('_content');\n                    var annotationID = lastIndex !== -1 ? alignOptions.id.substring(0, lastIndex) : alignOptions.id;\n                    var annotationObject = true;\n                    if (annotationCallback !== undefined && !annotationCallback(annotationID)) {\n                        annotationObject = false;\n                    }\n                    if (annotationObject) {\n                        ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n                        //ctx.clearRect(x, y, width, height);\n                        //ctx.drawImage(image, x, y, width, height);\n                        var canvasIdValue = ctx.canvas.id;\n                        if (proxy_1.imageList[canvasIdValue]) {\n                            var existingImageIndex_1 = proxy_1.isExistingImage(canvasIdValue, proxy_1.imageList, alignOptions);\n                            if (existingImageIndex_1 !== -1) {\n                                proxy_1.updateImageList(existingImageIndex_1, proxy_1.imageList, canvasIdValue);\n                                ctx.drawImage(image, x, y, width, height);\n                            }\n                            proxy_1.updateCanvasList(proxy_1.imageList, canvasIdValue);\n                        }\n                    }\n                };\n            }\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.isExistingImage = function (canvasId, imageList, alignOptions) {\n        return imageList[canvasId].findIndex(function (imageObject) { return imageObject.id === alignOptions.id; });\n    };\n    CanvasRenderer.prototype.updateImageList = function (existingImageIndex, imageList, canvasId) {\n        imageList[canvasId][existingImageIndex].image.onload = null;\n        imageList[canvasId].splice(existingImageIndex, 1);\n    };\n    CanvasRenderer.prototype.updateCanvasList = function (imageList, canvasId) {\n        if (imageList[canvasId] && imageList[canvasId].length === 0) {\n            delete imageList[canvasId];\n        }\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY, annotationCallback, annotationType) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image;\n        if (window.customStampCollection && window.customStampCollection.get(obj.printID)) {\n            image = window.customStampCollection.get(obj.printID);\n        }\n        else {\n            // Check if it is a sticky note type annotation\n            if (window && window.stickyNote && window.stickyNote.src && annotationType && annotationType == 'StickyNotes') {\n                image = window.stickyNote;\n            }\n            else {\n                // Create a new Image and set the source\n                image = new Image();\n                image.src = obj.source;\n            }\n        }\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj, annotationCallback);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette, annotationCallback, annotationType) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1, annotationCallback, annotationType);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer, annotationCallback, annotationType) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[parseInt(i.toString(), 10)], canvas, undefined, undefined, undefined, undefined, undefined, undefined, annotationCallback, annotationType);\n    }\n}\n","import { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { ImageElement } from '../core/elements/image-element';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DrawingRenderer = /** @class */ (function () {\n    function DrawingRenderer(name, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        // private svgRenderer: SvgRenderer;\n        /** @private */\n        this.isSvgMode = true;\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.isSvgMode = isSvgMode;\n        this.renderer = new CanvasRenderer();\n        //  this.svgRenderer = new SvgRenderer();\n    }\n    // /** @private */\n    // public setLayers(): void {\n    //     this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0] as SVGSVGElement;\n    // }\n    /**   @private  */\n    DrawingRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, annotationCallback, annotationType) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, annotationCallback, annotationType);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette, annotationCallback, annotationType);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette, annotationCallback, annotationType) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttrib                                                                           utes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.printID = element.printID;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette, annotationCallback, annotationType);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.id;\n        if (!this.isSvgMode) {\n            options.x = options.x;\n            options.y = options.y;\n        }\n        this.renderer.drawPath(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options);\n        this.renderer.drawText(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, annotationCallback, annotationType) {\n        transform = { tx: 0, ty: 0, scale: 1 };\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = parentSvg;\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue, annotationCallback, annotationType);\n            }\n        }\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.id;\n        this.renderer.drawRectangle(canvas, options);\n    };\n    /**   @private  */\n    DrawingRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity,\n            visible: element.visible, id: element.id, gradient: element.style.gradient,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    return DrawingRenderer;\n}());\nexport { DrawingRenderer };\n","import { Size } from './../primitives/size';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { processPathData, pathSegmentCollection } from '../utility/path-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            // eslint-disable-next-line\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        var pointerEvents = 'pointer-events';\n        if (attr['aria-label'] === '') {\n            // eslint-disable-next-line\n            attr[pointerEvents] = 'none';\n        }\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            fill = style.fill;\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[parseInt(i.toString(), 10)];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[parseInt(i.toString(), 10)] === 'style') {\n            svg.style.cssText = attributes[keys[parseInt(i.toString(), 10)]];\n        }\n        else {\n            svg.setAttribute(keys[parseInt(i.toString(), 10)], attributes[keys[parseInt(i.toString(), 10)]]);\n        }\n    }\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\nexport function getParentSvg(element, targetElement, canvas) {\n    if (element && element.id) {\n        if (targetElement && targetElement === 'selector') {\n            return this.pdfViewer.adornerSvgLayer;\n        }\n    }\n    return canvas;\n}\n","import { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { rotatePoint } from './base-util';\n/**\n * Implements the drawing functionalities\n */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\n/** @private */\nexport function findElementUnderMouse(obj, position, padding) {\n    return findTargetElement(obj.wrapper, position, padding);\n}\n/** @private */\nexport function findTargetElement(container, position, padding) {\n    for (var i = container.children.length - 1; i >= 0; i--) {\n        var element = container.children[parseInt(i.toString(), 10)];\n        if (element && element.bounds.containsPoint(position, 0)) {\n            if (element instanceof Container) {\n                var target = this.findTargetElement(element, position);\n                if (target) {\n                    return target;\n                }\n            }\n            if (element.bounds.containsPoint(position, 0)) {\n                return element;\n            }\n        }\n    }\n    if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n        return container;\n    }\n    return null;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            //    scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n"],"names":["getGradientType","obj","type","LinearGradient","RadialGradient","Thickness","left","right","top","bottom","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_super","__extends","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Margin","ChildProperty","Property","apply","Stop","getClassName","Gradient","Collection","ShapeStyle","ComplexFactory","StrokeStyle","TextStyle","RotateTransform","ElementAction","ConnectorConstraints","ThumbsConstraints","SelectorConstraints","NoOfSegments","Size","clone","width","height","Rect","get","x","enumerable","configurable","y","equals","rect1","rect2","uniteRect","rect","Math","max","Number","NaN","MAX_VALUE","min","unitePoint","point","intersection","top_1","intersects","empty","Inflate","padding","containsRect","containsPoint","toPoints","points","push","topLeft","topRight","bottomLeft","bottomRight","toBounds","_i","points_1","pt","scale","scaleX","scaleY","offset","offsetX","offsetY","MIN_VALUE","undefined","MatrixTypes","Matrix","m11","m12","m21","m22","identityMatrix","Identity","transformPointByMatrix","matrix","Translation","Scaling","num","num2","round","rotateMatrix","angle","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","matrix1","matrix2","type2","assignMatrix","mat","getChildNode","node","child","collection","Browser","info","name","childNodes","parseInt","toString","nodeType","children","measurePath","data","measureElement","bounds","svgBounds","path","window","style","visibility","element","setAttribute","getBBox","currentValue","xmin","xmax","ymin","ymax","currentpath","replace","trim","split","wrapSvgText","text","textValue","maxHeight","pageHeight","txtValue","bounds1","k","content","whiteSpace","breakWord","bBoxText","dy","ceil","indexOf","words","newText","existingWidth","existingText","j","wrap","eachLine","textWrapping","txt","childNode","isFreeTextHeightAllowed","freeTextHeight","slice","bBoxTextHeight","floor","measureText","maxWidth","options","fill","stroke","strokeColor","rotateAngle","parentTransform","pivotX","pivot","pivotY","strokeWidth","dashArray","strokeDashArray","opacity","visible","id","actualSize","fontSize","fontFamily","textOverflow","textDecoration","doWrap","whiteSpaceToString","wordBreakToString","textAlign","textAlignToString","color","italic","bold","wrapBounds","txtWidth","getDiagramElement","elementId","contentId","document","getElementById","querySelector","createHtmlElement","elementType","attribute","createElement","setAttributeHtml","attributes","keys","cssText","getAdornerLayerSvg","diagramId","index","adornerLayerSvg","diagramElement","getElementsByClassName","measureImage","source","contentSize","imageElement","getBoundingClientRect","cornersPointsBeforeRotation","ele","rotateSize","size","minX","minY","maxX","maxY","getBounds","corners","middleLeft","topCenter","bottomCenter","middleRight","center","value","state","textContent","bBox","rotatePoint","getOffset","desiredSize","DrawingElement","setOffsetWithRespectToBounds","mode","unitMode","position","getAbsolutePosition","floatingBounds","set","measure","availableSize","margin","isCalculateDesiredSize","validateDesiredSize","arrange","updateBounds","isRectElement","minWidth","minHeight","rotateValue","isDirt","cornerRadius","horizontalAlignment","verticalAlignment","relativeMode","transform","Self","Parent","preventContainer","staticSize","elementActions","None","float","Container","hasChildren","desired","desiredBounds","newPoint","force","measureChildren","childBounds","GetChildrenBounds","offsetPt","stretchChildren","measureFreeText","prevRotateAngle","_a","findChildOffsetFromCenter","childSize","refPoint","_this","TextElement","textNodes","textWrapBounds","refreshTextElement","canMeasure","call","canConsiderBounds","Canvas","leftMargin","topMargin","outerBounds","centerPoint","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","ImageElement","imageSource","stretch","printID","imageScale","imageAlign","processPathData","arrayCollection","parsePathData","ob","char","toLowerCase","command","x1","y1","x2","y2","r1","r2","largeArc","sweep","tokenizer","current","commands","match","isExponential","lastIndex","exec","substring","getRectanglePath","next","corner","point2","pathSegmentCollection","x0","y0","segments","ctrl","cpt2","seg","prev","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","scalePathData","toFixed","updatedSegment","getPathString","segment","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","PathElement","pathData","absoluteBounds","canMeasurePath","absolutePath","updatePath","newPathString","Point","point1","isEmptyPoint","PI","findLength","e","sqrt","pow","findAngle","atan2","distancePoints","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","direction","abs","CanvasRenderer","getContext","canvas","setStyle","ctx","strokeStyle","lineWidth","globalAlpha","parseDashArray","setLineDash","fillStyle","rotateContext","translate","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","save","beginPath","fillRect","closePath","restore","renderPath","segs","length_1","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","isNaN","centp","a1","a","u","v","ad","dir","ah","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","getSliceOffset","src","image","alignOptions","annotationCallback","xalign","yalign","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","proxy_1","transform_1","canvasId","existingImageIndex","newImageEntry","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","substr","ctx1","clearRect","drawImage","complete","imageList","isExistingImage","updateImageList","updateCanvasList","getTransform","onload","lastIndexOf","annotationID","annotationObject","setTransform","f","canvasIdValue","existingImageIndex_1","findIndex","imageObject","splice","loadImage","annotationType","customStampCollection","stickyNote","Image","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","labelX","labelY","pointx","pointy","DrawingRenderer","renderElement","htmlLayer","createParent","indexValue","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderRect","imageWidth","imageHeight","sourceWidth","sourceHeight","getBaseAttributes","renderer","contentWidth","contentHeight","widthRatio","heightRatio","ratio","isSvgMode","group","tx","ty","gradient","SvgRenderer","svg","onlyRect","isSelector","ariaLabel","attr","createElementNS","appendChild","aria-label","class","setAttributeSvg","setSvgStyle","updateSelectionRegion","gElement","parentNode","createGElement","createSvgElement","drawCircle","enableSelector","circle","classval","cx","cy","radius","display","canApplyStyle","svgLabelAlign","wrapBound","pos","pointX","pointY","drawLine","line","startPoint","endPoint","stroke-width","random","shadowElement","removeChild","findTargetElement","container","intersect3","lineUtil1","lineUtil2","l1","na","nb","ub","ua","enabled","intersectPt","getLineSegment","mousePosition","divElement","tSpan","usageCount","createTextNode","setAttributeNS","body","svgObj","wrapper","reference","start","end","shortest","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","tar","targetElement","pdfViewer","adornerSvgLayer","w","h","cornerPoint","trans","adornerLayer","adornerSvg","start1","end1","start2","end2","line3","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","drawingObjects","scaleElement","sw","sh","refObject","newPosition","transformedPoints","translatedPts","changedObject","textElement"],"mappings":"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"}