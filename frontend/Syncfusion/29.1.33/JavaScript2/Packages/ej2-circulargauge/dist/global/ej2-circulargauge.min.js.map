{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerText = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n        else if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    var tempStringArray = tempString.indexOf('_Range_') > -1 ? tempString.split('_Range_') : tempString.indexOf('_Pointer_NeedleCap_') > -1 ? tempString.split('_Pointer_NeedleCap_') :\n        tempString.indexOf('_Pointer_NeedleTail_') > -1 ? tempString.split('_Pointer_NeedleTail_') : tempString.indexOf('_Pointer_NeedleRect_') > -1 ? tempString.split('_Pointer_NeedleRect_') :\n            tempString.indexOf('_Pointer_Needle_') > -1 ? tempString.split('_Pointer_Needle_') : tempString.indexOf('_Pointer_RangeBar_') > -1 ? tempString.split('_Pointer_RangeBar_') : tempString.indexOf('_Pointer_Marker_') > -1 ?\n                tempString.split('_Pointer_Marker_') : tempString.indexOf('_Pointer_') > -1 ? tempString.split('_Pointer_') : tempString.split('_Annotation_');\n    return {\n        axisIndex: +tempStringArray[0],\n        pointerIndex: +tempStringArray[tempStringArray.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Specifies the location of the element in the circular gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: null,\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: null,\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6', '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6', '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'tailwind3':\n            palette = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'tailwind3dark':\n            palette = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n        case 'fluent2':\n            palette = ['#6200EE', '#09AF74', '#0076E5', '#CB3587', '#E7910F',\n                '#0364DE', '#66CD15', '#F3A93C', '#107C10', '#C19C00'];\n            break;\n        case 'fluent2dark':\n        case 'fluent2highcontrast':\n            palette = ['#9BB449', '#2A72D5', '#43B786', '#3F579A', '#584EC6',\n                '#E85F9C', '#6E7A89', '#EA6266', '#0B6A0B', '#C19C00'];\n            break;\n        case 'bootstrap5':\n        case 'bootstrap5dark':\n            palette = ['#6610F2', '#6f42C1', '#D63384', '#DC3545',\n                '#FD7E14', '#FFC107', '#198754', '#0DCAF0'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '12px',\n                titleFontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '12px',\n                titleFontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '12px',\n                titleFontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwind3':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#111827',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '12px',\n                labelColor: '#4B5563',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#D1D5DB',\n                minorTickColor: '#D1D5DB',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'tailwind3dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '12px',\n                labelColor: '#D1D5DB',\n                lineColor: '#282F3C',\n                majorTickColor: '#374151',\n                minorTickColor: '#374151',\n                pointerColor: '#6B7280',\n                capColor: '#6B7280',\n                needleColor: '#6B7280',\n                needleTailColor: '#6B7280',\n                fontFamily: 'Inter',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                fontSize: '10px',\n                tooltipFontSize: '12px',\n                labelColor: '#212529',\n                lineColor: '#E9ECEF',\n                majorTickColor: '#CED4DA',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#343A40',\n                capColor: '#343A40',\n                needleColor: '#343A40',\n                needleTailColor: '#343A40',\n                fontFamily: 'Segoe UI',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 0.9,\n                fontWeight: '400',\n                titleFontWeight: '400'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#DEE2E6',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#212529',\n                fontSize: '10px',\n                tooltipFontSize: '12px',\n                labelColor: '#DEE2E6',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Segoe UI',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 0.9,\n                fontWeight: '400',\n                titleFontWeight: '400'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                labelColor: ' #1E192B',\n                lineColor: '#E7E0EC',\n                majorTickColor: '#C4C7C5',\n                minorTickColor: '#C4C7C5',\n                pointerColor: '#49454E',\n                capColor: '#49454E',\n                needleColor: '#49454E',\n                needleTailColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '12px',\n                titleFontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                labelColor: '#E6E1E5',\n                lineColor: '#49454F',\n                majorTickColor: '#444746',\n                minorTickColor: '#444746',\n                pointerColor: '#CAC4D0',\n                capColor: '#CAC4D0',\n                needleColor: '#CAC4D0',\n                needleTailColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '12px',\n                titleFontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent2':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#242424',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#242424',\n                tooltipFontSize: '12px',\n                labelColor: '#242424',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluent2dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#292929',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                labelColor: '#FFFFFF',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#8A8886',\n                capColor: '#8A8886',\n                needleColor: '#8A8886',\n                needleTailColor: '#8A8886',\n                fontFamily: 'Segoe UI',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluent2highcontrast':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                labelColor: '#FFFFFF',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#8A8886',\n                capColor: '#8A8886',\n                needleColor: '#8A8886',\n                needleTailColor: '#8A8886',\n                fontFamily: 'Segoe UI',\n                fontSize: '12px',\n                titleFontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '600',\n                tooltipBorderColor: '#FFF',\n                legendBorderColor: '#FFF',\n                legendBorderWidth: 1\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '12px',\n                titleFontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText, getElement, Rect } from '../utils/helper-common';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {CircularGauge} gauge - Specifies the circular gauge.\n * @param {string} type - Specifies the type\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, gauge, type) {\n    var tooltipRect = new Rect(gauge.margin.left, gauge.margin.top + 10, gauge.availableSize.width - (gauge.margin.left + gauge.margin.right), gauge.availableSize.height - (gauge.margin.top - gauge.margin.bottom));\n    var id;\n    var tooltip;\n    if (type === 'Title') {\n        id = gauge.element.id + '_EJ2_Title_Tooltip';\n        tooltip = document.getElementById(id);\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        tooltipRect.width = width < tooltipRect.width ? width : tooltipRect.width - 10;\n        if (!tooltip) {\n            removeTooltip();\n        }\n    }\n    else if (type === 'LegendText') {\n        id = gauge.element.id + '_EJ2_Legend_Tooltip';\n        tooltip = document.getElementById(id);\n        if (!tooltip) {\n            removeTooltip();\n        }\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        x = (x + width > tooltipRect.width) ? x - width : x;\n        tooltipRect.x = x < 0 ? 5 : x;\n        tooltipRect.y = y;\n        tooltipRect.width = width;\n    }\n    if (!tooltip) {\n        tooltip = createElement('div', { id: id, className: 'EJ2-CircularGauge-Tooltip' });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (tooltipRect.y + 15).toString() + 'px;left:' + (tooltipRect.x).toString() +\n            'px; background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute; border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom: 2px; padding-top : 2px; font-size:12px; text-align: center; font-family: \"Segoe UI\"; width:' + (tooltipRect.width) + 'px;';\n        getElement(gauge.element.id + '_Secondary_Element').appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (tooltipRect.y + 15).toString() + 'px';\n        tooltip.style.left = (tooltipRect.x).toString() + 'px';\n    }\n}\n/**\n * @param {Event} event - Specifies the event.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {boolean} isTitleTouch - Specifies the title touch with boolean.\n * @returns {void}\n * @private */\nexport function titleTooltip(event, x, y, gauge, isTitleTouch) {\n    var targetId = event.target.id;\n    var elementArray = document.getElementsByClassName('EJ2-CircularGauge-Tooltip');\n    if ((targetId === (gauge.element.id + '_CircularGaugeTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n        showTooltip(gauge.title, x, y, gauge, 'Title');\n    }\n    else if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1 &&\n        gauge.legendSettings.visible) {\n        var axisIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n        var rangeIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n        var text = '';\n        for (var _i = 0, _a = gauge.legendModule.legendCollection; _i < _a.length; _i++) {\n            var legends = _a[_i];\n            if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                text = legends.originalText;\n            }\n        }\n        showTooltip(text, x, y, gauge, 'LegendText');\n    }\n    else if (elementArray.length > 0 && (elementArray[0].id.indexOf('Title_Tooltip') > -1 ||\n        elementArray[0].id.indexOf('Legend_Tooltip') > -1)) {\n        removeTooltip();\n    }\n    if (isTitleTouch && !isNullOrUndefined(this)) {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(removeTooltip.bind(this), 2000);\n    }\n}\n/**\n * @returns {void}\n * @private */\nexport function removeTooltip() {\n    if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n        document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n    }\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the styles of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({ color: null }, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({ color: null }, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({ color: null }, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the axis line in circular gauge.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the options to customize the axis label in circular gauge.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the options to customize the major and minor tick lines of an axis in circular gauge.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the options to customize the pointer needle in the circular gauge.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation elements for an axis in circular gauge.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the options to customize the pointers of an axis in circular gauge.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(false)\n    ], Pointer.prototype, \"enableDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index\n        });\n        element.style.opacity = gauge.allowLoadingAnimation ? '0' : '1';\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.annotationAnimation = function (gauge) {\n        for (var i = 0; i < gauge.axes.length; i++) {\n            var element = document.getElementById(gauge.element.id + '_Annotations_' + i);\n            if (!isNullOrUndefined(element)) {\n                if (element['style']['opacity'] === '0') {\n                    this.annotationAnimate(element, gauge, i);\n                }\n            }\n        }\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @returns {void}\n     */\n    Annotations.prototype.annotationAnimate = function (element, gauge, axisIndex) {\n        var tempOpacity = 0;\n        var opacity = 1;\n        new Animation({}).animate(element, {\n            duration: gauge.loadingAnimationDuration[axisIndex],\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    tempOpacity = ((args.timeStamp - args.delay) / args.duration);\n                    element['style']['opacity'] = (opacity * tempOpacity);\n                }\n            },\n            end: function () {\n                element['style']['opacity'] = opacity;\n                gauge.isOverAllAnimationComplete = true;\n            }\n        });\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: !isNullOrUndefined(argsData.content) ? argsData.content.toString() : null,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n        element.setAttribute('role', 'region');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect, removeElement } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\nimport { titleTooltip } from '../utils/helper-legend';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n *\n * @hidden\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1 && typeof template !== 'function') {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        size: tooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) : this.gauge.enableRtl ? 'Start:' + rangeFormat(roundStartValue) + ' <br>End:' + rangeFormat(roundEndValue) + ' ' :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1 && typeof rangeTemplate !== 'function') {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (typeof rangeTemplate !== 'function' && rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.fontWeight = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontWeight\n                        || _this.gauge.themeStyle.fontWeight;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    rangeTooltipTextStyle_1.size = rangeTooltipArgs.tooltip.rangeSettings.textStyle.size\n                        || _this.gauge.themeStyle.tooltipFontSize;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1 && typeof annotationTemplate !== 'function') {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((target.id === (this.gauge.element.id + '_CircularGaugeTitle') || target.id.indexOf('_gauge_legend_') > -1) &&\n            (e.target.textContent.indexOf('...') > -1)) {\n            titleTooltip(e, pageX, pageY, this.gauge, false);\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                else if (!this.gauge.isAngular) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        var borderObject = {\n            color: border.color || this.gauge.themeStyle.tooltipBorderColor || '', width: border.width, dashArray: border.dashArray\n        };\n        svgTooltip = new Tooltip({\n            theme: gauge.theme,\n            enable: true,\n            data: { value: tooltipArg.content },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            template: template,\n            enableRTL: gauge.enableRtl,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [SanitizeHtmlHelper.sanitize(tooltipArg.content)],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: borderObject,\n            enableShadow: true\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.removeTooltip();\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n            this.svgTooltip.controlInstance = null;\n            removeElement(this.tooltipId);\n        }\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', gauge.allowLoadingAnimation ? 'visibility: hidden; pointer-events:none;' : 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index, style: gauge.allowLoadingAnimation ? 'visibility: hidden;' : 'pointer-events:auto;'\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            var textFont = {\n                size: style.font.size || this.gauge.themeStyle.fontSize,\n                color: style.font.color,\n                fontFamily: style.font.fontFamily || this.gauge.themeStyle.labelFontFamily,\n                fontWeight: style.font.fontWeight || this.gauge.themeStyle.fontWeight,\n                fontStyle: style.font.fontStyle,\n                opacity: style.font.opacity\n            };\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                var labelTextElement = textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), textFont, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:auto;');\n                labelTextElement.setAttribute('aria-label', label.text);\n                labelTextElement.setAttribute('role', 'region');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + j++, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events: auto;' : 'pointer-events:auto;'), minorTickElements, gauge);\n                    tickElement.setAttribute('data-interval', i.toString());\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + j, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events:auto;' : 'pointer-events:auto;'), majorTickElements, gauge);\n                tickElement.setAttribute('data-interval', i.toString());\n                j++;\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === (!isNullOrUndefined(range.linearGradient.colorStop) && range.linearGradient.colorStop.length - 1)))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index,\n                style: this.gauge.allowLoadingAnimation ? 'opacity: 0;' : '' });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (!isNullOrUndefined(range.startWidth) && range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (!isNullOrUndefined(range.endWidth) && range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                if (!gauge.allowPointerDrag) {\n                    gauge.allowPointerDrag = pointer.enableDrag;\n                }\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                if (pointer.value != null) {\n                    childElement.setAttribute('aria-label', pointer.description || 'Pointer:' + pointer.value.toString());\n                    childElement.setAttribute('role', 'region');\n                }\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                if (_this.gauge.allowLoadingAnimation) {\n                    childElement.style.visibility = 'hidden';\n                }\n                else {\n                    _this.setPointerValue(axis, pointer, pointer.currentValue);\n                }\n                pointerElement.appendChild(childElement);\n                if (!_this.gauge.allowLoadingAnimation && ((animate || pointer.animation.enable) || animationMode === 'Enable') && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis, axisIndex);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + (mid.y - needleStartWidth / 2) +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth / 2) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = ((pointer.animation.enable || animationMode === 'Enable') && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis, axisIndex) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (((pointer.animation.enable || animationMode === 'Enable') && startValue !== endValue && this.gauge.animatePointer) ||\n            (!isNullOrUndefined(this.gauge.loadingAnimationDuration) && this.gauge.loadingAnimationDuration[axisIndex] > 0)) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    if (args.timeStamp > args.delay) {\n                        timeStamp = (args.timeStamp / pointer.animation.duration);\n                        pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                        textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                        textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                        element.setAttribute('x', String(textlocation.x));\n                        element.setAttribute('y', String(textlocation.y));\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && (_this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule))) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                        isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                        isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                    element.style.animation = 'None';\n                    if (start !== end) {\n                        element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                            _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    if (_this.gauge.animationDuration > 0) {\n                        element.style.visibility = 'visible';\n                    }\n                    pointer.isPointerAnimation = false;\n                }\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        element.style.visibility = 'visible';\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (arg) {\n                if (_this.gauge.isAnimationProgress) {\n                    arg.duration = !_this.gauge.isAnimationProgress ? 0 : arg.duration;\n                    timeStamp = (arg.timeStamp / arg.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    _this.setPointerValue(axis, pointer, pointerValue);\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined, Animation, animationMode } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect, getPathArc, getAngleFromValue } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\nimport { getCompleteArc } from '../utils/helper-pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout.\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.axisOption = [];\n        this.prevAnimatedMajorTickValue = [];\n        this.prevAnimatedMajorTickIndex = [];\n        this.prevAnimatedMinorTickValue = [];\n        this.prevAnimatedMinorTickIndex = [];\n        this.allowAxisCount = [];\n        this.rangeAnimationCount = 0;\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            if (gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawAxisLine(axis, index, element, gauge);\n            if (!gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n        if (gauge.allowLoadingAnimation) {\n            this.durationSplitUp((gauge.animationDuration === 0 && animationMode === 'Enable') ? 3000 : gauge.animationDuration, axesElements);\n        }\n    };\n    AxisLayoutPanel.prototype.labelElementAnimation = function (element, axisIndex) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: this.gauge.loadingAnimationDuration[axisIndex],\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                end: function () {\n                    element.style.visibility = 'visible';\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1], 10) === (axisElement.childElementCount - 2)) {\n                        axisElement.style.visibility = 'visible';\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.elementLabelAnimation = function (element, axisIndex, tickIndex, gauge) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: gauge.axes[axisIndex].labelStyle.font.size != null &&\n                    (gauge.axes[axisIndex].labelStyle.font.size === '0px' || gauge.axes[axisIndex].labelStyle.font.size === '0') ? 0 :\n                    ((gauge.loadingAnimationDuration[axisIndex] / this.axisOption[axisIndex].axisLabelCount)),\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                end: function () {\n                    tickIndex += 1;\n                    _this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex, tickIndex, gauge);\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1], 10) === (axisElement.childElementCount - 2)) {\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                        axisElement.style.visibility = 'visible';\n                    }\n                    if (_this.rangeAnimationCount === 0 && (_this.axisOption[axisIndex].axisLabelCount - 1) === tickIndex) {\n                        axisElement.style.visibility = 'visible';\n                        _this.rangeAnimationCount++;\n                        _this.rangeAnimation(gauge);\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.axisLineCalculation = function (axisElement, axis, value, gauge) {\n        var checkMinValue = value === axis.visibleRange.min;\n        var location = gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var axisWidth = axis.lineStyle.width / 2;\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - 0.5 : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + 0.5 : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        axisElement.setAttribute('d', getCompleteArc(location, startAngle, endAngle, (axis.currentRadius + axisWidth), (axis.currentRadius - axisWidth), checkMinValue));\n    };\n    AxisLayoutPanel.prototype.axisLineAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        // eslint-disable-next-line\n        var axis = gauge.axes[axisIndex];\n        this.prevAnimatedMajorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickIndex.push(0);\n        this.prevAnimatedMajorTickIndex.push(0);\n        this.prevAnimatedTickType = 'major';\n        if (this.axisOption[axisIndex].isAxisLine) {\n            var axisElement_1 = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n            var start_1 = axis.visibleRange.min;\n            var end_1 = axis.visibleRange.max;\n            var pointerValue_1;\n            var timeStamp_1;\n            var val_1 = Math.abs(start_1 - end_1);\n            new Animation({}).animate(axisElement_1, {\n                duration: duration,\n                progress: function (arg) {\n                    axisElement_1.style.visibility = 'visible';\n                    axisElement_1.setAttribute('fill', axis.lineStyle.color);\n                    axisElement_1.setAttribute('stroke-width', '0');\n                    timeStamp_1 = (arg.timeStamp / arg.duration);\n                    pointerValue_1 = end_1 > start_1 ? start_1 + (timeStamp_1 * val_1) : start_1 - (timeStamp_1 * val_1);\n                    _this.axisLineCalculation(axisElement_1, axis, pointerValue_1, gauge);\n                },\n                end: function () {\n                    axisElement_1.setAttribute('fill', 'transparent');\n                    axisElement_1.setAttribute('stroke-width', axis.lineStyle.width.toString());\n                    axisElement_1.setAttribute('d', getPathArc(gauge.midPoint, axis.startAngle - 90, axis.endAngle - 90, axis.currentRadius));\n                    axisElement_1.style.visibility = 'visible';\n                    _this.axisAnimation(axisIndex, duration, gauge);\n                }\n            });\n        }\n        else if (this.axisOption[axisIndex].isMajorTick || this.axisOption[axisIndex].isMinorTick) {\n            if (this.axisOption[axisIndex].isMajorTick || (this.axisOption[axisIndex].isMajorTick &&\n                this.axisOption[axisIndex].isMinorTick)) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, this.axisOption[axisIndex].isMajorTick &&\n                    this.axisOption[axisIndex].isMinorTick\n                    ? 0 : -1, 'major', this.axisOption[axisIndex], gauge);\n            }\n            else if (this.axisOption[axisIndex].isMinorTick) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', this.axisOption[axisIndex], gauge);\n            }\n        }\n        else if (!this.axisOption[axisIndex].isAxisLine) {\n            this.labelRangeAnimation(gauge, axisIndex);\n        }\n    };\n    AxisLayoutPanel.prototype.axisAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        var axisElement = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n        var axisOption = this.axisOption[axisIndex];\n        new Animation({}).animate(axisElement, {\n            duration: (this.axisOption[axisIndex].majorTickCount === 0 ? 0\n                : duration / this.axisOption[axisIndex].majorTickCount),\n            progress: function () {\n                axisElement.style.visibility = 'visible';\n            },\n            end: function () {\n                if (axisOption.isMajorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, axisOption.isMajorTick && axisOption.isMinorTick ? 0 : -1, 'major', axisOption, gauge);\n                }\n                else if (axisOption.isMinorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', axisOption, gauge);\n                }\n                _this.labelRangeAnimation(gauge, axisIndex);\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.tickElementAnimation = function (tickElement, labelElement, duration, axisIndex, \n    // eslint-disable-next-line\n    tickIndex, type, axis, gauge) {\n        var _this = this;\n        if (tickElement && this.gauge.isAnimationProgress) {\n            new Animation({}).animate(tickElement, {\n                duration: (axis.isMinorTick ? axis.minorTickCount === 0 ? 0\n                    : (duration / axis.minorTickCount) / this.allowAxisCount[axisIndex] :\n                    axis.majorTickCount === 0 ? 0 : (duration / axis.majorTickCount) / this.allowAxisCount[axisIndex]),\n                progress: function () {\n                    tickElement.style.visibility = 'visible';\n                },\n                end: function () {\n                    if (axis.isMajorTick && axis.isMinorTick && gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        var currentTickValue = parseFloat(tickElement.getAttribute('data-interval'));\n                        _this.prevAnimatedTickType = type;\n                        if (type === 'major') {\n                            _this.prevAnimatedMajorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMajorTickIndex[axisIndex] = tickIndex;\n                        }\n                        else {\n                            _this.prevAnimatedMinorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMinorTickIndex[axisIndex] = tickIndex;\n                        }\n                        var minorTickInterval = (gauge.axes[axisIndex].minorTicks.interval != null\n                            ? gauge.axes[axisIndex].minorTicks.interval :\n                            (gauge.axes[axisIndex].visibleRange.interval / 2));\n                        var minorTickValue = minorTickInterval < gauge.axes[axisIndex].visibleRange.interval ? currentTickValue +\n                            minorTickInterval : _this.prevAnimatedMinorTickValue[axisIndex] + minorTickInterval;\n                        var majorTickValue = _this.prevAnimatedMajorTickValue[axisIndex]\n                            + gauge.axes[axisIndex].visibleRange.interval;\n                        type = minorTickValue < majorTickValue ? 'minor' : 'major';\n                        if (type === 'major' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'minor') {\n                            tickIndex = _this.prevAnimatedMajorTickIndex[axisIndex];\n                        }\n                        if (type === 'minor' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'major') {\n                            tickIndex = _this.prevAnimatedMinorTickIndex[axisIndex];\n                        }\n                        tickIndex = type === 'minor' ? axis.majorTickCount === axis.minorTickCount ? tickIndex : (currentTickValue ===\n                            _this.prevAnimatedMajorTickValue[axisIndex] ? tickIndex : tickIndex + 1) : tickIndex + 1;\n                        tickElement = type === 'minor' ? document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex) :\n                            document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = type === 'minor' ? null : document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && (tickIndex === axis.minorTickCount - 1 || tickIndex === axis.minorTickCount) && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && axis.isMajorTick && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'major';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'major' && tickIndex === axis.majorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress && axis.isMinorTick) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'minor';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'minor') {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && tickIndex === axis.minorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                }\n            });\n        }\n        this.labelRangeAnimation(gauge, axisIndex);\n    };\n    AxisLayoutPanel.prototype.labelRangeAnimation = function (gauge, axisIndex) {\n        var options = this.axisOption[axisIndex];\n        if (!isNullOrUndefined(options)) {\n            if (!options.isMajorTick && !options.isMinorTick && options.isAxisLabel) {\n                if (options.axisLabelCount > 0) {\n                    if (gauge.axes[axisIndex].labelStyle.hiddenLabel === 'First') {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 1), axisIndex, 0, gauge);\n                    }\n                    else {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), axisIndex, 0, gauge);\n                    }\n                }\n            }\n            else if ((this.rangeAnimationCount === 0 && !options.isMajorTick &&\n                !options.isMinorTick && !options.isAxisLabel && options.isRange)\n                || this.rangeAnimationCount === 0 && this.gauge.isAnimationProgress\n                    && !options.isMajorTick && !options.isMinorTick && !options.isAxisLabel && options.isRange) {\n                this.rangeAnimationCount++;\n                this.rangeAnimation(gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeAnimation = function (gauge) {\n        for (var j = 0; j < gauge.axes.length; j++) {\n            var rangesElement = document.getElementById(gauge.element.id + '_Axis_Ranges_' + j);\n            if (!isNullOrUndefined(rangesElement) && gauge.allowLoadingAnimation) {\n                this.rangeElementAnimation(rangesElement, j, gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeElementAnimation = function (rangeElement, axisIndex, gauge) {\n        var _this = this;\n        var height = 0;\n        var opacity = 1;\n        var isRangeAbsent = rangeElement.childElementCount > 0 &&\n            gauge.axes[axisIndex].ranges[0].start !== gauge.axes[axisIndex].ranges[0].end;\n        new Animation({}).animate(rangeElement, {\n            duration: isRangeAbsent ? gauge.loadingAnimationDuration[axisIndex] : 0,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    height = ((args.timeStamp - args.delay) / args.duration);\n                    rangeElement['style']['opacity'] = (opacity * height);\n                }\n            },\n            end: function () {\n                rangeElement['style']['opacity'] = opacity;\n                var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                if (!isNullOrUndefined(axisElement)) {\n                    axisElement.style.visibility = 'visible';\n                }\n                if (gauge.allowLoadingAnimation && axisIndex === 0) {\n                    _this.axisOption = [];\n                    gauge.axes.map(function (axis, axisindex) {\n                        axis.pointers.map(function (pointer, pointerIndex) {\n                            var pointerElement = document.getElementById(gauge.element.id + '_Axis_' + axisindex + '_Pointer_' + pointerIndex);\n                            if (!isNullOrUndefined(pointerElement) && _this.gauge.isAnimationProgress) {\n                                pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                                gauge.gaugeAxisLayoutPanel.pointerRenderer.doPointerAnimation(pointerElement, pointer, axis, axisIndex);\n                            }\n                        });\n                        if (axis.pointers.length === 0 && _this.gauge.isAnimationProgress) {\n                            if (_this.gauge.loadingAnimationDuration[axisIndex] > 0 &&\n                                !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                                _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                            }\n                        }\n                        else {\n                            _this.gauge.isOverAllAnimationComplete = true;\n                        }\n                    });\n                }\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.durationSplitUp = function (duration, axesElements) {\n        var splitUpCount = 0;\n        this.gauge.loadingAnimationDuration = [];\n        for (var i = 0; i < axesElements.childElementCount; i++) {\n            splitUpCount = 0;\n            var axisCount = 0;\n            var element = axesElements.children[i];\n            var isAxisLine = false;\n            var isMajorTick = false;\n            var majorTickCount = 0;\n            var labelCount = 0;\n            var isMinorTick = false;\n            var minorTickCount = 0;\n            var isLabel = false;\n            var isrange = false;\n            var isPointer = false;\n            for (var j = 0; j < element.childElementCount; j++) {\n                var elementId = element.children[j]['id'];\n                if (elementId.indexOf('_AxisLine_') > 0) {\n                    isAxisLine = true;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MajorTickLines') > 0) {\n                    isMajorTick = true;\n                    axisCount++;\n                    majorTickCount = element.children[j].childElementCount;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MinorTickLines') > 0) {\n                    isMinorTick = true;\n                    axisCount++;\n                    minorTickCount = element.children[j].childElementCount;\n                    if (!isMajorTick) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Labels_') > 0) {\n                    isLabel = true;\n                    axisCount++;\n                    labelCount = element.children[j].childElementCount;\n                    if (!isMajorTick && !isMinorTick && this.gauge.axes[i].labelStyle.font.size != null &&\n                        (this.gauge.axes[i].labelStyle.font.size !== '0px' && this.gauge.axes[i].labelStyle.font.size !== '0')) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Ranges_') > 0) {\n                    isrange = true;\n                    if (this.gauge.axes[i].ranges.length === 1\n                        && (!isNullOrUndefined(this.gauge.axes[i].ranges)\n                            && this.gauge.axes[i].ranges[0].start === 0\n                            && this.gauge.axes[i].ranges[0].end === 0)) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Pointers_') > 0) {\n                    isPointer = true;\n                    if (this.gauge.axes[i].pointers.length > 0 && this.gauge.axes[i].pointers.length !== 1 &&\n                        this.gauge.axes[i].pointers[0].value !== this.gauge.axes[i].minimum) {\n                        splitUpCount++;\n                    }\n                }\n            }\n            this.allowAxisCount.push(axisCount === 0 ? 1 : axisCount);\n            this.axisOption.push({\n                isAxisLine: isAxisLine, isMajorTick: isMajorTick, isMinorTick: isMinorTick,\n                isAxisLabel: isLabel, isPointer: isPointer, isRange: isrange,\n                axisLabelCount: labelCount, majorTickCount: majorTickCount, minorTickCount: minorTickCount\n            });\n            isAxisLine = false;\n            isMajorTick = false;\n            majorTickCount = 0;\n            isMinorTick = false;\n            labelCount = 0;\n            minorTickCount = 0;\n            isLabel = false;\n            isrange = false;\n            isPointer = false;\n            if (this.gauge.axes[i].annotations != null\n                && this.gauge.axes[i].annotations.length > 0\n                && !isNullOrUndefined(this.gauge.annotationsModule)) {\n                splitUpCount++;\n            }\n            this.gauge.loadingAnimationDuration.push(splitUpCount === 0 ? duration : duration / splitUpCount);\n        }\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        var textStyle = {\n            size: axis.labelStyle.font.size || this.gauge.themeStyle.fontSize,\n            color: axis.labelStyle.font.color || this.gauge.themeStyle.labelColor,\n            fontFamily: axis.labelStyle.font.fontFamily || this.gauge.themeStyle.labelFontFamily,\n            fontWeight: axis.labelStyle.font.fontWeight || this.gauge.themeStyle.fontWeight,\n            fontStyle: axis.labelStyle.font.fontStyle,\n            opacity: axis.labelStyle.font.opacity\n        };\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, textStyle);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n        this.axisOption = null;\n        this.prevAnimatedMajorTickValue = null;\n        this.prevAnimatedMajorTickIndex = null;\n        this.prevAnimatedMinorTickIndex = null;\n        this.prevAnimatedMinorTickValue = null;\n        this.allowAxisCount = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","import { getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim } from '../utils/helper-legend';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = (this.position === 'Custom') ? new Rect(legend.location.x, legend.location.y, 0, 0) : new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else if (position === 'Custom') {\n            this.subtractThickness(rect, 0, 0, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(\n            // eslint-disable-next-line max-len\n            (!this.gauge.enableRtl) ? legendBounds.x + padding + (legend.shapeWidth / 2) : (!this.isVertical) ? legendBounds.width + legendBounds.x - (padding) - (legend.shapeWidth) : legendBounds.x + this.maxWidth - padding - legend.shapeWidth / 2, legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        var textStyle = {\n            size: legend.textStyle.size || this.gauge.themeStyle.fontSize,\n            color: legend.textStyle.color || this.gauge.themeStyle.labelColor,\n            fontFamily: legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily,\n            fontWeight: legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n            fontStyle: legend.textStyle.fontStyle,\n            opacity: legend.textStyle.opacity\n        };\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5 : x, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = !this.gauge.enableRtl ? '1/' + this.totalPages : this.totalPages + '/1';\n        var pageTextElement = textElement(textOption, textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5) : x, y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        // eslint-disable-next-line max-len\n        var translateX = (this.gauge.enableRtl) ? legend.border.width + (iconSize / 2) : bounds.width - (2 * (iconSize + padding) + padding + size.width);\n        paginggroup.setAttribute('transform', 'translate(' + translateX + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageX = this.pageXCollections[page * this.maxColumns];\n            size = (!this.gauge.enableRtl) ? pageX - this.legendBounds.x : (this.legendBounds.x + this.maxWidth) - pageX;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = ((!this.gauge.enableRtl) ? 'translate(-' : 'translate(') + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = !this.gauge.enableRtl ? (pageNumber) + '/' + this.totalPages : this.totalPages + '/' + pageNumber;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        var textStyle = {\n            size: legend.textStyle.size || this.gauge.themeStyle.fontSize,\n            color: fontcolor,\n            fontFamily: legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily,\n            fontWeight: legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n            fontStyle: legend.textStyle.fontStyle,\n            opacity: legend.textStyle.opacity\n        };\n        textOptions.text = legendOption.text;\n        textOptions.x = this.gauge.enableRtl ? (legendOption.location.x - (measureText(legendOption.text, textStyle).width +\n            legend.shapeWidth / 2 + legend.shapePadding)) : (legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding);\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var legendTextElement = textElement(textOptions, textStyle, fontcolor, group, '');\n        legendTextElement.setAttribute('aria-label', textOptions.text);\n        legendTextElement.setAttribute('role', 'region');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var textStyle = {\n            size: this.legend.textStyle.size || this.gauge.themeStyle.fontSize,\n            color: this.legend.textStyle.color || this.gauge.themeStyle.labelColor,\n            fontFamily: this.legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily,\n            fontWeight: this.legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n            fontStyle: this.legend.textStyle.fontStyle,\n            opacity: this.legend.textStyle.opacity\n        };\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.gauge.enableRtl) ?\n                    this.maxColumnWidth : -this.maxColumnWidth - (4 * this.legend.shapePadding) / 3);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.gauge.enableRtl) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            // eslint-disable-next-line max-len\n            var previousBound = (prevLegend.location.x + ((!this.gauge.enableRtl) ? prevLegend.textSize.width + textPadding : -prevLegend.textSize.width - textPadding));\n            // eslint-disable-next-line max-len\n            if (this.isWithinBounds(previousBound, (legendOption.textSize.width + textPadding) - padding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.gauge.enableRtl) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? true : false);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? false : true);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[!this.gauge.enableRtl ? 0 : 1], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var borderStyle = {\n            color: legend.border.color || this.gauge.themeStyle.legendBorderColor || '',\n            width: legend.border.width || this.gauge.themeStyle.legendBorderWidth || 1, dashArray: legend.border.dashArray\n        };\n        var options = new RectOption(id + '_element', legend.background, borderStyle, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var textStyle = {\n            size: legend.textStyle.size || this.gauge.themeStyle.fontSize,\n            color: this.legend.textStyle.color || this.gauge.themeStyle.labelColor,\n            fontFamily: legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily,\n            fontWeight: legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n            fontStyle: legend.textStyle.fontStyle,\n            opacity: legend.textStyle.opacity\n        };\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf('%') > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the gauge.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Tailwind3' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3' ||\n                gauge.theme === 'Fluent2')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Tailwind3Dark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark' ||\n                gauge.theme === 'Fluent2Dark' || gauge.theme === 'Fluent2HighContrast')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Tailwind3' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3' ||\n                gauge.theme === 'Fluent2')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Tailwind3Dark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark' ||\n                gauge.theme === 'Fluent2Dark' || gauge.theme === 'Fluent2HighContrast')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = gauge.element.cloneNode(true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((gauge.theme === 'Tailwind' || gauge.theme === 'Tailwind3' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3' ||\n                        gauge.theme === 'Fluent2')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Tailwind3Dark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark' ||\n                        gauge.theme === 'Fluent2Dark' || gauge.theme === 'Fluent2HighContrast')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: !isNullOrUndefined(element.radialGradient.radius) ?\n                (element.radialGradient.radius.indexOf('%') === -1 ?\n                    element.radialGradient.radius :\n                    parseFloat(element.radialGradient.radius).toString()) + '%' : '0%',\n            cx: (!isNullOrUndefined(element.radialGradient.outerPosition) && !isNullOrUndefined(element.radialGradient.outerPosition.x)) ?\n                (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                    element.radialGradient.outerPosition.x :\n                    parseFloat(element.radialGradient.outerPosition.x).toString()) + '%' : '0%',\n            cy: (!isNullOrUndefined(element.radialGradient.outerPosition) && !isNullOrUndefined(element.radialGradient.outerPosition.y)) ?\n                (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                    element.radialGradient.outerPosition.y :\n                    parseFloat(element.radialGradient.outerPosition.y).toString()) + '%' : '0%',\n            fx: (!isNullOrUndefined(element.radialGradient.innerPosition) && !isNullOrUndefined(element.radialGradient.innerPosition.x)) ?\n                (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                    element.radialGradient.innerPosition.x :\n                    parseFloat(element.radialGradient.innerPosition.x).toString()) + '%' : '0%',\n            fy: (!isNullOrUndefined(element.radialGradient.innerPosition) && !isNullOrUndefined(element.radialGradient.innerPosition.y)) ?\n                (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                    element.radialGradient.innerPosition.y :\n                    parseFloat(element.radialGradient.innerPosition.y).toString()) + '%' : '0%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, animationMode } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings, LegendSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { textTrim, titleTooltip } from './utils/helper-legend';\nimport { Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control. This is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.allowLoadingAnimation = false;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isAnimationProgress = true;\n        /** @private */\n        _this.isResize = false;\n        /** @private */\n        _this.isOverAllAnimationComplete = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        CircularGauge_1.Inject(Gradient);\n        if (element) {\n            _this.appendTo(element);\n        }\n        return _this;\n    }\n    CircularGauge_1 = CircularGauge;\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        if (!isNullOrUndefined(this.element)) {\n            this.unWireEvents();\n            this.trigger(load, { gauge: this });\n            this.initPrivateVariable();\n            this.setCulture();\n            this.createSvg();\n            this.wireEvents();\n        }\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        if (!isNullOrUndefined(this.element)) {\n            this.setTheme();\n            this.calculateBounds();\n            this.isPropertyChange = false;\n            this.allowLoadingAnimation = ((this.animationDuration === 0 && animationMode === 'Enable') || this.animationDuration > 0)\n                && !this.isOverAllAnimationComplete;\n            this.renderElements(true);\n            this.renderAnimation();\n            this.renderComplete();\n        }\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var pointerDrag = false;\n            if ((!isNullOrUndefined(_this.activePointer) ? _this.activePointer.pathElement[0].id === args.target.id : true)) {\n                var pointerIndex = args.target.id.indexOf('_Pointer_') > -1 ? parseInt(args.target.id.slice(-1), 10) : null;\n                var axisIndex = args.target.id.indexOf('_Axis_') > -1 ? parseInt(args.target.id.split('_Axis_')[1], 10) : null;\n                pointerDrag = (_this.allowPointerDrag && !isNullOrUndefined(axisIndex) && !isNullOrUndefined(pointerIndex))\n                    ? _this.axes[axisIndex].pointers[pointerIndex].enableDrag\n                    : _this.enablePointerDrag;\n                _this.isPointerDragged = pointerDrag;\n            }\n            if (!args.cancel) {\n                if ((_this.isPointerDragged || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.isPointerDragged) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                else if (_this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    _this.svgObject.setAttribute('cursor', 'auto');\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.isPointerDragged && _this.activePointer) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        titleTooltip(e, e.clientX, e.clientY, this, false);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n                if (this.isTouch) {\n                    this.setRangeValue(axisIndex, rangeIndex, this.startValue, this.endValue);\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        var pointerDrag = false;\n        var pointerIndex = args.target.id.indexOf('_Pointer_') > -1 ? parseInt(args.target.id.slice(-1), 10) : null;\n        var axisIndex = args.target.id.indexOf('_Axis_') > -1 ? parseInt(args.target.id.split('_Axis_')[1], 10) : null;\n        if (!isNullOrUndefined(axisIndex) && !isNullOrUndefined(pointerIndex)) {\n            pointerDrag = this.allowPointerDrag ? this.axes[axisIndex].pointers[pointerIndex].enableDrag\n                : this.enablePointerDrag;\n        }\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (pointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        var pointerDrag = false;\n        if (this.activeAxis && this.activePointer) {\n            var pointerIndex = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisIndex = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            if (!isNullOrUndefined(axisIndex) && !isNullOrUndefined(pointerIndex)) {\n                pointerDrag = this.allowPointerDrag ? this.axes[axisIndex].pointers[pointerIndex].enableDrag\n                    : this.enablePointerDrag;\n            }\n            if (pointerDrag) {\n                this.svgObject.setAttribute('cursor', 'auto');\n                this.trigger(dragEnd, {\n                    name: dragEnd,\n                    type: pointerEnd,\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    currentValue: this.activePointer.currentValue,\n                    axisIndex: axisIndex,\n                    pointerIndex: pointerIndex\n                });\n                this.activeAxis = null;\n                this.activePointer = null;\n                this.isPointerDragged = false;\n            }\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.isDrag = false;\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        if (e.type.indexOf('touch') > -1 && (args.target.id === (this.element.id + '_CircularGaugeTitle') || args.target.id.indexOf('_gauge_legend_') > -1)) {\n            var touchArg = e;\n            titleTooltip(e, touchArg.changedTouches[0].pageX, touchArg.changedTouches[0].pageY, this, true);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.isResize = true;\n                        _this.isPropertyChange = true;\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.allowLoadingAnimation = false;\n                        if (_this.isOverAllAnimationComplete) {\n                            _this.loadingAnimationDuration = [];\n                        }\n                        _this.renderElements();\n                        _this.isResize = false;\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        if (!isNullOrUndefined(this.element)) {\n            removeElement(this.element.id + '_Secondary_Element');\n            if (this.svgObject) {\n                while (this.svgObject.childNodes.length > 0) {\n                    while (this.svgObject.childNodes.length > 0) {\n                        this.svgObject.removeChild(this.svgObject.firstChild);\n                    }\n                    if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                        remove(this.svgObject);\n                    }\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            removeElement(this.element.id + '_svg');\n            this.clearTemplate();\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    CircularGauge.prototype.renderAnimation = function () {\n        if (this.allowLoadingAnimation) {\n            for (var i = 0; i < this.axes.length; i++) {\n                this.gaugeAxisLayoutPanel.axisLineAnimation(i, this.loadingAnimationDuration[i], this);\n            }\n        }\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.titleFontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var width = Math.abs((this.margin.left + this.margin.right) - this.availableSize.width);\n            var trimmedTitle = textTrim(width, this.title, style);\n            var size = measureText(trimmedTitle, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', trimmedTitle);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', 'region');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        this.allowLoadingAnimation = false;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable || animationMode === 'Enable';\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            document.getElementById(this.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex).style.visibility = 'visible';\n            if (!isNullOrUndefined(pointer.pathElement)) {\n                pointer.pathElement.map(function (element) {\n                    if (pointer.type === 'RangeBar') {\n                        setStyles(element, pointer.color, pointer.border);\n                        if (enableAnimation_1) {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                        }\n                        else {\n                            _this.isAnimationProgress = false;\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                        }\n                    }\n                    else {\n                        if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                            setStyles(element, pointer.cap.color, pointer.cap.border);\n                        }\n                        else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                            setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                        }\n                        else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                            setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                        }\n                        else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                            setStyles(element, pointer.color, pointer.border);\n                        }\n                        if (enableAnimation_1) {\n                            if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                                _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                            }\n                            else {\n                                _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                            }\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                        }\n                    }\n                });\n            }\n            if (this.allowLoadingAnimation && !pointer.animation.enable) {\n                this.allowLoadingAnimation = false;\n                pointer.value = value;\n            }\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string | Function} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            this.allowLoadingAnimation = false;\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex, styles: this.animationDuration > 0 ? 'opacity: 0' : 'opacity: 1'\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specifies the orientation for the exported PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range in circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        this.allowLoadingAnimation = false;\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (!isNullOrUndefined(range.startWidth) && range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (!isNullOrUndefined(range.endWidth) && range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.element)) {\n            this.unWireEvents();\n        }\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.loadingAnimationDuration = null;\n        this.intl = null;\n        this.removeSvg();\n        this.resizeEvent = null;\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                if (!annotationEnable) {\n                    annotationEnable = ((!isNullOrUndefined(annotation.content) && annotation.content.length !== 0) || typeof (annotation.content) === 'function');\n                }\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations],\n                name: 'Annotations'\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip],\n                name: 'Tooltip'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport],\n                name: 'PdfExport'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend],\n                name: 'Legend'\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient],\n            name: 'Gradient'\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'animationDuration':\n                        this.allowLoadingAnimation = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = this.axes.length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.allowLoadingAnimation = false;\n                                                this.loadingAnimationDuration = [];\n                                                this.isAnimationProgress = this.axes[x].pointers[index].animation.enable;\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds || this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                    if (this.allowLoadingAnimation) {\n                        this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n                        this.renderAnimation();\n                    }\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds && !this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    var CircularGauge_1;\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"animationDuration\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowRangePreRender\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = CircularGauge_1 = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerText","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","undefined","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","templateComplier","isNaN","parseFloat","querySelectorAll","length","charAt","querySelector","innerHTML","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","tempStringArray","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","tooltipTextOpacity","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","titleFontSize","labelFontFamily","titleFontWeight","tooltipFillOpacity","tooltipBorderColor","legendBorderColor","legendBorderWidth","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","textTrim","maxWidth","label","i","substring","showTooltip","type","tooltip","tooltipRect","Rect","margin","availableSize","right","bottom","removeTooltip","toString","className","titleTooltip","event","isTitleTouch","target","elementArray","getElementsByClassName","textContent","title","legendSettings","visible","_i","_a","legendModule","legendCollection","legends","originalText","this","clearTimeout","setTimeout","bind","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","TextOption","VisibleLabels","axisLabelFont","legendLabelFont","__decorate","decorators","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","Location","LegendSettings","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","Annotations","renderAnnotation","index","allowLoadingAnimation","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","annotationAnimation","axes","annotationAnimate","tempOpacity","animate","loadingAnimationDuration","progress","args","timeStamp","delay","isOverAllAnimationComplete","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","appendInBodyTag","pointerTooltip","findPosition","pointerTextStyle","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","enableRtl","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","annotationTextStyle","clearTemplate","children","isAngular","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","borderObject","Tooltip","enable","data","enableRTL","enableAnimation","SanitizeHtmlHelper","sanitize","inverted","areaBounds","enableShadow","controlInstance","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","mouseUpHandler","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","textFont","lastlabel","FindAxisLabelCollision","labelTextElement","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","j","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","pointerElement","pointers","calculatePointerRadius","allowPointerDrag","enableDrag","visibility","setPointerValue","animation","animationMode","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","textObject","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","pointerValue","val","isAnimationProgress","animationDuration","annotationsModule","sweepAngle","pointAngle","arg","AxisLayoutPanel","axisOption","prevAnimatedMajorTickValue","prevAnimatedMajorTickIndex","prevAnimatedMinorTickValue","prevAnimatedMinorTickIndex","allowAxisCount","rangeAnimationCount","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","yMarginDiff","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","allowRangePreRender","drawClipPath","durationSplitUp","labelElementAnimation","axisElement","elementLabelAnimation","tickIndex","axisLabelCount","rangeAnimation","axisLineCalculation","axisWidth","axisLineAnimation","prevAnimatedTickType","isAxisLine","pointerValue_1","timeStamp_1","axisElement_1","start_1","end_1","val_1","axisAnimation","isMajorTick","isMinorTick","tickElementAnimation","labelRangeAnimation","majorTickCount","tickElement","minorTickCount","currentTickValue","minorTickInterval","minorTickValue","majorTickValue","isAxisLabel","isRange","rangesElement","rangeElementAnimation","isRangeAbsent","axisindex","gaugeAxisLayoutPanel","splitUpCount","axisCount","labelCount","isLabel","isrange","isPointer","elementId","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendID","click","getLegendOptions","legendText","LegendOptions","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translateX","translatePage","pagingText","page","pageNumber","translate","group","fontcolor","legendTextElement","prevLegend","maxColumnWidth","textStartLoc","previousBound","isWithinBounds","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","borderStyle","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","backgroundElement","getElementsByTagName","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","isResize","CircularGauge_1","Inject","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderAnimation","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","getMouseArgs","dragArgs","pointerDrag","activePointer","isPointerDragged","enableRangeDrag","svgElement","preventDefault","dragPointInd","dragAxisInd","activeAxis","activeRange","dragRangeInd","rangeDrag","notify","clientX","clientY","buttons","pointerType","stopPropagation","previousValue1","avg","setRangeValue","pointInd","axisInd","rangeInd","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","titleStyle","renderBorder","renderTitle","titleSize","Number","trimmedTitle","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","mouseY","mouseX","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","_b","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}