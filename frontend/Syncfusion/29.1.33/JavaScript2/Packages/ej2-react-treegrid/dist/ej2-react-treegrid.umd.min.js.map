{"version":3,"file":"ej2-react-treegrid.umd.min.js","sources":["../src/treegrid/columns-directive.js","../src/treegrid/stacked-column-directive.js","../src/treegrid/aggregates-directive.js","../src/treegrid/aggregate-columns-directive.js","../src/treegrid/treegrid.component.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `ColumnDirective` represent a column of the react TreeGrid.\n * It must be contained in a TreeGrid component(`TreeGridComponent`).\n * ```tsx\n * <TreeGridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * <ColumnsDirective>\n * </TreeGridComponent>\n * ```\n */\nvar ColumnDirective = /** @class */ (function (_super) {\n    __extends(ColumnDirective, _super);\n    function ColumnDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnDirective.moduleName = 'column';\n    ColumnDirective.complexTemplate = { 'filter.itemTemplate': 'filter.itemTemplate' };\n    return ColumnDirective;\n}(ComplexBase));\nexport { ColumnDirective };\nvar ColumnsDirective = /** @class */ (function (_super) {\n    __extends(ColumnsDirective, _super);\n    function ColumnsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnsDirective.propertyName = 'columns';\n    ColumnsDirective.moduleName = 'columns';\n    return ColumnsDirective;\n}(ComplexBase));\nexport { ColumnsDirective };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\nvar StackedColumnDirective = /** @class */ (function (_super) {\n    __extends(StackedColumnDirective, _super);\n    function StackedColumnDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StackedColumnDirective.moduleName = 'stackedColumn';\n    StackedColumnDirective.complexTemplate = { 'filter.itemTemplate': 'filter.itemTemplate' };\n    return StackedColumnDirective;\n}(ComplexBase));\nexport { StackedColumnDirective };\nvar StackedColumnsDirective = /** @class */ (function (_super) {\n    __extends(StackedColumnsDirective, _super);\n    function StackedColumnsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StackedColumnsDirective.propertyName = 'columns';\n    StackedColumnsDirective.moduleName = 'stackedColumns';\n    return StackedColumnsDirective;\n}(ComplexBase));\nexport { StackedColumnsDirective };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `AggregateDirective` represent a aggregate row of the react TreeGrid.\n * It must be contained in a TreeGrid component(`TreeGridComponent`).\n * ```tsx\n * <TreeGridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * </ColumnsDirective>\n * <AggregatesDirective>\n * <AggregateDirective>\n * <AggregateColumnsDirective>\n * <AggregateColumnDirective field='ID' type='Min'></AggregateColumnsDirective>\n * </<AggregateColumnsDirective>\n* </AggregateDirective>\n * </AggregatesDirective>\n * </TreeGridComponent>\n * ```\n */\nvar AggregateDirective = /** @class */ (function (_super) {\n    __extends(AggregateDirective, _super);\n    function AggregateDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AggregateDirective.moduleName = 'aggregate';\n    return AggregateDirective;\n}(ComplexBase));\nexport { AggregateDirective };\nvar AggregatesDirective = /** @class */ (function (_super) {\n    __extends(AggregatesDirective, _super);\n    function AggregatesDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AggregatesDirective.propertyName = 'aggregates';\n    AggregatesDirective.moduleName = 'aggregates';\n    return AggregatesDirective;\n}(ComplexBase));\nexport { AggregatesDirective };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `AggregateColumnDirective represent a aggregate column of the react TreeGrid.\n * ```tsx\n * <TreeGridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * </ColumnsDirective>\n * <AggregatesDirective>\n * <AggregateDirective>\n * <AggregateColumnsDirective>\n * <AggregateColumnDirective field='ID' type='Min'></AggregateColumnsDirective>\n * </AggregateColumnsDirective>\n * </AggregateDirective>\n * </AggregatesDirective>\n * </TreeGridComponent>\n * ```\n */\nvar AggregateColumnDirective = /** @class */ (function (_super) {\n    __extends(AggregateColumnDirective, _super);\n    function AggregateColumnDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AggregateColumnDirective.moduleName = 'aggregateColumn';\n    return AggregateColumnDirective;\n}(ComplexBase));\nexport { AggregateColumnDirective };\nvar AggregateColumnsDirective = /** @class */ (function (_super) {\n    __extends(AggregateColumnsDirective, _super);\n    function AggregateColumnsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AggregateColumnsDirective.propertyName = 'columns';\n    AggregateColumnsDirective.moduleName = 'aggregateColumns';\n    return AggregateColumnsDirective;\n}(ComplexBase));\nexport { AggregateColumnsDirective };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { TreeGrid } from '@syncfusion/ej2-treegrid';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * `TreeTreeGridComponent` represents the react TreeTreeGrid.\n * ```tsx\n * <TreeTreeGridComponent dataSource={data} allowPaging={true} allowSorting={true}/>\n * ```\n */\nvar TreeGridComponent = /** @class */ (function (_super) {\n    __extends(TreeGridComponent, _super);\n    function TreeGridComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.initRenderCalled = false;\n        _this.checkInjectedModules = true;\n        _this.directivekeys = { 'columns': { 'column': { 'stackedColumns': 'stackedColumn' } }, 'aggregates': { 'aggregate': { 'aggregateColumns': 'aggregateColumn' } } };\n        _this.statelessTemplateProps = null;\n        _this.templateProps = null;\n        _this.immediateRender = false;\n        _this.isReactMock = true;\n        _this.portals = [];\n        return _this;\n    }\n    TreeGridComponent.prototype.render = function () {\n        this.isReactMock = false;\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            _super.prototype.render.call(this);\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    };\n    return TreeGridComponent;\n}(TreeGrid));\nexport { TreeGridComponent };\napplyMixins(TreeGridComponent, [ComponentBase, React.Component]);\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_super","__extends","__","this","constructor","prototype","create","ColumnDirective","ComplexBase","moduleName","complexTemplate","filter.itemTemplate","apply","arguments","ColumnsDirective","propertyName","StackedColumnDirective","StackedColumnsDirective","AggregateDirective","AggregatesDirective","AggregateColumnDirective","AggregateColumnsDirective","TreeGridComponent","TreeGrid","render","isReactMock","element","initRenderCalled","refreshing","isReactForeceUpdate","React.createElement","getDefaultAttributes","concat","props","children","portals","call","_this","checkInjectedModules","directivekeys","columns","column","stackedColumns","aggregates","aggregate","aggregateColumns","statelessTemplateProps","templateProps","immediateRender","ComponentBase","React.Component"],"mappings":"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"}