{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/document/pdf-viewer-preferences.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/brushes/pdf-gradient-brush.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/graphics/brushes/pdf-tiling-brush.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/general/functions/pdf-function.js","../src/implementation/general/functions/pdf-sampled-function.js","../src/implementation/graphics/brushes/enum.js","../src/implementation/graphics/brushes/pdf-brushes.js","../src/implementation/graphics/brushes/pdf-blend.js","../src/implementation/graphics/brushes/pdf-color-blend.js","../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js","../src/implementation/graphics/figures/base/shape-layouter.js","../src/implementation/graphics/figures/base/pdf-shape-element.js","../src/implementation/graphics/figures/base/draw-element.js","../src/implementation/graphics/figures/base/fill-element.js","../src/implementation/graphics/figures/path.js","../src/implementation/graphics/figures/rectangle-area.js","../src/implementation/graphics/figures/ellipse-part.js","../src/implementation/graphics/figures/arc.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfWriterHelper = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriterHelper` class.\n     * @private\n     */\n    function PdfWriterHelper() {\n        this.buffer = new PdfArrayBuffer();\n    }\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfWriterHelper.prototype.write = function (data) {\n        this.buffer.write(data);\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfWriterHelper.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer.destroy();\n            this.buffer = undefined;\n        }\n    };\n    return PdfWriterHelper;\n}());\nexport { PdfWriterHelper };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfArrayBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfArrayBuffer` class.\n     * @private\n     */\n    function PdfArrayBuffer() {\n        this.buffer = [];\n    }\n    Object.defineProperty(PdfArrayBuffer.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            return this.buffer.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfArrayBuffer.prototype.write = function (value) {\n        for (var i = 0; i < value.length; i++) {\n            this.buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfArrayBuffer.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer = [];\n            this.buffer = undefined;\n        }\n    };\n    return PdfArrayBuffer;\n}());\nexport { PdfArrayBuffer };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    /**\n     * Save PDF document.\n     * @private\n     */\n    PdfDocumentBase.prototype._save = function () {\n        return this.document._docSave();\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this._saveProcess(writer);\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._saveProcess = function (writer) {\n        this.saveHead(writer);\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._save = function (writer) {\n        this._saveProcess(writer);\n        return new Uint8Array(writer.stream.buffer.buffer);\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isResource = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0) || (format && format.wordWrap === PdfWordWrapType.None);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter, PdfWriterHelper } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as byte array.\n     * @private\n     */\n    PdfDocument.prototype._docSave = function () {\n        var stream = new PdfWriterHelper();\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        return this.crossTable._save(writer);\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        if (this.streamWriter) {\n            this.streamWriter.destroy();\n        }\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = this.leftPad = this.rightPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { PdfTextElement } from './../text-element';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { LineType, PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\nimport { PdfTextAlignment } from '../../enum';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n            if (!this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n                stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n            }\n        }\n        if (this.element && this.element instanceof PdfTextElement && !this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n            stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        _this._isLastElement = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            if (i === stringLayoutResult.lines.length - 1) {\n                                this._isLastElement = true;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            if (i === result.layoutLines.length - 1 && this.stringFormat && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n                this._isLastElement = true;\n            }\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left;\n                returnBounds.y += this.style.cellPadding.top;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n            if (typeof this.style.borders === 'undefined' || this.style.borders == null) {\n                returnBounds.x += this.gridRow.style.border.left.width;\n                returnBounds.y += this.gridRow.style.border.top.width;\n                returnBounds.width -= (this.gridRow.style.border.left.width + this.gridRow.style.border.right.width);\n                returnBounds.height -= (this.gridRow.style.border.top.width + this.gridRow.style.border.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.borders.left.width;\n                returnBounds.y += this.style.borders.top.width;\n                returnBounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n                returnBounds.height -= (this.style.borders.top.width + this.style.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (this.gridRow.grid.style.cellPadding !== null && typeof this.gridRow.grid.style.cellPadding !== 'undefined') {\n                    var hasLeftPad = this.gridRow.grid.style.cellPadding.hasLeftPad;\n                    var hasTopPad = this.gridRow.grid.style.cellPadding.hasTopPad;\n                    var hasRightPad = this.gridRow.grid.style.cellPadding.hasRightPad;\n                    var hasBottomPad = this.gridRow.grid.style.cellPadding.hasBottomPad;\n                    if (hasLeftPad || hasTopPad || hasRightPad || hasBottomPad) {\n                        if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && hasLeftPad) {\n                            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && hasTopPad) {\n                            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && hasRightPad) {\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && hasBottomPad) {\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    else {\n                        var format = this.getStringFormat();\n                        if (format.alignment === null || typeof format.alignment === 'undefined') {\n                            returnBounds.x += this.row.grid.style.cellPadding.left;\n                            returnBounds.y += this.row.grid.style.cellPadding.top;\n                        }\n                    }\n                }\n                else {\n                    var format = this.getStringFormat();\n                    if (format.alignment === null || typeof format.alignment === 'undefined') {\n                        returnBounds.x += this.row.grid.style.cellPadding.left;\n                        returnBounds.y += this.row.grid.style.cellPadding.top;\n                    }\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    if (this.row.rowBreakHeightValue !== null && typeof this.row.rowBreakHeightValue !== 'undefined')\n                        childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height);\n            var image = this.objectValue;\n            if (image.width <= innerLayoutArea.width) {\n                imageBounds.width = image.width;\n            }\n            if (image.height <= innerLayoutArea.height) {\n                imageBounds.height = image.height;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var section = this.currentPage.section;\n                        var startIndex = section.indexOf(startPage) + 1;\n                        var endIndex = section.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = section.getPages()[page].graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                var childGridCell = void 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    if (!childGridCell) {\n                                        childGridCell = cell;\n                                    }\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                if (cell.columnSpan > 1) {\n                                    for (; c < cell.columnSpan; c++)\n                                        cellWidth += row.grid.columns.getColumn(c).width;\n                                }\n                                else\n                                    cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                var bottomPadding = void 0;\n                                if (childGridCell && childGridCell.style && childGridCell.style.cellPadding) {\n                                    bottomPadding = childGridCell.style.cellPadding.bottom;\n                                }\n                                else {\n                                    bottomPadding = this.Grid.style.cellPadding.bottom;\n                                }\n                                if (typeof bottomPadding === 'number' && (height + bottomPadding) < pageGraphics.clientSize.height) {\n                                    height += bottomPadding;\n                                    this.currentBounds.y += bottomPadding;\n                                }\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                var rowWidth = this.Grid.rows.getRow(this.Grid.rows.count - 1).width;\n                                if (cellWidth !== rowWidth) {\n                                    cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(rowWidth, height)));\n                                }\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var gridColumnWidth = this.Grid.columns.getColumn(i).width;\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            if (!cancelSpans) {\n                for (var k = 1; k < row.cells.getCell(i).columnSpan; k++) {\n                    row.cells.getCell(i + k).isCellMergeContinue = true;\n                    gridColumnWidth += this.Grid.columns.getColumn(i + k).width;\n                }\n            }\n            var size = new SizeF(gridColumnWidth, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","getValue","key","pair","this","table","toStr","value","setValue","k","nElements","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","toStringFunction","defineProperty","PdfName","get","status6","set","enumerable","configurable","isSaving6","index6","position6","internalValue","val","normalizeValue","save","writer","write","stringStartMark","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","forTest","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","primitiveItems","status7","isSaving7","index7","object","position7","getArchive","archive","setArchive","setEncrypt","encrypt","modify","getEncrypt","freezeChanges","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","prefix","Count","saveItems","suffix","index","dictionary","isResource","items","status","dictionaryProperties","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","integer","status5","isSaving5","index5","position5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","internalElements","status9","isSaving9","clonedObject9","position9","index9","pdfCrossTable","add","element","markedChange","contains","tempElement","inputElement","getItems","startMark","len","endMark","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","tempArray","array","isFont","elements","tempNumberArray","pdfNumber","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","PdfStream","_super","dataStream2","bCompress","clearStream","internalStream","text","Error","writeBytes","data","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","dicPrefix","dicSuffix","bytesToString","output","_this","clonedObject2","bCompress2","SaveCmapEventHandler","SaveFontProgramEventHandler","PdfString","ForceEncoding","InternalEnum","bHex","status1","isSaving1","clonedObject1","position1","bConverted","bForceEncoding","bytesToHex","bytes","builder","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","isColorSpace","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","bDecrypted","isParentDecrypted","isPacked","isFormField","isHexString","PdfReference","status3","isSaving3","index3","position3","objNumber","genNumber","Number","status4","isSaving4","index4","position4","primitiveObject","pdfReference","objectIndex","initialize","obj1","position","cTable","document","isSaving","getReference","obj2","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","assignRGB","g","filled","cyanColor","magentaColor","yellowColor","blackColor","grayColor","redColor","greenColor","blueColor","alpha","maxColourChannelValue","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","gray","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","color1","color2","color3","color4","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","right","left","bottom","top","topLeft","PdfBrush","PdfSolidBrush","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","color","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","textAlignment","direction","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","internalLineLimit","trailingSpaces","isNoClip","wordWrapType","scalingFactor","initialLineIndent","Word","StringTokenizer","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","text2","pos","substr","peekLine","line","readWord","textValue","peekWord","word","read","end","num","peek","readToEnd","symbol","spaces","tab","whiteSpacePattern","PdfStringLayouter","layout","arg5","arg6","arg7","isOverloadWithPosition","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lines","lineIndent","getLineIndent","lineResult","layoutLine","returnedValue","copyToResult","success","numSymbolsInserted","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","ln","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","size1","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","rightToLeft","trim","empty","content","PdfFont","metrics","fontSize","getHeight","fontStyle","style","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","setStyle","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","Regular","PdfWriter","pdfDocument","buffer","overload","PdfWriterHelper","destroy","PdfArrayBuffer","ObjectStatus","PdfMainObjectCollection","objectCollections","isNew","objInfo","ObjectInfo","primitiveObjectCollection","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","_i","_a","pdfObject","objectCollectionIndex","mainObjectCollection","PdfDocumentBase","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","encoding_1","SW_1","Encoding","SW","StreamWriter","Promise","resolve","reject","blobData","Blob","docSave","_save","_docSave","isStreamCopied","PdfDocument","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_centerWindow","_dictionary","_dictionaryProperties","_displayTitle","_fitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","_catalog","_mapPageMode","_duplex","_mapDuplexMode","_pageLayout","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","DuplexMode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","PdfPageMode","UseNone","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","PdfPageLayout","SinglePage","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","_splitWindow","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","merging","internalTrailer","pdfObjects","objectCount","_saveProcess","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","tempkey","tempvalue","tempObj","objnumber","nextObjNumber","tempIndex","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","maxGenNumIndex","dereference","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","leftMargin","topMargin","rightMargin","bottomMargin","setMargins","margin1","margin2","margin3","margin4","pdfMargin","PdfPageSettings","pageSize","setSize","pageOrientation","orientation","updateSize","pageMargins","pageOrigin","rotateAngle","isRotation","Portrait","Landscape","getActualSize","margins","RotateAngle0","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Custom","Dash","Dot","DashDot","DashDotDot","Solid","pdfLineCap","pdfLineJoin","internalMiterLimit","penWidth","setBrush","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","transformationMatrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","PI","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","radDegFactor","Matrix","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","ReferenceError","mValues","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","internalTemplateSize","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","pageNumberFieldLocation","pageNumberField","field","ByteArray","mPosition","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr2","enc1","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","chr3","byteLength","readNextTwoBytes","dataView","DataView","ImageFormat","ImageDecoder","mHeight","mWidth","mbitsPerComponent","mImageData","internalBuffer","mFormat","Unknown","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","mStream","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","updateProportionsHelper","pixelPerInch","horizontalResolution","verticalResolution","dpi","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","ucX","ucY","dpiX","dpiY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","loadImage","initializeAsync","decoder","imageStatus","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","writeString","buff","capacity","int32Size","int16Size","int64Size","TtfReader","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","isTtcFont","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","isMacTtf","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","unicode","platformID","encodingID","languageID","nameID","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","glyph","glyphWidth","advanceWidth","lsb","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCount","segCountX2","searchRange","entrySelector","rangeShift","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","codeOffset","glyphID","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","glyphSize","sort","glyphSizeAligned","align","oldGlyphOffset","oldNextGlyphOffset","nextGlyphOffset","nextGlyphIndex","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","tableNames","getFontProgramLength","fontProgramLength","entrySelectors","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isMacTTF","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","missedGlyphs","result2","convertString","getCharWidth","isUnicode","fontData","i1","i2","i3","i4","low","written","metricsName","__extends","PdfFontMetrics","getAscent","getDescent","getLineGap","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","ttfReader","Initialize","fontString","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","nameString","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","isCompress","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","cmapPrefix","cmapEndCodespaceRange","cmapEndRange","cmapBeginRange","cmapSuffix","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","isEmbedFont","base64String","ArabicShapeRenderer","getCharacterShape","hamza","bwhb","arabicMapTable","lwawm","lwa","shape","level","str2","doShape","previous","ArabicShape","present","shapeCount","ligature","getShapeCount","Shapes","Value","append","Ligature","Type","vowel","fathatan","hamzaBelow","superScriptalef","shadda","alef","alefHamzaBelow","lwawhb","hamzaAbove","alefHamza","lwawh","waw","wawHamza","yeh","alefMaksura","farsiYeh","yehHamza","madda","alefMadda","lam","zeroWidthJoiner","arabicCharTable","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","doMirrorShaping","indexLevels","mirroringShapeCharacters","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","indexes","sIndex","eIndex","odd","even","reArrange","pstart","pend","update","types","getCharacterCode","textOrder","LRE","L","doVisualOrder","levels","characterCodes","rtlCharacterTypes","setDefaultLevels","setLevels","R","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","RLE","LRO","RLO","PDF","BN","startType","endType","charType","NSM","checkEuropeanDigits","EN","AL","AN","checkArabicCharacters","checkEuropeanNumberSeparator","ES","CS","checkEuropeanNumberTerminator","ET","l","getLength","checkOtherNeutrals","ON","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","WS","B","S","byte","lt","tt","rt","charTypes","RtlRenderer","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","openBracket","closeBracket","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","sh","aa","mfunction","mcolorSpace","csValue","colorSpaceToDeviceName","mbStroking","mpatternDictionary","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","tempSize","writeTransformation","getNames","sName","primitive","names","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","baseDictionary","properties","mPage","mLocation","mTransformationMatrix","tempBrushStream","brushStream","tempResource","mDictionaryProperties","setBox","setObligatoryFields","tileTransform","mBox","box","mGraphics","mResources","mStroking","name1","PdfPage","pdfStringLayoutResult","canvasSize","internalMediaBoxUpperRightBound","clipBounds","pdfStreamWriter","pageLayer","internalAutomaticFields","bStateSaved","currentBrush","currentFont","bCSInitialized","previousTextRenderingMode","previousCharacterSpacing","previousWordSpacing","previousTextScaling","currentStringFormat","procedureSets","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","isEmfTextScaled","emfScalingFactor","isNormalRender","isUseFontSize","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","temparg1","drawPathHelper","drawRoundedRectangle","radius","arc","diameter","_pathPoints","_pathTypes","startFigure","_addArc","CloseSubpath","_drawPath","Alternate","startAngle","sweepAngle","points","_getBezierArcPoints","_addArcPoints","Bezier3","pointType","_addPoint","Start","_getLastPoint","Line","lastPoint","x1","y1","s1","e1","tmp","fragAngle","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointList","theta0","theta1","cos0","cos1","sin0","sin1","Winding","isBrush","isEvenOdd","isPen","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","startCutIndex","drawLayoutResult","underlineStrikeoutText","isEmfPlus","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","isPointOverload","justifyLine","blocks","useWordSpace","Justify","rtlRender","rightAlign","ttfFont","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","FillStroke","Stroke","Fill","ClipFlag","layoutBounds","firstParagraphLine","Left","colorSpaceChanged","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","currentColorSpaces","lgb","curSubSuper","prevSubSuper","setTransparency","transp","td","istransparencySet","trasparencies","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","graphicsState","doRestoreState","pop","drawPath","path","pathPoints","pathTypes","fillMode","buildUpPath","drawArc","constructArcPath","cnt","typeValue","p2","p3","getBezierPoints","checkFlags","pathTypesValuesMask","startAng","getBezierArc","pt","numX1","numY1","numX2","numY2","fragAngle1","pointsList","thetaValue0","thetaValue1","transparencyObject","isEmf","isBaselineFormat","isImageOptimized","internalTextScaling","pdfPen","pdfFont","pdfColorSpace","internalTextRenderingMode","elements_1","forEach","alphaPen","alphaBrush","blendMode","PdfPageLayer","pdfPage","layerid","layerName","isVisible","initializeGraphics","PdfPageLayerCollection","sublayer","sign","oPage","isSame","sc","origin","clipRect","getActualBounds","pageSettings","clipPageTemplates","streamClipPageTemplates","contentLength","PdfCollection","list","firstArgument","secondArgument","addLayer","insertLayer","parseLayers","loadedPage","saveStream","restoreStream","saveData","parentLayerCount","optionalContent","PdfPageBase","pdfSection","pageDictionary","layers","defaultLayerIndex","layerCollection","defLayerIndex","PdfAnnotationCollection","internalAnnotations","annotation","doAdd","destination","setPage","lists","layoutResult","lastPosition","setColor","alreadyExistsAnnotationError","missingAnnotationException","defaultLayer","parentDocument","annotationCollection","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","frontLayer","containsTemplates","backLayer","drawTemplates","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","sectionCollection","settings","pagesReferences","pageTemplate","pagesCollection","pdfPages","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","top_1","document_1","getLeftIndentWidth","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageAdded","initialSettings","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","search","group","getGroup","createNewGroup","referenceObjects","tGroup","representative","removeGroup","slice","pdfFontCollection","defaultStandardFont","PdfStandardFont","Helvetica","defaultMargin","documentPageCollection","cacheCollection","isCacheEnabled","checkPagesPresence","cache","isMerging","isMerge","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","helveticaAscent","helveticaDescent","helveticaName","arialWidth","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","fixedWidth","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","pdfFontFamily","checkStyle","convert","getCharWidthInternal","fontFamilyEqual","lineReducer","equal","styleEqual","initializeInternals","encodings","WinAnsiEncoding","charOffset","fontFamilyPrototype","PdfAnnotation","internalColor","textFont","textBrush","nativeRectangle","initialHeight","tempLoacation","darkness","PdfLinkAnnotation","PdfActionLinkAnnotation","getSetAction","pdfAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","layoutType","layoutPaginateBounds","boundsSet","baseFormat","break","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","leftPen","rightPen","topPen","bottomPen","defaultBorderPenLeft","defaultBorderPenRight","dashStyle","defaultBorderPenTop","defaultBorderPenBottom","PdfPaddings","leftPad","hasLeftPad","rightPad","hasRightPad","topPad","hasTopPad","bottomPad","hasBottomPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","newBound","bEmbedFonts","default","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","_isLastElement","PdfTextElement","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","elementValue","drawText","hasPointOverload","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","isPdfTextElement","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","previousFontStyle","recalculateBounds","calculateBounds","uriAnnotation","url","defaultBorder","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","internalText","automaticField","arguments","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","zoomFactor","initializePrimitive","destinationMode","destinationLocation","Location","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","checkParams","sizes","samples","setDomainAndRange","setSizeAndValues","PdfExtend","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","factors","gcd","u","v","iU","precision","iV","gcdInt","mcolors","getFunction","step","samplesCount","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","positionLow","positionHi","getIndices","indexLow","indexHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mColours","mColourBlend","initShading","mBlend","mBoundaries","extStart","extEnd","End","addPoints","point1","point2","subPoints","mulPoints","mulPoint","choosePoint","setPoints","mPointStart","mPointEnd","blend","interpolationColors","centre","coef","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","radAngle","tan","p1","cp1","PdfRadialGradientBrush","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","radiusStart","radiusEnd","rBrush","mRadiusStart","mRadiusEnd","centerStart","centerEnd","colorStart","colorEnd","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridCellSpacing","gridHorizontalOverflowType","bAllowHorizontalOverflow","gridCellPadding","gridBorderOverlapStyle","Overlap","PdfHorizontalOverflowType","LastPage","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","isFinish","gridRow","objectValue","PdfGrid","row","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","gridRowSpan","rowSpanExists","hasRowSpanSpan","cellStyle","cellHeight","measureHeight","colSpan","columnSpanExists","cellWidth","isComplete","measureWidth","webLink","layouter","getTextFont","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","getStringFormat","rowSpan","border","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","childGrid","childGridResult","imageBounds","getTextPen","getTextBrush","strFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","fontSpilt","rowFontSplit","repeatFlag","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","getColumn","currentRowIndex","rowCollection","totalHeight","headers","getHeader","rowMergeComplete","cellIndex","calculateWidth","currentValue","hasColSpan","hasRowSpan","tempval","internalWidth","tempWidth","finsh","rowSpanRemainingHeight","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","bRowSpanExists","gridCells","pdfGrid","rowStyle","gridRowBreakHeight","gridRowOverflowIndex","isRowHeightSet","rowHeight","rowWidth","gridResult","bColumnSpanExists","isRowMergeComplete","cellIn","rowin","isHeaderRow","rowWid","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isPageBreakRowSpanApplied","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","beginCellDraw","endCellDraw","bRepeatHeader","breakRow","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","gridSize","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellrowSpan","cellmaxSpan","cellcolSpan","hasColumnSpan","childGridColumnWidth","padding","columnCount","parentCellIndex","colCount_1","colCount_2","RowCount","ColCount","childGridColWidth","colWidth","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","columnRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","returnObject","cellStartIndex","cellEndIndex","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","flag","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isPaginate","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","startIndex","endIndex","pageGraphics","location_2","totalwidth","childGridCell","i_6","bottomPadding","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","isFit","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFitToCell","slr","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","gridColumnWidth","cellstyle1","rowBreakPageHeightCellIndex","childheight","currentLocation","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","bIsFinished","layoutedBounds","ShapeLayouter","shapeLayoutBounds","getBounds","shapeBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","fitToPage","checkCorrectCurrentBounds","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","olderPdfForm","totalPageSize","PdfShapeElement","getBoundsInternal","drawShapeHelper","apply","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mfillMode","mpoints","getLastPoint","mpathTypes","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","closeFigure","addLine","addPath","addPie","addPoint","addPolygon","addRectangle","mStartFigure","closeAllFigures","startPath","isXps","pointCount","xmin","xmax","ymin","ymax","isBeziers3","PdfRectangleArea","PdfEllipsePart","PdfArc","argu1","PdfTrueTypeFont","getUnicodeLineWidth","codeWidth","createFontInternal","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","resultGlyph","glyphIndices","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","InitiateBounds","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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C,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,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,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,KAAK,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,KAAK,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,KAAK,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,KAAK,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,KAAK,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EAEjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,KAAM,IAAI,EACjDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,IAAI,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,IAAI,EAClDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ,KAAK+hD,yBAAyB3hD,SAAS,MAAO,KAAK,EACnDJ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"}